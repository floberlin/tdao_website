{"ast":null,"code":"import { isSpace, isEnter, isDelete } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport { DELETE, ARIA_LABEL_LIST_ITEM_CHECKBOX, ARIA_LABEL_LIST_ITEM_RADIO_BUTTON, LIST_ITEM_SELECTED, LIST_ITEM_NOT_SELECTED } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport styles from \"./generated/themes/ListItem.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  languageAware: true,\n  properties:\n  /** @lends  sap.ui.webcomponents.main.ListItem.prototype */\n  {\n    /**\n     * Defines the visual indication and behavior of the list items.\n     * Available options are <code>Active</code> (by default), <code>Inactive</code> and <code>Detail</code>.\n     * <br><br>\n     * <b>Note:</b> When set to <code>Active</code>, the item will provide visual response upon press and hover,\n     * while with type <code>Inactive</code> and <code>Detail</code> - will not.\n     *\n     * @type {ListItemType}\n     * @defaultvalue \"Active\"\n     * @public\n    */\n    type: {\n      type: ListItemType,\n      defaultValue: ListItemType.Active\n    },\n\n    /**\n     * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n     *\n     * @type {boolean}\n     * @private\n    */\n    active: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the tooltip of the component.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @private\n     * @since 1.0.0-rc.15\n     */\n    title: {\n      type: String\n    },\n\n    /**\n     * Indicates if the list item is actionable, e.g has hover and pressed effects.\n     *\n     * @type {boolean}\n     * @private\n    */\n    actionable: {\n      type: Boolean\n    },\n\n    /**\n     * Used to define the role of the list item.\n     *\n     * @private\n     * @type {String}\n     * @defaultvalue \"listitem\"\n     * @since 1.0.0-rc.9\n     *\n     */\n    role: {\n      type: String,\n      defaultValue: \"listitem\"\n    },\n    _mode: {\n      type: ListMode,\n      defaultValue: ListMode.None\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.ListItem.prototype */\n  {\n    /**\n     * Fired when the user clicks on the detail button when type is <code>Detail</code>.\n     *\n     * @event sap.ui.webcomponents.main.ListItem#detail-click\n     * @public\n     */\n    \"detail-click\": {},\n    _press: {},\n    _focused: {},\n    \"_selection-requested\": {}\n  }\n};\n/**\n * @class\n * A class to serve as a base\n * for the <code>StandardListItem</code> and <code>CustomListItem</code> classes.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ListItem\n * @extends ListItemBase\n * @public\n */\n\nclass ListItem extends ListItemBase {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return [ListItemBase.styles, styles];\n  }\n\n  static get dependencies() {\n    return [Button, RadioButton, CheckBox];\n  }\n\n  constructor() {\n    super();\n\n    this.deactivateByKey = event => {\n      if (isEnter(event)) {\n        this.deactivate();\n      }\n    };\n\n    this.deactivate = () => {\n      if (this.active) {\n        this.active = false;\n      }\n    };\n  }\n\n  onBeforeRendering(...params) {\n    this.actionable = this.type === ListItemType.Active && this._mode !== ListMode.Delete;\n  }\n\n  onEnterDOM() {\n    document.addEventListener(\"mouseup\", this.deactivate);\n    document.addEventListener(\"touchend\", this.deactivate);\n    document.addEventListener(\"keyup\", this.deactivateByKey);\n  }\n\n  onExitDOM() {\n    document.removeEventListener(\"mouseup\", this.deactivate);\n    document.removeEventListener(\"keyup\", this.deactivateByKey);\n    document.removeEventListener(\"touchend\", this.deactivate);\n  }\n\n  _onkeydown(event) {\n    super._onkeydown(event);\n\n    const itemActive = this.type === ListItemType.Active;\n\n    if (isSpace(event)) {\n      event.preventDefault();\n    }\n\n    if ((isSpace(event) || isEnter(event)) && itemActive) {\n      this.activate();\n    }\n\n    if (isEnter(event)) {\n      this.fireItemPress(event);\n    }\n  }\n\n  _onkeyup(event) {\n    if (isSpace(event) || isEnter(event)) {\n      this.deactivate();\n    }\n\n    if (isSpace(event)) {\n      this.fireItemPress(event);\n    }\n\n    if (this.modeDelete && isDelete(event)) {\n      this.onDelete();\n    }\n  }\n\n  _onmousedown(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n\n    this.activate();\n  }\n\n  _onmouseup(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n\n    this.deactivate();\n  }\n\n  _ontouchstart(event) {\n    this._onmousedown(event);\n  }\n\n  _ontouchend(event) {\n    this._onmouseup(event);\n  }\n\n  _onfocusout() {\n    super._onfocusout();\n\n    this.deactivate();\n  }\n\n  _onclick(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n\n    this.fireItemPress(event);\n  }\n  /*\n   * Called when selection components in Single (ui5-radio-button)\n   * and Multi (ui5-checkbox) selection modes are used.\n   */\n\n\n  onMultiSelectionComponentPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: event.target.checked,\n      selectionComponentPressed: true\n    });\n  }\n\n  onSingleSelectionComponentPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: !event.target.selected,\n      selectionComponentPressed: true\n    });\n  }\n\n  activate() {\n    if (this.type === ListItemType.Active) {\n      this.active = true;\n    }\n  }\n\n  onDelete(event) {\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selectionComponentPressed: false\n    });\n  }\n\n  onDetailClick(event) {\n    this.fireEvent(\"detail-click\", {\n      item: this,\n      selected: this.selected\n    });\n  }\n\n  fireItemPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n\n    this.fireEvent(\"_press\", {\n      item: this,\n      selected: this.selected,\n      key: event.key\n    });\n  }\n\n  get isInactive() {\n    return this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n  }\n\n  get placeSelectionElementBefore() {\n    return this._mode === ListMode.MultiSelect || this._mode === ListMode.SingleSelectBegin;\n  }\n\n  get placeSelectionElementAfter() {\n    return !this.placeSelectionElementBefore && (this._mode === ListMode.SingleSelectEnd || this._mode === ListMode.Delete);\n  }\n\n  get modeSingleSelect() {\n    return [ListMode.SingleSelectBegin, ListMode.SingleSelectEnd, ListMode.SingleSelect].includes(this._mode);\n  }\n\n  get modeMultiSelect() {\n    return this._mode === ListMode.MultiSelect;\n  }\n\n  get modeDelete() {\n    return this._mode === ListMode.Delete;\n  }\n  /**\n   * Used in UploadCollectionItem\n   */\n\n\n  get renderDeleteButton() {\n    return this.modeDelete;\n  }\n\n  get disableDeleteButton() {\n    return false;\n  }\n  /**\n   * End\n   */\n\n\n  get typeDetail() {\n    return this.type === ListItemType.Detail;\n  }\n\n  get typeActive() {\n    return this.type === ListItemType.Active;\n  }\n\n  get ariaSelected() {\n    if (this.modeMultiSelect || this.modeSingleSelect) {\n      return this.selected;\n    }\n\n    return undefined;\n  }\n\n  get ariaSelectedText() {\n    let ariaSelectedText; // Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n    // to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n    // The text is added to aria-describedby because as part of the aria-labelledby\n    // the whole content of the item is readout when the aria-labelledby value is changed.\n\n    if (this.ariaSelected !== undefined) {\n      ariaSelectedText = this.ariaSelected ? ListItem.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n    }\n\n    return ariaSelectedText;\n  }\n\n  get deleteText() {\n    return ListItem.i18nBundle.getText(DELETE);\n  }\n\n  get _accInfo() {\n    return {\n      role: this.role,\n      ariaExpanded: undefined,\n      ariaLevel: undefined,\n      ariaLabel: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n      ariaLabelRadioButton: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n      ariaSelectedText: this.ariaSelectedText\n    };\n  }\n\n  static async onDefine() {\n    ListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n}\n\nexport default ListItem;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/ListItem.js"],"names":["isSpace","isEnter","isDelete","getI18nBundle","ListItemType","ListMode","ListItemBase","RadioButton","CheckBox","Button","DELETE","ARIA_LABEL_LIST_ITEM_CHECKBOX","ARIA_LABEL_LIST_ITEM_RADIO_BUTTON","LIST_ITEM_SELECTED","LIST_ITEM_NOT_SELECTED","styles","metadata","languageAware","properties","type","defaultValue","Active","active","Boolean","title","String","actionable","role","_mode","None","events","_press","_focused","ListItem","dependencies","constructor","deactivateByKey","event","deactivate","onBeforeRendering","params","Delete","onEnterDOM","document","addEventListener","onExitDOM","removeEventListener","_onkeydown","itemActive","preventDefault","activate","fireItemPress","_onkeyup","modeDelete","onDelete","_onmousedown","isMarked","_onmouseup","_ontouchstart","_ontouchend","_onfocusout","_onclick","onMultiSelectionComponentPress","isInactive","fireEvent","item","selected","target","checked","selectionComponentPressed","onSingleSelectionComponentPress","onDetailClick","key","Inactive","Detail","placeSelectionElementBefore","MultiSelect","SingleSelectBegin","placeSelectionElementAfter","SingleSelectEnd","modeSingleSelect","SingleSelect","includes","modeMultiSelect","renderDeleteButton","disableDeleteButton","typeDetail","typeActive","ariaSelected","undefined","ariaSelectedText","i18nBundle","getText","deleteText","_accInfo","ariaExpanded","ariaLevel","ariaLabel","ariaLabelRadioButton","onDefine"],"mappings":"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","sourcesContent":["import { isSpace, isEnter, isDelete } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport {\n\tDELETE,\n\tARIA_LABEL_LIST_ITEM_CHECKBOX,\n\tARIA_LABEL_LIST_ITEM_RADIO_BUTTON,\n\tLIST_ITEM_SELECTED,\n\tLIST_ITEM_NOT_SELECTED,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/ListItem.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\tlanguageAware: true,\n\tproperties: /** @lends  sap.ui.webcomponents.main.ListItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the visual indication and behavior of the list items.\n\t\t * Available options are <code>Active</code> (by default), <code>Inactive</code> and <code>Detail</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set to <code>Active</code>, the item will provide visual response upon press and hover,\n\t\t * while with type <code>Inactive</code> and <code>Detail</code> - will not.\n\t\t *\n\t\t * @type {ListItemType}\n\t\t * @defaultvalue \"Active\"\n\t\t * @public\n\t\t*/\n\t\ttype: {\n\t\t\ttype: ListItemType,\n\t\t\tdefaultValue: ListItemType.Active,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @private\n\t\t*/\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tooltip of the component.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the list item is actionable, e.g has hover and pressed effects.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @private\n\t\t*/\n\t\tactionable: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Used to define the role of the list item.\n\t\t *\n\t\t * @private\n\t\t * @type {String}\n\t\t * @defaultvalue \"listitem\"\n\t\t * @since 1.0.0-rc.9\n\t\t *\n\t\t */\n\t\trole: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"listitem\",\n\t\t},\n\n\t\t_mode: {\n\t\t\ttype: ListMode,\n\t\t\tdefaultValue: ListMode.None,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.ListItem.prototype */ {\n\t\t/**\n\t\t * Fired when the user clicks on the detail button when type is <code>Detail</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.ListItem#detail-click\n\t\t * @public\n\t\t */\n\t\t\"detail-click\": {},\n\t\t_press: {},\n\t\t_focused: {},\n\t\t\"_selection-requested\": {},\n\t},\n};\n\n/**\n * @class\n * A class to serve as a base\n * for the <code>StandardListItem</code> and <code>CustomListItem</code> classes.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ListItem\n * @extends ListItemBase\n * @public\n */\nclass ListItem extends ListItemBase {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn [ListItemBase.styles, styles];\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t\tRadioButton,\n\t\t\tCheckBox,\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.deactivateByKey = event => {\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t};\n\n\t\tthis.deactivate = () => {\n\t\t\tif (this.active) {\n\t\t\t\tthis.active = false;\n\t\t\t}\n\t\t};\n\t}\n\n\tonBeforeRendering(...params) {\n\t\tthis.actionable = (this.type === ListItemType.Active) && (this._mode !== ListMode.Delete);\n\t}\n\n\tonEnterDOM() {\n\t\tdocument.addEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.addEventListener(\"touchend\", this.deactivate);\n\t\tdocument.addEventListener(\"keyup\", this.deactivateByKey);\n\t}\n\n\tonExitDOM() {\n\t\tdocument.removeEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.removeEventListener(\"keyup\", this.deactivateByKey);\n\t\tdocument.removeEventListener(\"touchend\", this.deactivate);\n\t}\n\n\t_onkeydown(event) {\n\t\tsuper._onkeydown(event);\n\n\t\tconst itemActive = this.type === ListItemType.Active;\n\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif ((isSpace(event) || isEnter(event)) && itemActive) {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis.fireItemPress(event);\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.deactivate();\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\tthis.fireItemPress(event);\n\t\t}\n\n\t\tif (this.modeDelete && isDelete(event)) {\n\t\t\tthis.onDelete();\n\t\t}\n\t}\n\n\t_onmousedown(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.activate();\n\t}\n\n\t_onmouseup(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.deactivate();\n\t}\n\n\t_ontouchstart(event) {\n\t\tthis._onmousedown(event);\n\t}\n\n\t_ontouchend(event) {\n\t\tthis._onmouseup(event);\n\t}\n\n\t_onfocusout() {\n\t\tsuper._onfocusout();\n\t\tthis.deactivate();\n\t}\n\n\t_onclick(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.fireItemPress(event);\n\t}\n\n\t/*\n\t * Called when selection components in Single (ui5-radio-button)\n\t * and Multi (ui5-checkbox) selection modes are used.\n\t */\n\tonMultiSelectionComponentPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selected: event.target.checked, selectionComponentPressed: true });\n\t}\n\n\tonSingleSelectionComponentPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selected: !event.target.selected, selectionComponentPressed: true });\n\t}\n\n\tactivate() {\n\t\tif (this.type === ListItemType.Active) {\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\tonDelete(event) {\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selectionComponentPressed: false });\n\t}\n\n\tonDetailClick(event) {\n\t\tthis.fireEvent(\"detail-click\", { item: this, selected: this.selected });\n\t}\n\n\tfireItemPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(\"_press\", { item: this, selected: this.selected, key: event.key });\n\t}\n\n\tget isInactive() {\n\t\treturn this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n\t}\n\n\tget placeSelectionElementBefore() {\n\t\treturn this._mode === ListMode.MultiSelect\n\t\t\t|| this._mode === ListMode.SingleSelectBegin;\n\t}\n\n\tget placeSelectionElementAfter() {\n\t\treturn !this.placeSelectionElementBefore\n\t\t\t&& (this._mode === ListMode.SingleSelectEnd || this._mode === ListMode.Delete);\n\t}\n\n\tget modeSingleSelect() {\n\t\treturn [\n\t\t\tListMode.SingleSelectBegin,\n\t\t\tListMode.SingleSelectEnd,\n\t\t\tListMode.SingleSelect,\n\t\t].includes(this._mode);\n\t}\n\n\tget modeMultiSelect() {\n\t\treturn this._mode === ListMode.MultiSelect;\n\t}\n\n\tget modeDelete() {\n\t\treturn this._mode === ListMode.Delete;\n\t}\n\n\t/**\n\t * Used in UploadCollectionItem\n\t */\n\tget renderDeleteButton() {\n\t\treturn this.modeDelete;\n\t}\n\n\tget disableDeleteButton() {\n\t\treturn false;\n\t}\n\t/**\n\t * End\n\t */\n\n\tget typeDetail() {\n\t\treturn this.type === ListItemType.Detail;\n\t}\n\n\tget typeActive() {\n\t\treturn this.type === ListItemType.Active;\n\t}\n\n\tget ariaSelected() {\n\t\tif (this.modeMultiSelect || this.modeSingleSelect) {\n\t\t\treturn this.selected;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget ariaSelectedText() {\n\t\tlet ariaSelectedText;\n\n\t\t// Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n\t\t// to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n\t\t// The text is added to aria-describedby because as part of the aria-labelledby\n\t\t// the whole content of the item is readout when the aria-labelledby value is changed.\n\t\tif (this.ariaSelected !== undefined) {\n\t\t\tariaSelectedText = this.ariaSelected ? ListItem.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n\t\t}\n\n\t\treturn ariaSelectedText;\n\t}\n\n\tget deleteText() {\n\t\treturn ListItem.i18nBundle.getText(DELETE);\n\t}\n\n\tget _accInfo() {\n\t\treturn {\n\t\t\trole: this.role,\n\t\t\tariaExpanded: undefined,\n\t\t\tariaLevel: undefined,\n\t\t\tariaLabel: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n\t\t\tariaLabelRadioButton: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n\t\t\tariaSelectedText: this.ariaSelectedText,\n\t\t};\n\t}\n\n\tstatic async onDefine() {\n\t\tListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}