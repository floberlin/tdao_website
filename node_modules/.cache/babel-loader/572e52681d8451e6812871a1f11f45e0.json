{"ast":null,"code":"import { AvatarGroupType } from '@ui5/webcomponents-react/dist/AvatarGroupType';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/AvatarGroup';\n/**\n * Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees. The component allows you to display the avatars in different sizes, depending on your use case. The `AvatarGroup` component has two group types:\n *\n * *   `Group` type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.\n * *   `Individual` type: The avatars are displayed side-by-side and each avatar has its own click/tap area.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/AvatarGroup\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar AvatarGroup = withWebComponent('ui5-avatar-group', ['type'], [], ['overflowButton'], ['click', 'overflow']);\nAvatarGroup.displayName = 'AvatarGroup';\nAvatarGroup.defaultProps = {\n  type: AvatarGroupType.Group\n};\nexport { AvatarGroup };","map":{"version":3,"sources":["../src/webComponents/AvatarGroup/index.tsx"],"names":["AvatarGroup","withWebComponent","type","AvatarGroupType","Group"],"mappings":";;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMA,WAAW,GAAGC,gBAAgB,CAAA,kBAAA,EAElC,CAFkC,MAElC,CAFkC,EAAA,EAAA,EAIlC,CAJkC,gBAIlC,CAJkC,EAKlC,CAAA,OAAA,EALkC,UAKlC,CALkC,C;AAQpCD,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AAEAA,WAAW,CAAXA,YAAAA,GAA2B;AACzBE,EAAAA,IAAI,EAAEC,eAAe,CAACC;AADG,CAA3BJ","sourcesContent":["import { AvatarGroupType } from '@ui5/webcomponents-react/dist/AvatarGroupType';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/AvatarGroup';\n\nexport interface AvatarGroupPropTypes extends Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the mode of the `AvatarGroup`.\n   *\n   * Available options are:\n   *\n   * *   `Group`\n   * *   `Individual`\n   */\n  type?: AvatarGroupType;\n  /**\n   * Defines the items of the component. Use the `Avatar` component as an item.\n   *\n   * **Note:** The UX guidelines recommends using avatars with \"Circle\" shape. Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency as the built-in overflow action has \"Circle\" shape.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the overflow button of the component. **Note:** We recommend using the `Button` component.\n   *\n   * **Note:** If this slot is not used, the component will display the built-in overflow button.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  overflowButton?: ReactNode;\n  /**\n   * Fired when the component is activated either with a click/tap or by using the Enter or Space key.\n   */\n  onClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode; overflowButtonClicked: boolean }>) => void;\n  /**\n   * Fired when the count of visible `Avatar` elements in the component has changed\n   */\n  onOverflow?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees. The component allows you to display the avatars in different sizes, depending on your use case. The `AvatarGroup` component has two group types:\n *\n * *   `Group` type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.\n * *   `Individual` type: The avatars are displayed side-by-side and each avatar has its own click/tap area.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/AvatarGroup\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst AvatarGroup = withWebComponent<AvatarGroupPropTypes>(\n  'ui5-avatar-group',\n  ['type'],\n  [],\n  ['overflowButton'],\n  ['click', 'overflow']\n);\n\nAvatarGroup.displayName = 'AvatarGroup';\n\nAvatarGroup.defaultProps = {\n  type: AvatarGroupType.Group\n};\n\nexport { AvatarGroup };\n"]},"metadata":{},"sourceType":"module"}