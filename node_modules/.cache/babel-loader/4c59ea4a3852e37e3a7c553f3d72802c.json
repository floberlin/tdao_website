{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport clamp from \"@ui5/webcomponents-base/dist/util/clamp.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport { getFirstFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport Button from \"@ui5/webcomponents/dist/Button.js\";\nimport ResponsivePopover from \"@ui5/webcomponents/dist/ResponsivePopover.js\"; // Texts\n\nimport { WIZARD_NAV_STEP_DEFAULT_HEADING, WIZARD_NAV_ARIA_ROLE_DESCRIPTION, WIZARD_NAV_ARIA_LABEL, WIZARD_LIST_ARIA_LABEL, WIZARD_LIST_ARIA_DESCRIBEDBY, WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL, WIZARD_OPTIONAL_STEP_ARIA_LABEL, WIZARD_STEP_ARIA_LABEL, WIZARD_STEP_ACTIVE, WIZARD_STEP_INACTIVE } from \"./generated/i18n/i18n-defaults.js\"; // Step in header and content\n\nimport WizardTab from \"./WizardTab.js\";\nimport WizardStep from \"./WizardStep.js\"; // Template and Styles\n\nimport WizardTemplate from \"./generated/templates/WizardTemplate.lit.js\";\nimport WizardPopoverTemplate from \"./generated/templates/WizardPopoverTemplate.lit.js\";\nimport WizardCss from \"./generated/themes/Wizard.css.js\";\nimport WizardPopoverCss from \"./generated/themes/WizardPopover.css.js\";\nconst MIN_STEP_WIDTH_NO_TITLE = 64;\nconst MIN_STEP_WIDTH_WITH_TITLE = 200;\nconst EXPANDED_STEP = \"data-ui5-wizard-expanded-tab\";\nconst AFTER_EXPANDED_STEP = \"data-ui5-wizard-expanded-tab-next\";\nconst AFTER_CURRENT_STEP = \"data-ui5-wizard-after-current-tab\";\nconst BEFORE_EXPANDED_STEP = \"data-ui5-wizard-expanded-tab-prev\";\nconst STEP_SWITCH_THRESHOLDS = {\n  MIN: 0.5,\n  DEFAULT: 0.7,\n  MAX: 1\n};\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-wizard\",\n  managedSlots: true,\n  fastNavigation: true,\n  properties:\n  /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */\n  {\n    /**\n     * Defines the width of the <code>ui5-wizard</code>.\n     * @private\n     */\n    width: {\n      type: Float\n    },\n\n    /**\n     * Defines the threshold to switch between steps upon user scrolling.\n     * <br><br>\n     *\n     * <b>For Example:</b>\n     * <br>\n     * (1) To switch to the next step, when half of the step is scrolled out - set <code>step-switch-threshold=\"0.5\"</code>.\n     * (2) To switch to the next step, when the entire current step is scrolled out - set <code>step-switch-threshold=\"1\"</code>.\n     *\n     * <br><br>\n     * <b>Note:</b> Supported values are between 0.5 and 1\n     * and values out of the range will be normalized to 0.5 and 1 respectively.\n     * @private\n     * @type {Float}\n     * @defaultvalue 0.7\n     * @since 1.0.0-rc.13\n     */\n    stepSwitchThreshold: {\n      type: Float,\n      defaultValue: STEP_SWITCH_THRESHOLDS.DEFAULT\n    },\n\n    /**\n     * Defines the height of the <code>ui5-wizard</code> content.\n     * @private\n     */\n    contentHeight: {\n      type: Float\n    },\n    _groupedTabs: {\n      type: String,\n      multiple: true\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */\n  {\n    /**\n     * Defines the steps.\n     * <br><br>\n     * <b>Note:</b> Use the available <code>ui5-wizard-step</code> component.\n     *\n     * @type {sap.ui.webcomponents.fiori.IWizardStep[]}\n     * @public\n     * @slot steps\n     */\n    \"default\": {\n      propertyName: \"steps\",\n      type: HTMLElement,\n      \"individualSlots\": true,\n      invalidateOnChildChange: true\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */\n  {\n    /**\n     * Fired when the step is changed by user interaction - either with scrolling,\n     * or by clicking on the steps within the component header.\n     *\n     * @event sap.ui.webcomponents.fiori.Wizard#step-change\n     * @param {HTMLElement} step The new step.\n     * @param {HTMLElement} previousStep The previous step.\n     * @param {Boolean} changeWithClick The step change occurs due to user's click or 'Enter'/'Space' key press on step within the navigation.\n     * @public\n     */\n    \"step-change\": {\n      detail: {\n        step: {\n          type: HTMLElement\n        },\n        previousStep: {\n          type: HTMLElement\n        },\n        changeWithClick: {\n          Boolean\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-wizard</code> helps users to complete a complex task by dividing it into sections and guiding them through it.\n * It has two main areas - a navigation area at the top showing the step sequence and a content area below it.\n *\n * <h3>Structure</h3>\n * <h4>Navigation area</h4>\n * The top most area of the <code>ui5-wizard</code> is occupied by the navigation area.\n * It shows the sequence of steps, where the recommended number of steps is between 3 and 8 steps.\n * <ul>\n * <li> Steps can have different visual representations - numbers or icons.\n * <li> Steps might have labels for better readability - titleText and subTitleText.</li>\n * <li> Steps are defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.</li>\n * </ul>\n *\n * <b>Note:</b> If no selected step is defined, the first step will be auto selected.\n * <br>\n * <b>Note:</b> If multiple selected steps are defined, the last step will be selected.\n *\n * <h3>Keyboard Handling</h3>\n * The user can navigate using the following keyboard shortcuts:\n * <br>\n *\n * <h4>Wizard Progress Navigation</h4>\n * <ul>\n * \t<li>[LEFT], [DOWN] - Focus moves backward to the WizardProgressNavAnchors.</li>\n * \t<li>[UP], [RIGHT] - Focus moves forward to the WizardProgressNavAnchor.</li>\n * \t<li>[SPACE] or [ENTER], [RETURN] - Selects an active step</li>\n * \t<li>[HOME] or [PAGE UP] - Focus goes to the first step</li>\n * \t<li>[END] or [PAGE DOWN] - Focus goes to the last step</li>\n * </ul>\n *\n * <h4>Fast Navigation</h4>\n * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.\n * In order to use this functionality, you need to import the following module:\n * <code>import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"</code>\n *\n * <h4>Content</h4>\n * The content occupies the main part of the page. It can hold any type of HTML elements.\n * It's defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.\n *\n * <h3>Scrolling</h3>\n * The component handles user scrolling by selecting the closest step, based on the current scroll position\n * and scrolls to particular place, when the user clicks on the step within the navigation area.\n * <br><br>\n *\n * <b>Important:</b> In order the component's scrolling behaviour to work, it has to be limited from the outside parent element in terms of height.\n * The component or its parent has to be given percentage or absolute height. Otherwise, the component will be scrolled out with the entire page.\n * <br><br>\n * <b>For example:</b>\n * <br><br>\n * <code>&lt;ui5-dialog style=\"height: 80%\"&gt;<br></code>\n * <code>&#9;&lt;ui5-wizard&gt;&lt;/ui5-wizard&gt;<br></code>\n * <code>&lt;/ui5-dialog&gt;</code>\n *\n * <h4>Moving to next step</h4>\n * The <code>ui5-wizard-step</code> provides the necessary API and it's up to the user of the component to use it to move to the next step.\n * You have to set its <code>selected</code> property (and remove the <code>disabled</code> one if set) to <code>true</code>.\n * The <code>ui5-wizard</code> will automatically scroll to the content of the newly selected step.\n * <br><br>\n *\n * The Fiori 3 guidelines recommends having a \"nextStep\" button in the content area.\n * You can place a button, or any other type of element to trigger step change, inside the <code>ui5-wizard-step</code>,\n * and show/hide it when certain fields are filled or user defined criteria is met.\n *\n * <h3>Usage</h3>\n * <h4>When to use:</h4>\n * When the user has to accomplish a long or unfamiliar task.\n *\n * <h4>When not to use:</h4>\n * When the task has less than 3 steps.\n *\n * <h3>Responsive Behavior</h3>\n * On small widths the step's titleText, subtitleText and separators in the navigation area shrink and from particular point the steps are grouped together and overlap.\n * Tapping on them will show a popover to select the step to navigate to. On mobile device, the grouped steps are presented within a dialog.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents-fiori/dist/Wizard.js\";</code> (includes <ui5-wizard-step>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.Wizard\n * @extends UI5Element\n * @tagname ui5-wizard\n * @since 1.0.0-rc.10\n * @appenddocs WizardStep\n * @public\n */\n\nclass Wizard extends UI5Element {\n  constructor() {\n    super(); // Stores the scroll offsets of the steps,\n    // e.g. the steps' starting point.\n\n    this.stepScrollOffsets = []; // Stores references to the grouped steps.\n\n    this._groupedTabs = []; // Keeps track of the currently selected step index.\n\n    this.selectedStepIndex = 0; // Keeps track of the previously selected step index.\n\n    this.previouslySelectedStepIndex = 0; // Indicates that selection will be changed\n    // due to user click.\n\n    this.selectionRequestedByClick = false; // Stores the previous width\n\n    this._prevWidth = 0; // Stores the previous height\n\n    this._prevContentHeight = 0; // Indicates that selection will be changed\n    // due to user scroll.\n\n    this.selectionRequestedByScroll = false;\n    this._itemNavigation = new ItemNavigation(this, {\n      navigationMode: NavigationMode.Auto,\n      getItemsCallback: () => this.enabledStepsInHeaderDOM\n    });\n    this._onStepResize = this.onStepResize.bind(this);\n  }\n\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  get classes() {\n    return {\n      popover: {\n        \"ui5-wizard-responsive-popover\": true,\n        \"ui5-wizard-popover\": !isPhone(),\n        \"ui5-wizard-dialog\": isPhone()\n      }\n    };\n  }\n\n  static get styles() {\n    return WizardCss;\n  }\n\n  static get staticAreaStyles() {\n    return WizardPopoverCss;\n  }\n\n  static get template() {\n    return WizardTemplate;\n  }\n\n  static get dependencies() {\n    return [WizardTab, WizardStep, ResponsivePopover, Button];\n  }\n\n  static async onDefine() {\n    Wizard.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n  }\n\n  static get PHONE_BREAKPOINT() {\n    return 599;\n  }\n\n  static get SCROLL_DEBOUNCE_RATE() {\n    return 25;\n  }\n\n  static get staticAreaTemplate() {\n    return WizardPopoverTemplate;\n  }\n\n  onExitDOM() {\n    this.detachStepsResizeObserver();\n  }\n\n  onBeforeRendering() {\n    this.syncSelection();\n  }\n\n  onAfterRendering() {\n    this.storeStepScrollOffsets();\n\n    if (this.previouslySelectedStepIndex !== this.selectedStepIndex) {\n      this.scrollToSelectedStep();\n    }\n\n    this.attachStepsResizeObserver();\n    this.previouslySelectedStepIndex = this.selectedStepIndex;\n  }\n  /**\n   * Normalizes the step selection as follows:\n   * (1) If there is no selected step - the first step is going to be selected.\n   * (2) If the selected steps are more than one - the last step is going to be selected.\n   * (3) If the selected step is also disabled - log a warning.\n   * @private\n   */\n\n\n  syncSelection() {\n    if (this.stepsCount === 0) {\n      return;\n    } // If no selected steps -> select the first step.\n\n\n    if (this.selectedStepsCount === 0) {\n      this.selectFirstStep();\n      console.warn(\"Selecting the first step: no selected step is defined.\"); // eslint-disable-line\n    } // If there are multiple selected steps -> keep the last selected one.\n\n\n    if (this.selectedStepsCount > 1) {\n      this.selectLastSelectedStep();\n      console.warn(`Selecting the last step defined as selected: multiple selected steps are defined.`); // eslint-disable-line\n    } // If the selected step is defined as disabled - log warning.\n\n\n    if (this.selectedStep && this.selectedStep.disabled) {\n      console.warn(\"The selected step is disabled: you need to enable it in order to interact with the step.\"); // eslint-disable-line\n    } // Place for improvement: If the selected step is not the first, enable all the prior steps\n\n\n    this.selectedStepIndex = this.getSelectedStepIndex();\n  }\n  /**\n   * Selects the first step.\n   * @private\n   */\n\n\n  selectFirstStep() {\n    this.deselectAll();\n    this.slottedSteps[0].selected = true;\n    this.slottedSteps[0].disabled = false;\n  }\n  /**\n   * Selects the last step from multiple selected ones.\n   * @private\n   */\n\n\n  selectLastSelectedStep() {\n    const lastSelectedStep = this.lastSelectedStep;\n\n    if (lastSelectedStep) {\n      this.deselectAll();\n      lastSelectedStep.selected = true;\n      lastSelectedStep.disabled = false;\n    }\n  }\n  /**\n   * Deselects all steps.\n   * @private\n   */\n\n\n  deselectAll() {\n    this.slottedSteps.forEach(step => {\n      step.selected = false;\n    });\n  }\n  /**\n   * Stores the scroll offsets of the steps,\n   * e.g. the steps' starting point.\n   *\n   * <b>Note:</b> the disabled ones has negative offsets.\n   * @private\n   */\n\n\n  storeStepScrollOffsets() {\n    this.stepScrollOffsets = this.slottedSteps.map(step => {\n      const contentItem = this.getStepWrapperByRefId(step._id);\n      return contentItem.offsetTop + contentItem.offsetHeight;\n    });\n  }\n  /**\n   * Handles user click on steps' tabs within the header.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n\n\n  onSelectionChangeRequested(event) {\n    this.selectionRequestedByClick = true;\n    this.changeSelectionByStepAction(event.target);\n  }\n  /**\n   * Handles user scrolling with debouncing.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n\n\n  onScroll(event) {\n    if (this.selectionRequestedByClick) {\n      this.selectionRequestedByClick = false;\n      return;\n    }\n\n    debounce(this.changeSelectionByScroll.bind(this, event.target.scrollTop), Wizard.SCROLL_DEBOUNCE_RATE);\n  }\n  /**\n   * Handles when a step in the header is focused in order to update the <code>ItemNavigation</code>.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n\n\n  onStepInHeaderFocused(event) {\n    this._itemNavigation.setCurrentItem(event.target);\n  }\n  /**\n   * Handles resize in order to:\n   * (1) sync steps' scroll offset and selection\n   * (2) adapt navition step header\n   * @private\n   */\n\n\n  onStepResize() {\n    this.width = this.getBoundingClientRect().width;\n    this.contentHeight = this.getContentHeight();\n\n    if (this._prevWidth !== this.width || this.contentHeight !== this._prevContentHeight) {\n      this._closeRespPopover();\n    }\n\n    this._prevWidth = this.width;\n    this._prevContentHeight = this.contentHeight;\n  }\n\n  attachStepsResizeObserver() {\n    this.stepsDOM.forEach(stepDOM => {\n      ResizeHandler.deregister(stepDOM, this._onStepResize);\n      ResizeHandler.register(stepDOM, this._onStepResize);\n    });\n  }\n\n  detachStepsResizeObserver() {\n    this.stepsDOM.forEach(stepDOM => {\n      ResizeHandler.deregister(stepDOM, this._onStepResize);\n    });\n  }\n  /**\n   * Updates the expanded attribute for each ui5-wizard-tab based on the ui5-wizard width\n   * @private\n   */\n\n\n  _adjustHeaderOverflow() {\n    let counter = 0;\n    let isForward = true;\n    const iWidth = this.width;\n    const iCurrStep = this.getSelectedStepIndex();\n    const iStepsToShow = this.steps.length ? Math.floor(iWidth / MIN_STEP_WIDTH_WITH_TITLE) : Math.floor(iWidth / MIN_STEP_WIDTH_NO_TITLE);\n    const tabs = this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\");\n\n    if (!tabs.length) {\n      return;\n    }\n\n    [].forEach.call(tabs, (step, index) => {\n      step.setAttribute(EXPANDED_STEP, false);\n      step.setAttribute(BEFORE_EXPANDED_STEP, false);\n      step.setAttribute(AFTER_EXPANDED_STEP, false); // Add \"data-ui5-wizard-after-current-tab\" to all tabs after the current one\n\n      if (index > iCurrStep) {\n        tabs[index].setAttribute(AFTER_CURRENT_STEP, true);\n      } else {\n        tabs[index].removeAttribute(AFTER_CURRENT_STEP);\n      }\n    }); // Add \"data-ui5-wizard-expanded-tab\" to the current step\n\n    if (tabs[iCurrStep]) {\n      tabs[iCurrStep].setAttribute(EXPANDED_STEP, true);\n    } // Set the \"data-ui5-wizard-expanded-tab\" to the steps that are expanded\n    // The algorithm is as follows:\n    // 1. A step towards the end is expanded\n    // \t1.2. If there are no available steps towards the end a step towards the beginning is expanded\n    // 2. A step towards the beginning is expanded\n    // \t2.2. If there are no available steps towards the beginning a step towards the end is expanded\n\n\n    for (let i = 1; i < iStepsToShow; i++) {\n      if (isForward) {\n        counter += 1;\n      }\n\n      if (isForward && tabs[iCurrStep + counter]) {\n        tabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, true);\n        isForward = !isForward;\n      } else if (!isForward && tabs[iCurrStep - counter]) {\n        tabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, true);\n        isForward = !isForward;\n      } else if (tabs[iCurrStep + counter + 1]) {\n        counter += 1;\n        tabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, true);\n        isForward = true;\n      } else if (tabs[iCurrStep - counter]) {\n        tabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, true);\n        counter += 1;\n        isForward = false;\n      }\n    } // mark the topmost steps of both groups (in the beginning and the end),\n    // using the \"data-ui5-wizard-after-current-tab\" and \"data-ui5-wizard-expanded-tab-prev\" attributes\n\n\n    for (let i = 0; i < tabs.length; i++) {\n      if (tabs[i].getAttribute(EXPANDED_STEP) === \"true\" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === \"false\") {\n        tabs[i - 1].setAttribute(BEFORE_EXPANDED_STEP, true);\n      }\n\n      if (tabs[i].getAttribute(EXPANDED_STEP) === \"false\" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === \"true\") {\n        tabs[i].setAttribute(AFTER_EXPANDED_STEP, true);\n        break;\n      }\n    }\n  }\n\n  _isGroupAtStart(selectedStep) {\n    const iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);\n    return selectedStep.getAttribute(EXPANDED_STEP) === \"false\" && selectedStep.getAttribute(BEFORE_EXPANDED_STEP) === \"true\" && iStepNumber > 0;\n  }\n\n  _isGroupAtEnd(selectedStep) {\n    const iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);\n    return selectedStep.getAttribute(EXPANDED_STEP) === \"false\" && selectedStep.getAttribute(AFTER_EXPANDED_STEP) === \"true\" && iStepNumber + 1 < this.steps.length;\n  }\n\n  async _showPopover(oDomTarget, bAtStart) {\n    const tabs = Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n    this._groupedTabs = [];\n    const iFromStep = bAtStart ? 0 : this.stepsInHeaderDOM.indexOf(oDomTarget);\n    const iToStep = bAtStart ? this.stepsInHeaderDOM.indexOf(oDomTarget) : tabs.length - 1;\n\n    for (let i = iFromStep; i <= iToStep; i++) {\n      this._groupedTabs.push(tabs[i]);\n    }\n\n    const responsivePopover = await this._respPopover();\n    responsivePopover.showAt(oDomTarget);\n  }\n\n  async _onGroupedTabClick(event) {\n    if (this._isGroupAtStart(event.target)) {\n      return this._showPopover(event.target, true);\n    }\n\n    if (this._isGroupAtEnd(event.target)) {\n      return this._showPopover(event.target, false);\n    }\n  }\n\n  _onOverflowStepButtonClick(event) {\n    const tabs = Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n    const stepRefId = event.target.getAttribute(\"data-ui5-header-tab-ref-id\");\n    const stepToSelect = this.slottedSteps[stepRefId - 1];\n    const selectedStep = this.selectedStep;\n    const newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n    this.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, true);\n\n    this._closeRespPopover();\n\n    tabs[newlySelectedIndex].focus();\n  }\n\n  async _closeRespPopover() {\n    const responsivePopover = await this._respPopover();\n    responsivePopover && responsivePopover.close();\n  }\n\n  async _respPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(`.ui5-wizard-responsive-popover`);\n  }\n  /**\n   * Called upon <code>onScroll</code>.\n   * Selects the closest step, based on the user scroll position.\n   * @param {Integer} scrollPos the current scroll position\n   * @private\n   */\n\n\n  changeSelectionByScroll(scrollPos) {\n    const newlySelectedIndex = this.getClosestStepIndexByScrollPos(scrollPos); // Skip if already selected - stop.\n\n    if (this.selectedStepIndex === newlySelectedIndex) {\n      return;\n    } // If the calculated index is in range,\n    // change selection and fire \"step-change\".\n\n\n    if (newlySelectedIndex >= 0 && newlySelectedIndex <= this.stepsCount - 1) {\n      const stepToSelect = this.slottedSteps[newlySelectedIndex];\n      this.switchSelectionFromOldToNewStep(this.selectedStep, stepToSelect, newlySelectedIndex, false);\n      this.selectionRequestedByScroll = true;\n    }\n  }\n  /**\n   * Called upon <code>onSelectionChangeRequested</code>.\n   * Selects the external step (ui5-wizard-step),\n   * based on the clicked or activated via keyboard step in the header (ui5-wizard-tab).\n   * @param {HTMLElement} stepInHeader the step equivalent in the header\n   * @private\n   */\n\n\n  async changeSelectionByStepAction(stepInHeader) {\n    const stepRefId = stepInHeader.getAttribute(\"data-ui5-content-ref-id\");\n    const selectedStep = this.selectedStep;\n    const stepToSelect = this.getStepByRefId(stepRefId);\n    const bExpanded = stepInHeader.getAttribute(EXPANDED_STEP) === \"true\";\n    const newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n    const firstFocusableElement = await getFirstFocusableElement(stepToSelect.firstElementChild);\n\n    if (firstFocusableElement) {\n      // Focus the first focusable element within the step content corresponding to the currently focused tab\n      firstFocusableElement.focus();\n    } // If the currently selected (active) step is clicked,\n    // just scroll to its starting point and stop.\n\n\n    if (selectedStep === stepToSelect) {\n      this.scrollToContentItem(this.selectedStepIndex);\n      return;\n    }\n\n    if (bExpanded || !bExpanded && (newlySelectedIndex === 0 || newlySelectedIndex === this.steps.length - 1)) {\n      // Change selection and fire \"step-change\".\n      this.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, true);\n    }\n  }\n\n  getContentHeight() {\n    let contentHeight = 0;\n    this.stepsDOM.forEach(step => {\n      contentHeight += step.getBoundingClientRect().height;\n    });\n    return contentHeight;\n  }\n\n  getStepAriaLabelText(step, ariaLabel) {\n    return Wizard.i18nBundle.getText(WIZARD_STEP_ARIA_LABEL, ariaLabel);\n  }\n\n  get stepsDOM() {\n    return Array.from(this.shadowRoot.querySelectorAll(\".ui5-wiz-content-item\"));\n  }\n\n  get _stepsInHeader() {\n    return this.getStepsInfo();\n  }\n\n  get _steps() {\n    const lastEnabledStepIndex = this.getLastEnabledStepIndex();\n    const stepsInfo = this.getStepsInfo();\n    return this.steps.map((step, idx) => {\n      step.stretch = idx === lastEnabledStepIndex;\n      step.stepContentAriaLabel = `${this.navStepDefaultHeading} ${stepsInfo[idx].number} ${stepsInfo[idx].titleText}`;\n      return step;\n    });\n  }\n\n  get stepsCount() {\n    return this.slottedSteps.length;\n  }\n\n  get selectedStep() {\n    if (this.selectedStepsCount) {\n      return this.selectedSteps[0];\n    }\n\n    return null;\n  }\n\n  get lastSelectedStep() {\n    if (this.selectedStepsCount) {\n      return this.selectedSteps[this.selectedStepsCount - 1];\n    }\n\n    return null;\n  }\n\n  get selectedSteps() {\n    return this.slottedSteps.filter(step => step.selected);\n  }\n\n  get enabledSteps() {\n    return this.slottedSteps.filter(step => !step.disabled);\n  }\n\n  get selectedStepsCount() {\n    return this.selectedSteps.length;\n  }\n\n  get slottedSteps() {\n    return this.getSlottedNodes(\"steps\");\n  }\n\n  get contentDOM() {\n    return this.shadowRoot.querySelector(`.ui5-wiz-content`);\n  }\n\n  get stepsInHeaderDOM() {\n    return Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n  }\n\n  get enabledStepsInHeaderDOM() {\n    return this.stepsInHeaderDOM;\n  }\n\n  get phoneMode() {\n    if (isPhone()) {\n      return true;\n    }\n\n    return this.width <= Wizard.PHONE_BREAKPOINT;\n  }\n\n  get navAriaRoleDescription() {\n    return Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n  }\n\n  get navAriaLabelText() {\n    return Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_LABEL);\n  }\n\n  get navAriaDescribedbyText() {\n    return Wizard.i18nBundle.getText(WIZARD_LIST_ARIA_DESCRIBEDBY);\n  }\n\n  get listAriaLabelText() {\n    return Wizard.i18nBundle.getText(WIZARD_LIST_ARIA_LABEL);\n  }\n\n  get actionSheetStepsText() {\n    return Wizard.i18nBundle.getText(WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL);\n  }\n\n  get navStepDefaultHeading() {\n    return Wizard.i18nBundle.getText(WIZARD_NAV_STEP_DEFAULT_HEADING);\n  }\n\n  get optionalStepText() {\n    return Wizard.i18nBundle.getText(WIZARD_OPTIONAL_STEP_ARIA_LABEL);\n  }\n\n  get activeStepText() {\n    return Wizard.i18nBundle.getText(WIZARD_STEP_ACTIVE);\n  }\n\n  get inactiveStepText() {\n    return Wizard.i18nBundle.getText(WIZARD_STEP_INACTIVE);\n  }\n\n  get ariaLabelText() {\n    return Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n  }\n\n  get effectiveStepSwitchThreshold() {\n    return clamp(this.stepSwitchThreshold, STEP_SWITCH_THRESHOLDS.MIN, STEP_SWITCH_THRESHOLDS.MAX);\n  }\n  /**\n   * Returns an array of data objects, based on the user defined steps\n   * to later build the steps (tabs) within the header.\n   * @returns {Array<Object>}\n   * @private\n   */\n\n\n  getStepsInfo() {\n    const lastEnabledStepIndex = this.getLastEnabledStepIndex();\n    const stepsCount = this.stepsCount;\n    const selectedStepIndex = this.getSelectedStepIndex();\n    let inintialZIndex = this.steps.length + 10;\n    let accInfo;\n\n    this._adjustHeaderOverflow();\n\n    return this.steps.map((step, idx) => {\n      const pos = idx + 1; // Hide separator if it's the last step and it's not a branching one\n\n      const hideSeparator = idx === stepsCount - 1 && !step.branching;\n      const isOptional = step.subtitleText ? this.optionalStepText : \"\";\n      const stepStateText = step.disabled ? this.inactiveStepText : this.activeStepText;\n      const ariaLabel = (step.titleText ? `${pos} ${step.titleText} ${stepStateText} ${isOptional}` : `${this.navStepDefaultHeading} ${pos} ${stepStateText} ${isOptional}`).trim();\n      const isAfterCurrent = idx > selectedStepIndex;\n      accInfo = {\n        \"ariaSetsize\": stepsCount,\n        \"ariaPosinset\": pos,\n        \"ariaLabel\": this.getStepAriaLabelText(step, ariaLabel)\n      };\n      return {\n        icon: step.icon,\n        titleText: step.titleText,\n        subtitleText: step.subtitleText,\n        number: pos,\n        selected: step.selected,\n        disabled: step.disabled,\n        hideSeparator,\n        activeSeparator: idx < lastEnabledStepIndex && !step.disabled,\n        branchingSeparator: step.branching,\n        pos,\n        accInfo,\n        refStepId: step._id,\n        tabIndex: this.selectedStepIndex === idx ? \"0\" : \"-1\",\n        styles: {\n          zIndex: isAfterCurrent ? --inintialZIndex : 1\n        }\n      };\n    });\n  }\n  /**\n   * Returns the index of the selected step.\n   * @returns {Integer}\n   * @private\n   */\n\n\n  getSelectedStepIndex() {\n    if (this.selectedStep) {\n      return this.slottedSteps.indexOf(this.selectedStep);\n    }\n\n    return 0;\n  }\n  /**\n   * Returns the index of the last enabled step.\n   * @returns {Integer}\n   * @private\n   */\n\n\n  getLastEnabledStepIndex() {\n    let lastEnabledStepIndex = 0;\n    this.slottedSteps.forEach((step, idx) => {\n      if (!step.disabled) {\n        lastEnabledStepIndex = idx;\n      }\n    });\n    return lastEnabledStepIndex;\n  }\n\n  getStepByRefId(refId) {\n    return this.slottedSteps.find(step => step._id === refId);\n  }\n\n  getStepWrapperByRefId(refId) {\n    return this.shadowRoot.querySelector(`[data-ui5-content-item-ref-id=${refId}]`);\n  }\n\n  getStepWrapperByIdx(idx) {\n    return this.getStepWrapperByRefId(this.steps[idx]._id);\n  }\n  /**\n   * Scrolls to the content of the selected step, used in <code>onAfterRendering</cod>.\n   * @private\n   */\n\n\n  scrollToSelectedStep() {\n    if (!this.selectionRequestedByScroll) {\n      this.scrollToContentItem(this.selectedStepIndex);\n    }\n\n    this.selectionRequestedByScroll = false;\n  }\n  /**\n   * Scrolls to the content item within the <code>ui5-wizard</code> shadowDOM\n   * by given step index.\n   *\n   * @private\n   * @param {Integer} stepIndex the index of a step\n   */\n\n\n  scrollToContentItem(stepIndex) {\n    this.contentDOM.scrollTop = this.getClosestScrollPosByStepIndex(stepIndex);\n  }\n  /**\n   * Returns to closest scroll position for the given step index.\n   *\n   * @private\n   * @param {Integer} stepIndex the index of a step\n   */\n\n\n  getClosestScrollPosByStepIndex(stepIndex) {\n    if (stepIndex === 0) {\n      return 0;\n    } // It's possible to have [enabled - 0, disabled - 1, enabled - 2, disabled - 3] step definition and similar.\n    // Consider selection of the third step at index 2, the wizard should scroll where the previous step ends,\n    // but in this case the 2nd step is disabled, so we have to fallback to the first possible step.\n\n\n    for (let closestStepIndex = stepIndex - 1; closestStepIndex >= 0; closestStepIndex--) {\n      if (this.stepScrollOffsets[closestStepIndex] > 0) {\n        return this.stepScrollOffsets[closestStepIndex];\n      }\n    }\n\n    return 0;\n  }\n  /**\n   * Returns the closest step index by given scroll position.\n   * @private\n   * @param {Integer} scrollPos the scroll position\n   */\n\n\n  getClosestStepIndexByScrollPos(scrollPos) {\n    for (let closestStepIndex = 0; closestStepIndex <= this.stepScrollOffsets.length - 1; closestStepIndex++) {\n      const stepScrollOffset = this.stepScrollOffsets[closestStepIndex];\n      const step = this.getStepWrapperByIdx(closestStepIndex);\n      const switchStepBoundary = step.offsetTop + step.offsetHeight * this.effectiveStepSwitchThreshold;\n\n      if (stepScrollOffset > 0 && scrollPos < stepScrollOffset) {\n        if (scrollPos > switchStepBoundary) {\n          return closestStepIndex + 1;\n        }\n\n        return closestStepIndex;\n      }\n    }\n\n    return this.selectedStepIndex;\n  }\n  /**\n   * Switches the selection from the old step to the newly selected step.\n   *\n   * @param {HTMLElement} selectedStep the old step\n   * @param {HTMLElement} stepToSelect the step to be selected\n   * @param {Integer} stepToSelectIndex the index of the newly selected step\n   * @param {Boolean} changeWithClick the selection changed due to user click in the step navigation\n   * @private\n   */\n\n\n  switchSelectionFromOldToNewStep(selectedStep, stepToSelect, stepToSelectIndex, changeWithClick) {\n    if (selectedStep && stepToSelect) {\n      // keep the selection if next step is disabled\n      if (!stepToSelect.disabled) {\n        selectedStep.selected = false;\n        stepToSelect.selected = true;\n      }\n\n      this.fireEvent(\"step-change\", {\n        step: stepToSelect,\n        previousStep: selectedStep,\n        changeWithClick\n      });\n      this.selectedStepIndex = stepToSelectIndex;\n    }\n  }\n  /**\n   * Sorter method for sorting an array in ascending order.\n   * @private\n   */\n\n\n  sortAscending(a, b) {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n}\n\nWizard.define();\nexport default Wizard;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-fiori/dist/Wizard.js"],"names":["UI5Element","litRender","getI18nBundle","ItemNavigation","NavigationMode","Float","clamp","ResizeHandler","isPhone","debounce","getFirstFocusableElement","Button","ResponsivePopover","WIZARD_NAV_STEP_DEFAULT_HEADING","WIZARD_NAV_ARIA_ROLE_DESCRIPTION","WIZARD_NAV_ARIA_LABEL","WIZARD_LIST_ARIA_LABEL","WIZARD_LIST_ARIA_DESCRIBEDBY","WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL","WIZARD_OPTIONAL_STEP_ARIA_LABEL","WIZARD_STEP_ARIA_LABEL","WIZARD_STEP_ACTIVE","WIZARD_STEP_INACTIVE","WizardTab","WizardStep","WizardTemplate","WizardPopoverTemplate","WizardCss","WizardPopoverCss","MIN_STEP_WIDTH_NO_TITLE","MIN_STEP_WIDTH_WITH_TITLE","EXPANDED_STEP","AFTER_EXPANDED_STEP","AFTER_CURRENT_STEP","BEFORE_EXPANDED_STEP","STEP_SWITCH_THRESHOLDS","MIN","DEFAULT","MAX","metadata","tag","managedSlots","fastNavigation","properties","width","type","stepSwitchThreshold","defaultValue","contentHeight","_groupedTabs","String","multiple","slots","propertyName","HTMLElement","invalidateOnChildChange","events","detail","step","previousStep","changeWithClick","Boolean","Wizard","constructor","stepScrollOffsets","selectedStepIndex","previouslySelectedStepIndex","selectionRequestedByClick","_prevWidth","_prevContentHeight","selectionRequestedByScroll","_itemNavigation","navigationMode","Auto","getItemsCallback","enabledStepsInHeaderDOM","_onStepResize","onStepResize","bind","render","classes","popover","styles","staticAreaStyles","template","dependencies","onDefine","i18nBundle","PHONE_BREAKPOINT","SCROLL_DEBOUNCE_RATE","staticAreaTemplate","onExitDOM","detachStepsResizeObserver","onBeforeRendering","syncSelection","onAfterRendering","storeStepScrollOffsets","scrollToSelectedStep","attachStepsResizeObserver","stepsCount","selectedStepsCount","selectFirstStep","console","warn","selectLastSelectedStep","selectedStep","disabled","getSelectedStepIndex","deselectAll","slottedSteps","selected","lastSelectedStep","forEach","map","contentItem","getStepWrapperByRefId","_id","offsetTop","offsetHeight","onSelectionChangeRequested","event","changeSelectionByStepAction","target","onScroll","changeSelectionByScroll","scrollTop","onStepInHeaderFocused","setCurrentItem","getBoundingClientRect","getContentHeight","_closeRespPopover","stepsDOM","stepDOM","deregister","register","_adjustHeaderOverflow","counter","isForward","iWidth","iCurrStep","iStepsToShow","steps","length","Math","floor","tabs","shadowRoot","querySelectorAll","call","index","setAttribute","removeAttribute","i","getAttribute","_isGroupAtStart","iStepNumber","stepsInHeaderDOM","indexOf","_isGroupAtEnd","_showPopover","oDomTarget","bAtStart","Array","from","iFromStep","iToStep","push","responsivePopover","_respPopover","showAt","_onGroupedTabClick","_onOverflowStepButtonClick","stepRefId","stepToSelect","newlySelectedIndex","switchSelectionFromOldToNewStep","focus","close","staticAreaItem","getStaticAreaItemDomRef","querySelector","scrollPos","getClosestStepIndexByScrollPos","stepInHeader","getStepByRefId","bExpanded","firstFocusableElement","firstElementChild","scrollToContentItem","height","getStepAriaLabelText","ariaLabel","getText","_stepsInHeader","getStepsInfo","_steps","lastEnabledStepIndex","getLastEnabledStepIndex","stepsInfo","idx","stretch","stepContentAriaLabel","navStepDefaultHeading","number","titleText","selectedSteps","filter","enabledSteps","getSlottedNodes","contentDOM","phoneMode","navAriaRoleDescription","navAriaLabelText","navAriaDescribedbyText","listAriaLabelText","actionSheetStepsText","optionalStepText","activeStepText","inactiveStepText","ariaLabelText","effectiveStepSwitchThreshold","inintialZIndex","accInfo","pos","hideSeparator","branching","isOptional","subtitleText","stepStateText","trim","isAfterCurrent","icon","activeSeparator","branchingSeparator","refStepId","tabIndex","zIndex","refId","find","getStepWrapperByIdx","stepIndex","getClosestScrollPosByStepIndex","closestStepIndex","stepScrollOffset","switchStepBoundary","stepToSelectIndex","fireEvent","sortAscending","a","b","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,SAASC,OAAT,QAAwB,wCAAxB;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,SAASC,wBAAT,QAAyC,wDAAzC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,iBAAP,MAA8B,8CAA9B,C,CAEA;;AACA,SACCC,+BADD,EAECC,gCAFD,EAGCC,qBAHD,EAICC,sBAJD,EAKCC,4BALD,EAMCC,mCAND,EAOCC,+BAPD,EAQCC,sBARD,EASCC,kBATD,EAUCC,oBAVD,QAWO,mCAXP,C,CAaA;;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AAEA,MAAMC,uBAAuB,GAAG,EAAhC;AACA,MAAMC,yBAAyB,GAAG,GAAlC;AAEA,MAAMC,aAAa,GAAG,8BAAtB;AACA,MAAMC,mBAAmB,GAAG,mCAA5B;AACA,MAAMC,kBAAkB,GAAG,mCAA3B;AACA,MAAMC,oBAAoB,GAAG,mCAA7B;AAEA,MAAMC,sBAAsB,GAAG;AAC9BC,EAAAA,GAAG,EAAE,GADyB;AAE9BC,EAAAA,OAAO,EAAE,GAFqB;AAG9BC,EAAAA,GAAG,EAAE;AAHyB,CAA/B;AAMA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,YADW;AAEhBC,EAAAA,YAAY,EAAE,IAFE;AAGhBC,EAAAA,cAAc,EAAE,IAHA;AAIhBC,EAAAA,UAAU;AAAE;AAA0D;AACrE;AACF;AACA;AACA;AACEC,IAAAA,KAAK,EAAE;AACNC,MAAAA,IAAI,EAAExC;AADA,KAL8D;;AASrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEyC,IAAAA,mBAAmB,EAAE;AACpBD,MAAAA,IAAI,EAAExC,KADc;AAEpB0C,MAAAA,YAAY,EAAEZ,sBAAsB,CAACE;AAFjB,KA1BgD;;AA+BrE;AACF;AACA;AACA;AACEW,IAAAA,aAAa,EAAE;AACdH,MAAAA,IAAI,EAAExC;AADQ,KAnCsD;AAuCrE4C,IAAAA,YAAY,EAAE;AACbJ,MAAAA,IAAI,EAAEK,MADO;AAEbC,MAAAA,QAAQ,EAAE;AAFG;AAvCuD,GAJtD;AAgDhBC,EAAAA,KAAK;AAAE;AAA0D;AAChE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVC,MAAAA,YAAY,EAAE,OADJ;AAEVR,MAAAA,IAAI,EAAES,WAFI;AAGV,yBAAmB,IAHT;AAIVC,MAAAA,uBAAuB,EAAE;AAJf;AAVqD,GAhDjD;AAiEhBC,EAAAA,MAAM;AAAE;AAA0D;AACjE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,mBAAe;AACdC,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAEb,UAAAA,IAAI,EAAES;AAAR,SADC;AAEPK,QAAAA,YAAY,EAAE;AAAEd,UAAAA,IAAI,EAAES;AAAR,SAFP;AAGPM,QAAAA,eAAe,EAAE;AAAEC,UAAAA;AAAF;AAHV;AADM;AAXkD;AAjElD,CAAjB;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport clamp from \"@ui5/webcomponents-base/dist/util/clamp.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport { getFirstFocusableElement } from \"@ui5/webcomponents-base/dist/util/FocusableElements.js\";\nimport Button from \"@ui5/webcomponents/dist/Button.js\";\nimport ResponsivePopover from \"@ui5/webcomponents/dist/ResponsivePopover.js\";\n\n// Texts\nimport {\n\tWIZARD_NAV_STEP_DEFAULT_HEADING,\n\tWIZARD_NAV_ARIA_ROLE_DESCRIPTION,\n\tWIZARD_NAV_ARIA_LABEL,\n\tWIZARD_LIST_ARIA_LABEL,\n\tWIZARD_LIST_ARIA_DESCRIBEDBY,\n\tWIZARD_ACTIONSHEET_STEPS_ARIA_LABEL,\n\tWIZARD_OPTIONAL_STEP_ARIA_LABEL,\n\tWIZARD_STEP_ARIA_LABEL,\n\tWIZARD_STEP_ACTIVE,\n\tWIZARD_STEP_INACTIVE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Step in header and content\nimport WizardTab from \"./WizardTab.js\";\nimport WizardStep from \"./WizardStep.js\";\n\n// Template and Styles\nimport WizardTemplate from \"./generated/templates/WizardTemplate.lit.js\";\nimport WizardPopoverTemplate from \"./generated/templates/WizardPopoverTemplate.lit.js\";\nimport WizardCss from \"./generated/themes/Wizard.css.js\";\nimport WizardPopoverCss from \"./generated/themes/WizardPopover.css.js\";\n\nconst MIN_STEP_WIDTH_NO_TITLE = 64;\nconst MIN_STEP_WIDTH_WITH_TITLE = 200;\n\nconst EXPANDED_STEP = \"data-ui5-wizard-expanded-tab\";\nconst AFTER_EXPANDED_STEP = \"data-ui5-wizard-expanded-tab-next\";\nconst AFTER_CURRENT_STEP = \"data-ui5-wizard-after-current-tab\";\nconst BEFORE_EXPANDED_STEP = \"data-ui5-wizard-expanded-tab-prev\";\n\nconst STEP_SWITCH_THRESHOLDS = {\n\tMIN: 0.5,\n\tDEFAULT: 0.7,\n\tMAX: 1,\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-wizard\",\n\tmanagedSlots: true,\n\tfastNavigation: true,\n\tproperties: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Defines the width of the <code>ui5-wizard</code>.\n\t\t * @private\n\t\t */\n\t\twidth: {\n\t\t\ttype: Float,\n\t\t},\n\n\t\t/**\n\t\t * Defines the threshold to switch between steps upon user scrolling.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>For Example:</b>\n\t\t * <br>\n\t\t * (1) To switch to the next step, when half of the step is scrolled out - set <code>step-switch-threshold=\"0.5\"</code>.\n\t\t * (2) To switch to the next step, when the entire current step is scrolled out - set <code>step-switch-threshold=\"1\"</code>.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> Supported values are between 0.5 and 1\n\t\t * and values out of the range will be normalized to 0.5 and 1 respectively.\n\t\t * @private\n\t\t * @type {Float}\n\t\t * @defaultvalue 0.7\n\t\t * @since 1.0.0-rc.13\n\t\t */\n\t\tstepSwitchThreshold: {\n\t\t\ttype: Float,\n\t\t\tdefaultValue: STEP_SWITCH_THRESHOLDS.DEFAULT,\n\t\t},\n\n\t\t/**\n\t\t * Defines the height of the <code>ui5-wizard</code> content.\n\t\t * @private\n\t\t */\n\t\tcontentHeight: {\n\t\t\ttype: Float,\n\t\t},\n\n\t\t_groupedTabs: {\n\t\t\ttype: String,\n\t\t\tmultiple: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Defines the steps.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use the available <code>ui5-wizard-step</code> component.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.fiori.IWizardStep[]}\n\t\t * @public\n\t\t * @slot steps\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"steps\",\n\t\t\ttype: HTMLElement,\n\t\t\t\"individualSlots\": true,\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Fired when the step is changed by user interaction - either with scrolling,\n\t\t * or by clicking on the steps within the component header.\n\t\t *\n\t\t * @event sap.ui.webcomponents.fiori.Wizard#step-change\n\t\t * @param {HTMLElement} step The new step.\n\t\t * @param {HTMLElement} previousStep The previous step.\n\t\t * @param {Boolean} changeWithClick The step change occurs due to user's click or 'Enter'/'Space' key press on step within the navigation.\n\t\t * @public\n\t\t */\n\t\t\"step-change\": {\n\t\t\tdetail: {\n\t\t\t\tstep: { type: HTMLElement },\n\t\t\t\tpreviousStep: { type: HTMLElement },\n\t\t\t\tchangeWithClick: { Boolean },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-wizard</code> helps users to complete a complex task by dividing it into sections and guiding them through it.\n * It has two main areas - a navigation area at the top showing the step sequence and a content area below it.\n *\n * <h3>Structure</h3>\n * <h4>Navigation area</h4>\n * The top most area of the <code>ui5-wizard</code> is occupied by the navigation area.\n * It shows the sequence of steps, where the recommended number of steps is between 3 and 8 steps.\n * <ul>\n * <li> Steps can have different visual representations - numbers or icons.\n * <li> Steps might have labels for better readability - titleText and subTitleText.</li>\n * <li> Steps are defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.</li>\n * </ul>\n *\n * <b>Note:</b> If no selected step is defined, the first step will be auto selected.\n * <br>\n * <b>Note:</b> If multiple selected steps are defined, the last step will be selected.\n *\n * <h3>Keyboard Handling</h3>\n * The user can navigate using the following keyboard shortcuts:\n * <br>\n *\n * <h4>Wizard Progress Navigation</h4>\n * <ul>\n * \t<li>[LEFT], [DOWN] - Focus moves backward to the WizardProgressNavAnchors.</li>\n * \t<li>[UP], [RIGHT] - Focus moves forward to the WizardProgressNavAnchor.</li>\n * \t<li>[SPACE] or [ENTER], [RETURN] - Selects an active step</li>\n * \t<li>[HOME] or [PAGE UP] - Focus goes to the first step</li>\n * \t<li>[END] or [PAGE DOWN] - Focus goes to the last step</li>\n * </ul>\n *\n * <h4>Fast Navigation</h4>\n * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.\n * In order to use this functionality, you need to import the following module:\n * <code>import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"</code>\n *\n * <h4>Content</h4>\n * The content occupies the main part of the page. It can hold any type of HTML elements.\n * It's defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.\n *\n * <h3>Scrolling</h3>\n * The component handles user scrolling by selecting the closest step, based on the current scroll position\n * and scrolls to particular place, when the user clicks on the step within the navigation area.\n * <br><br>\n *\n * <b>Important:</b> In order the component's scrolling behaviour to work, it has to be limited from the outside parent element in terms of height.\n * The component or its parent has to be given percentage or absolute height. Otherwise, the component will be scrolled out with the entire page.\n * <br><br>\n * <b>For example:</b>\n * <br><br>\n * <code>&lt;ui5-dialog style=\"height: 80%\"&gt;<br></code>\n * <code>&#9;&lt;ui5-wizard&gt;&lt;/ui5-wizard&gt;<br></code>\n * <code>&lt;/ui5-dialog&gt;</code>\n *\n * <h4>Moving to next step</h4>\n * The <code>ui5-wizard-step</code> provides the necessary API and it's up to the user of the component to use it to move to the next step.\n * You have to set its <code>selected</code> property (and remove the <code>disabled</code> one if set) to <code>true</code>.\n * The <code>ui5-wizard</code> will automatically scroll to the content of the newly selected step.\n * <br><br>\n *\n * The Fiori 3 guidelines recommends having a \"nextStep\" button in the content area.\n * You can place a button, or any other type of element to trigger step change, inside the <code>ui5-wizard-step</code>,\n * and show/hide it when certain fields are filled or user defined criteria is met.\n *\n * <h3>Usage</h3>\n * <h4>When to use:</h4>\n * When the user has to accomplish a long or unfamiliar task.\n *\n * <h4>When not to use:</h4>\n * When the task has less than 3 steps.\n *\n * <h3>Responsive Behavior</h3>\n * On small widths the step's titleText, subtitleText and separators in the navigation area shrink and from particular point the steps are grouped together and overlap.\n * Tapping on them will show a popover to select the step to navigate to. On mobile device, the grouped steps are presented within a dialog.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents-fiori/dist/Wizard.js\";</code> (includes <ui5-wizard-step>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.Wizard\n * @extends UI5Element\n * @tagname ui5-wizard\n * @since 1.0.0-rc.10\n * @appenddocs WizardStep\n * @public\n */\nclass Wizard extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Stores the scroll offsets of the steps,\n\t\t// e.g. the steps' starting point.\n\t\tthis.stepScrollOffsets = [];\n\n\t\t// Stores references to the grouped steps.\n\t\tthis._groupedTabs = [];\n\n\t\t// Keeps track of the currently selected step index.\n\t\tthis.selectedStepIndex = 0;\n\n\t\t// Keeps track of the previously selected step index.\n\t\tthis.previouslySelectedStepIndex = 0;\n\n\t\t// Indicates that selection will be changed\n\t\t// due to user click.\n\t\tthis.selectionRequestedByClick = false;\n\n\t\t// Stores the previous width\n\t\tthis._prevWidth = 0;\n\n\t\t// Stores the previous height\n\t\tthis._prevContentHeight = 0;\n\n\t\t// Indicates that selection will be changed\n\t\t// due to user scroll.\n\t\tthis.selectionRequestedByScroll = false;\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tnavigationMode: NavigationMode.Auto,\n\t\t\tgetItemsCallback: () => this.enabledStepsInHeaderDOM,\n\t\t});\n\n\t\tthis._onStepResize = this.onStepResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tpopover: {\n\t\t\t\t\"ui5-wizard-responsive-popover\": true,\n\t\t\t\t\"ui5-wizard-popover\": !isPhone(),\n\t\t\t\t\"ui5-wizard-dialog\": isPhone(),\n\t\t\t},\n\t\t};\n\t}\n\n\tstatic get styles() {\n\t\treturn WizardCss;\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn WizardPopoverCss;\n\t}\n\n\tstatic get template() {\n\t\treturn WizardTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tWizardTab,\n\t\t\tWizardStep,\n\t\t\tResponsivePopover,\n\t\t\tButton,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\tWizard.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\tstatic get PHONE_BREAKPOINT() {\n\t\treturn 599;\n\t}\n\n\tstatic get SCROLL_DEBOUNCE_RATE() {\n\t\treturn 25;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn WizardPopoverTemplate;\n\t}\n\n\tonExitDOM() {\n\t\tthis.detachStepsResizeObserver();\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.syncSelection();\n\t}\n\n\tonAfterRendering() {\n\t\tthis.storeStepScrollOffsets();\n\n\t\tif (this.previouslySelectedStepIndex !== this.selectedStepIndex) {\n\t\t\tthis.scrollToSelectedStep();\n\t\t}\n\n\t\tthis.attachStepsResizeObserver();\n\t\tthis.previouslySelectedStepIndex = this.selectedStepIndex;\n\t}\n\n\t/**\n\t * Normalizes the step selection as follows:\n\t * (1) If there is no selected step - the first step is going to be selected.\n\t * (2) If the selected steps are more than one - the last step is going to be selected.\n\t * (3) If the selected step is also disabled - log a warning.\n\t * @private\n\t */\n\tsyncSelection() {\n\t\tif (this.stepsCount === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If no selected steps -> select the first step.\n\t\tif (this.selectedStepsCount === 0) {\n\t\t\tthis.selectFirstStep();\n\t\t\tconsole.warn(\"Selecting the first step: no selected step is defined.\"); // eslint-disable-line\n\t\t}\n\n\t\t// If there are multiple selected steps -> keep the last selected one.\n\t\tif (this.selectedStepsCount > 1) {\n\t\t\tthis.selectLastSelectedStep();\n\t\t\tconsole.warn(`Selecting the last step defined as selected: multiple selected steps are defined.`); // eslint-disable-line\n\t\t}\n\n\t\t// If the selected step is defined as disabled - log warning.\n\t\tif (this.selectedStep && this.selectedStep.disabled) {\n\t\t\tconsole.warn(\"The selected step is disabled: you need to enable it in order to interact with the step.\"); // eslint-disable-line\n\t\t}\n\n\t\t// Place for improvement: If the selected step is not the first, enable all the prior steps\n\t\tthis.selectedStepIndex = this.getSelectedStepIndex();\n\t}\n\n\t/**\n\t * Selects the first step.\n\t * @private\n\t */\n\tselectFirstStep() {\n\t\tthis.deselectAll();\n\t\tthis.slottedSteps[0].selected = true;\n\t\tthis.slottedSteps[0].disabled = false;\n\t}\n\n\t/**\n\t * Selects the last step from multiple selected ones.\n\t * @private\n\t */\n\tselectLastSelectedStep() {\n\t\tconst lastSelectedStep = this.lastSelectedStep;\n\n\t\tif (lastSelectedStep) {\n\t\t\tthis.deselectAll();\n\t\t\tlastSelectedStep.selected = true;\n\t\t\tlastSelectedStep.disabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Deselects all steps.\n\t * @private\n\t */\n\tdeselectAll() {\n\t\tthis.slottedSteps.forEach(step => {\n\t\t\tstep.selected = false;\n\t\t});\n\t}\n\n\t/**\n\t * Stores the scroll offsets of the steps,\n\t * e.g. the steps' starting point.\n\t *\n\t * <b>Note:</b> the disabled ones has negative offsets.\n\t * @private\n\t */\n\tstoreStepScrollOffsets() {\n\t\tthis.stepScrollOffsets = this.slottedSteps.map(step => {\n\t\t\tconst contentItem = this.getStepWrapperByRefId(step._id);\n\t\t\treturn contentItem.offsetTop + contentItem.offsetHeight;\n\t\t});\n\t}\n\n\t/**\n\t * Handles user click on steps' tabs within the header.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonSelectionChangeRequested(event) {\n\t\tthis.selectionRequestedByClick = true;\n\t\tthis.changeSelectionByStepAction(event.target);\n\t}\n\n\t/**\n\t * Handles user scrolling with debouncing.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonScroll(event) {\n\t\tif (this.selectionRequestedByClick) {\n\t\t\tthis.selectionRequestedByClick = false;\n\t\t\treturn;\n\t\t}\n\n\t\tdebounce(this.changeSelectionByScroll.bind(this, event.target.scrollTop), Wizard.SCROLL_DEBOUNCE_RATE);\n\t}\n\n\t/**\n\t * Handles when a step in the header is focused in order to update the <code>ItemNavigation</code>.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonStepInHeaderFocused(event) {\n\t\tthis._itemNavigation.setCurrentItem(event.target);\n\t}\n\n\t/**\n\t * Handles resize in order to:\n\t * (1) sync steps' scroll offset and selection\n\t * (2) adapt navition step header\n\t * @private\n\t */\n\tonStepResize() {\n\t\tthis.width = this.getBoundingClientRect().width;\n\t\tthis.contentHeight = this.getContentHeight();\n\n\t\tif (this._prevWidth !== this.width || this.contentHeight !== this._prevContentHeight) {\n\t\t\tthis._closeRespPopover();\n\t\t}\n\n\t\tthis._prevWidth = this.width;\n\t\tthis._prevContentHeight = this.contentHeight;\n\t}\n\n\tattachStepsResizeObserver() {\n\t\tthis.stepsDOM.forEach(stepDOM => {\n\t\t\tResizeHandler.deregister(stepDOM, this._onStepResize);\n\t\t\tResizeHandler.register(stepDOM, this._onStepResize);\n\t\t});\n\t}\n\n\tdetachStepsResizeObserver() {\n\t\tthis.stepsDOM.forEach(stepDOM => {\n\t\t\tResizeHandler.deregister(stepDOM, this._onStepResize);\n\t\t});\n\t}\n\n\t/**\n\t * Updates the expanded attribute for each ui5-wizard-tab based on the ui5-wizard width\n\t * @private\n\t */\n\t_adjustHeaderOverflow() {\n\t\tlet counter = 0;\n\t\tlet isForward = true;\n\t\tconst iWidth = this.width;\n\t\tconst iCurrStep = this.getSelectedStepIndex();\n\t\tconst iStepsToShow = this.steps.length ? Math.floor(iWidth / MIN_STEP_WIDTH_WITH_TITLE) : Math.floor(iWidth / MIN_STEP_WIDTH_NO_TITLE);\n\n\t\tconst tabs = this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\");\n\n\t\tif (!tabs.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t[].forEach.call(tabs, (step, index) => {\n\t\t\tstep.setAttribute(EXPANDED_STEP, false);\n\t\t\tstep.setAttribute(BEFORE_EXPANDED_STEP, false);\n\t\t\tstep.setAttribute(AFTER_EXPANDED_STEP, false);\n\n\t\t\t// Add \"data-ui5-wizard-after-current-tab\" to all tabs after the current one\n\t\t\tif (index > iCurrStep) {\n\t\t\t\ttabs[index].setAttribute(AFTER_CURRENT_STEP, true);\n\t\t\t} else {\n\t\t\t\ttabs[index].removeAttribute(AFTER_CURRENT_STEP);\n\t\t\t}\n\t\t});\n\n\t\t// Add \"data-ui5-wizard-expanded-tab\" to the current step\n\t\tif (tabs[iCurrStep]) {\n\t\t\ttabs[iCurrStep].setAttribute(EXPANDED_STEP, true);\n\t\t}\n\n\t\t// Set the \"data-ui5-wizard-expanded-tab\" to the steps that are expanded\n\t\t// The algorithm is as follows:\n\t\t// 1. A step towards the end is expanded\n\t\t// \t1.2. If there are no available steps towards the end a step towards the beginning is expanded\n\t\t// 2. A step towards the beginning is expanded\n\t\t// \t2.2. If there are no available steps towards the beginning a step towards the end is expanded\n\t\tfor (let i = 1; i < iStepsToShow; i++) {\n\t\t\tif (isForward) {\n\t\t\t\tcounter += 1;\n\t\t\t}\n\n\t\t\tif (isForward && tabs[iCurrStep + counter]) {\n\t\t\t\ttabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, true);\n\t\t\t\tisForward = !isForward;\n\t\t\t} else if (!isForward && tabs[iCurrStep - counter]) {\n\t\t\t\ttabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, true);\n\t\t\t\tisForward = !isForward;\n\t\t\t} else if (tabs[iCurrStep + counter + 1]) {\n\t\t\t\tcounter += 1;\n\t\t\t\ttabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, true);\n\t\t\t\tisForward = true;\n\t\t\t} else if (tabs[iCurrStep - counter]) {\n\t\t\t\ttabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, true);\n\t\t\t\tcounter += 1;\n\t\t\t\tisForward = false;\n\t\t\t}\n\t\t}\n\n\t\t// mark the topmost steps of both groups (in the beginning and the end),\n\t\t// using the \"data-ui5-wizard-after-current-tab\" and \"data-ui5-wizard-expanded-tab-prev\" attributes\n\t\tfor (let i = 0; i < tabs.length; i++) {\n\t\t\tif (tabs[i].getAttribute(EXPANDED_STEP) === \"true\" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === \"false\") {\n\t\t\t\ttabs[i - 1].setAttribute(BEFORE_EXPANDED_STEP, true);\n\t\t\t}\n\n\t\t\tif (tabs[i].getAttribute(EXPANDED_STEP) === \"false\" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === \"true\") {\n\t\t\t\ttabs[i].setAttribute(AFTER_EXPANDED_STEP, true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t_isGroupAtStart(selectedStep) {\n\t\tconst iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);\n\n\t\treturn selectedStep.getAttribute(EXPANDED_STEP) === \"false\" && selectedStep.getAttribute(BEFORE_EXPANDED_STEP) === \"true\" && iStepNumber > 0;\n\t}\n\n\t_isGroupAtEnd(selectedStep) {\n\t\tconst iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);\n\n\t\treturn selectedStep.getAttribute(EXPANDED_STEP) === \"false\" && selectedStep.getAttribute(AFTER_EXPANDED_STEP) === \"true\" && (iStepNumber + 1 < this.steps.length);\n\t}\n\n\tasync _showPopover(oDomTarget, bAtStart) {\n\t\tconst tabs = Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n\t\tthis._groupedTabs = [];\n\n\t\tconst iFromStep = bAtStart ? 0 : this.stepsInHeaderDOM.indexOf(oDomTarget);\n\t\tconst iToStep = bAtStart ? this.stepsInHeaderDOM.indexOf(oDomTarget) : tabs.length - 1;\n\n\t\tfor (let i = iFromStep; i <= iToStep; i++) {\n\t\t\tthis._groupedTabs.push(tabs[i]);\n\t\t}\n\n\t\tconst responsivePopover = await this._respPopover();\n\t\tresponsivePopover.showAt(oDomTarget);\n\t}\n\n\tasync _onGroupedTabClick(event) {\n\t\tif (this._isGroupAtStart(event.target)) {\n\t\t\treturn this._showPopover(event.target, true);\n\t\t}\n\n\t\tif (this._isGroupAtEnd(event.target)) {\n\t\t\treturn this._showPopover(event.target, false);\n\t\t}\n\t}\n\n\t_onOverflowStepButtonClick(event) {\n\t\tconst tabs = Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n\t\tconst stepRefId = event.target.getAttribute(\"data-ui5-header-tab-ref-id\");\n\t\tconst stepToSelect = this.slottedSteps[stepRefId - 1];\n\t\tconst selectedStep = this.selectedStep;\n\t\tconst newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n\n\t\tthis.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, true);\n\t\tthis._closeRespPopover();\n\t\ttabs[newlySelectedIndex].focus();\n\t}\n\n\tasync _closeRespPopover() {\n\t\tconst responsivePopover = await this._respPopover();\n\t\tresponsivePopover && responsivePopover.close();\n\t}\n\n\tasync _respPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(`.ui5-wizard-responsive-popover`);\n\t}\n\n\t/**\n\t * Called upon <code>onScroll</code>.\n\t * Selects the closest step, based on the user scroll position.\n\t * @param {Integer} scrollPos the current scroll position\n\t * @private\n\t */\n\tchangeSelectionByScroll(scrollPos) {\n\t\tconst newlySelectedIndex = this.getClosestStepIndexByScrollPos(scrollPos);\n\n\t\t// Skip if already selected - stop.\n\t\tif (this.selectedStepIndex === newlySelectedIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the calculated index is in range,\n\t\t// change selection and fire \"step-change\".\n\t\tif (newlySelectedIndex >= 0 && newlySelectedIndex <= this.stepsCount - 1) {\n\t\t\tconst stepToSelect = this.slottedSteps[newlySelectedIndex];\n\n\t\t\tthis.switchSelectionFromOldToNewStep(this.selectedStep, stepToSelect, newlySelectedIndex, false);\n\t\t\tthis.selectionRequestedByScroll = true;\n\t\t}\n\t}\n\n\t/**\n\t * Called upon <code>onSelectionChangeRequested</code>.\n\t * Selects the external step (ui5-wizard-step),\n\t * based on the clicked or activated via keyboard step in the header (ui5-wizard-tab).\n\t * @param {HTMLElement} stepInHeader the step equivalent in the header\n\t * @private\n\t */\n\tasync changeSelectionByStepAction(stepInHeader) {\n\t\tconst stepRefId = stepInHeader.getAttribute(\"data-ui5-content-ref-id\");\n\t\tconst selectedStep = this.selectedStep;\n\t\tconst stepToSelect = this.getStepByRefId(stepRefId);\n\t\tconst bExpanded = stepInHeader.getAttribute(EXPANDED_STEP) === \"true\";\n\t\tconst newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n\t\tconst firstFocusableElement = await getFirstFocusableElement(stepToSelect.firstElementChild);\n\n\t\tif (firstFocusableElement) {\n\t\t\t// Focus the first focusable element within the step content corresponding to the currently focused tab\n\t\t\tfirstFocusableElement.focus();\n\t\t}\n\n\t\t// If the currently selected (active) step is clicked,\n\t\t// just scroll to its starting point and stop.\n\t\tif (selectedStep === stepToSelect) {\n\t\t\tthis.scrollToContentItem(this.selectedStepIndex);\n\t\t\treturn;\n\t\t}\n\n\t\tif (bExpanded || (!bExpanded && (newlySelectedIndex === 0 || newlySelectedIndex === this.steps.length - 1))) {\n\t\t\t// Change selection and fire \"step-change\".\n\t\t\tthis.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, true);\n\t\t}\n\t}\n\n\tgetContentHeight() {\n\t\tlet contentHeight = 0;\n\n\t\tthis.stepsDOM.forEach(step => {\n\t\t\tcontentHeight += step.getBoundingClientRect().height;\n\t\t});\n\n\t\treturn contentHeight;\n\t}\n\n\tgetStepAriaLabelText(step, ariaLabel) {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_STEP_ARIA_LABEL, ariaLabel);\n\t}\n\n\tget stepsDOM() {\n\t\treturn Array.from(this.shadowRoot.querySelectorAll(\".ui5-wiz-content-item\"));\n\t}\n\n\tget _stepsInHeader() {\n\t\treturn this.getStepsInfo();\n\t}\n\n\tget _steps() {\n\t\tconst lastEnabledStepIndex = this.getLastEnabledStepIndex();\n\t\tconst stepsInfo = this.getStepsInfo();\n\n\t\treturn this.steps.map((step, idx) => {\n\t\t\tstep.stretch = idx === lastEnabledStepIndex;\n\t\t\tstep.stepContentAriaLabel = `${this.navStepDefaultHeading} ${stepsInfo[idx].number} ${stepsInfo[idx].titleText}`;\n\t\t\treturn step;\n\t\t});\n\t}\n\n\tget stepsCount() {\n\t\treturn this.slottedSteps.length;\n\t}\n\n\tget selectedStep() {\n\t\tif (this.selectedStepsCount) {\n\t\t\treturn this.selectedSteps[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget lastSelectedStep() {\n\t\tif (this.selectedStepsCount) {\n\t\t\treturn this.selectedSteps[this.selectedStepsCount - 1];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget selectedSteps() {\n\t\treturn this.slottedSteps.filter(step => step.selected);\n\t}\n\n\tget enabledSteps() {\n\t\treturn this.slottedSteps.filter(step => !step.disabled);\n\t}\n\n\tget selectedStepsCount() {\n\t\treturn this.selectedSteps.length;\n\t}\n\n\tget slottedSteps() {\n\t\treturn this.getSlottedNodes(\"steps\");\n\t}\n\n\tget contentDOM() {\n\t\treturn this.shadowRoot.querySelector(`.ui5-wiz-content`);\n\t}\n\n\tget stepsInHeaderDOM() {\n\t\treturn Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n\t}\n\n\tget enabledStepsInHeaderDOM() {\n\t\treturn this.stepsInHeaderDOM;\n\t}\n\n\tget phoneMode() {\n\t\tif (isPhone()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.width <= Wizard.PHONE_BREAKPOINT;\n\t}\n\n\tget navAriaRoleDescription() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n\t}\n\n\tget navAriaLabelText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_LABEL);\n\t}\n\n\tget navAriaDescribedbyText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_LIST_ARIA_DESCRIBEDBY);\n\t}\n\n\tget listAriaLabelText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_LIST_ARIA_LABEL);\n\t}\n\n\tget actionSheetStepsText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL);\n\t}\n\n\tget navStepDefaultHeading() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_NAV_STEP_DEFAULT_HEADING);\n\t}\n\n\tget optionalStepText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_OPTIONAL_STEP_ARIA_LABEL);\n\t}\n\n\tget activeStepText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_STEP_ACTIVE);\n\t}\n\n\tget inactiveStepText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_STEP_INACTIVE);\n\t}\n\n\tget ariaLabelText() {\n\t\treturn Wizard.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n\t}\n\n\tget effectiveStepSwitchThreshold() {\n\t\treturn clamp(this.stepSwitchThreshold, STEP_SWITCH_THRESHOLDS.MIN, STEP_SWITCH_THRESHOLDS.MAX);\n\t}\n\n\t/**\n\t * Returns an array of data objects, based on the user defined steps\n\t * to later build the steps (tabs) within the header.\n\t * @returns {Array<Object>}\n\t * @private\n\t */\n\tgetStepsInfo() {\n\t\tconst lastEnabledStepIndex = this.getLastEnabledStepIndex();\n\t\tconst stepsCount = this.stepsCount;\n\t\tconst selectedStepIndex = this.getSelectedStepIndex();\n\t\tlet inintialZIndex = this.steps.length + 10;\n\t\tlet accInfo;\n\n\t\tthis._adjustHeaderOverflow();\n\n\t\treturn this.steps.map((step, idx) => {\n\t\t\tconst pos = idx + 1;\n\n\t\t\t// Hide separator if it's the last step and it's not a branching one\n\t\t\tconst hideSeparator = (idx === stepsCount - 1) && !step.branching;\n\n\t\t\tconst isOptional = step.subtitleText ? this.optionalStepText : \"\";\n\t\t\tconst stepStateText = step.disabled ? this.inactiveStepText : this.activeStepText;\n\t\t\tconst ariaLabel = (step.titleText ? `${pos} ${step.titleText} ${stepStateText} ${isOptional}` : `${this.navStepDefaultHeading} ${pos} ${stepStateText} ${isOptional}`).trim();\n\t\t\tconst isAfterCurrent = (idx > selectedStepIndex);\n\n\t\t\taccInfo = {\n\t\t\t\t\"ariaSetsize\": stepsCount,\n\t\t\t\t\"ariaPosinset\": pos,\n\t\t\t\t\"ariaLabel\": this.getStepAriaLabelText(step, ariaLabel),\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\ticon: step.icon,\n\t\t\t\ttitleText: step.titleText,\n\t\t\t\tsubtitleText: step.subtitleText,\n\t\t\t\tnumber: pos,\n\t\t\t\tselected: step.selected,\n\t\t\t\tdisabled: step.disabled,\n\t\t\t\thideSeparator,\n\t\t\t\tactiveSeparator: (idx < lastEnabledStepIndex) && !step.disabled,\n\t\t\t\tbranchingSeparator: step.branching,\n\t\t\t\tpos,\n\t\t\t\taccInfo,\n\t\t\t\trefStepId: step._id,\n\t\t\t\ttabIndex: this.selectedStepIndex === idx ? \"0\" : \"-1\",\n\t\t\t\tstyles: {\n\t\t\t\t\tzIndex: isAfterCurrent ? --inintialZIndex : 1,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Returns the index of the selected step.\n\t * @returns {Integer}\n\t * @private\n\t */\n\tgetSelectedStepIndex() {\n\t\tif (this.selectedStep) {\n\t\t\treturn this.slottedSteps.indexOf(this.selectedStep);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns the index of the last enabled step.\n\t * @returns {Integer}\n\t * @private\n\t */\n\tgetLastEnabledStepIndex() {\n\t\tlet lastEnabledStepIndex = 0;\n\n\t\tthis.slottedSteps.forEach((step, idx) => {\n\t\t\tif (!step.disabled) {\n\t\t\t\tlastEnabledStepIndex = idx;\n\t\t\t}\n\t\t});\n\n\t\treturn lastEnabledStepIndex;\n\t}\n\n\tgetStepByRefId(refId) {\n\t\treturn this.slottedSteps.find(step => step._id === refId);\n\t}\n\n\tgetStepWrapperByRefId(refId) {\n\t\treturn this.shadowRoot.querySelector(`[data-ui5-content-item-ref-id=${refId}]`);\n\t}\n\n\tgetStepWrapperByIdx(idx) {\n\t\treturn this.getStepWrapperByRefId(this.steps[idx]._id);\n\t}\n\n\t/**\n\t * Scrolls to the content of the selected step, used in <code>onAfterRendering</cod>.\n\t * @private\n\t */\n\tscrollToSelectedStep() {\n\t\tif (!this.selectionRequestedByScroll) {\n\t\t\tthis.scrollToContentItem(this.selectedStepIndex);\n\t\t}\n\t\tthis.selectionRequestedByScroll = false;\n\t}\n\n\t/**\n\t * Scrolls to the content item within the <code>ui5-wizard</code> shadowDOM\n\t * by given step index.\n\t *\n\t * @private\n\t * @param {Integer} stepIndex the index of a step\n\t */\n\tscrollToContentItem(stepIndex) {\n\t\tthis.contentDOM.scrollTop = this.getClosestScrollPosByStepIndex(stepIndex);\n\t}\n\n\t/**\n\t * Returns to closest scroll position for the given step index.\n\t *\n\t * @private\n\t * @param {Integer} stepIndex the index of a step\n\t */\n\tgetClosestScrollPosByStepIndex(stepIndex) {\n\t\tif (stepIndex === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// It's possible to have [enabled - 0, disabled - 1, enabled - 2, disabled - 3] step definition and similar.\n\t\t// Consider selection of the third step at index 2, the wizard should scroll where the previous step ends,\n\t\t// but in this case the 2nd step is disabled, so we have to fallback to the first possible step.\n\t\tfor (let closestStepIndex = stepIndex - 1; closestStepIndex >= 0; closestStepIndex--) {\n\t\t\tif (this.stepScrollOffsets[closestStepIndex] > 0) {\n\t\t\t\treturn this.stepScrollOffsets[closestStepIndex];\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns the closest step index by given scroll position.\n\t * @private\n\t * @param {Integer} scrollPos the scroll position\n\t */\n\tgetClosestStepIndexByScrollPos(scrollPos) {\n\t\tfor (let closestStepIndex = 0; closestStepIndex <= this.stepScrollOffsets.length - 1; closestStepIndex++) {\n\t\t\tconst stepScrollOffset = this.stepScrollOffsets[closestStepIndex];\n\t\t\tconst step = this.getStepWrapperByIdx(closestStepIndex);\n\t\t\tconst switchStepBoundary = step.offsetTop + (step.offsetHeight * this.effectiveStepSwitchThreshold);\n\n\t\t\tif (stepScrollOffset > 0 && scrollPos < stepScrollOffset) {\n\t\t\t\tif (scrollPos > switchStepBoundary) {\n\t\t\t\t\treturn closestStepIndex + 1;\n\t\t\t\t}\n\n\t\t\t\treturn closestStepIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn this.selectedStepIndex;\n\t}\n\n\t/**\n\t * Switches the selection from the old step to the newly selected step.\n\t *\n\t * @param {HTMLElement} selectedStep the old step\n\t * @param {HTMLElement} stepToSelect the step to be selected\n\t * @param {Integer} stepToSelectIndex the index of the newly selected step\n\t * @param {Boolean} changeWithClick the selection changed due to user click in the step navigation\n\t * @private\n\t */\n\tswitchSelectionFromOldToNewStep(selectedStep, stepToSelect, stepToSelectIndex, changeWithClick) {\n\t\tif (selectedStep && stepToSelect) {\n\t\t\t// keep the selection if next step is disabled\n\t\t\tif (!stepToSelect.disabled) {\n\t\t\t\tselectedStep.selected = false;\n\t\t\t\tstepToSelect.selected = true;\n\t\t\t}\n\n\t\t\tthis.fireEvent(\"step-change\", {\n\t\t\t\tstep: stepToSelect,\n\t\t\t\tpreviousStep: selectedStep,\n\t\t\t\tchangeWithClick,\n\t\t\t});\n\n\t\t\tthis.selectedStepIndex = stepToSelectIndex;\n\t\t}\n\t}\n\n\t/**\n\t * Sorter method for sorting an array in ascending order.\n\t * @private\n\t */\n\tsortAscending(a, b) {\n\t\tif (a < b) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a > b) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nWizard.define();\n\nexport default Wizard;\n"]},"metadata":{},"sourceType":"module"}