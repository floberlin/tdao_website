{"ast":null,"code":"/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport AbstractUPCEANReader from './AbstractUPCEANReader';\nimport UPCEANExtension5Support from './UPCEANExtension5Support';\nimport UPCEANExtension2Support from './UPCEANExtension2Support';\n\nvar UPCEANExtensionSupport = function () {\n  function UPCEANExtensionSupport() {}\n\n  UPCEANExtensionSupport.decodeRow = function (rowNumber, row, rowOffset) {\n    var extensionStartRange = AbstractUPCEANReader.findGuardPattern(row, rowOffset, false, this.EXTENSION_START_PATTERN, new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));\n\n    try {\n      // return null;\n      var fiveSupport = new UPCEANExtension5Support();\n      return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n    } catch (err) {\n      // return null;\n      var twoSupport = new UPCEANExtension2Support();\n      return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n    }\n  };\n\n  UPCEANExtensionSupport.EXTENSION_START_PATTERN = Int32Array.from([1, 1, 2]);\n  return UPCEANExtensionSupport;\n}();\n\nexport default UPCEANExtensionSupport;","map":{"version":3,"sources":["../../../../src/core/oned/UPCEANExtensionSupport.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAGH,OAAO,oBAAP,MAAiC,wBAAjC;AACA,OAAO,uBAAP,MAAoC,2BAApC;AACA,OAAO,uBAAP,MAAoC,2BAApC;;AAGA,IAAA,sBAAA,GAAA,YAAA;AAAA,WAAA,sBAAA,GAAA,CAeC;;AAZU,EAAA,sBAAA,CAAA,SAAA,GAAP,UAAiB,SAAjB,EAAoC,GAApC,EAAmD,SAAnD,EAAoE;AAChE,QAAI,mBAAmB,GAAG,oBAAoB,CAAC,gBAArB,CAAsC,GAAtC,EAA2C,SAA3C,EAAsD,KAAtD,EAA6D,KAAK,uBAAlE,EAA2F,IAAI,UAAJ,CAAe,KAAK,uBAAL,CAA6B,MAA5C,EAAoD,IAApD,CAAyD,CAAzD,CAA3F,CAA1B;;AACA,QAAI;AACA;AACA,UAAI,WAAW,GAAG,IAAI,uBAAJ,EAAlB;AACA,aAAO,WAAW,CAAC,SAAZ,CAAsB,SAAtB,EAAiC,GAAjC,EAAsC,mBAAtC,CAAP;AACH,KAJD,CAIE,OAAO,GAAP,EAAY;AACV;AACA,UAAI,UAAU,GAAG,IAAI,uBAAJ,EAAjB;AACA,aAAO,UAAU,CAAC,SAAX,CAAqB,SAArB,EAAgC,GAAhC,EAAqC,mBAArC,CAAP;AACH;AACJ,GAXM;;AAFQ,EAAA,sBAAA,CAAA,uBAAA,GAA0B,UAAU,CAAC,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB,CAA1B;AAcnB,SAAA,sBAAA;AAAC,CAfD,EAAA;;eAAqB,sB","sourceRoot":"","sourcesContent":["/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport AbstractUPCEANReader from './AbstractUPCEANReader';\nimport UPCEANExtension5Support from './UPCEANExtension5Support';\nimport UPCEANExtension2Support from './UPCEANExtension2Support';\nvar UPCEANExtensionSupport = /** @class */ (function () {\n    function UPCEANExtensionSupport() {\n    }\n    UPCEANExtensionSupport.decodeRow = function (rowNumber, row, rowOffset) {\n        var extensionStartRange = AbstractUPCEANReader.findGuardPattern(row, rowOffset, false, this.EXTENSION_START_PATTERN, new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));\n        try {\n            // return null;\n            var fiveSupport = new UPCEANExtension5Support();\n            return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n        }\n        catch (err) {\n            // return null;\n            var twoSupport = new UPCEANExtension2Support();\n            return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n        }\n    };\n    UPCEANExtensionSupport.EXTENSION_START_PATTERN = Int32Array.from([1, 1, 2]);\n    return UPCEANExtensionSupport;\n}());\nexport default UPCEANExtensionSupport;\n//# sourceMappingURL=UPCEANExtensionSupport.js.map"]},"metadata":{},"sourceType":"module"}