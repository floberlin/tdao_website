{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport EventProvider from \"./EventProvider.js\";\nimport RenderQueue from \"./RenderQueue.js\";\nimport { getAllRegisteredTags } from \"./CustomElementsRegistry.js\";\nimport { isRtlAware } from \"./locale/RTLAwareRegistry.js\";\nvar registeredElements = new Set();\nvar eventProvider = new EventProvider();\nvar invalidatedWebComponents = new RenderQueue(); // Queue for invalidated web components\n\nvar renderTaskPromise, renderTaskPromiseResolve;\nvar mutationObserverTimer;\nvar queuePromise;\n/**\n * Schedules a render task (if not already scheduled) to render the component\n *\n * @param webComponent\n * @returns {Promise}\n */\n\nvar renderDeferred = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(webComponent) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Enqueue the web component\n            invalidatedWebComponents.add(webComponent); // Schedule a rendering task\n\n            _context.next = 3;\n            return scheduleRenderTask();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function renderDeferred(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Renders a component synchronously and adds it to the registry of rendered components\n *\n * @param webComponent\n */\n\n\nvar renderImmediately = function renderImmediately(webComponent) {\n  eventProvider.fireEvent(\"beforeComponentRender\", webComponent);\n  registeredElements.add(webComponent);\n\n  webComponent._render();\n};\n/**\n * Cancels the rendering of a component, if awaiting to be rendered, and removes it from the registry of rendered components\n *\n * @param webComponent\n */\n\n\nvar cancelRender = function cancelRender(webComponent) {\n  invalidatedWebComponents.remove(webComponent);\n  registeredElements.delete(webComponent);\n};\n/**\n * Schedules a rendering task, if not scheduled already\n */\n\n\nvar scheduleRenderTask = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!queuePromise) {\n              queuePromise = new Promise(function (resolve) {\n                window.requestAnimationFrame(function () {\n                  // Render all components in the queue\n                  // console.log(`--------------------RENDER TASK START------------------------------`); // eslint-disable-line\n                  invalidatedWebComponents.process(renderImmediately); // console.log(`--------------------RENDER TASK END------------------------------`); // eslint-disable-line\n                  // Resolve the promise so that callers of renderDeferred can continue\n\n                  queuePromise = null;\n                  resolve(); // Wait for Mutation observer before the render task is considered finished\n\n                  if (!mutationObserverTimer) {\n                    mutationObserverTimer = setTimeout(function () {\n                      mutationObserverTimer = undefined;\n\n                      if (invalidatedWebComponents.isEmpty()) {\n                        _resolveTaskPromise();\n                      }\n                    }, 200);\n                  }\n                });\n              });\n            }\n\n            _context2.next = 3;\n            return queuePromise;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function scheduleRenderTask() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * return a promise that will be resolved once all invalidated web components are rendered\n */\n\n\nvar whenDOMUpdated = function whenDOMUpdated() {\n  if (renderTaskPromise) {\n    return renderTaskPromise;\n  }\n\n  renderTaskPromise = new Promise(function (resolve) {\n    renderTaskPromiseResolve = resolve;\n    window.requestAnimationFrame(function () {\n      if (invalidatedWebComponents.isEmpty()) {\n        renderTaskPromise = undefined;\n        resolve();\n      }\n    });\n  });\n  return renderTaskPromise;\n};\n\nvar whenAllCustomElementsAreDefined = function whenAllCustomElementsAreDefined() {\n  var definedPromises = getAllRegisteredTags().map(function (tag) {\n    return customElements.whenDefined(tag);\n  });\n  return Promise.all(definedPromises);\n};\n\nvar renderFinished = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return whenAllCustomElementsAreDefined();\n\n          case 2:\n            _context3.next = 4;\n            return whenDOMUpdated();\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function renderFinished() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _resolveTaskPromise = function _resolveTaskPromise() {\n  if (!invalidatedWebComponents.isEmpty()) {\n    // More updates are pending. Resolve will be called again\n    return;\n  }\n\n  if (renderTaskPromiseResolve) {\n    renderTaskPromiseResolve();\n    renderTaskPromiseResolve = undefined;\n    renderTaskPromise = undefined;\n  }\n};\n/**\n * Re-renders all UI5 Elements on the page, with the option to specify filters to rerender only some components.\n *\n * Usage:\n * reRenderAllUI5Elements() -> re-renders all components\n * reRenderAllUI5Elements({tag: \"ui5-button\"}) -> re-renders only instances of ui5-button\n * reRenderAllUI5Elements({rtlAware: true}) -> re-renders only rtlAware components\n * reRenderAllUI5Elements({languageAware: true}) -> re-renders only languageAware components\n * reRenderAllUI5Elements({themeAware: true}) -> re-renders only themeAware components\n * reRenderAllUI5Elements({rtlAware: true, languageAware: true}) -> re-renders components that are rtlAware or languageAware\n * etc...\n *\n * @public\n * @param {Object|undefined} filters - Object with keys that can be \"rtlAware\" or \"languageAware\"\n * @returns {Promise<void>}\n */\n\n\nvar reRenderAllUI5Elements = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(filters) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            registeredElements.forEach(function (element) {\n              var tag = element.constructor.getMetadata().getTag();\n              var rtlAware = isRtlAware(element.constructor);\n              var languageAware = element.constructor.getMetadata().isLanguageAware();\n              var themeAware = element.constructor.getMetadata().isThemeAware();\n\n              if (!filters || filters.tag === tag || filters.rtlAware && rtlAware || filters.languageAware && languageAware || filters.themeAware && themeAware) {\n                renderDeferred(element);\n              }\n            });\n            _context4.next = 3;\n            return renderFinished();\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function reRenderAllUI5Elements(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar attachBeforeComponentRender = function attachBeforeComponentRender(listener) {\n  eventProvider.attachEvent(\"beforeComponentRender\", listener);\n};\n\nvar detachBeforeComponentRender = function detachBeforeComponentRender(listener) {\n  eventProvider.detachEvent(\"beforeComponentRender\", listener);\n};\n\nexport { renderDeferred, renderImmediately, cancelRender, renderFinished, reRenderAllUI5Elements, attachBeforeComponentRender, detachBeforeComponentRender };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/Render.js"],"names":["EventProvider","RenderQueue","getAllRegisteredTags","isRtlAware","registeredElements","Set","eventProvider","invalidatedWebComponents","renderTaskPromise","renderTaskPromiseResolve","mutationObserverTimer","queuePromise","renderDeferred","webComponent","add","scheduleRenderTask","renderImmediately","fireEvent","_render","cancelRender","remove","delete","Promise","resolve","window","requestAnimationFrame","process","setTimeout","undefined","isEmpty","_resolveTaskPromise","whenDOMUpdated","whenAllCustomElementsAreDefined","definedPromises","map","tag","customElements","whenDefined","all","renderFinished","reRenderAllUI5Elements","filters","forEach","element","constructor","getMetadata","getTag","rtlAware","languageAware","isLanguageAware","themeAware","isThemeAware","attachBeforeComponentRender","listener","attachEvent","detachBeforeComponentRender","detachEvent"],"mappings":"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","sourcesContent":["import EventProvider from \"./EventProvider.js\";\nimport RenderQueue from \"./RenderQueue.js\";\nimport { getAllRegisteredTags } from \"./CustomElementsRegistry.js\";\nimport { isRtlAware } from \"./locale/RTLAwareRegistry.js\";\n\nconst registeredElements = new Set();\nconst eventProvider = new EventProvider();\n\nconst invalidatedWebComponents = new RenderQueue(); // Queue for invalidated web components\n\nlet renderTaskPromise,\n\trenderTaskPromiseResolve;\n\nlet mutationObserverTimer;\n\nlet queuePromise;\n\n/**\n * Schedules a render task (if not already scheduled) to render the component\n *\n * @param webComponent\n * @returns {Promise}\n */\nconst renderDeferred = async webComponent => {\n\t// Enqueue the web component\n\tinvalidatedWebComponents.add(webComponent);\n\n\t// Schedule a rendering task\n\tawait scheduleRenderTask();\n};\n\n/**\n * Renders a component synchronously and adds it to the registry of rendered components\n *\n * @param webComponent\n */\nconst renderImmediately = webComponent => {\n\teventProvider.fireEvent(\"beforeComponentRender\", webComponent);\n\tregisteredElements.add(webComponent);\n\twebComponent._render();\n};\n\n/**\n * Cancels the rendering of a component, if awaiting to be rendered, and removes it from the registry of rendered components\n *\n * @param webComponent\n */\nconst cancelRender = webComponent => {\n\tinvalidatedWebComponents.remove(webComponent);\n\tregisteredElements.delete(webComponent);\n};\n\n/**\n * Schedules a rendering task, if not scheduled already\n */\nconst scheduleRenderTask = async () => {\n\tif (!queuePromise) {\n\t\tqueuePromise = new Promise(resolve => {\n\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\t// Render all components in the queue\n\n\t\t\t\t// console.log(`--------------------RENDER TASK START------------------------------`); // eslint-disable-line\n\t\t\t\tinvalidatedWebComponents.process(renderImmediately);\n\t\t\t\t// console.log(`--------------------RENDER TASK END------------------------------`); // eslint-disable-line\n\n\t\t\t\t// Resolve the promise so that callers of renderDeferred can continue\n\t\t\t\tqueuePromise = null;\n\t\t\t\tresolve();\n\n\t\t\t\t// Wait for Mutation observer before the render task is considered finished\n\t\t\t\tif (!mutationObserverTimer) {\n\t\t\t\t\tmutationObserverTimer = setTimeout(() => {\n\t\t\t\t\t\tmutationObserverTimer = undefined;\n\t\t\t\t\t\tif (invalidatedWebComponents.isEmpty()) {\n\t\t\t\t\t\t\t_resolveTaskPromise();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 200);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tawait queuePromise;\n};\n\n/**\n * return a promise that will be resolved once all invalidated web components are rendered\n */\nconst whenDOMUpdated = () => {\n\tif (renderTaskPromise) {\n\t\treturn renderTaskPromise;\n\t}\n\n\trenderTaskPromise = new Promise(resolve => {\n\t\trenderTaskPromiseResolve = resolve;\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tif (invalidatedWebComponents.isEmpty()) {\n\t\t\t\trenderTaskPromise = undefined;\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n\n\treturn renderTaskPromise;\n};\n\nconst whenAllCustomElementsAreDefined = () => {\n\tconst definedPromises = getAllRegisteredTags().map(tag => customElements.whenDefined(tag));\n\treturn Promise.all(definedPromises);\n};\n\nconst renderFinished = async () => {\n\tawait whenAllCustomElementsAreDefined();\n\tawait whenDOMUpdated();\n};\n\nconst _resolveTaskPromise = () => {\n\tif (!invalidatedWebComponents.isEmpty()) {\n\t\t// More updates are pending. Resolve will be called again\n\t\treturn;\n\t}\n\n\tif (renderTaskPromiseResolve) {\n\t\trenderTaskPromiseResolve();\n\t\trenderTaskPromiseResolve = undefined;\n\t\trenderTaskPromise = undefined;\n\t}\n};\n\n/**\n * Re-renders all UI5 Elements on the page, with the option to specify filters to rerender only some components.\n *\n * Usage:\n * reRenderAllUI5Elements() -> re-renders all components\n * reRenderAllUI5Elements({tag: \"ui5-button\"}) -> re-renders only instances of ui5-button\n * reRenderAllUI5Elements({rtlAware: true}) -> re-renders only rtlAware components\n * reRenderAllUI5Elements({languageAware: true}) -> re-renders only languageAware components\n * reRenderAllUI5Elements({themeAware: true}) -> re-renders only themeAware components\n * reRenderAllUI5Elements({rtlAware: true, languageAware: true}) -> re-renders components that are rtlAware or languageAware\n * etc...\n *\n * @public\n * @param {Object|undefined} filters - Object with keys that can be \"rtlAware\" or \"languageAware\"\n * @returns {Promise<void>}\n */\nconst reRenderAllUI5Elements = async filters => {\n\tregisteredElements.forEach(element => {\n\t\tconst tag = element.constructor.getMetadata().getTag();\n\t\tconst rtlAware = isRtlAware(element.constructor);\n\t\tconst languageAware = element.constructor.getMetadata().isLanguageAware();\n\t\tconst themeAware = element.constructor.getMetadata().isThemeAware();\n\t\tif (!filters || (filters.tag === tag) || (filters.rtlAware && rtlAware) || (filters.languageAware && languageAware) || (filters.themeAware && themeAware)) {\n\t\t\trenderDeferred(element);\n\t\t}\n\t});\n\tawait renderFinished();\n};\n\nconst attachBeforeComponentRender = listener => {\n\teventProvider.attachEvent(\"beforeComponentRender\", listener);\n};\n\nconst detachBeforeComponentRender = listener => {\n\teventProvider.detachEvent(\"beforeComponentRender\", listener);\n};\n\nexport {\n\trenderDeferred,\n\trenderImmediately,\n\tcancelRender,\n\trenderFinished,\n\treRenderAllUI5Elements,\n\tattachBeforeComponentRender,\n\tdetachBeforeComponentRender,\n};\n"]},"metadata":{},"sourceType":"module"}