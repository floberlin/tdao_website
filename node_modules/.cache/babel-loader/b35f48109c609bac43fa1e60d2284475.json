{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport WrappingType from \"./types/WrappingType.js\"; // Template\n\nimport LabelTemplate from \"./generated/templates/LabelTemplate.lit.js\"; // Styles\n\nimport labelCss from \"./generated/themes/Label.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-label\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.Label.prototype */\n  {\n    /**\n     * Defines whether an asterisk character is added to the component text.\n     * <br><br>\n     * <b>Note:</b> Usually indicates that user input is required.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    required: {\n      type: Boolean\n    },\n\n    /**\n     * Defines how the text of a component will be displayed when there is not enough space.\n     * Available options are:\n     * <ul>\n     * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n     * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n     * </ul>\n     *\n     * @type {WrappingType}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    wrappingType: {\n      type: WrappingType,\n      defaultValue: WrappingType.None\n    },\n\n    /**\n     * Defines whether colon is added to the component text.\n     * <br><br>\n     * <b>Note:</b> Usually used in forms.\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    showColon: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the labeled input by providing its ID.\n     * <br><br>\n     * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    \"for\": {\n      type: String\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.Label.prototype */\n  {\n    /**\n     * Defines the text of the component.\n     * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-label</code> is a component used to represent a label,\n * providing valuable information to the user.\n * Usually it is placed next to a value holder, such as a text field.\n * It informs the user about what data is displayed or expected in the value holder.\n * <br><br>\n * The <code>ui5-label</code> appearance can be influenced by properties,\n * such as <code>required</code> and <code>wrappingType</code>.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Label\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Label\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-label\n * @public\n */\n\nclass Label extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return LabelTemplate;\n  }\n\n  static get styles() {\n    return labelCss;\n  }\n\n  get classes() {\n    return {\n      textWrapper: {\n        \"ui5-label-text-wrapper\": true,\n        \"ui5-label-text-wrapper-safari\": isSafari()\n      }\n    };\n  }\n\n  _onclick() {\n    const elementToFocus = document.getElementById(this.for);\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n  }\n\n}\n\nLabel.define();\nexport default Label;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/Label.js"],"names":["UI5Element","litRender","isSafari","WrappingType","LabelTemplate","labelCss","metadata","tag","properties","required","type","Boolean","wrappingType","defaultValue","None","showColon","String","slots","Node","Label","render","template","styles","classes","textWrapper","_onclick","elementToFocus","document","getElementById","for","focus","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,4CAA1B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,WADW;AAEhBC,EAAAA,UAAU;AAAE;AAAyD;AAEpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEC;AADG,KAX0D;;AAepE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGC,IAAAA,YAAY,EAAE;AACdF,MAAAA,IAAI,EAAEP,YADQ;AAEdU,MAAAA,YAAY,EAAEV,YAAY,CAACW;AAFb,KA3BqD;;AAgCpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEEC,IAAAA,SAAS,EAAE;AACVL,MAAAA,IAAI,EAAEC;AADI,KAzCyD;;AA6CpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,WAAO;AACND,MAAAA,IAAI,EAAEM;AADA;AAtD6D,GAFrD;AA4DhBC,EAAAA,KAAK;AAAE;AAAwD;AAC9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVP,MAAAA,IAAI,EAAEQ;AADI;AATmD;AA5D/C,CAAjB;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAN,SAAoBnB,UAApB,CAA+B;AACX,aAARM,QAAQ,GAAG;AACrB,WAAOA,QAAP;AACA;;AAEgB,aAANc,MAAM,GAAG;AACnB,WAAOnB,SAAP;AACA;;AAEkB,aAARoB,QAAQ,GAAG;AACrB,WAAOjB,aAAP;AACA;;AAEgB,aAANkB,MAAM,GAAG;AACnB,WAAOjB,QAAP;AACA;;AAEU,MAAPkB,OAAO,GAAG;AACb,WAAO;AACNC,MAAAA,WAAW,EAAE;AACZ,kCAA0B,IADd;AAEZ,yCAAiCtB,QAAQ;AAF7B;AADP,KAAP;AAMA;;AAEDuB,EAAAA,QAAQ,GAAG;AACV,UAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKC,GAA7B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AACnBA,MAAAA,cAAc,CAACI,KAAf;AACA;AACD;;AA/B6B;;AAkC/BX,KAAK,CAACY,MAAN;AAEA,eAAeZ,KAAf","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport WrappingType from \"./types/WrappingType.js\";\n\n// Template\nimport LabelTemplate from \"./generated/templates/LabelTemplate.lit.js\";\n\n// Styles\nimport labelCss from \"./generated/themes/Label.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-label\",\n\tproperties: /** @lends sap.ui.webcomponents.main.Label.prototype */  {\n\n\t\t/**\n\t\t * Defines whether an asterisk character is added to the component text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Usually indicates that user input is required.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines how the text of a component will be displayed when there is not enough space.\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n\t\t * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {WrappingType}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\t wrappingType: {\n\t\t\ttype: WrappingType,\n\t\t\tdefaultValue: WrappingType.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether colon is added to the component text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Usually used in forms.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\n\t\tshowColon: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the labeled input by providing its ID.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\t\"for\": {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.Label.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-label</code> is a component used to represent a label,\n * providing valuable information to the user.\n * Usually it is placed next to a value holder, such as a text field.\n * It informs the user about what data is displayed or expected in the value holder.\n * <br><br>\n * The <code>ui5-label</code> appearance can be influenced by properties,\n * such as <code>required</code> and <code>wrappingType</code>.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Label\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Label\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-label\n * @public\n */\nclass Label extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn LabelTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn labelCss;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\ttextWrapper: {\n\t\t\t\t\"ui5-label-text-wrapper\": true,\n\t\t\t\t\"ui5-label-text-wrapper-safari\": isSafari(),\n\t\t\t},\n\t\t};\n\t}\n\n\t_onclick() {\n\t\tconst elementToFocus = document.getElementById(this.for);\n\t\tif (elementToFocus) {\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n}\n\nLabel.define();\n\nexport default Label;\n"]},"metadata":{},"sourceType":"module"}