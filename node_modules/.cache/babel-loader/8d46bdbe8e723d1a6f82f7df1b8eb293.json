{"ast":null,"code":"import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/Token';\n/**\n * Tokens are small items of information (similar to tags) that mainly serve to visualize previously selected items.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Token\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar Token = withWebComponent('ui5-token', ['text'], ['readonly', 'selected'], ['closeIcon'], ['select']);\nToken.displayName = 'Token';\nToken.defaultProps = {};\nexport { Token };","map":{"version":3,"sources":["../src/webComponents/Token/index.tsx"],"names":["Token","withWebComponent"],"mappings":";;AAmCA;AACA;AACA;AACA;AACA;;IACMA,KAAK,GAAGC,gBAAgB,CAAA,WAAA,EAE5B,CAF4B,MAE5B,CAF4B,EAG5B,CAAA,UAAA,EAH4B,UAG5B,CAH4B,EAI5B,CAJ4B,WAI5B,CAJ4B,EAK5B,CAL4B,QAK5B,CAL4B,C;AAQ9BD,KAAK,CAALA,WAAAA,GAAAA,OAAAA;AAEAA,KAAK,CAALA,YAAAA,GAAAA,EAAAA","sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Token';\n\nexport interface TokenPropTypes extends Omit<CommonProps, 'onSelect'> {\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is selected or not.\n   */\n  selected?: boolean;\n  /**\n   * Defines the text of the token.\n   */\n  text?: string;\n  /**\n   * Defines the close icon for the token. If nothing is provided to this slot, the default close icon will be used. Accepts `Icon`\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  closeIcon?: ReactNode;\n  /**\n   * Fired when the the component is selected by user interaction with mouse or by clicking space.\n   */\n  onSelect?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * Tokens are small items of information (similar to tags) that mainly serve to visualize previously selected items.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Token\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Token = withWebComponent<TokenPropTypes>(\n  'ui5-token',\n  ['text'],\n  ['readonly', 'selected'],\n  ['closeIcon'],\n  ['select']\n);\n\nToken.displayName = 'Token';\n\nToken.defaultProps = {};\n\nexport { Token };\n"]},"metadata":{},"sourceType":"module"}