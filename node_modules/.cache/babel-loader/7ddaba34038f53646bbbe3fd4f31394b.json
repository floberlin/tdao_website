{"ast":null,"code":"import { PopoverHorizontalAlign } from '@ui5/webcomponents-react/dist/PopoverHorizontalAlign';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/dist/PopoverVerticalAlign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/ResponsivePopover';\n/**\n * The `ResponsivePopover` acts as a Popover on desktop and tablet, while on phone it acts as a Dialog. The component improves tremendously the user experience on mobile.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ResponsivePopover\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar ResponsivePopover = withWebComponent('ui5-responsive-popover', ['headerText', 'horizontalAlign', 'placementType', 'verticalAlign', 'accessibleName', 'initialFocus'], ['allowTargetOverlap', 'hideArrow', 'hideBackdrop', 'modal', 'preventFocusRestore'], ['footer', 'header'], ['after-close', 'after-open', 'before-close', 'before-open']);\nResponsivePopover.displayName = 'ResponsivePopover';\nResponsivePopover.defaultProps = {\n  allowTargetOverlap: false,\n  hideArrow: false,\n  hideBackdrop: false,\n  horizontalAlign: PopoverHorizontalAlign.Center,\n  modal: false,\n  placementType: PopoverPlacementType.Right,\n  verticalAlign: PopoverVerticalAlign.Center,\n  preventFocusRestore: false\n};\nexport { ResponsivePopover };","map":{"version":3,"sources":["../src/webComponents/ResponsivePopover/index.tsx"],"names":["ResponsivePopover","withWebComponent","allowTargetOverlap","hideArrow","hideBackdrop","horizontalAlign","PopoverHorizontalAlign","modal","placementType","PopoverPlacementType","verticalAlign","PopoverVerticalAlign","preventFocusRestore"],"mappings":";;;;;AAmHA;AACA;AACA;AACA;AACA;;IACMA,iBAAiB,GAAGC,gBAAgB,CAAA,wBAAA,EAExC,CAAA,YAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,eAAA,EAAA,gBAAA,EAFwC,cAExC,CAFwC,EAGxC,CAAA,oBAAA,EAAA,WAAA,EAAA,cAAA,EAAA,OAAA,EAHwC,qBAGxC,CAHwC,EAIxC,CAAA,QAAA,EAJwC,QAIxC,CAJwC,EAKxC,CAAA,aAAA,EAAA,YAAA,EAAA,cAAA,EALwC,aAKxC,CALwC,C;AAQ1CD,iBAAiB,CAAjBA,WAAAA,GAAAA,mBAAAA;AAEAA,iBAAiB,CAAjBA,YAAAA,GAAiC;AAC/BE,EAAAA,kBAAkB,EADa,KAAA;AAE/BC,EAAAA,SAAS,EAFsB,KAAA;AAG/BC,EAAAA,YAAY,EAHmB,KAAA;AAI/BC,EAAAA,eAAe,EAAEC,sBAAsB,CAJR,MAAA;AAK/BC,EAAAA,KAAK,EAL0B,KAAA;AAM/BC,EAAAA,aAAa,EAAEC,oBAAoB,CANJ,KAAA;AAO/BC,EAAAA,aAAa,EAAEC,oBAAoB,CAPJ,MAAA;AAQ/BC,EAAAA,mBAAmB,EAAE;AARU,CAAjCZ","sourcesContent":["import { PopoverHorizontalAlign } from '@ui5/webcomponents-react/dist/PopoverHorizontalAlign';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/dist/PopoverVerticalAlign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5ResponsivePopoverDomRef } from '@ui5/webcomponents-react/interfaces/Ui5ResponsivePopoverDomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/ResponsivePopover';\n\nexport interface ResponsivePopoverPropTypes extends CommonProps {\n  /**\n   * Determines if there is no enough space, the component can be placed over the target.\n   */\n  allowTargetOverlap?: boolean;\n  /**\n   * Defines the header text.\n   *\n   * **Note:** If `header` slot is provided, the `headerText` is ignored.\n   */\n  headerText?: string;\n  /**\n   * Determines whether the component arrow is hidden.\n   */\n  hideArrow?: boolean;\n  /**\n   * Defines whether the block layer will be shown if modal property is set to true.\n   */\n  hideBackdrop?: boolean;\n  /**\n   * Determines the horizontal alignment of the component.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Left`\n   * *   `Right`\n   * *   `Stretch`\n   */\n  horizontalAlign?: PopoverHorizontalAlign;\n  /**\n   * Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n   */\n  modal?: boolean;\n  /**\n   * Determines on which side the component is placed at.\n   *\n   * Available options are:\n   *\n   * *   `Left`\n   * *   `Right`\n   * *   `Top`\n   * *   `Bottom`\n   */\n  placementType?: PopoverPlacementType;\n  /**\n   * Determines the vertical alignment of the component.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Top`\n   * *   `Bottom`\n   * *   `Stretch`\n   */\n  verticalAlign?: PopoverVerticalAlign;\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the ID of the HTML Element, which will get the initial focus.\n   */\n  initialFocus?: string;\n  /**\n   * Defines if the focus should be returned to the previously focused element, when the popup closes.\n   */\n  preventFocusRestore?: boolean;\n  /**\n   * Defines the footer HTML Element.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  footer?: ReactNode | ReactNode[];\n  /**\n   * Defines the header HTML Element.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Defines the content of the Popup.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired after the component is closed. **This event does not bubble.**\n   */\n  onAfterClose?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired after the component is opened. **This event does not bubble.**\n   */\n  onAfterOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. **This event does not bubble.**\n   */\n  onBeforeClose?: (event: Ui5CustomEvent<HTMLElement, { escPressed: boolean }>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. **This event does not bubble.**\n   */\n  onBeforeOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * The `ResponsivePopover` acts as a Popover on desktop and tablet, while on phone it acts as a Dialog. The component improves tremendously the user experience on mobile.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ResponsivePopover\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst ResponsivePopover = withWebComponent<ResponsivePopoverPropTypes, Ui5ResponsivePopoverDomRef>(\n  'ui5-responsive-popover',\n  ['headerText', 'horizontalAlign', 'placementType', 'verticalAlign', 'accessibleName', 'initialFocus'],\n  ['allowTargetOverlap', 'hideArrow', 'hideBackdrop', 'modal', 'preventFocusRestore'],\n  ['footer', 'header'],\n  ['after-close', 'after-open', 'before-close', 'before-open']\n);\n\nResponsivePopover.displayName = 'ResponsivePopover';\n\nResponsivePopover.defaultProps = {\n  allowTargetOverlap: false,\n  hideArrow: false,\n  hideBackdrop: false,\n  horizontalAlign: PopoverHorizontalAlign.Center,\n  modal: false,\n  placementType: PopoverPlacementType.Right,\n  verticalAlign: PopoverVerticalAlign.Center,\n  preventFocusRestore: false\n};\n\nexport { ResponsivePopover };\n"]},"metadata":{},"sourceType":"module"}