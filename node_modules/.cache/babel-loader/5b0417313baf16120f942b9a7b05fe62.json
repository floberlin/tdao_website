{"ast":null,"code":"import UniversalDate from \"../sap/ui/core/date/UniversalDate.js\";\n\nconst calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {\n  let iWeekNum = 0;\n  let iWeekDay = 0;\n  const iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek(); // search Locale for containing \"en-US\", since sometimes\n  // when any user settings have been defined, subtag \"sapufmt\" is added to the locale name\n  // this is described inside sap.ui.core.Configuration file\n\n  if (oLocale && oLocale.getLanguage() === \"en\" && oLocale.getRegion() === \"US\") {\n    /*\n    \t* in US the week starts with Sunday\n    \t* The first week of the year starts with January 1st. But Dec. 31 is still in the last year\n    \t* So the week beginning in December and ending in January has 2 week numbers\n    \t*/\n    const oJanFirst = new UniversalDate(oDate.getTime());\n    oJanFirst.setUTCFullYear(iYear, 0, 1);\n    iWeekDay = oJanFirst.getUTCDay(); // get the date for the same weekday like jan 1.\n\n    const oCheckDate = new UniversalDate(oDate.getTime());\n    oCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);\n    iWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 86400000 / 7) + 1;\n  } else {\n    // normally the first week of the year is the one where the first Thursday of the year is\n    // find Thursday of this week\n    // if the checked day is before the 1. day of the week use a day of the previous week to check\n    const oThursday = new UniversalDate(oDate.getTime());\n    oThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);\n    iWeekDay = oThursday.getUTCDay();\n    oThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);\n    const oFirstDayOfYear = new UniversalDate(oThursday.getTime());\n    oFirstDayOfYear.setUTCMonth(0, 1);\n    iWeekDay = oFirstDayOfYear.getUTCDay();\n    let iAddDays = 0;\n\n    if (iWeekDay > 4) {\n      iAddDays = 7; // first day of year is after Thursday, so first Thursday is in the next week\n    }\n\n    const oFirstThursday = new UniversalDate(oFirstDayOfYear.getTime());\n    oFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);\n    iWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 86400000 / 7) + 1;\n  }\n\n  return iWeekNum;\n};\n\nexport default calculateWeekNumber;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-localization/dist/dates/calculateWeekNumber.js"],"names":["UniversalDate","calculateWeekNumber","confFirstDayOfWeek","oDate","iYear","oLocale","oLocaleData","iWeekNum","iWeekDay","iFirstDayOfWeek","Number","isInteger","getFirstDayOfWeek","getLanguage","getRegion","oJanFirst","getTime","setUTCFullYear","getUTCDay","oCheckDate","setUTCDate","getUTCDate","Math","round","oThursday","oFirstDayOfYear","setUTCMonth","iAddDays","oFirstThursday"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sCAA1B;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,kBAAD,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,WAA5C,KAA4D;AACvF,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,QAAMC,eAAe,GAAGC,MAAM,CAACC,SAAP,CAAiBT,kBAAjB,IAAuCA,kBAAvC,GAA4DI,WAAW,CAACM,iBAAZ,EAApF,CAHuF,CAKvF;AACA;AACA;;AACA,MAAIP,OAAO,IAAKA,OAAO,CAACQ,WAAR,OAA0B,IAA1B,IAAkCR,OAAO,CAACS,SAAR,OAAwB,IAA1E,EAAiF;AAChF;AACF;AACA;AACA;AACA;AACE,UAAMC,SAAS,GAAG,IAAIf,aAAJ,CAAkBG,KAAK,CAACa,OAAN,EAAlB,CAAlB;AACAD,IAAAA,SAAS,CAACE,cAAV,CAAyBb,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;AACAI,IAAAA,QAAQ,GAAGO,SAAS,CAACG,SAAV,EAAX,CARgF,CAUhF;;AACA,UAAMC,UAAU,GAAG,IAAInB,aAAJ,CAAkBG,KAAK,CAACa,OAAN,EAAlB,CAAnB;AACAG,IAAAA,UAAU,CAACC,UAAX,CAAsBD,UAAU,CAACE,UAAX,KAA0BF,UAAU,CAACD,SAAX,EAA1B,GAAmDV,QAAzE;AAEAD,IAAAA,QAAQ,GAAGe,IAAI,CAACC,KAAL,CAAW,CAACJ,UAAU,CAACH,OAAX,KAAuBD,SAAS,CAACC,OAAV,EAAxB,IAA+C,QAA/C,GAA0D,CAArE,IAA0E,CAArF;AACA,GAfD,MAeO;AACN;AACA;AACA;AACA,UAAMQ,SAAS,GAAG,IAAIxB,aAAJ,CAAkBG,KAAK,CAACa,OAAN,EAAlB,CAAlB;AACAQ,IAAAA,SAAS,CAACJ,UAAV,CAAqBI,SAAS,CAACH,UAAV,KAAyBZ,eAA9C;AACAD,IAAAA,QAAQ,GAAGgB,SAAS,CAACN,SAAV,EAAX;AACAM,IAAAA,SAAS,CAACJ,UAAV,CAAqBI,SAAS,CAACH,UAAV,KAAyBb,QAAzB,GAAoC,CAAzD;AAEA,UAAMiB,eAAe,GAAG,IAAIzB,aAAJ,CAAkBwB,SAAS,CAACR,OAAV,EAAlB,CAAxB;AACAS,IAAAA,eAAe,CAACC,WAAhB,CAA4B,CAA5B,EAA+B,CAA/B;AACAlB,IAAAA,QAAQ,GAAGiB,eAAe,CAACP,SAAhB,EAAX;AACA,QAAIS,QAAQ,GAAG,CAAf;;AACA,QAAInB,QAAQ,GAAG,CAAf,EAAkB;AACjBmB,MAAAA,QAAQ,GAAG,CAAX,CADiB,CACH;AACd;;AACD,UAAMC,cAAc,GAAG,IAAI5B,aAAJ,CAAkByB,eAAe,CAACT,OAAhB,EAAlB,CAAvB;AACAY,IAAAA,cAAc,CAACR,UAAf,CAA0B,IAAIZ,QAAJ,GAAe,CAAf,GAAmBmB,QAA7C;AAEApB,IAAAA,QAAQ,GAAGe,IAAI,CAACC,KAAL,CAAW,CAACC,SAAS,CAACR,OAAV,KAAsBY,cAAc,CAACZ,OAAf,EAAvB,IAAmD,QAAnD,GAA8D,CAAzE,IAA8E,CAAzF;AACA;;AAED,SAAOT,QAAP;AACA,CA9CD;;AAgDA,eAAeN,mBAAf","sourcesContent":["import UniversalDate from \"../sap/ui/core/date/UniversalDate.js\";\n\nconst calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {\n\tlet iWeekNum = 0;\n\tlet iWeekDay = 0;\n\tconst iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek();\n\n\t// search Locale for containing \"en-US\", since sometimes\n\t// when any user settings have been defined, subtag \"sapufmt\" is added to the locale name\n\t// this is described inside sap.ui.core.Configuration file\n\tif (oLocale && (oLocale.getLanguage() === \"en\" && oLocale.getRegion() === \"US\")) {\n\t\t/*\n\t\t\t* in US the week starts with Sunday\n\t\t\t* The first week of the year starts with January 1st. But Dec. 31 is still in the last year\n\t\t\t* So the week beginning in December and ending in January has 2 week numbers\n\t\t\t*/\n\t\tconst oJanFirst = new UniversalDate(oDate.getTime());\n\t\toJanFirst.setUTCFullYear(iYear, 0, 1);\n\t\tiWeekDay = oJanFirst.getUTCDay();\n\n\t\t// get the date for the same weekday like jan 1.\n\t\tconst oCheckDate = new UniversalDate(oDate.getTime());\n\t\toCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);\n\n\t\tiWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 86400000 / 7) + 1;\n\t} else {\n\t\t// normally the first week of the year is the one where the first Thursday of the year is\n\t\t// find Thursday of this week\n\t\t// if the checked day is before the 1. day of the week use a day of the previous week to check\n\t\tconst oThursday = new UniversalDate(oDate.getTime());\n\t\toThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);\n\t\tiWeekDay = oThursday.getUTCDay();\n\t\toThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);\n\n\t\tconst oFirstDayOfYear = new UniversalDate(oThursday.getTime());\n\t\toFirstDayOfYear.setUTCMonth(0, 1);\n\t\tiWeekDay = oFirstDayOfYear.getUTCDay();\n\t\tlet iAddDays = 0;\n\t\tif (iWeekDay > 4) {\n\t\t\tiAddDays = 7; // first day of year is after Thursday, so first Thursday is in the next week\n\t\t}\n\t\tconst oFirstThursday = new UniversalDate(oFirstDayOfYear.getTime());\n\t\toFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);\n\n\t\tiWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 86400000 / 7) + 1;\n\t}\n\n\treturn iWeekNum;\n};\n\nexport default calculateWeekNumber;\n"]},"metadata":{},"sourceType":"module"}