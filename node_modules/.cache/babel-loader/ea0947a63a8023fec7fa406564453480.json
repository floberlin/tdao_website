{"ast":null,"code":"import _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar EventProvider = /*#__PURE__*/function () {\n  function EventProvider() {\n    _classCallCheck(this, EventProvider);\n\n    this._eventRegistry = new Map();\n  }\n\n  _createClass(EventProvider, [{\n    key: \"attachEvent\",\n    value: function attachEvent(eventName, fnFunction) {\n      var eventRegistry = this._eventRegistry;\n      var eventListeners = eventRegistry.get(eventName);\n\n      if (!Array.isArray(eventListeners)) {\n        eventRegistry.set(eventName, [fnFunction]);\n        return;\n      }\n\n      if (!eventListeners.includes(fnFunction)) {\n        eventListeners.push(fnFunction);\n      }\n    }\n  }, {\n    key: \"detachEvent\",\n    value: function detachEvent(eventName, fnFunction) {\n      var eventRegistry = this._eventRegistry;\n      var eventListeners = eventRegistry.get(eventName);\n\n      if (!eventListeners) {\n        return;\n      }\n\n      var indexOfFnToDetach = eventListeners.indexOf(fnFunction);\n\n      if (indexOfFnToDetach !== -1) {\n        eventListeners.splice(indexOfFnToDetach, 1);\n      }\n\n      if (eventListeners.length === 0) {\n        eventRegistry.delete(eventName);\n      }\n    }\n    /**\n     * Fires an event and returns the results of all event listeners as an array.\n     *\n     * @param eventName the event to fire\n     * @param data optional data to pass to each event listener\n     * @returns {Array} an array with the results of all event listeners\n     */\n\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(eventName, data) {\n      var _this = this;\n\n      var eventRegistry = this._eventRegistry;\n      var eventListeners = eventRegistry.get(eventName);\n\n      if (!eventListeners) {\n        return [];\n      }\n\n      return eventListeners.map(function (fn) {\n        return fn.call(_this, data); // eslint-disable-line\n      });\n    }\n    /**\n     * Fires an event and returns a promise that will resolve once all listeners have resolved.\n     *\n     * @param eventName the event to fire\n     * @param data optional data to pass to each event listener\n     * @returns {Promise} a promise that will resolve when all listeners have resolved\n     */\n\n  }, {\n    key: \"fireEventAsync\",\n    value: function fireEventAsync(eventName, data) {\n      return Promise.all(this.fireEvent(eventName, data));\n    }\n  }, {\n    key: \"isHandlerAttached\",\n    value: function isHandlerAttached(eventName, fnFunction) {\n      var eventRegistry = this._eventRegistry;\n      var eventListeners = eventRegistry.get(eventName);\n\n      if (!eventListeners) {\n        return false;\n      }\n\n      return eventListeners.includes(fnFunction);\n    }\n  }, {\n    key: \"hasListeners\",\n    value: function hasListeners(eventName) {\n      return !!this._eventRegistry.get(eventName);\n    }\n  }]);\n\n  return EventProvider;\n}();\n\nexport default EventProvider;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/EventProvider.js"],"names":["EventProvider","_eventRegistry","Map","eventName","fnFunction","eventRegistry","eventListeners","get","Array","isArray","set","includes","push","indexOfFnToDetach","indexOf","splice","length","delete","data","map","fn","call","Promise","all","fireEvent"],"mappings":";;;IAAMA,a;AACL,2BAAc;AAAA;;AACb,SAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;AACA;;;;WAED,qBAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;AAClC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACE,GAAd,CAAkBJ,SAAlB,CAAvB;;AAEA,UAAI,CAACK,KAAK,CAACC,OAAN,CAAcH,cAAd,CAAL,EAAoC;AACnCD,QAAAA,aAAa,CAACK,GAAd,CAAkBP,SAAlB,EAA6B,CAACC,UAAD,CAA7B;AACA;AACA;;AAED,UAAI,CAACE,cAAc,CAACK,QAAf,CAAwBP,UAAxB,CAAL,EAA0C;AACzCE,QAAAA,cAAc,CAACM,IAAf,CAAoBR,UAApB;AACA;AACD;;;WAED,qBAAYD,SAAZ,EAAuBC,UAAvB,EAAmC;AAClC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACE,GAAd,CAAkBJ,SAAlB,CAAvB;;AAEA,UAAI,CAACG,cAAL,EAAqB;AACpB;AACA;;AACD,UAAMO,iBAAiB,GAAGP,cAAc,CAACQ,OAAf,CAAuBV,UAAvB,CAA1B;;AAEA,UAAIS,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC7BP,QAAAA,cAAc,CAACS,MAAf,CAAsBF,iBAAtB,EAAyC,CAAzC;AACA;;AAED,UAAIP,cAAc,CAACU,MAAf,KAA0B,CAA9B,EAAiC;AAChCX,QAAAA,aAAa,CAACY,MAAd,CAAqBd,SAArB;AACA;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,mBAAUA,SAAV,EAAqBe,IAArB,EAA2B;AAAA;;AAC1B,UAAMb,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACE,GAAd,CAAkBJ,SAAlB,CAAvB;;AAEA,UAAI,CAACG,cAAL,EAAqB;AACpB,eAAO,EAAP;AACA;;AAED,aAAOA,cAAc,CAACa,GAAf,CAAmB,UAAAC,EAAE,EAAI;AAC/B,eAAOA,EAAE,CAACC,IAAH,CAAQ,KAAR,EAAcH,IAAd,CAAP,CAD+B,CACH;AAC5B,OAFM,CAAP;AAGA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,wBAAef,SAAf,EAA0Be,IAA1B,EAAgC;AAC/B,aAAOI,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAL,CAAerB,SAAf,EAA0Be,IAA1B,CAAZ,CAAP;AACA;;;WAED,2BAAkBf,SAAlB,EAA6BC,UAA7B,EAAyC;AACxC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACE,GAAd,CAAkBJ,SAAlB,CAAvB;;AAEA,UAAI,CAACG,cAAL,EAAqB;AACpB,eAAO,KAAP;AACA;;AAED,aAAOA,cAAc,CAACK,QAAf,CAAwBP,UAAxB,CAAP;AACA;;;WAED,sBAAaD,SAAb,EAAwB;AACvB,aAAO,CAAC,CAAC,KAAKF,cAAL,CAAoBM,GAApB,CAAwBJ,SAAxB,CAAT;AACA;;;;;;AAGF,eAAeH,aAAf","sourcesContent":["class EventProvider {\n\tconstructor() {\n\t\tthis._eventRegistry = new Map();\n\t}\n\n\tattachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!Array.isArray(eventListeners)) {\n\t\t\teventRegistry.set(eventName, [fnFunction]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!eventListeners.includes(fnFunction)) {\n\t\t\teventListeners.push(fnFunction);\n\t\t}\n\t}\n\n\tdetachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexOfFnToDetach = eventListeners.indexOf(fnFunction);\n\n\t\tif (indexOfFnToDetach !== -1) {\n\t\t\teventListeners.splice(indexOfFnToDetach, 1);\n\t\t}\n\n\t\tif (eventListeners.length === 0) {\n\t\t\teventRegistry.delete(eventName);\n\t\t}\n\t}\n\n\t/**\n\t * Fires an event and returns the results of all event listeners as an array.\n\t *\n\t * @param eventName the event to fire\n\t * @param data optional data to pass to each event listener\n\t * @returns {Array} an array with the results of all event listeners\n\t */\n\tfireEvent(eventName, data) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn eventListeners.map(fn => {\n\t\t\treturn fn.call(this, data); // eslint-disable-line\n\t\t});\n\t}\n\n\t/**\n\t * Fires an event and returns a promise that will resolve once all listeners have resolved.\n\t *\n\t * @param eventName the event to fire\n\t * @param data optional data to pass to each event listener\n\t * @returns {Promise} a promise that will resolve when all listeners have resolved\n\t */\n\tfireEventAsync(eventName, data) {\n\t\treturn Promise.all(this.fireEvent(eventName, data));\n\t}\n\n\tisHandlerAttached(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn eventListeners.includes(fnFunction);\n\t}\n\n\thasListeners(eventName) {\n\t\treturn !!this._eventRegistry.get(eventName);\n\t}\n}\n\nexport default EventProvider;\n"]},"metadata":{},"sourceType":"module"}