{"ast":null,"code":"import _toConsumableArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6\n},\n    i = function i(t) {\n  return function () {\n    for (var _len = arguments.length, i = new Array(_len), _key = 0; _key < _len; _key++) {\n      i[_key] = arguments[_key];\n    }\n\n    return {\n      _$litDirective$: t,\n      values: i\n    };\n  };\n};\n\nvar s = /*#__PURE__*/function () {\n  function s(t) {\n    _classCallCheck(this, s);\n  }\n\n  _createClass(s, [{\n    key: \"T\",\n    value: function T(t, i, _s) {\n      this.Σdt = t, this.M = i, this.Σct = _s;\n    }\n  }, {\n    key: \"S\",\n    value: function S(t, i) {\n      return this.update(t, i);\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, i) {\n      return this.render.apply(this, _toConsumableArray(i));\n    }\n  }]);\n\n  return s;\n}();\n\nexport { s as Directive, t as PartType, i as directive };","map":{"version":3,"sources":["src/directive.ts"],"names":["PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","directive","c","values","_$litDirective$","Directive","[object Object]","_partInfo","part","parent","attributeIndex","this","__part","_$parent","__attributeIndex","props","update","_part","render"],"mappings":";;;;;;;;;IAsCaA,CAAAA,GAAW;AACtBC,EAAAA,SAAAA,EAAW,CADW;AAEtBC,EAAAA,KAAAA,EAAO,CAFe;AAGtBC,EAAAA,QAAAA,EAAU,CAHY;AAItBC,EAAAA,iBAAAA,EAAmB,CAJG;AAKtBC,EAAAA,KAAAA,EAAO,CALe;AAMtBC,EAAAA,OAAAA,EAAS;AANa,C;IA0CXC,CAAAA,GAAuCC,SAAvCD,CAAuCC,CAAAA,CAAAA;AAAAA,SAAS;AAAA,sCACxDC,CADwD;AACxDA,MAAAA,CADwD;AAAA;;AAAA,WACxDA;AAEHC,MAAAA,eAAAA,EAAiBF,CAFdC;AAGHA,MAAAA,MAAAA,EAAAA;AAHGA,KADwD;AAAA,GAATD;AAAAA,C;;IAY9BG,C;AAiBpBC,aAAYC,CAAZD,EAAYC;AAAAA;AAGZD;;;;WAAAA,WACEE,CADFF,EAEEG,CAFFH,EAGEI,EAHFJ,EAGEI;AAEAC,WAAKC,GAALD,GAAcH,CAAdG,EACAA,KAAKE,CAALF,GAAgBF,CADhBE,EAEAA,KAAKG,GAALH,GAAwBD,EAFxBC;AAKFL;;;WAAAA,WAAUE,CAAVF,EAAsBS,CAAtBT,EAAsBS;AACpB,aAAOJ,KAAKK,MAALL,CAAYH,CAAZG,EAAkBI,CAAlBJ,CAAP;AAKFL;;;WAAAA,gBAAOW,CAAPX,EAAoBS,CAApBT,EAAoBS;AAClB,aAAOJ,KAAKO,MAALP,gCAAeI,CAAfJ,EAAP;AAAsBI;;;;;;AAAAA,SAAAA,CAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,QAAAA,EAAAA,CAAAA,IAAAA,SAAAA","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n} from './lit-html';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /** @internal */\n  _$litDirective$: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = typeof PartType[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive = <C extends DirectiveClass>(c: C) => (\n  ...values: DirectiveParameters<InstanceType<C>>\n): DirectiveResult<C> => ({\n  _$litDirective$: c,\n  values,\n});\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  //@internal\n  _$setDirectiveConnected?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}