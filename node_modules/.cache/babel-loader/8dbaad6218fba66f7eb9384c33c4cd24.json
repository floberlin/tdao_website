{"ast":null,"code":"import { getUrl } from \"../CSP.js\";\n\nvar flatten = function flatten(arr) {\n  return arr.reduce(function (acc, val) {\n    return acc.concat(Array.isArray(val) ? flatten(val) : val);\n  }, []);\n};\n\nvar getEffectiveLinksHrefs = function getEffectiveLinksHrefs(ElementClass) {\n  var forStaticArea = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var stylesData = ElementClass[forStaticArea ? \"staticAreaStyles\" : \"styles\"];\n\n  if (!stylesData) {\n    return;\n  }\n\n  if (!Array.isArray(stylesData)) {\n    stylesData = [stylesData];\n  }\n\n  return flatten(stylesData).filter(function (data) {\n    return !!data;\n  }).map(function (data) {\n    return getUrl(data.packageName, data.fileName);\n  });\n};\n\nexport default getEffectiveLinksHrefs;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js"],"names":["getUrl","flatten","arr","reduce","acc","val","concat","Array","isArray","getEffectiveLinksHrefs","ElementClass","forStaticArea","stylesData","filter","data","map","packageName","fileName"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACtB,SAAOA,GAAG,CAACC,MAAJ,CAAW,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAcD,GAAG,CAACE,MAAJ,CAAWC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqBJ,OAAO,CAACI,GAAD,CAA5B,GAAoCA,GAA/C,CAAd;AAAA,GAAX,EAA8E,EAA9E,CAAP;AACA,CAFD;;AAIA,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,YAAD,EAAyC;AAAA,MAA1BC,aAA0B,uEAAV,KAAU;AACvE,MAAIC,UAAU,GAAGF,YAAY,CAACC,aAAa,GAAG,kBAAH,GAAwB,QAAtC,CAA7B;;AACA,MAAI,CAACC,UAAL,EAAiB;AAChB;AACA;;AAED,MAAI,CAACL,KAAK,CAACC,OAAN,CAAcI,UAAd,CAAL,EAAgC;AAC/BA,IAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACA;;AAED,SAAOX,OAAO,CAACW,UAAD,CAAP,CAAoBC,MAApB,CAA2B,UAAAC,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAA/B,EAA2CC,GAA3C,CAA+C,UAAAD,IAAI;AAAA,WAAId,MAAM,CAACc,IAAI,CAACE,WAAN,EAAmBF,IAAI,CAACG,QAAxB,CAAV;AAAA,GAAnD,CAAP;AACA,CAXD;;AAaA,eAAeR,sBAAf","sourcesContent":["import { getUrl } from \"../CSP.js\";\n\nconst flatten = arr => {\n\treturn arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatten(val) : val), []);\n};\n\nconst getEffectiveLinksHrefs = (ElementClass, forStaticArea = false) => {\n\tlet stylesData = ElementClass[forStaticArea ? \"staticAreaStyles\" : \"styles\"];\n\tif (!stylesData) {\n\t\treturn;\n\t}\n\n\tif (!Array.isArray(stylesData)) {\n\t\tstylesData = [stylesData];\n\t}\n\n\treturn flatten(stylesData).filter(data => !!data).map(data => getUrl(data.packageName, data.fileName));\n};\n\nexport default getEffectiveLinksHrefs;\n"]},"metadata":{},"sourceType":"module"}