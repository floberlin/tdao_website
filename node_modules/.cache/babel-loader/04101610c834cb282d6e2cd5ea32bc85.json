{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/RadioButton';\n/**\n * The `RadioButton` component enables users to select a single option from a set of options. When a `RadioButton` is selected by the user, the `change` event is fired. When a `RadioButton` that is within a group is selected, the one that was previously selected gets automatically deselected. You can group radio buttons by using the `name` property.\n * **Note:** If `RadioButton` is not part of a group, it can be selected once, but can not be deselected back.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/RadioButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar RadioButton = withWebComponent('ui5-radio-button', ['name', 'text', 'value', 'valueState', 'wrappingType'], ['checked', 'disabled', 'readonly'], [], ['change']);\nRadioButton.displayName = 'RadioButton';\nRadioButton.defaultProps = {\n  checked: false,\n  disabled: false,\n  readonly: false,\n  valueState: ValueState.None\n};\nexport { RadioButton };","map":{"version":3,"sources":["../src/webComponents/RadioButton/index.tsx"],"names":["RadioButton","withWebComponent","checked","disabled","readonly","valueState","ValueState","None"],"mappings":";;;AAyEA;AACA;AACA;AACA;AACA;AACA;;IACMA,WAAW,GAAGC,gBAAgB,CAAA,kBAAA,EAElC,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAFkC,cAElC,CAFkC,EAGlC,CAAA,SAAA,EAAA,UAAA,EAHkC,UAGlC,CAHkC,EAAA,EAAA,EAKlC,CALkC,QAKlC,CALkC,C;AAQpCD,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AAEAA,WAAW,CAAXA,YAAAA,GAA2B;AACzBE,EAAAA,OAAO,EADkB,KAAA;AAEzBC,EAAAA,QAAQ,EAFiB,KAAA;AAGzBC,EAAAA,QAAQ,EAHiB,KAAA;AAIzBC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AAJE,CAA3BP","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\n\nimport '@ui5/webcomponents/dist/RadioButton';\n\nexport interface RadioButtonPropTypes extends Omit<CommonProps, 'onChange'> {\n  /**\n   * Defines whether the component is checked or not.\n   *\n   * **Note:** The property value can be changed with user interaction, either by clicking/tapping on the component, or by using the Space or Enter key.\n   */\n  checked?: boolean;\n  /**\n   * Defines whether the component is disabled.\n   *\n   * **Note:** A disabled component is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the name of the component. Radio buttons with the same `name` will form a radio button group.\n   *\n   * **Note:** The selection can be changed with `ARROW_UP/DOWN` and `ARROW_LEFT/RIGHT` keys between radio buttons in same group.\n   *\n   * **Note:** Only one radio button can be selected per group.\n   *\n   * **Important:** For the `name` property to have effect when submitting forms, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the component so that it can be submitted as part of an HTML form.\n   */\n  name?: string;\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines the text of the component.\n   */\n  text?: string;\n  /**\n   * Defines the form value of the component. When a form with a radio button group is submitted, the group's value will be the value of the currently selected radio button.\n   * **Important:** For the `value` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  value?: string;\n  /**\n   * Defines the value state of the component.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines whether the component text wraps when there is not enough space.\n   *\n   * Available options are:\n   *\n   * *   `None` - The text will be truncated with an ellipsis.\n   * *   `Normal` - The text will wrap. The words will not be broken based on hyphenation.\n   */\n  wrappingType?: WrappingType;\n  /**\n   * Fired when the component checked state changes.\n   */\n  onChange?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n}\n\n/**\n * The `RadioButton` component enables users to select a single option from a set of options. When a `RadioButton` is selected by the user, the `change` event is fired. When a `RadioButton` that is within a group is selected, the one that was previously selected gets automatically deselected. You can group radio buttons by using the `name` property.\n * **Note:** If `RadioButton` is not part of a group, it can be selected once, but can not be deselected back.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/RadioButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst RadioButton = withWebComponent<RadioButtonPropTypes>(\n  'ui5-radio-button',\n  ['name', 'text', 'value', 'valueState', 'wrappingType'],\n  ['checked', 'disabled', 'readonly'],\n  [],\n  ['change']\n);\n\nRadioButton.displayName = 'RadioButton';\n\nRadioButton.defaultProps = {\n  checked: false,\n  disabled: false,\n  readonly: false,\n  valueState: ValueState.None\n};\n\nexport { RadioButton };\n"]},"metadata":{},"sourceType":"module"}