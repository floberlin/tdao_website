{"ast":null,"code":"var getThemeMetadata = function getThemeMetadata() {\n  // Check if the class was already applied, most commonly to the link/style tag with the CSS Variables\n  var el = document.querySelector(\".sapThemeMetaData-Base-baseLib\");\n\n  if (el) {\n    return getComputedStyle(el).backgroundImage;\n  }\n\n  el = document.createElement(\"span\");\n  el.style.display = \"none\";\n  el.classList.add(\"sapThemeMetaData-Base-baseLib\");\n  document.body.appendChild(el);\n  var metadata = getComputedStyle(el).backgroundImage;\n  document.body.removeChild(el);\n  return metadata;\n};\n\nvar parseThemeMetadata = function parseThemeMetadata(metadataString) {\n  var params = /\\([\"']?data:text\\/plain;utf-8,(.*?)['\"]?\\)$/i.exec(metadataString);\n\n  if (params && params.length >= 2) {\n    var paramsString = params[1];\n    paramsString = paramsString.replace(/\\\\\"/g, \"\\\"\");\n\n    if (paramsString.charAt(0) !== \"{\" && paramsString.charAt(paramsString.length - 1) !== \"}\") {\n      try {\n        paramsString = decodeURIComponent(paramsString);\n      } catch (ex) {\n        console.warn(\"Malformed theme metadata string, unable to decodeURIComponent\"); // eslint-disable-line\n\n        return;\n      }\n    }\n\n    try {\n      return JSON.parse(paramsString);\n    } catch (ex) {\n      console.warn(\"Malformed theme metadata string, unable to parse JSON\"); // eslint-disable-line\n    }\n  }\n};\n\nvar processThemeMetadata = function processThemeMetadata(metadata) {\n  var themeName;\n  var baseThemeName;\n\n  try {\n    themeName = metadata.Path.match(/\\.([^.]+)\\.css_variables$/)[1];\n    baseThemeName = metadata.Extends[0];\n  } catch (ex) {\n    console.warn(\"Malformed theme metadata Object\", metadata); // eslint-disable-line\n\n    return;\n  }\n\n  return {\n    themeName: themeName,\n    baseThemeName: baseThemeName\n  };\n};\n\nvar getThemeDesignerTheme = function getThemeDesignerTheme() {\n  var metadataString = getThemeMetadata();\n\n  if (!metadataString || metadataString === \"none\") {\n    return;\n  }\n\n  var metadata = parseThemeMetadata(metadataString);\n  return processThemeMetadata(metadata);\n};\n\nexport default getThemeDesignerTheme;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js"],"names":["getThemeMetadata","el","document","querySelector","getComputedStyle","backgroundImage","createElement","style","display","classList","add","body","appendChild","metadata","removeChild","parseThemeMetadata","metadataString","params","exec","length","paramsString","replace","charAt","decodeURIComponent","ex","console","warn","JSON","parse","processThemeMetadata","themeName","baseThemeName","Path","match","Extends","getThemeDesignerTheme"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B;AACA,MAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gCAAvB,CAAT;;AACA,MAAIF,EAAJ,EAAQ;AACP,WAAOG,gBAAgB,CAACH,EAAD,CAAhB,CAAqBI,eAA5B;AACA;;AAEDJ,EAAAA,EAAE,GAAGC,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAL;AACAL,EAAAA,EAAE,CAACM,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACAP,EAAAA,EAAE,CAACQ,SAAH,CAAaC,GAAb,CAAiB,+BAAjB;AACAR,EAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BX,EAA1B;AACA,MAAMY,QAAQ,GAAGT,gBAAgB,CAACH,EAAD,CAAhB,CAAqBI,eAAtC;AACAH,EAAAA,QAAQ,CAACS,IAAT,CAAcG,WAAd,CAA0Bb,EAA1B;AAEA,SAAOY,QAAP;AACA,CAfD;;AAiBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,cAAc,EAAI;AAC5C,MAAMC,MAAM,GAAG,+CAA+CC,IAA/C,CAAoDF,cAApD,CAAf;;AACA,MAAIC,MAAM,IAAIA,MAAM,CAACE,MAAP,IAAiB,CAA/B,EAAkC;AACjC,QAAIC,YAAY,GAAGH,MAAM,CAAC,CAAD,CAAzB;AACAG,IAAAA,YAAY,GAAGA,YAAY,CAACC,OAAb,CAAqB,MAArB,OAAf;;AACA,QAAID,YAAY,CAACE,MAAb,CAAoB,CAApB,MAA2B,GAA3B,IAAkCF,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACD,MAAb,GAAsB,CAA1C,MAAiD,GAAvF,EAA4F;AAC3F,UAAI;AACHC,QAAAA,YAAY,GAAGG,kBAAkB,CAACH,YAAD,CAAjC;AACA,OAFD,CAEE,OAAOI,EAAP,EAAW;AACZC,QAAAA,OAAO,CAACC,IAAR,CAAa,+DAAb,EADY,CACmE;;AAC/E;AACA;AACD;;AACD,QAAI;AACH,aAAOC,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAP;AACA,KAFD,CAEE,OAAOI,EAAP,EAAW;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,uDAAb,EADY,CAC2D;AACvE;AACD;AACD,CAnBD;;AAqBA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAhB,QAAQ,EAAI;AACxC,MAAIiB,SAAJ;AACA,MAAIC,aAAJ;;AAEA,MAAI;AACHD,IAAAA,SAAS,GAAGjB,QAAQ,CAACmB,IAAT,CAAcC,KAAd,CAAoB,2BAApB,EAAiD,CAAjD,CAAZ;AACAF,IAAAA,aAAa,GAAGlB,QAAQ,CAACqB,OAAT,CAAiB,CAAjB,CAAhB;AACA,GAHD,CAGE,OAAOV,EAAP,EAAW;AACZC,IAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb,EAAgDb,QAAhD,EADY,CAC+C;;AAC3D;AACA;;AAED,SAAO;AACNiB,IAAAA,SAAS,EAATA,SADM;AAENC,IAAAA,aAAa,EAAbA;AAFM,GAAP;AAIA,CAhBD;;AAkBA,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACnC,MAAMnB,cAAc,GAAGhB,gBAAgB,EAAvC;;AACA,MAAI,CAACgB,cAAD,IAAmBA,cAAc,KAAK,MAA1C,EAAkD;AACjD;AACA;;AAED,MAAMH,QAAQ,GAAGE,kBAAkB,CAACC,cAAD,CAAnC;AACA,SAAOa,oBAAoB,CAAChB,QAAD,CAA3B;AACA,CARD;;AAUA,eAAesB,qBAAf","sourcesContent":["const getThemeMetadata = () => {\n\t// Check if the class was already applied, most commonly to the link/style tag with the CSS Variables\n\tlet el = document.querySelector(\".sapThemeMetaData-Base-baseLib\");\n\tif (el) {\n\t\treturn getComputedStyle(el).backgroundImage;\n\t}\n\n\tel = document.createElement(\"span\");\n\tel.style.display = \"none\";\n\tel.classList.add(\"sapThemeMetaData-Base-baseLib\");\n\tdocument.body.appendChild(el);\n\tconst metadata = getComputedStyle(el).backgroundImage;\n\tdocument.body.removeChild(el);\n\n\treturn metadata;\n};\n\nconst parseThemeMetadata = metadataString => {\n\tconst params = /\\([\"']?data:text\\/plain;utf-8,(.*?)['\"]?\\)$/i.exec(metadataString);\n\tif (params && params.length >= 2) {\n\t\tlet paramsString = params[1];\n\t\tparamsString = paramsString.replace(/\\\\\"/g, `\"`);\n\t\tif (paramsString.charAt(0) !== \"{\" && paramsString.charAt(paramsString.length - 1) !== \"}\") {\n\t\t\ttry {\n\t\t\t\tparamsString = decodeURIComponent(paramsString);\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.warn(\"Malformed theme metadata string, unable to decodeURIComponent\"); // eslint-disable-line\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\treturn JSON.parse(paramsString);\n\t\t} catch (ex) {\n\t\t\tconsole.warn(\"Malformed theme metadata string, unable to parse JSON\"); // eslint-disable-line\n\t\t}\n\t}\n};\n\nconst processThemeMetadata = metadata => {\n\tlet themeName;\n\tlet baseThemeName;\n\n\ttry {\n\t\tthemeName = metadata.Path.match(/\\.([^.]+)\\.css_variables$/)[1];\n\t\tbaseThemeName = metadata.Extends[0];\n\t} catch (ex) {\n\t\tconsole.warn(\"Malformed theme metadata Object\", metadata); // eslint-disable-line\n\t\treturn;\n\t}\n\n\treturn {\n\t\tthemeName,\n\t\tbaseThemeName,\n\t};\n};\n\nconst getThemeDesignerTheme = () => {\n\tconst metadataString = getThemeMetadata();\n\tif (!metadataString || metadataString === \"none\") {\n\t\treturn;\n\t}\n\n\tconst metadata = parseThemeMetadata(metadataString);\n\treturn processThemeMetadata(metadata);\n};\n\nexport default getThemeDesignerTheme;\n"]},"metadata":{},"sourceType":"module"}