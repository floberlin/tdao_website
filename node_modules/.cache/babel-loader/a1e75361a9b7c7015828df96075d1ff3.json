{"ast":null,"code":"/**\n * Returns the caret (cursor) position of the specified text field (field).\n * Return value range is 0-field.value.length.\n */\nconst getCaretPosition = field => {\n  // Initialize\n  let caretPos = 0; // IE Support\n\n  if (document.selection) {\n    // Set focus on the element\n    field.focus(); // To get cursor position, get empty selection range\n\n    const selection = document.selection.createRange(); // Move selection start to 0 position\n\n    selection.moveStart(\"character\", -field.value.length); // The caret position is selection length\n\n    caretPos = selection.text.length;\n  } else if (field.selectionStart || field.selectionStart === \"0\") {\n    // Firefox support\n    caretPos = field.selectionDirection === \"backward\" ? field.selectionStart : field.selectionEnd;\n  }\n\n  return caretPos;\n};\n\nconst setCaretPosition = (field, caretPos) => {\n  if (field.createTextRange) {\n    const range = field.createTextRange();\n    range.move(\"character\", caretPos);\n    range.select();\n  } else if (field.selectionStart) {\n    field.focus();\n    field.setSelectionRange(caretPos, caretPos);\n  } else {\n    field.focus();\n  }\n};\n\nexport { getCaretPosition, setCaretPosition };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/util/Caret.js"],"names":["getCaretPosition","field","caretPos","document","selection","focus","createRange","moveStart","value","length","text","selectionStart","selectionDirection","selectionEnd","setCaretPosition","createTextRange","range","move","select","setSelectionRange"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAGC,KAAK,IAAI;AACjC;AACA,MAAIC,QAAQ,GAAG,CAAf,CAFiC,CAIjC;;AACA,MAAIC,QAAQ,CAACC,SAAb,EAAwB;AACvB;AACAH,IAAAA,KAAK,CAACI,KAAN,GAFuB,CAIvB;;AACA,UAAMD,SAAS,GAAGD,QAAQ,CAACC,SAAT,CAAmBE,WAAnB,EAAlB,CALuB,CAOvB;;AACAF,IAAAA,SAAS,CAACG,SAAV,CAAoB,WAApB,EAAiC,CAACN,KAAK,CAACO,KAAN,CAAYC,MAA9C,EARuB,CAUvB;;AACAP,IAAAA,QAAQ,GAAGE,SAAS,CAACM,IAAV,CAAeD,MAA1B;AACA,GAZD,MAYO,IAAIR,KAAK,CAACU,cAAN,IAAwBV,KAAK,CAACU,cAAN,KAAyB,GAArD,EAA0D;AAAE;AAClET,IAAAA,QAAQ,GAAGD,KAAK,CAACW,kBAAN,KAA6B,UAA7B,GAA0CX,KAAK,CAACU,cAAhD,GAAiEV,KAAK,CAACY,YAAlF;AACA;;AAED,SAAOX,QAAP;AACA,CAtBD;;AAwBA,MAAMY,gBAAgB,GAAG,CAACb,KAAD,EAAQC,QAAR,KAAqB;AAC7C,MAAID,KAAK,CAACc,eAAV,EAA2B;AAC1B,UAAMC,KAAK,GAAGf,KAAK,CAACc,eAAN,EAAd;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBf,QAAxB;AACAc,IAAAA,KAAK,CAACE,MAAN;AACA,GAJD,MAIO,IAAIjB,KAAK,CAACU,cAAV,EAA0B;AAChCV,IAAAA,KAAK,CAACI,KAAN;AACAJ,IAAAA,KAAK,CAACkB,iBAAN,CAAwBjB,QAAxB,EAAkCA,QAAlC;AACA,GAHM,MAGA;AACND,IAAAA,KAAK,CAACI,KAAN;AACA;AACD,CAXD;;AAaA,SACCL,gBADD,EAECc,gBAFD","sourcesContent":["/**\n * Returns the caret (cursor) position of the specified text field (field).\n * Return value range is 0-field.value.length.\n */\nconst getCaretPosition = field => {\n\t// Initialize\n\tlet caretPos = 0;\n\n\t// IE Support\n\tif (document.selection) {\n\t\t// Set focus on the element\n\t\tfield.focus();\n\n\t\t// To get cursor position, get empty selection range\n\t\tconst selection = document.selection.createRange();\n\n\t\t// Move selection start to 0 position\n\t\tselection.moveStart(\"character\", -field.value.length);\n\n\t\t// The caret position is selection length\n\t\tcaretPos = selection.text.length;\n\t} else if (field.selectionStart || field.selectionStart === \"0\") { // Firefox support\n\t\tcaretPos = field.selectionDirection === \"backward\" ? field.selectionStart : field.selectionEnd;\n\t}\n\n\treturn caretPos;\n};\n\nconst setCaretPosition = (field, caretPos) => {\n\tif (field.createTextRange) {\n\t\tconst range = field.createTextRange();\n\t\trange.move(\"character\", caretPos);\n\t\trange.select();\n\t} else if (field.selectionStart) {\n\t\tfield.focus();\n\t\tfield.setSelectionRange(caretPos, caretPos);\n\t} else {\n\t\tfield.focus();\n\t}\n};\n\nexport {\n\tgetCaretPosition,\n\tsetCaretPosition,\n};\n"]},"metadata":{},"sourceType":"module"}