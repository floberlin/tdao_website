{"ast":null,"code":"import * as C from './EncoderConstants';\nimport Arrays from '../../util/Arrays';\nimport StringUtils from '../../common/StringUtils';\nexport function static_CHAR_MAP(CHAR_MAP) {\n  var spaceCharCode = StringUtils.getCharCode(' ');\n  var pointCharCode = StringUtils.getCharCode('.');\n  var commaCharCode = StringUtils.getCharCode(',');\n  CHAR_MAP[C.MODE_UPPER][spaceCharCode] = 1;\n  var zUpperCharCode = StringUtils.getCharCode('Z');\n  var aUpperCharCode = StringUtils.getCharCode('A');\n\n  for (var c = aUpperCharCode; c <= zUpperCharCode; c++) {\n    CHAR_MAP[C.MODE_UPPER][c] = c - aUpperCharCode + 2;\n  }\n\n  CHAR_MAP[C.MODE_LOWER][spaceCharCode] = 1;\n  var zLowerCharCode = StringUtils.getCharCode('z');\n  var aLowerCharCode = StringUtils.getCharCode('a');\n\n  for (var c = aLowerCharCode; c <= zLowerCharCode; c++) {\n    CHAR_MAP[C.MODE_LOWER][c] = c - aLowerCharCode + 2;\n  }\n\n  CHAR_MAP[C.MODE_DIGIT][spaceCharCode] = 1;\n  var nineCharCode = StringUtils.getCharCode('9');\n  var zeroCharCode = StringUtils.getCharCode('0');\n\n  for (var c = zeroCharCode; c <= nineCharCode; c++) {\n    CHAR_MAP[C.MODE_DIGIT][c] = c - zeroCharCode + 2;\n  }\n\n  CHAR_MAP[C.MODE_DIGIT][commaCharCode] = 12;\n  CHAR_MAP[C.MODE_DIGIT][pointCharCode] = 13;\n  var mixedTable = ['\\x00', ' ', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07', '\\b', '\\t', '\\n', '\\x0b', '\\f', '\\r', '\\x1b', '\\x1c', '\\x1d', '\\x1e', '\\x1f', '@', '\\\\', '^', '_', '`', '|', '~', '\\x7f'];\n\n  for (var i = 0; i < mixedTable.length; i++) {\n    CHAR_MAP[C.MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\n  }\n\n  var punctTable = ['\\x00', '\\r', '\\x00', '\\x00', '\\x00', '\\x00', '!', '\\'', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', ']', '{', '}'];\n\n  for (var i = 0; i < punctTable.length; i++) {\n    if (StringUtils.getCharCode(punctTable[i]) > 0) {\n      CHAR_MAP[C.MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\n    }\n  }\n\n  return CHAR_MAP;\n}\nexport var CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));","map":{"version":3,"sources":["../../../../../src/core/aztec/encoder/CharMap.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as C from './EncoderConstants';\nimport Arrays from '../../util/Arrays';\nimport StringUtils from '../../common/StringUtils';\nexport function static_CHAR_MAP(CHAR_MAP) {\n    var spaceCharCode = StringUtils.getCharCode(' ');\n    var pointCharCode = StringUtils.getCharCode('.');\n    var commaCharCode = StringUtils.getCharCode(',');\n    CHAR_MAP[C.MODE_UPPER][spaceCharCode] = 1;\n    var zUpperCharCode = StringUtils.getCharCode('Z');\n    var aUpperCharCode = StringUtils.getCharCode('A');\n    for (var c = aUpperCharCode; c <= zUpperCharCode; c++) {\n        CHAR_MAP[C.MODE_UPPER][c] = c - aUpperCharCode + 2;\n    }\n    CHAR_MAP[C.MODE_LOWER][spaceCharCode] = 1;\n    var zLowerCharCode = StringUtils.getCharCode('z');\n    var aLowerCharCode = StringUtils.getCharCode('a');\n    for (var c = aLowerCharCode; c <= zLowerCharCode; c++) {\n        CHAR_MAP[C.MODE_LOWER][c] = c - aLowerCharCode + 2;\n    }\n    CHAR_MAP[C.MODE_DIGIT][spaceCharCode] = 1;\n    var nineCharCode = StringUtils.getCharCode('9');\n    var zeroCharCode = StringUtils.getCharCode('0');\n    for (var c = zeroCharCode; c <= nineCharCode; c++) {\n        CHAR_MAP[C.MODE_DIGIT][c] = c - zeroCharCode + 2;\n    }\n    CHAR_MAP[C.MODE_DIGIT][commaCharCode] = 12;\n    CHAR_MAP[C.MODE_DIGIT][pointCharCode] = 13;\n    var mixedTable = [\n        '\\x00',\n        ' ',\n        '\\x01',\n        '\\x02',\n        '\\x03',\n        '\\x04',\n        '\\x05',\n        '\\x06',\n        '\\x07',\n        '\\b',\n        '\\t',\n        '\\n',\n        '\\x0b',\n        '\\f',\n        '\\r',\n        '\\x1b',\n        '\\x1c',\n        '\\x1d',\n        '\\x1e',\n        '\\x1f',\n        '@',\n        '\\\\',\n        '^',\n        '_',\n        '`',\n        '|',\n        '~',\n        '\\x7f'\n    ];\n    for (var i = 0; i < mixedTable.length; i++) {\n        CHAR_MAP[C.MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\n    }\n    var punctTable = [\n        '\\x00',\n        '\\r',\n        '\\x00',\n        '\\x00',\n        '\\x00',\n        '\\x00',\n        '!',\n        '\\'',\n        '#',\n        '$',\n        '%',\n        '&',\n        '\\'',\n        '(',\n        ')',\n        '*',\n        '+',\n        ',',\n        '-',\n        '.',\n        '/',\n        ':',\n        ';',\n        '<',\n        '=',\n        '>',\n        '?',\n        '[',\n        ']',\n        '{',\n        '}'\n    ];\n    for (var i = 0; i < punctTable.length; i++) {\n        if (StringUtils.getCharCode(punctTable[i]) > 0) {\n            CHAR_MAP[C.MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\n        }\n    }\n    return CHAR_MAP;\n}\nexport var CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));\n//# sourceMappingURL=CharMap.js.map"]},"metadata":{},"sourceType":"module"}