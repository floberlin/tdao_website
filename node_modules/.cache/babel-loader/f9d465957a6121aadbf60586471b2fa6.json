{"ast":null,"code":"import { SwitchDesign } from '@ui5/webcomponents-react/dist/SwitchDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/Switch';\n/**\n * The `Switch` component is used for changing between binary states.\n * The component can display texts, that will be switched, based on the component state, via the `textOn` and `textOff` properties, but texts longer than 3 letters will be cutted off.\n * However, users are able to customize the width of `Switch` with pure CSS (`<Switch style=\"width: 200px\">`), and set widths, depending on the texts they would use.\n * Note: the component would not automatically stretch to fit the whole text width.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Switch\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar Switch = withWebComponent('ui5-switch', ['design', 'textOff', 'textOn'], ['checked', 'disabled'], [], ['change']);\nSwitch.displayName = 'Switch';\nSwitch.defaultProps = {\n  checked: false,\n  design: SwitchDesign.Textual,\n  disabled: false\n};\nexport { Switch };","map":{"version":3,"sources":["../src/webComponents/Switch/index.tsx"],"names":["Switch","withWebComponent","checked","design","SwitchDesign","disabled"],"mappings":";;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMA,MAAM,GAAGC,gBAAgB,CAAA,YAAA,EAE7B,CAAA,QAAA,EAAA,SAAA,EAF6B,QAE7B,CAF6B,EAG7B,CAAA,SAAA,EAH6B,UAG7B,CAH6B,EAAA,EAAA,EAK7B,CAL6B,QAK7B,CAL6B,C;AAQ/BD,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AAEAA,MAAM,CAANA,YAAAA,GAAsB;AACpBE,EAAAA,OAAO,EADa,KAAA;AAEpBC,EAAAA,MAAM,EAAEC,YAAY,CAFA,OAAA;AAGpBC,EAAAA,QAAQ,EAAE;AAHU,CAAtBL","sourcesContent":["import { SwitchDesign } from '@ui5/webcomponents-react/dist/SwitchDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\n\nimport '@ui5/webcomponents/dist/Switch';\n\nexport interface SwitchPropTypes extends Omit<CommonProps, 'onChange'> {\n  /**\n   * Defines if the component is checked.\n   *\n   * **Note:** The property can be changed with user interaction, either by cliking the component, or by pressing the `Enter` or `Space` key.\n   */\n  checked?: boolean;\n  /**\n   * Defines the component design.\n   *\n   * **Note:** If `Graphical` type is set, positive and negative icons will replace the `textOn` and `textOff`.\n   */\n  design?: SwitchDesign;\n  /**\n   * Defines whether the component is disabled.\n   *\n   * **Note:** A disabled component is noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the text, displayed when the component is not checked.\n   *\n   * **Note:** We recommend using short texts, up to 3 letters (larger texts would be cut off).\n   */\n  textOff?: string;\n  /**\n   * Defines the text, displayed when the component is checked.\n   *\n   * **Note:** We recommend using short texts, up to 3 letters (larger texts would be cut off).\n   */\n  textOn?: string;\n  /**\n   * Fired when the component checked state changes.\n   */\n  onChange?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n}\n\n/**\n * The `Switch` component is used for changing between binary states.\n * The component can display texts, that will be switched, based on the component state, via the `textOn` and `textOff` properties, but texts longer than 3 letters will be cutted off.\n * However, users are able to customize the width of `Switch` with pure CSS (`<Switch style=\"width: 200px\">`), and set widths, depending on the texts they would use.\n * Note: the component would not automatically stretch to fit the whole text width.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Switch\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Switch = withWebComponent<SwitchPropTypes>(\n  'ui5-switch',\n  ['design', 'textOff', 'textOn'],\n  ['checked', 'disabled'],\n  [],\n  ['change']\n);\n\nSwitch.displayName = 'Switch';\n\nSwitch.defaultProps = {\n  checked: false,\n  design: SwitchDesign.Textual,\n  disabled: false\n};\n\nexport { Switch };\n"]},"metadata":{},"sourceType":"module"}