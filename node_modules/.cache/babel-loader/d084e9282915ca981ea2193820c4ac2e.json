{"ast":null,"code":"const escapeReg = /[[\\]{}()*+?.\\\\^$|]/g;\n\nconst escapeRegExp = str => {\n  return str.replace(escapeReg, \"\\\\$&\");\n};\n\nconst StartsWith = (value, items) => {\n  return items.filter(item => {\n    const lowerText = item.text.toLowerCase();\n    return lowerText.startsWith(value.toLowerCase());\n  });\n};\n\nconst StartsWithPerTerm = (value, items) => {\n  const reg = new RegExp(`(^|\\\\s)${escapeRegExp(value.toLowerCase())}.*`, \"g\");\n  return items.filter(item => {\n    reg.lastIndex = 0;\n    return reg.test(item.text.toLowerCase());\n  });\n};\n\nconst Contains = (value, items) => {\n  return items.filter(item => {\n    const lowerText = item.text.toLowerCase();\n    return lowerText.includes(value.toLowerCase());\n  });\n};\n\nconst None = (_, items) => items;\n\nexport { StartsWithPerTerm, StartsWith, Contains, None };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/ComboBoxFilters.js"],"names":["escapeReg","escapeRegExp","str","replace","StartsWith","value","items","filter","item","lowerText","text","toLowerCase","startsWith","StartsWithPerTerm","reg","RegExp","lastIndex","test","Contains","includes","None","_"],"mappings":"AAAA,MAAMA,SAAS,GAAG,qBAAlB;;AAEA,MAAMC,YAAY,GAAGC,GAAG,IAAI;AAC3B,SAAOA,GAAG,CAACC,OAAJ,CAAYH,SAAZ,EAAuB,MAAvB,CAAP;AACA,CAFD;;AAIA,MAAMI,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,SAAOA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAI;AAC3B,UAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAlB;AAEA,WAAOF,SAAS,CAACG,UAAV,CAAqBP,KAAK,CAACM,WAAN,EAArB,CAAP;AACA,GAJM,CAAP;AAKA,CAND;;AAQA,MAAME,iBAAiB,GAAG,CAACR,KAAD,EAAQC,KAAR,KAAkB;AAC3C,QAAMQ,GAAG,GAAG,IAAIC,MAAJ,CAAY,UAASd,YAAY,CAACI,KAAK,CAACM,WAAN,EAAD,CAAsB,IAAvD,EAA4D,GAA5D,CAAZ;AAEA,SAAOL,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAI;AAC3BM,IAAAA,GAAG,CAACE,SAAJ,GAAgB,CAAhB;AAEA,WAAOF,GAAG,CAACG,IAAJ,CAAST,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAT,CAAP;AACA,GAJM,CAAP;AAKA,CARD;;AAUA,MAAMO,QAAQ,GAAG,CAACb,KAAD,EAAQC,KAAR,KAAkB;AAClC,SAAOA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAI;AAC3B,UAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAlB;AAEA,WAAOF,SAAS,CAACU,QAAV,CAAmBd,KAAK,CAACM,WAAN,EAAnB,CAAP;AACA,GAJM,CAAP;AAKA,CAND;;AAQA,MAAMS,IAAI,GAAG,CAACC,CAAD,EAAIf,KAAJ,KAAcA,KAA3B;;AAEA,SACCO,iBADD,EAECT,UAFD,EAGCc,QAHD,EAICE,IAJD","sourcesContent":["const escapeReg = /[[\\]{}()*+?.\\\\^$|]/g;\n\nconst escapeRegExp = str => {\n\treturn str.replace(escapeReg, \"\\\\$&\");\n};\n\nconst StartsWith = (value, items) => {\n\treturn items.filter(item => {\n\t\tconst lowerText = item.text.toLowerCase();\n\n\t\treturn lowerText.startsWith(value.toLowerCase());\n\t});\n};\n\nconst StartsWithPerTerm = (value, items) => {\n\tconst reg = new RegExp(`(^|\\\\s)${escapeRegExp(value.toLowerCase())}.*`, \"g\");\n\n\treturn items.filter(item => {\n\t\treg.lastIndex = 0;\n\n\t\treturn reg.test(item.text.toLowerCase());\n\t});\n};\n\nconst Contains = (value, items) => {\n\treturn items.filter(item => {\n\t\tconst lowerText = item.text.toLowerCase();\n\n\t\treturn lowerText.includes(value.toLowerCase());\n\t});\n};\n\nconst None = (_, items) => items;\n\nexport {\n\tStartsWithPerTerm,\n\tStartsWith,\n\tContains,\n\tNone,\n};\n"]},"metadata":{},"sourceType":"module"}