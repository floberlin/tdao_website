{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { createUseStyles } from 'react-jss';\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport * as spacing from '@ui5/webcomponents-react-base/dist/spacing';\nvar styles = {\n  card: {\n    backgroundColor: ThemingParameters.sapTile_Background,\n    border: \"0.0625rem solid \".concat(ThemingParameters.sapTile_BorderColor),\n    boxShadow: ThemingParameters.sapContent_Shadow0,\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    textAlign: 'start',\n    overflow: 'hidden',\n    position: 'relative',\n    fontFamily: ThemingParameters.sapFontFamily,\n    boxSizing: 'border-box',\n    width: '20rem'\n  },\n  content: spacing.sapUiContentPadding\n};\nvar styles$1 = styles;\nvar _excluded = [\"children\", \"style\", \"className\", \"tooltip\", \"header\"];\nvar useStyles = createUseStyles(styles$1, {\n  name: 'AnalyticalCard'\n});\n/**\n * The `AnalyticalCard` is mainly used for data visualization. It consists of two areas – a header area and a chart area with a visual representation of the data.<br />\n */\n\nvar AnalyticalCard = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      header = props.header,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var classes = useStyles();\n  var classNameString = clsx(classes.card, className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: classNameString,\n    style: style,\n    title: tooltip\n  }, rest), header, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, children));\n});\nAnalyticalCard.displayName = 'AnalyticalCard';\nexport { AnalyticalCard };","map":{"version":3,"sources":["../src/components/AnalyticalCard/AnalyticalCard.jss.ts","../src/components/AnalyticalCard/index.tsx"],"names":["styles","card","backgroundColor","ThemingParameters","border","boxShadow","borderRadius","textAlign","overflow","position","fontFamily","boxSizing","width","content","spacing","sapUiContentPadding","useStyles","createUseStyles","name","AnalyticalCard","forwardRef","children","style","className","tooltip","header","rest","props","classes","classNameString","clsx"],"mappings":";;;;;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEC,iBAAiB,CAD9B,kBAAA;AAEJC,IAAAA,MAAM,EAAA,mBAAA,MAAA,CAAqBD,iBAAiB,CAFxC,mBAEE,CAFF;AAGJE,IAAAA,SAAS,EAAEF,iBAAiB,CAHxB,kBAAA;AAIJG,IAAAA,YAAY,EAAEH,iBAAiB,CAJ3B,6BAAA;AAKJI,IAAAA,SAAS,EALL,OAAA;AAMJC,IAAAA,QAAQ,EANJ,QAAA;AAOJC,IAAAA,QAAQ,EAPJ,UAAA;AAQJC,IAAAA,UAAU,EAAEP,iBAAiB,CARzB,aAAA;AASJQ,IAAAA,SAAS,EATL,YAAA;AAUJC,IAAAA,KAAK,EAAE;AAVH,GADO;AAabC,EAAAA,OAAO,EAAEC,OAAO,CAACC;AAbJ,CAAf;AAgBA,IAAA,QAAA,GAAA,MAAA;;ACDA,IAAMC,SAAS,GAAGC,eAAe,CAAA,QAAA,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAjC;AACA;AACA;AACA;;IACMC,cAAc,GAAA,aAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAA8D;AAC9F,MAAQC,QAAR,GAAiEM,KAAjE,CAAA,QAAA;AAAA,MAAkBL,KAAlB,GAAiEK,KAAjE,CAAA,KAAA;AAAA,MAAyBJ,SAAzB,GAAiEI,KAAjE,CAAA,SAAA;AAAA,MAAoCH,OAApC,GAAiEG,KAAjE,CAAA,OAAA;AAAA,MAA6CF,MAA7C,GAAiEE,KAAjE,CAAA,MAAA;AAAA,MAAwDD,IAAxD,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAME,OAAO,GAAGZ,SAAhB,EAAA;AACA,MAAMa,eAAe,GAAGC,IAAI,CAACF,OAAO,CAAR,IAAA,EAA5B,SAA4B,CAA5B;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,GAAG,EAAR,GAAA;AAAe,IAAA,SAAS,EAAxB,eAAA;AAA2C,IAAA,KAAK,EAAhD,KAAA;AAAyD,IAAA,KAAK,EAAEJ;AAAhE,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACf;AAAxB,GAAA,EAHJ,QAGI,CAFF,CADF;AAL+B,CAAA,C;AAajCM,cAAc,CAAdA,WAAAA,GAAAA,gBAAAA","sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport * as spacing from '@ui5/webcomponents-react-base/dist/spacing';\n\nconst styles = {\n  card: {\n    backgroundColor: ThemingParameters.sapTile_Background,\n    border: `0.0625rem solid ${ThemingParameters.sapTile_BorderColor}`,\n    boxShadow: ThemingParameters.sapContent_Shadow0,\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    textAlign: 'start',\n    overflow: 'hidden',\n    position: 'relative',\n    fontFamily: ThemingParameters.sapFontFamily,\n    boxSizing: 'border-box',\n    width: '20rem'\n  },\n  content: spacing.sapUiContentPadding\n};\n\nexport default styles;\n","import { createUseStyles } from 'react-jss';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport clsx from 'clsx';\n\nimport styles from './AnalyticalCard.jss';\n\nexport interface AnalyticalCardPropTypes extends CommonProps {\n  /**\n   * The Card header Component. Using the `AnalyticalCardHeader` is recommended.\n   */\n  header?: ReactNode;\n  /**\n   * The content of the `AnalyticalCard`.\n   */\n  children: ReactNode | ReactNode[];\n}\n\nconst useStyles = createUseStyles(styles, { name: 'AnalyticalCard' });\n/**\n * The `AnalyticalCard` is mainly used for data visualization. It consists of two areas – a header area and a chart area with a visual representation of the data.<br />\n */\nconst AnalyticalCard = forwardRef((props: AnalyticalCardPropTypes, ref: Ref<HTMLDivElement>) => {\n  const { children, style, className, tooltip, header, ...rest } = props;\n  const classes = useStyles();\n  const classNameString = clsx(classes.card, className);\n\n  return (\n    <div ref={ref} className={classNameString} style={style} title={tooltip} {...rest}>\n      {header}\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n});\n\nAnalyticalCard.displayName = 'AnalyticalCard';\n\nexport { AnalyticalCard };\n"]},"metadata":{},"sourceType":"module"}