{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/DateRangePicker';\n/**\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/DateRangePicker\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar DateRangePicker = withWebComponent('ui5-daterange-picker', ['delimiter', 'accessibleName', 'accessibleNameRef', 'name', 'placeholder', 'value', 'valueState', 'formatPattern', 'maxDate', 'minDate', 'primaryCalendarType'], ['disabled', 'hideWeekNumbers', 'readonly', 'required'], ['valueStateMessage'], ['change', 'input']);\nDateRangePicker.displayName = 'DateRangePicker';\nDateRangePicker.defaultProps = {\n  disabled: false,\n  hideWeekNumbers: false,\n  placeholder: undefined,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\nexport { DateRangePicker };","map":{"version":3,"sources":["../src/webComponents/DateRangePicker/index.tsx"],"names":["DateRangePicker","withWebComponent","disabled","hideWeekNumbers","placeholder","readonly","required","valueState","ValueState","None"],"mappings":";;;AA2GA;AACA;AACA;AACA;AACA;;IACMA,eAAe,GAAGC,gBAAgB,CAAA,sBAAA,EAEtC,CAAA,WAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,aAAA,EAAA,OAAA,EAAA,YAAA,EAAA,eAAA,EAAA,SAAA,EAAA,SAAA,EAFsC,qBAEtC,CAFsC,EAetC,CAAA,UAAA,EAAA,iBAAA,EAAA,UAAA,EAfsC,UAetC,CAfsC,EAgBtC,CAhBsC,mBAgBtC,CAhBsC,EAiBtC,CAAA,QAAA,EAjBsC,OAiBtC,CAjBsC,C;AAoBxCD,eAAe,CAAfA,WAAAA,GAAAA,iBAAAA;AAEAA,eAAe,CAAfA,YAAAA,GAA+B;AAC7BE,EAAAA,QAAQ,EADqB,KAAA;AAE7BC,EAAAA,eAAe,EAFc,KAAA;AAG7BC,EAAAA,WAAW,EAHkB,SAAA;AAI7BC,EAAAA,QAAQ,EAJqB,KAAA;AAK7BC,EAAAA,QAAQ,EALqB,KAAA;AAM7BC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AANM,CAA/BT","sourcesContent":["import { CalendarType } from '@ui5/webcomponents-react/dist/CalendarType';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DateRangePickerDomRef } from '@ui5/webcomponents-react/interfaces/Ui5DateRangePickerDomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/DateRangePicker';\n\nexport interface DateRangePickerPropTypes extends Omit<CommonProps, 'onChange' | 'onInput'> {\n  /**\n   * Determines the symbol which separates the dates. If not supplied, the default time interval delimiter for the current locale will be used.\n   */\n  delimiter?: string;\n  /**\n   * Defines the aria-label attribute for the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Determines whether the component is displayed as disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the visibility of the week numbers column.\n   *\n   * **Note: **For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.****\n   */\n  hideWeekNumbers?: boolean;\n  /**\n   * Determines the name with which the component will be submitted in an HTML form.\n   *\n   * **Important:** For the `name` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines a short hint, intended to aid the user with data entry when the component has no value.\n   *\n   * **Note:** When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n   */\n  placeholder?: string;\n  /**\n   * Determines whether the component is displayed as read-only.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is required.\n   */\n  required?: boolean;\n  /**\n   * Defines a formatted date value.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the component.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Determines the format, displayed in the input field.\n   */\n  formatPattern?: string;\n  /**\n   * Determines the maximum date available for selection.\n   */\n  maxDate?: string;\n  /**\n   * Determines the Ð¼inimum date available for selection.\n   */\n  minDate?: string;\n  /**\n   * Sets a calendar type used for display. If not set, the calendar type of the global configuration is used.<br/>__Note:__ Calendar types other than Gregorian must be imported manually:<br />`import \"@ui5/webcomponents-localization/dist/features/calendar/{primaryCalendarType}.js\";`\n   */\n  primaryCalendarType?: CalendarType;\n  /**\n   * Defines the value state message that will be displayed as pop up under the component.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the component is in `Information`, `Warning` or `Error` value state.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  valueStateMessage?: ReactNode;\n  /**\n   * Fired when the input operation has finished by pressing Enter or on focusout.\n   */\n  onChange?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n  /**\n   * Fired when the value of the component is changed at each key stroke.\n   */\n  onInput?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n}\n\n/**\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/DateRangePicker\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst DateRangePicker = withWebComponent<DateRangePickerPropTypes, Ui5DateRangePickerDomRef>(\n  'ui5-daterange-picker',\n  [\n    'delimiter',\n    'accessibleName',\n    'accessibleNameRef',\n    'name',\n    'placeholder',\n    'value',\n    'valueState',\n    'formatPattern',\n    'maxDate',\n    'minDate',\n    'primaryCalendarType'\n  ],\n  ['disabled', 'hideWeekNumbers', 'readonly', 'required'],\n  ['valueStateMessage'],\n  ['change', 'input']\n);\n\nDateRangePicker.displayName = 'DateRangePicker';\n\nDateRangePicker.defaultProps = {\n  disabled: false,\n  hideWeekNumbers: false,\n  placeholder: undefined,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\n\nexport { DateRangePicker };\n"]},"metadata":{},"sourceType":"module"}