{"ast":null,"code":"import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { Label } from '@ui5/webcomponents-react/dist/Label';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport React, { isValidElement, cloneElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { addCustomCSS } from '@ui5/webcomponents-base/dist/Theming.js'; //TODO: remove this when ui5-webcomponents adjusted this in their repo\n\naddCustomCSS('ui5-checkbox', \"\\n:host .ui5-checkbox-icon {\\n position:absolute;\\n}\\n \");\nvar CENTER_ALIGNED_CHILDREN = new Set(['CheckBox', 'RadioButton', 'Switch', 'RangeSlider', 'Slider']);\nvar useStyles = createUseStyles({\n  label: {\n    gridColumnEnd: 'span var(--ui5wcr_form_label_span)',\n    justifySelf: 'var(--ui5wcr_form_label_text_align)',\n    textAlign: 'var(--ui5wcr_form_label_text_align)'\n  },\n  content: {\n    display: 'flex',\n    gridColumnEnd: 'span var(--ui5wcr_form_content_span)'\n  }\n}, {\n  name: 'FormItem'\n});\n\nvar renderLabel = function renderLabel(label, classes, styles) {\n  if (typeof label === 'string') {\n    return /*#__PURE__*/React.createElement(Label, {\n      className: classes.label,\n      style: styles,\n      wrappingType: WrappingType.Normal\n    }, label ? \"\".concat(label, \":\") : '');\n  }\n\n  if ( /*#__PURE__*/isValidElement(label)) {\n    var _label$props = label.props,\n        showColon = _label$props.showColon,\n        wrappingType = _label$props.wrappingType,\n        className = _label$props.className,\n        style = _label$props.style,\n        children = _label$props.children;\n    return /*#__PURE__*/cloneElement(label, {\n      showColon: showColon !== null && showColon !== void 0 ? showColon : true,\n      wrappingType: wrappingType !== null && wrappingType !== void 0 ? wrappingType : WrappingType.Normal,\n      className: \"\".concat(classes.label, \" \").concat(className !== null && className !== void 0 ? className : ''),\n      style: _objectSpread({\n        gridColumnStart: styles.gridColumnStart,\n        gridRowStart: styles.gridRowStart\n      }, style || {})\n    }, children !== null && children !== void 0 ? children : '');\n  }\n\n  return null;\n};\n/**\n * The `FormItem` is only used for calculating the final layout of the `Form`, thus it doesn't accept any other props than `label` and `children`, especially no `className`, `style` or `ref`.\n */\n\n\nvar FormItem = function FormItem(props) {\n  var _ref = props,\n      label = _ref.label,\n      children = _ref.children,\n      columnIndex = _ref.columnIndex,\n      rowIndex = _ref.rowIndex,\n      labelSpan = _ref.labelSpan,\n      lastGroupItem = _ref.lastGroupItem;\n  var classes = useStyles();\n  var gridColumnStart = (columnIndex !== null && columnIndex !== void 0 ? columnIndex : 0) * 12 + 1;\n  var gridRowStart = rowIndex !== null && rowIndex !== void 0 ? rowIndex : 0;\n  var contentGridColumnStart = columnIndex != null ? labelSpan === 12 ? gridColumnStart : gridColumnStart + (labelSpan !== null && labelSpan !== void 0 ? labelSpan : 0) : undefined;\n\n  if (labelSpan === 12) {\n    return /*#__PURE__*/React.createElement(FlexBox, {\n      direction: FlexBoxDirection.Column,\n      alignItems: FlexBoxAlignItems.Start,\n      style: {\n        gridColumnStart: gridColumnStart,\n        gridRowStart: gridRowStart,\n        gridColumnEnd: 'span 12',\n        placeItems: 'flex-start'\n      }\n    }, renderLabel(label, classes, {}), children);\n  }\n\n  var inlineLabelStyles = function inlineLabelStyles() {\n    var _type;\n\n    var styles = {\n      gridColumnStart: gridColumnStart,\n      gridRowStart: gridRowStart\n    };\n\n    if (CENTER_ALIGNED_CHILDREN.has(children === null || children === void 0 ? void 0 : (_type = children.type) === null || _type === void 0 ? void 0 : _type.displayName)) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        alignSelf: 'center',\n        paddingBottom: lastGroupItem ? '1rem' : 0\n      });\n    }\n\n    return styles;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderLabel(label, classes, inlineLabelStyles()), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    style: {\n      gridColumnStart: contentGridColumnStart,\n      gridRowStart: labelSpan === 12 ? gridRowStart + 1 : gridRowStart,\n      paddingBottom: lastGroupItem ? '1rem' : 0\n    }\n  }, children));\n};\n\nFormItem.displayName = 'FormItem';\nexport { FormItem };","map":{"version":3,"sources":["../src/components/FormItem/index.tsx"],"names":["addCustomCSS","CENTER_ALIGNED_CHILDREN","useStyles","createUseStyles","label","gridColumnEnd","justifySelf","textAlign","content","display","name","renderLabel","classes","WrappingType","Normal","isValidElement","showColon","wrappingType","className","style","children","cloneElement","gridColumnStart","styles","gridRowStart","FormItem","columnIndex","rowIndex","labelSpan","lastGroupItem","contentGridColumnStart","FlexBoxDirection","FlexBoxAlignItems","placeItems","inlineLabelStyles","alignSelf","paddingBottom"],"mappings":"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","sourcesContent":["import { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { Label, LabelPropTypes } from '@ui5/webcomponents-react/dist/Label';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport React, { cloneElement, CSSProperties, FC, isValidElement, ReactElement, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { addCustomCSS } from '@ui5/webcomponents-base/dist/Theming.js';\n\nexport interface FormItemPropTypes {\n  /**\n   * Label of the FormItem. Can be either a string or a `Label` component.\n   */\n  label?: string | ReactElement;\n  /**\n   * Content of the FormItem. Can be an arbitrary React Node.\n   */\n  children: ReactNode | ReactNode[];\n}\n\n//TODO: remove this when ui5-webcomponents adjusted this in their repo\naddCustomCSS(\n  'ui5-checkbox',\n  `\n:host .ui5-checkbox-icon {\n position:absolute;\n}\n `\n);\n\ninterface InternalProps extends FormItemPropTypes {\n  columnIndex?: number;\n  labelSpan?: number;\n  rowIndex?: number;\n  lastGroupItem?: boolean;\n}\n\nconst CENTER_ALIGNED_CHILDREN = new Set(['CheckBox', 'RadioButton', 'Switch', 'RangeSlider', 'Slider']);\n\nconst useStyles = createUseStyles(\n  {\n    label: {\n      gridColumnEnd: 'span var(--ui5wcr_form_label_span)',\n      justifySelf: 'var(--ui5wcr_form_label_text_align)',\n      textAlign: 'var(--ui5wcr_form_label_text_align)'\n    },\n    content: {\n      display: 'flex',\n      gridColumnEnd: 'span var(--ui5wcr_form_content_span)'\n    }\n  },\n  { name: 'FormItem' }\n);\n\nconst renderLabel = (label: ReactNode, classes: Record<'label' | 'content', string>, styles: CSSProperties) => {\n  if (typeof label === 'string') {\n    return (\n      <Label className={classes.label} style={styles} wrappingType={WrappingType.Normal}>\n        {label ? `${label}:` : ''}\n      </Label>\n    );\n  }\n\n  if (isValidElement(label)) {\n    const { showColon, wrappingType, className, style, children } = label.props;\n    return cloneElement<LabelPropTypes>(\n      label,\n      {\n        showColon: showColon ?? true,\n        wrappingType: wrappingType ?? WrappingType.Normal,\n        className: `${classes.label} ${className ?? ''}`,\n        style: {\n          gridColumnStart: styles.gridColumnStart,\n          gridRowStart: styles.gridRowStart,\n          ...(style || {})\n        }\n      },\n      children ?? ''\n    );\n  }\n\n  return null;\n};\n/**\n * The `FormItem` is only used for calculating the final layout of the `Form`, thus it doesn't accept any other props than `label` and `children`, especially no `className`, `style` or `ref`.\n */\nconst FormItem: FC<FormItemPropTypes> = (props: FormItemPropTypes) => {\n  const { label, children, columnIndex, rowIndex, labelSpan, lastGroupItem } = props as InternalProps;\n\n  const classes = useStyles();\n\n  const gridColumnStart = (columnIndex ?? 0) * 12 + 1;\n  const gridRowStart = rowIndex ?? 0;\n\n  const contentGridColumnStart =\n    columnIndex != null ? (labelSpan === 12 ? gridColumnStart : gridColumnStart + (labelSpan ?? 0)) : undefined;\n\n  if (labelSpan === 12) {\n    return (\n      <FlexBox\n        direction={FlexBoxDirection.Column}\n        alignItems={FlexBoxAlignItems.Start}\n        style={{ gridColumnStart, gridRowStart, gridColumnEnd: 'span 12', placeItems: 'flex-start' }}\n      >\n        {renderLabel(label, classes, {})}\n        {children}\n      </FlexBox>\n    );\n  }\n\n  const inlineLabelStyles = () => {\n    const styles = { gridColumnStart, gridRowStart };\n    if (CENTER_ALIGNED_CHILDREN.has((children as any)?.type?.displayName)) {\n      return {\n        ...styles,\n        alignSelf: 'center',\n        paddingBottom: lastGroupItem ? '1rem' : 0\n      };\n    }\n    return styles;\n  };\n\n  return (\n    <>\n      {renderLabel(label, classes, inlineLabelStyles())}\n      <div\n        className={classes.content}\n        style={{\n          gridColumnStart: contentGridColumnStart,\n          gridRowStart: labelSpan === 12 ? gridRowStart + 1 : gridRowStart,\n          paddingBottom: lastGroupItem ? '1rem' : 0\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nFormItem.displayName = 'FormItem';\n\nexport { FormItem };\n"]},"metadata":{},"sourceType":"module"}