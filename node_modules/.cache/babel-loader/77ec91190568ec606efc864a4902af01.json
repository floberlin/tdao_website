{"ast":null,"code":"var escapeReg = /[[\\]{}()*+?.\\\\^$|]/g;\n\nvar escapeRegExp = function escapeRegExp(str) {\n  return str.replace(escapeReg, \"\\\\$&\");\n};\n\nvar StartsWith = function StartsWith(value, items) {\n  return items.filter(function (item) {\n    var lowerText = item.text.toLowerCase();\n    return lowerText.startsWith(value.toLowerCase());\n  });\n};\n\nvar StartsWithPerTerm = function StartsWithPerTerm(value, items) {\n  var reg = new RegExp(\"(^|\\\\s)\".concat(escapeRegExp(value.toLowerCase()), \".*\"), \"g\");\n  return items.filter(function (item) {\n    reg.lastIndex = 0;\n    return reg.test(item.text.toLowerCase());\n  });\n};\n\nvar Contains = function Contains(value, items) {\n  return items.filter(function (item) {\n    var lowerText = item.text.toLowerCase();\n    return lowerText.includes(value.toLowerCase());\n  });\n};\n\nvar None = function None(_, items) {\n  return items;\n};\n\nexport { StartsWithPerTerm, StartsWith, Contains, None };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/ComboBoxFilters.js"],"names":["escapeReg","escapeRegExp","str","replace","StartsWith","value","items","filter","item","lowerText","text","toLowerCase","startsWith","StartsWithPerTerm","reg","RegExp","lastIndex","test","Contains","includes","None","_"],"mappings":"AAAA,IAAMA,SAAS,GAAG,qBAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG,EAAI;AAC3B,SAAOA,GAAG,CAACC,OAAJ,CAAYH,SAAZ,EAAuB,MAAvB,CAAP;AACA,CAFD;;AAIA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACpC,SAAOA,KAAK,CAACC,MAAN,CAAa,UAAAC,IAAI,EAAI;AAC3B,QAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAlB;AAEA,WAAOF,SAAS,CAACG,UAAV,CAAqBP,KAAK,CAACM,WAAN,EAArB,CAAP;AACA,GAJM,CAAP;AAKA,CAND;;AAQA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,KAAD,EAAQC,KAAR,EAAkB;AAC3C,MAAMQ,GAAG,GAAG,IAAIC,MAAJ,kBAAqBd,YAAY,CAACI,KAAK,CAACM,WAAN,EAAD,CAAjC,SAA4D,GAA5D,CAAZ;AAEA,SAAOL,KAAK,CAACC,MAAN,CAAa,UAAAC,IAAI,EAAI;AAC3BM,IAAAA,GAAG,CAACE,SAAJ,GAAgB,CAAhB;AAEA,WAAOF,GAAG,CAACG,IAAJ,CAAST,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAT,CAAP;AACA,GAJM,CAAP;AAKA,CARD;;AAUA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACb,KAAD,EAAQC,KAAR,EAAkB;AAClC,SAAOA,KAAK,CAACC,MAAN,CAAa,UAAAC,IAAI,EAAI;AAC3B,QAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAlB;AAEA,WAAOF,SAAS,CAACU,QAAV,CAAmBd,KAAK,CAACM,WAAN,EAAnB,CAAP;AACA,GAJM,CAAP;AAKA,CAND;;AAQA,IAAMS,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIf,KAAJ;AAAA,SAAcA,KAAd;AAAA,CAAb;;AAEA,SACCO,iBADD,EAECT,UAFD,EAGCc,QAHD,EAICE,IAJD","sourcesContent":["const escapeReg = /[[\\]{}()*+?.\\\\^$|]/g;\n\nconst escapeRegExp = str => {\n\treturn str.replace(escapeReg, \"\\\\$&\");\n};\n\nconst StartsWith = (value, items) => {\n\treturn items.filter(item => {\n\t\tconst lowerText = item.text.toLowerCase();\n\n\t\treturn lowerText.startsWith(value.toLowerCase());\n\t});\n};\n\nconst StartsWithPerTerm = (value, items) => {\n\tconst reg = new RegExp(`(^|\\\\s)${escapeRegExp(value.toLowerCase())}.*`, \"g\");\n\n\treturn items.filter(item => {\n\t\treg.lastIndex = 0;\n\n\t\treturn reg.test(item.text.toLowerCase());\n\t});\n};\n\nconst Contains = (value, items) => {\n\treturn items.filter(item => {\n\t\tconst lowerText = item.text.toLowerCase();\n\n\t\treturn lowerText.includes(value.toLowerCase());\n\t});\n};\n\nconst None = (_, items) => items;\n\nexport {\n\tStartsWithPerTerm,\n\tStartsWith,\n\tContains,\n\tNone,\n};\n"]},"metadata":{},"sourceType":"module"}