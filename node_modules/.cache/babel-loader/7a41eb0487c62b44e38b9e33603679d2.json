{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\nvar theme;\n\nvar getTheme = function getTheme() {\n  if (theme === undefined) {\n    theme = getConfiguredTheme();\n  }\n\n  return theme;\n};\n\nvar setTheme = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newTheme) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(theme === newTheme)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            theme = newTheme; // Update CSS Custom Properties\n\n            _context.next = 5;\n            return applyTheme(theme);\n\n          case 5:\n            _context.next = 7;\n            return reRenderAllUI5Elements({\n              themeAware: true\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function setTheme(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {String}\n * @returns {boolean}\n */\n\n\nvar isTheme = function isTheme(_theme) {\n  var currentTheme = getTheme();\n  return currentTheme === _theme || currentTheme === \"\".concat(_theme, \"_exp\");\n};\n\nexport { getTheme, setTheme, isTheme };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/config/Theme.js"],"names":["getTheme","getConfiguredTheme","reRenderAllUI5Elements","applyTheme","theme","undefined","setTheme","newTheme","themeAware","isTheme","_theme","currentTheme"],"mappings":";;AAAA,SAASA,QAAQ,IAAIC,kBAArB,QAA+C,4BAA/C;AACA,SAASC,sBAAT,QAAuC,cAAvC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAIC,KAAJ;;AAEA,IAAMJ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,MAAII,KAAK,KAAKC,SAAd,EAAyB;AACxBD,IAAAA,KAAK,GAAGH,kBAAkB,EAA1B;AACA;;AAED,SAAOG,KAAP;AACA,CAND;;AAQA,IAAME,QAAQ;AAAA,sEAAG,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZH,KAAK,KAAKG,QADE;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKhBH,YAAAA,KAAK,GAAGG,QAAR,CALgB,CAOhB;;AAPgB;AAAA,mBAQVJ,UAAU,CAACC,KAAD,CARA;;AAAA;AAAA;AAAA,mBASVF,sBAAsB,CAAC;AAAEM,cAAAA,UAAU,EAAE;AAAd,aAAD,CATZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARF,QAAQ;AAAA;AAAA;AAAA,GAAd;AAYA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM,EAAI;AACzB,MAAMC,YAAY,GAAGX,QAAQ,EAA7B;AACA,SAAOW,YAAY,KAAKD,MAAjB,IAA2BC,YAAY,eAAQD,MAAR,SAA9C;AACA,CAHD;;AAKA,SACCV,QADD,EAECM,QAFD,EAGCG,OAHD","sourcesContent":["import { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\n\nlet theme;\n\nconst getTheme = () => {\n\tif (theme === undefined) {\n\t\ttheme = getConfiguredTheme();\n\t}\n\n\treturn theme;\n};\n\nconst setTheme = async newTheme => {\n\tif (theme === newTheme) {\n\t\treturn;\n\t}\n\n\ttheme = newTheme;\n\n\t// Update CSS Custom Properties\n\tawait applyTheme(theme);\n\tawait reRenderAllUI5Elements({ themeAware: true });\n};\n\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {String}\n * @returns {boolean}\n */\nconst isTheme = _theme => {\n\tconst currentTheme = getTheme();\n\treturn currentTheme === _theme || currentTheme === `${_theme}_exp`;\n};\n\nexport {\n\tgetTheme,\n\tsetTheme,\n\tisTheme,\n};\n"]},"metadata":{},"sourceType":"module"}