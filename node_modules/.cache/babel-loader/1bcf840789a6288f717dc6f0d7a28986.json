{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/MultiComboBox.js';\n/**\n * The `MultiComboBox` component consists of a list box with items and a text field allowing the user to either type a value directly into the text field, or choose from the list of existing items. The drop-down list is used for selecting and filtering values, it enables users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to expand/collapse the list of available options. The options in the list have checkboxes that permit multi-selection. Entered values are displayed as tokens.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/MultiComboBox\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar MultiComboBox = withWebComponent('ui5-multi-combobox', ['filter', 'placeholder', 'value', 'valueState'], ['allowCustomValues', 'disabled', 'readonly', 'required'], ['icon', 'valueStateMessage'], ['change', 'input', 'open-change', 'selection-change']);\nMultiComboBox.displayName = 'MultiComboBox';\nMultiComboBox.defaultProps = {\n  filter: 'StartsWithPerTerm',\n  valueState: ValueState.None\n};\nexport { MultiComboBox };","map":{"version":3,"sources":["../src/webComponents/MultiComboBox/index.tsx"],"names":["MultiComboBox","withWebComponent","filter","valueState","ValueState","None"],"mappings":";;;AAyGA;AACA;AACA;AACA;AACA;;IACMA,aAAa,GAAGC,gBAAgB,CAAA,oBAAA,EAEpC,CAAA,QAAA,EAAA,aAAA,EAAA,OAAA,EAFoC,YAEpC,CAFoC,EAGpC,CAAA,mBAAA,EAAA,UAAA,EAAA,UAAA,EAHoC,UAGpC,CAHoC,EAIpC,CAAA,MAAA,EAJoC,mBAIpC,CAJoC,EAKpC,CAAA,QAAA,EAAA,OAAA,EAAA,aAAA,EALoC,kBAKpC,CALoC,C;AAQtCD,aAAa,CAAbA,WAAAA,GAAAA,eAAAA;AAEAA,aAAa,CAAbA,YAAAA,GAA6B;AAC3BE,EAAAA,MAAM,EADqB,mBAAA;AAE3BC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AAFI,CAA7BL","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/MultiComboBox.js';\n\ninterface MultiComboBoxAttributes {\n  /**\n   * Defines if the user input will be prevented, if no matching item has been found\n   */\n  allowCustomValues?: boolean;\n  /**\n   * Defines whether the component is in disabled state.\n   *\n   * **Note:** A disabled component is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the filter type of the component. Available options are: `StartsWithPerTerm`, `StartsWith`, `Contains` and `None`.\n   */\n  filter?: string;\n  /**\n   * Defines a short hint intended to aid the user with data entry when the component has no value.\n   */\n  placeholder?: string;\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the value of the component.\n   *\n   * **Note:** The property is updated upon typing.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the component.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState | keyof typeof ValueState;\n}\n\nexport interface MultiComboBoxDomRef extends MultiComboBoxAttributes, Ui5DomRef {\n  /**\n   * Indicates whether the dropdown is open. True if the dropdown is open, false otherwise.\n   */\n  readonly open: boolean;\n}\n\nexport interface MultiComboBoxPropTypes extends MultiComboBoxAttributes, Omit<CommonProps, 'onChange' | 'onInput'> {\n  /**\n   * Defines the component items.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the icon to be displayed in the component.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  icon?: ReactNode;\n  /**\n   * Defines the value state message that will be displayed as pop up under the component.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the component is in `Information`, `Warning` or `Error` value state.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  valueStateMessage?: ReactNode | ReactNode[];\n  /**\n   * Fired when the input operation has finished by pressing Enter or on focusout.\n   */\n  onChange?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n  /**\n   * Fired when the value of the component changes at each keystroke.\n   */\n  onInput?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n  /**\n   * Fired when the dropdown is opened or closed.\n   */\n  onOpenChange?: (event: Ui5CustomEvent<HTMLInputElement>) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<HTMLInputElement, { items: unknown[] }>) => void;\n}\n\n/**\n * The `MultiComboBox` component consists of a list box with items and a text field allowing the user to either type a value directly into the text field, or choose from the list of existing items. The drop-down list is used for selecting and filtering values, it enables users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to expand/collapse the list of available options. The options in the list have checkboxes that permit multi-selection. Entered values are displayed as tokens.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/MultiComboBox\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst MultiComboBox = withWebComponent<MultiComboBoxPropTypes, MultiComboBoxDomRef>(\n  'ui5-multi-combobox',\n  ['filter', 'placeholder', 'value', 'valueState'],\n  ['allowCustomValues', 'disabled', 'readonly', 'required'],\n  ['icon', 'valueStateMessage'],\n  ['change', 'input', 'open-change', 'selection-change']\n);\n\nMultiComboBox.displayName = 'MultiComboBox';\n\nMultiComboBox.defaultProps = {\n  filter: 'StartsWithPerTerm',\n  valueState: ValueState.None\n};\n\nexport { MultiComboBox };\n"]},"metadata":{},"sourceType":"module"}