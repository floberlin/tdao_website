{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { getLastTabbableElement } from \"@ui5/webcomponents-base/dist/util/TabbableElements.js\";\nimport { isTabNext, isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListGrowingMode from \"./types/ListGrowingMode.js\";\nimport ListSeparators from \"./types/ListSeparators.js\";\nimport BusyIndicator from \"./BusyIndicator.js\"; // Template\n\nimport ListTemplate from \"./generated/templates/ListTemplate.lit.js\"; // Styles\n\nimport listCss from \"./generated/themes/List.css.js\"; // Texts\n\nimport { LOAD_MORE_TEXT, ARIA_LABEL_LIST_SELECTABLE, ARIA_LABEL_LIST_MULTISELECTABLE, ARIA_LABEL_LIST_DELETABLE } from \"./generated/i18n/i18n-defaults.js\";\nconst INFINITE_SCROLL_DEBOUNCE_RATE = 250; // ms\n\nconst PAGE_UP_DOWN_SIZE = 10;\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-list\",\n  managedSlots: true,\n  fastNavigation: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.List.prototype */\n  {\n    /**\n     * Defines the component header.\n     * <br><br>\n     * <b>Note:</b> When <code>header</code> is set, the\n     * <code>headerText</code> property is ignored.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    header: {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the items of the component.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-li</code>, <code>ui5-li-custom</code>, and <code>ui5-li-groupheader</code> for the intended design.\n     *\n     * @type {sap.ui.webcomponents.main.IListItem[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      propertyName: \"items\",\n      type: HTMLElement\n    }\n  },\n  properties:\n  /** @lends  sap.ui.webcomponents.main.List.prototype */\n  {\n    /**\n     * Defines the component header text.\n     * <br><br>\n     * <b>Note:</b> If <code>header</code> is set this property is ignored.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    headerText: {\n      type: String\n    },\n\n    /**\n     * Defines the footer text.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    footerText: {\n      type: String\n    },\n\n    /**\n     * Determines whether the component is indented.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    indent: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the mode of the component.\n     * <br><br>\n     * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,\n     * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.\n     *\n     * @type {ListMode}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    mode: {\n      type: ListMode,\n      defaultValue: ListMode.None\n    },\n\n    /**\n     * Defines the text that is displayed when the component contains no items.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    noDataText: {\n      type: String\n    },\n\n    /**\n     * Defines the item separator style that is used.\n     * <br><br>\n     * <b>Notes:</b>\n     * <ul>\n     * <li>Avalaible options are <code>All</code>, <code>Inner</code>, and <code>None</code>.</li>\n     * <li>When set to <code>None</code>, none of the items are separated by horizontal lines.</li>\n     * <li>When set to <code>Inner</code>, the first item doesn't have a top separator and the last\n     * item doesn't have a bottom separator.</li>\n     * </ul>\n     *\n     * @type {ListSeparators}\n     * @defaultvalue \"All\"\n     * @public\n     */\n    separators: {\n      type: ListSeparators,\n      defaultValue: ListSeparators.All\n    },\n\n    /**\n     * Defines whether the component will have growing capability either by pressing a <code>More</code> button,\n     * or via user scroll. In both cases <code>load-more</code> event is fired.\n     * <br><br>\n     *\n     * Available options:\n     * <br><br>\n     * <code>Button</code> - Shows a <code>More</code> button at the bottom of the list,\n     * pressing of which triggers the <code>load-more</code> event.\n     * <br>\n     * <code>Scroll</code> - The <code>load-more</code> event is triggered when the user scrolls to the bottom of the list;\n     * <br>\n     * <code>None</code> (default) - The growing is off.\n     * <br><br>\n     *\n     * <b>Restrictions:</b> <code>growing=\"Scroll\"</code> is not supported for Internet Explorer,\n     * on IE the component will fallback to <code>growing=\"Button\"</code>.\n     * @type {ListGrowingMode}\n     * @defaultvalue \"None\"\n     * @since 1.0.0-rc.13\n     * @public\n     */\n    growing: {\n      type: ListGrowingMode,\n      defaultValue: ListGrowingMode.None\n    },\n\n    /**\n     * Defines if the component would display a loading indicator over the list.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.0.0-rc.6\n     */\n    busy: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n     *\n     * @type {Integer}\n     * @defaultValue 1000\n     * @public\n     */\n    busyDelay: {\n      type: Integer,\n      defaultValue: 1000\n    },\n\n    /**\n     * Defines the accessible name of the component.\n     *\n     * @type {String}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String\n    },\n\n    /**\n     * Defines the IDs of the elements that label the input.\n     *\n     * @type {String}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleNameRef: {\n      type: String,\n      defaultValue: \"\"\n    },\n\n    /**\n     * Defines the accessible role of the component.\n     * <br><br>\n     * @public\n     * @type {String}\n     * @defaultvalue \"list\"\n     * @since 1.0.0-rc.15\n     */\n    accessibleRole: {\n      type: String,\n      defaultValue: \"list\"\n    },\n\n    /**\n     * Defines if the entire list is in view port.\n     * @private\n     */\n    _inViewport: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the active state of the <code>More</code> button.\n     * @private\n     */\n    _loadMoreActive: {\n      type: Boolean\n    }\n  },\n  events:\n  /** @lends  sap.ui.webcomponents.main.List.prototype */\n  {\n    /**\n     * Fired when an item is activated, unless the item's <code>type</code> property\n     * is set to <code>Inactive</code>.\n     *\n     * @event sap.ui.webcomponents.main.List#item-click\n     * @allowPreventDefault\n     * @param {HTMLElement} item The clicked item.\n     * @public\n     */\n    \"item-click\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the <code>Close</code> button of any item is clicked\n     * <br><br>\n     * <b>Note:</b> This event is applicable to <code>ui5-li-notification</code> items only,\n     * not to be confused with <code>item-delete</code>.\n     *\n     * @event sap.ui.webcomponents.main.List#item-close\n     * @param {HTMLElement} item the item about to be closed.\n     * @public\n     * @since 1.0.0-rc.8\n     */\n    \"item-close\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the <code>Toggle</code> button of any item is clicked.\n     * <br><br>\n     * <b>Note:</b> This event is applicable to <code>ui5-li-notification-group</code> items only.\n     *\n     * @event sap.ui.webcomponents.main.List#item-toggle\n     * @param {HTMLElement} item the toggled item.\n     * @public\n     * @since 1.0.0-rc.8\n     */\n    \"item-toggle\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the Delete button of any item is pressed.\n     * <br><br>\n     * <b>Note:</b> A Delete button is displayed on each item,\n     * when the component <code>mode</code> property is set to <code>Delete</code>.\n     *\n     * @event sap.ui.webcomponents.main.List#item-delete\n     * @param {HTMLElement} item the deleted item.\n     * @public\n     */\n    \"item-delete\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when selection is changed by user interaction\n     * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n     *\n     * @event sap.ui.webcomponents.main.List#selection-change\n     * @param {Array} selectedItems An array of the selected items.\n     * @param {Array} previouslySelectedItems An array of the previously selected items.\n     * @public\n     */\n    \"selection-change\": {\n      detail: {\n        selectedItems: {\n          type: Array\n        },\n        previouslySelectedItems: {\n          type: Array\n        },\n        selectionComponentPressed: {\n          type: Boolean\n        } // protected, indicates if the user used the selection components to change the selection\n\n      }\n    },\n\n    /**\n     * Fired when the user scrolls to the bottom of the list.\n     * <br><br>\n     * <b>Note:</b> The event is fired when the <code>growing='Scroll'</code> property is enabled.\n     *\n     * @event sap.ui.webcomponents.main.List#load-more\n     * @public\n     * @since 1.0.0-rc.6\n     */\n    \"load-more\": {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-list</code> component allows displaying a list of items, advanced keyboard\n * handling support for navigating between items, and predefined modes to improve the development efficiency.\n * <br><br>\n * The <code>ui5-list</code> is a container for the available list items:\n * <ul>\n * <li><code>ui5-li</code></li>\n * <li><code>ui5-li-custom</code></li>\n * <li><code>ui5-li-groupheader</code></li>\n * </ul>\n * <br><br>\n * To benefit from the built-in selection mechanism, you can use the available\n * selection modes, such as\n * <code>SingleSelect</code>, <code>MultiSelect</code> and <code>Delete</code>.\n * <br><br>\n * Additionally, the <code>ui5-list</code> provides header, footer, and customization for the list item separators.\n *\n * <br><br>\n * <h3>Keyboard Handling</h3>\n *\n * <h4>Basic Navigation</h4\n * The <code>ui5-list</code> provides advanced keyboard handling.\n * When a list is focused the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n *\n * <ul>\n * <li>[UP/DOWN] - Navigates up and down the items</li>\n * <li>[HOME] - Navigates to first item</li>\n * <li>[END] - Navigates to the last item</li>\n * </ul>\n *\n * The user can use the following keyboard shortcuts to perform actions (such as select, delete),\n * when the <code>mode</code> property is in use:\n * <ul>\n * <li>[SPACE] - Select an item (if <code>type</code> is 'Active') when <code>mode</code> is selection</li>\n * <li>[DELETE] - Delete an item if <code>mode</code> property is <code>Delete</code></li>\n * </ul>\n *\n * <h4>Fast Navigation</h4>\n * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.\n * In order to use this functionality, you need to import the following module:\n * <code>import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"</code>\n * <br><br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/List.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/StandardListItem.js\";</code> (for <code>ui5-li</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/CustomListItem.js\";</code> (for <code>ui5-li-custom</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/GroupHeaderListItem.js\";</code> (for <code>ui5-li-groupheader</code>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.List\n * @extends UI5Element\n * @tagname ui5-list\n * @appenddocs StandardListItem CustomListItem GroupHeaderListItem\n * @public\n */\n\nclass List extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return ListTemplate;\n  }\n\n  static get styles() {\n    return listCss;\n  }\n\n  static async onDefine() {\n    List.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  static get dependencies() {\n    return [BusyIndicator];\n  }\n\n  constructor() {\n    super();\n    this.initItemNavigation(); // Stores the last focused item within the internal ul element.\n\n    this._previouslyFocusedItem = null; // Indicates that the List is forwarding the focus before or after the internal ul.\n\n    this._forwardingFocus = false;\n    this._previouslySelectedItem = null; // Indicates that the List has already subscribed for resize.\n\n    this.resizeListenerAttached = false; // Indicates if the IntersectionObserver started observing the List\n\n    this.listEndObserved = false;\n    this.addEventListener(\"ui5-_press\", this.onItemPress.bind(this));\n    this.addEventListener(\"ui5-close\", this.onItemClose.bind(this));\n    this.addEventListener(\"ui5-toggle\", this.onItemToggle.bind(this));\n    this.addEventListener(\"ui5-_focused\", this.onItemFocused.bind(this));\n    this.addEventListener(\"ui5-_forward-after\", this.onForwardAfter.bind(this));\n    this.addEventListener(\"ui5-_forward-before\", this.onForwardBefore.bind(this));\n    this.addEventListener(\"ui5-_selection-requested\", this.onSelectionRequested.bind(this));\n    this.addEventListener(\"ui5-_focus-requested\", this.focusUploadCollectionItem.bind(this));\n    this._handleResize = this.checkListInViewport.bind(this); // Indicates the List bottom most part has been detected by the IntersectionObserver\n    // for the first time.\n\n    this.initialIntersection = true;\n  }\n\n  onExitDOM() {\n    this.unobserveListEnd();\n    this.resizeListenerAttached = false;\n    ResizeHandler.deregister(this.getDomRef(), this._handleResize);\n  }\n\n  onBeforeRendering() {\n    this.prepareListItems();\n  }\n\n  onAfterRendering() {\n    if (this.growsOnScroll) {\n      this.observeListEnd();\n    } else if (this.listEndObserved) {\n      this.unobserveListEnd();\n    }\n\n    if (this.grows) {\n      this.checkListInViewport();\n      this.attachForResize();\n    }\n  }\n\n  attachForResize() {\n    if (!this.resizeListenerAttached) {\n      this.resizeListenerAttached = true;\n      ResizeHandler.register(this.getDomRef(), this._handleResize);\n    }\n  }\n\n  get shouldRenderH1() {\n    return !this.header.length && this.headerText;\n  }\n\n  get headerID() {\n    return `${this._id}-header`;\n  }\n\n  get modeLabelID() {\n    return `${this._id}-modeLabel`;\n  }\n\n  get listEndDOM() {\n    return this.shadowRoot.querySelector(\".ui5-list-end-marker\");\n  }\n\n  get hasData() {\n    return this.getSlottedNodes(\"items\").length !== 0;\n  }\n\n  get showNoDataText() {\n    return !this.hasData && this.noDataText;\n  }\n\n  get isDelete() {\n    return this.mode === ListMode.Delete;\n  }\n\n  get isSingleSelect() {\n    return [ListMode.SingleSelect, ListMode.SingleSelectBegin, ListMode.SingleSelectEnd, ListMode.SingleSelectAuto].includes(this.mode);\n  }\n\n  get isMultiSelect() {\n    return this.mode === ListMode.MultiSelect;\n  }\n\n  get ariaLabelledBy() {\n    if (this.accessibleNameRef || this.accessibleName) {\n      return undefined;\n    }\n\n    const ids = [];\n\n    if (this.isMultiSelect || this.isSingleSelect || this.isDelete) {\n      ids.push(this.modeLabelID);\n    }\n\n    if (this.shouldRenderH1) {\n      ids.push(this.headerID);\n    }\n\n    return ids.length ? ids.join(\" \") : undefined;\n  }\n\n  get ariaLabelTxt() {\n    return getEffectiveAriaLabelText(this);\n  }\n\n  get ariaLabelModeText() {\n    if (this.isMultiSelect) {\n      return List.i18nBundle.getText(ARIA_LABEL_LIST_MULTISELECTABLE);\n    }\n\n    if (this.isSingleSelect) {\n      return List.i18nBundle.getText(ARIA_LABEL_LIST_SELECTABLE);\n    }\n\n    if (this.isDelete) {\n      return List.i18nBundle.getText(ARIA_LABEL_LIST_DELETABLE);\n    }\n\n    return undefined;\n  }\n\n  get grows() {\n    return this.growing !== ListGrowingMode.None;\n  }\n\n  get growsOnScroll() {\n    return this.growing === ListGrowingMode.Scroll && !isIE();\n  }\n\n  get growsWithButton() {\n    if (isIE()) {\n      // On IE fallback to \"More\" button, even if growing of type \"Scroll\" is set.\n      return this.grows;\n    }\n\n    return this.growing === ListGrowingMode.Button;\n  }\n\n  get _growingButtonText() {\n    return List.i18nBundle.getText(LOAD_MORE_TEXT);\n  }\n\n  get busyIndPosition() {\n    if (isIE() || !this.grows) {\n      return \"absolute\";\n    }\n\n    return this._inViewport ? \"absolute\" : \"sticky\";\n  }\n\n  get styles() {\n    return {\n      busyInd: {\n        position: this.busyIndPosition\n      }\n    };\n  }\n\n  initItemNavigation() {\n    this._itemNavigation = new ItemNavigation(this, {\n      skipItemsSize: PAGE_UP_DOWN_SIZE,\n      // PAGE_UP and PAGE_DOWN will skip trough 10 items\n      navigationMode: NavigationMode.Vertical,\n      getItemsCallback: () => this.getEnabledItems()\n    });\n  }\n\n  prepareListItems() {\n    const slottedItems = this.getSlottedNodes(\"items\");\n    slottedItems.forEach((item, key) => {\n      const isLastChild = key === slottedItems.length - 1;\n      const showBottomBorder = this.separators === ListSeparators.All || this.separators === ListSeparators.Inner && !isLastChild;\n      item._mode = this.mode;\n      item.hasBorder = showBottomBorder;\n    });\n    this._previouslySelectedItem = null;\n  }\n\n  async observeListEnd() {\n    if (!this.listEndObserved) {\n      await renderFinished();\n      this.getIntersectionObserver().observe(this.listEndDOM);\n      this.listEndObserved = true;\n    }\n  }\n\n  unobserveListEnd() {\n    if (this.growingIntersectionObserver) {\n      this.growingIntersectionObserver.disconnect();\n      this.growingIntersectionObserver = null;\n      this.listEndObserved = false;\n    }\n  }\n\n  onInteresection(entries) {\n    if (this.initialIntersection) {\n      this.initialIntersection = false;\n      return;\n    }\n\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        debounce(this.loadMore.bind(this), INFINITE_SCROLL_DEBOUNCE_RATE);\n      }\n    });\n  }\n  /*\n  * ITEM SELECTION BASED ON THE CURRENT MODE\n  */\n\n\n  onSelectionRequested(event) {\n    const previouslySelectedItems = this.getSelectedItems();\n    let selectionChange = false;\n    this._selectionRequested = true;\n\n    if (this[`handle${this.mode}`]) {\n      selectionChange = this[`handle${this.mode}`](event.detail.item, event.detail.selected);\n    }\n\n    if (selectionChange) {\n      this.fireEvent(\"selection-change\", {\n        selectedItems: this.getSelectedItems(),\n        previouslySelectedItems,\n        selectionComponentPressed: event.detail.selectionComponentPressed,\n        key: event.detail.key\n      });\n    }\n  }\n\n  handleSingleSelect(item) {\n    if (item.selected) {\n      return false;\n    }\n\n    this.deselectSelectedItems();\n    item.selected = true;\n    return true;\n  }\n\n  handleSingleSelectBegin(item) {\n    return this.handleSingleSelect(item);\n  }\n\n  handleSingleSelectEnd(item) {\n    return this.handleSingleSelect(item);\n  }\n\n  handleSingleSelectAuto(item) {\n    return this.handleSingleSelect(item);\n  }\n\n  handleMultiSelect(item, selected) {\n    item.selected = selected;\n    return true;\n  }\n\n  handleDelete(item) {\n    this.fireEvent(\"item-delete\", {\n      item\n    });\n  }\n\n  deselectSelectedItems() {\n    this.getSelectedItems().forEach(item => {\n      item.selected = false;\n    });\n  }\n\n  getSelectedItems() {\n    return this.getSlottedNodes(\"items\").filter(item => item.selected);\n  }\n\n  getEnabledItems() {\n    return this.getSlottedNodes(\"items\").filter(item => !item.disabled);\n  }\n\n  _onkeydown(event) {\n    if (isTabNext(event)) {\n      this._handleTabNext(event);\n    }\n  }\n\n  _onLoadMoreKeydown(event) {\n    if (isSpace(event)) {\n      event.preventDefault();\n      this._loadMoreActive = true;\n    }\n\n    if (isEnter(event)) {\n      this._onLoadMoreClick();\n\n      this._loadMoreActive = true;\n    }\n\n    if (isTabNext(event)) {\n      this.setPreviouslyFocusedItem(event.target);\n      this.focusAfterElement();\n    }\n  }\n\n  _onLoadMoreKeyup(event) {\n    if (isSpace(event)) {\n      this._onLoadMoreClick();\n    }\n\n    this._loadMoreActive = false;\n  }\n\n  _onLoadMoreMousedown() {\n    this._loadMoreActive = true;\n  }\n\n  _onLoadMoreMouseup() {\n    this._loadMoreActive = false;\n  }\n\n  _onLoadMoreClick() {\n    this.loadMore();\n  }\n\n  checkListInViewport() {\n    this._inViewport = isElementInView(this.getDomRef());\n  }\n\n  loadMore() {\n    this.fireEvent(\"load-more\");\n  }\n  /*\n  * KEYBOARD SUPPORT\n  */\n\n\n  _handleTabNext(event) {\n    // If forward navigation is performed, we check if the List has headerToolbar.\n    // If yes - we check if the target is at the last tabbable element of the headerToolbar\n    // to forward correctly the focus to the selected, previously focused or to the first list item.\n    let lastTabbableEl;\n    const target = this.getNormalizedTarget(event.target);\n\n    if (this.headerToolbar) {\n      lastTabbableEl = this.getHeaderToolbarLastTabbableElement();\n    }\n\n    if (!lastTabbableEl) {\n      return;\n    }\n\n    if (lastTabbableEl === target) {\n      if (this.getFirstItem(x => x.selected && !x.disabled)) {\n        this.focusFirstSelectedItem();\n      } else if (this.getPreviouslyFocusedItem()) {\n        this.focusPreviouslyFocusedItem();\n      } else {\n        this.focusFirstItem();\n      }\n\n      event.stopImmediatePropagation();\n      event.preventDefault();\n    }\n  }\n\n  _onfocusin(event) {\n    // If the focusin event does not origin from one of the 'triggers' - ignore it.\n    if (!this.isForwardElement(this.getNormalizedTarget(event.target))) {\n      event.stopImmediatePropagation();\n      return;\n    } // The focus arrives in the List for the first time.\n    // If there is selected item - focus it or focus the first item.\n\n\n    if (!this.getPreviouslyFocusedItem()) {\n      if (this.getFirstItem(x => x.selected && !x.disabled)) {\n        this.focusFirstSelectedItem();\n      } else {\n        this.focusFirstItem();\n      }\n\n      event.stopImmediatePropagation();\n      return;\n    } // The focus returns to the List,\n    // focus the first selected item or the previously focused element.\n\n\n    if (!this.getForwardingFocus()) {\n      if (this.getFirstItem(x => x.selected && !x.disabled)) {\n        this.focusFirstSelectedItem();\n      } else {\n        this.focusPreviouslyFocusedItem();\n      }\n\n      event.stopImmediatePropagation();\n    }\n\n    this.setForwardingFocus(false);\n  }\n\n  isForwardElement(node) {\n    const nodeId = node.id;\n    const afterElement = this.getAfterElement();\n    const beforeElement = this.getBeforeElement();\n\n    if (this._id === nodeId || beforeElement && beforeElement.id === nodeId) {\n      return true;\n    }\n\n    return afterElement && afterElement.id === nodeId;\n  }\n\n  onItemFocused(event) {\n    const target = event.target;\n\n    this._itemNavigation.setCurrentItem(target);\n\n    this.fireEvent(\"item-focused\", {\n      item: target\n    });\n\n    if (this.mode === ListMode.SingleSelectAuto) {\n      this.onSelectionRequested({\n        detail: {\n          item: target,\n          selectionComponentPressed: false,\n          selected: true,\n          key: event.detail.key\n        }\n      });\n    }\n  }\n\n  onItemPress(event) {\n    const pressedItem = event.detail.item;\n\n    if (!this.fireEvent(\"item-click\", {\n      item: pressedItem\n    }, true)) {\n      return;\n    }\n\n    if (!this._selectionRequested && this.mode !== ListMode.Delete) {\n      this._selectionRequested = true;\n      this.onSelectionRequested({\n        detail: {\n          item: pressedItem,\n          selectionComponentPressed: false,\n          selected: !pressedItem.selected,\n          key: event.detail.key\n        }\n      });\n    }\n\n    this._selectionRequested = false;\n  } // This is applicable to NoficationListItem\n\n\n  onItemClose(event) {\n    this.fireEvent(\"item-close\", {\n      item: event.detail.item\n    });\n  }\n\n  onItemToggle(event) {\n    this.fireEvent(\"item-toggle\", {\n      item: event.detail.item\n    });\n  }\n\n  onForwardBefore(event) {\n    this.setPreviouslyFocusedItem(event.target);\n    this.focusBeforeElement();\n    event.stopImmediatePropagation();\n  }\n\n  onForwardAfter(event) {\n    this.setPreviouslyFocusedItem(event.target);\n\n    if (!this.growsWithButton) {\n      this.focusAfterElement();\n    }\n  }\n\n  focusBeforeElement() {\n    this.setForwardingFocus(true);\n    this.getBeforeElement().focus();\n  }\n\n  focusAfterElement() {\n    this.setForwardingFocus(true);\n    this.getAfterElement().focus();\n  }\n\n  focusFirstItem() {\n    // only enabled items are focusable\n    const firstItem = this.getFirstItem(x => !x.disabled);\n\n    if (firstItem) {\n      firstItem.focus();\n    }\n  }\n\n  focusPreviouslyFocusedItem() {\n    const previouslyFocusedItem = this.getPreviouslyFocusedItem();\n\n    if (previouslyFocusedItem) {\n      previouslyFocusedItem.focus();\n    }\n  }\n\n  focusFirstSelectedItem() {\n    // only enabled items are focusable\n    const firstSelectedItem = this.getFirstItem(x => x.selected && !x.disabled);\n\n    if (firstSelectedItem) {\n      firstSelectedItem.focus();\n    }\n  }\n  /**\n   * Focuses a list item and sets its tabindex to \"0\" via the ItemNavigation\n   * @protected\n   * @param item\n   */\n\n\n  focusItem(item) {\n    this._itemNavigation.setCurrentItem(item);\n\n    item.focus();\n  }\n\n  focusUploadCollectionItem(event) {\n    setTimeout(() => {\n      this.setPreviouslyFocusedItem(event.target);\n      this.focusPreviouslyFocusedItem();\n    }, 0);\n  }\n\n  setForwardingFocus(forwardingFocus) {\n    this._forwardingFocus = forwardingFocus;\n  }\n\n  getForwardingFocus() {\n    return this._forwardingFocus;\n  }\n\n  setPreviouslyFocusedItem(item) {\n    this._previouslyFocusedItem = item;\n  }\n\n  getPreviouslyFocusedItem() {\n    return this._previouslyFocusedItem;\n  }\n\n  getFirstItem(filter) {\n    const slottedItems = this.getSlottedNodes(\"items\");\n    let firstItem = null;\n\n    if (!filter) {\n      return !!slottedItems.length && slottedItems[0];\n    }\n\n    for (let i = 0; i < slottedItems.length; i++) {\n      if (filter(slottedItems[i])) {\n        firstItem = slottedItems[i];\n        break;\n      }\n    }\n\n    return firstItem;\n  }\n\n  getAfterElement() {\n    if (!this._afterElement) {\n      this._afterElement = this.shadowRoot.querySelector(`#${this._id}-after`);\n    }\n\n    return this._afterElement;\n  }\n\n  getBeforeElement() {\n    if (!this._beforeElement) {\n      this._beforeElement = this.shadowRoot.querySelector(`#${this._id}-before`);\n    }\n\n    return this._beforeElement;\n  }\n\n  getHeaderToolbarLastTabbableElement() {\n    return getLastTabbableElement(this.headerToolbar.getDomRef()) || this.headerToolbar.getDomRef();\n  }\n\n  getNormalizedTarget(target) {\n    let focused = target;\n\n    if (target.shadowRoot && target.shadowRoot.activeElement) {\n      focused = target.shadowRoot.activeElement;\n    }\n\n    return focused;\n  }\n\n  getIntersectionObserver() {\n    if (!this.growingIntersectionObserver) {\n      this.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 1.0\n      });\n    }\n\n    return this.growingIntersectionObserver;\n  }\n\n}\n\nList.define();\nexport default List;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/List.js"],"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","isIE","renderFinished","getLastTabbableElement","isTabNext","isSpace","isEnter","Integer","NavigationMode","getEffectiveAriaLabelText","getI18nBundle","debounce","isElementInView","ListMode","ListGrowingMode","ListSeparators","BusyIndicator","ListTemplate","listCss","LOAD_MORE_TEXT","ARIA_LABEL_LIST_SELECTABLE","ARIA_LABEL_LIST_MULTISELECTABLE","ARIA_LABEL_LIST_DELETABLE","INFINITE_SCROLL_DEBOUNCE_RATE","PAGE_UP_DOWN_SIZE","metadata","tag","managedSlots","fastNavigation","slots","header","type","HTMLElement","propertyName","properties","headerText","String","footerText","indent","Boolean","mode","defaultValue","None","noDataText","separators","All","growing","busy","busyDelay","accessibleName","accessibleNameRef","accessibleRole","_inViewport","_loadMoreActive","events","detail","item","selectedItems","Array","previouslySelectedItems","selectionComponentPressed","List","render","template","styles","onDefine","i18nBundle","dependencies","constructor","initItemNavigation","_previouslyFocusedItem","_forwardingFocus","_previouslySelectedItem","resizeListenerAttached","listEndObserved","addEventListener","onItemPress","bind","onItemClose","onItemToggle","onItemFocused","onForwardAfter","onForwardBefore","onSelectionRequested","focusUploadCollectionItem","_handleResize","checkListInViewport","initialIntersection","onExitDOM","unobserveListEnd","deregister","getDomRef","onBeforeRendering","prepareListItems","onAfterRendering","growsOnScroll","observeListEnd","grows","attachForResize","register","shouldRenderH1","length","headerID","_id","modeLabelID","listEndDOM","shadowRoot","querySelector","hasData","getSlottedNodes","showNoDataText","isDelete","Delete","isSingleSelect","SingleSelect","SingleSelectBegin","SingleSelectEnd","SingleSelectAuto","includes","isMultiSelect","MultiSelect","ariaLabelledBy","undefined","ids","push","join","ariaLabelTxt","ariaLabelModeText","getText","Scroll","growsWithButton","Button","_growingButtonText","busyIndPosition","busyInd","position","_itemNavigation","skipItemsSize","navigationMode","Vertical","getItemsCallback","getEnabledItems","slottedItems","forEach","key","isLastChild","showBottomBorder","Inner","_mode","hasBorder","getIntersectionObserver","observe","growingIntersectionObserver","disconnect","onInteresection","entries","entry","isIntersecting","loadMore","event","getSelectedItems","selectionChange","_selectionRequested","selected","fireEvent","handleSingleSelect","deselectSelectedItems","handleSingleSelectBegin","handleSingleSelectEnd","handleSingleSelectAuto","handleMultiSelect","handleDelete","filter","disabled","_onkeydown","_handleTabNext","_onLoadMoreKeydown","preventDefault","_onLoadMoreClick","setPreviouslyFocusedItem","target","focusAfterElement","_onLoadMoreKeyup","_onLoadMoreMousedown","_onLoadMoreMouseup","lastTabbableEl","getNormalizedTarget","headerToolbar","getHeaderToolbarLastTabbableElement","getFirstItem","x","focusFirstSelectedItem","getPreviouslyFocusedItem","focusPreviouslyFocusedItem","focusFirstItem","stopImmediatePropagation","_onfocusin","isForwardElement","getForwardingFocus","setForwardingFocus","node","nodeId","id","afterElement","getAfterElement","beforeElement","getBeforeElement","setCurrentItem","pressedItem","focusBeforeElement","focus","firstItem","previouslyFocusedItem","firstSelectedItem","focusItem","setTimeout","forwardingFocus","i","_afterElement","_beforeElement","focused","activeElement","IntersectionObserver","root","rootMargin","threshold","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,SAASC,cAAT,QAA+B,wCAA/B;AACA,SAASC,sBAAT,QAAuC,uDAAvC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,OAA7B,QAA4C,sCAA5C;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,SAASC,yBAAT,QAA0C,sDAA1C;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,eAAP,MAA4B,sDAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,2CAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,gCAApB,C,CAEA;;AACA,SACCC,cADD,EACiBC,0BADjB,EAECC,+BAFD,EAGCC,yBAHD,QAIO,mCAJP;AAMA,MAAMC,6BAA6B,GAAG,GAAtC,C,CAA2C;;AAE3C,MAAMC,iBAAiB,GAAG,EAA1B;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,UADW;AAEhBC,EAAAA,YAAY,EAAE,IAFE;AAGhBC,EAAAA,cAAc,EAAE,IAHA;AAIhBC,EAAAA,KAAK;AAAE;AAAuD;AAE7D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAEC;AADC,KAZqD;;AAgB7D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVC,MAAAA,YAAY,EAAE,OADJ;AAEVF,MAAAA,IAAI,EAAEC;AAFI;AAzBkD,GAJ9C;AAkChBE,EAAAA,UAAU;AAAE;AAAwD;AAEnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXJ,MAAAA,IAAI,EAAEK;AADK,KAXuD;;AAenE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXN,MAAAA,IAAI,EAAEK;AADK,KAtBuD;;AA0BnE;AACF;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,MAAM,EAAE;AACPP,MAAAA,IAAI,EAAEQ;AADC,KAjC2D;;AAqCnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLT,MAAAA,IAAI,EAAElB,QADD;AAEL4B,MAAAA,YAAY,EAAE5B,QAAQ,CAAC6B;AAFlB,KA/C6D;;AAoDnE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXZ,MAAAA,IAAI,EAAEK;AADK,KA3DuD;;AA+DnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEQ,IAAAA,UAAU,EAAE;AACXb,MAAAA,IAAI,EAAEhB,cADK;AAEX0B,MAAAA,YAAY,EAAE1B,cAAc,CAAC8B;AAFlB,KA9EuD;;AAmFnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACRf,MAAAA,IAAI,EAAEjB,eADE;AAER2B,MAAAA,YAAY,EAAE3B,eAAe,CAAC4B;AAFtB,KAzG0D;;AA8GnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEK,IAAAA,IAAI,EAAE;AACLhB,MAAAA,IAAI,EAAEQ;AADD,KAtH6D;;AA0HnE;AACF;AACA;AACA;AACA;AACA;AACA;AACES,IAAAA,SAAS,EAAE;AACVjB,MAAAA,IAAI,EAAExB,OADI;AAEVkC,MAAAA,YAAY,EAAE;AAFJ,KAjIwD;;AAsInE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEQ,IAAAA,cAAc,EAA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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { getLastTabbableElement } from \"@ui5/webcomponents-base/dist/util/TabbableElements.js\";\nimport { isTabNext, isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListGrowingMode from \"./types/ListGrowingMode.js\";\nimport ListSeparators from \"./types/ListSeparators.js\";\nimport BusyIndicator from \"./BusyIndicator.js\";\n\n// Template\nimport ListTemplate from \"./generated/templates/ListTemplate.lit.js\";\n\n// Styles\nimport listCss from \"./generated/themes/List.css.js\";\n\n// Texts\nimport {\n\tLOAD_MORE_TEXT, ARIA_LABEL_LIST_SELECTABLE,\n\tARIA_LABEL_LIST_MULTISELECTABLE,\n\tARIA_LABEL_LIST_DELETABLE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\nconst INFINITE_SCROLL_DEBOUNCE_RATE = 250; // ms\n\nconst PAGE_UP_DOWN_SIZE = 10;\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-list\",\n\tmanagedSlots: true,\n\tfastNavigation: true,\n\tslots: /** @lends sap.ui.webcomponents.main.List.prototype */ {\n\n\t\t/**\n\t\t * Defines the component header.\n\t\t * <br><br>\n\t\t * <b>Note:</b> When <code>header</code> is set, the\n\t\t * <code>headerText</code> property is ignored.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\theader: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the items of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-li</code>, <code>ui5-li-custom</code>, and <code>ui5-li-groupheader</code> for the intended design.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.IListItem[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"items\",\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tproperties: /** @lends  sap.ui.webcomponents.main.List.prototype */ {\n\n\t\t/**\n\t\t * Defines the component header text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If <code>header</code> is set this property is ignored.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\theaderText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the footer text.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tfooterText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the component is indented.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tindent: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the mode of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,\n\t\t * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.\n\t\t *\n\t\t * @type {ListMode}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tmode: {\n\t\t\ttype: ListMode,\n\t\t\tdefaultValue: ListMode.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text that is displayed when the component contains no items.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tnoDataText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the item separator style that is used.\n\t\t * <br><br>\n\t\t * <b>Notes:</b>\n\t\t * <ul>\n\t\t * <li>Avalaible options are <code>All</code>, <code>Inner</code>, and <code>None</code>.</li>\n\t\t * <li>When set to <code>None</code>, none of the items are separated by horizontal lines.</li>\n\t\t * <li>When set to <code>Inner</code>, the first item doesn't have a top separator and the last\n\t\t * item doesn't have a bottom separator.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ListSeparators}\n\t\t * @defaultvalue \"All\"\n\t\t * @public\n\t\t */\n\t\tseparators: {\n\t\t\ttype: ListSeparators,\n\t\t\tdefaultValue: ListSeparators.All,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component will have growing capability either by pressing a <code>More</code> button,\n\t\t * or via user scroll. In both cases <code>load-more</code> event is fired.\n\t\t * <br><br>\n\t\t *\n\t\t * Available options:\n\t\t * <br><br>\n\t\t * <code>Button</code> - Shows a <code>More</code> button at the bottom of the list,\n\t\t * pressing of which triggers the <code>load-more</code> event.\n\t\t * <br>\n\t\t * <code>Scroll</code> - The <code>load-more</code> event is triggered when the user scrolls to the bottom of the list;\n\t\t * <br>\n\t\t * <code>None</code> (default) - The growing is off.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Restrictions:</b> <code>growing=\"Scroll\"</code> is not supported for Internet Explorer,\n\t\t * on IE the component will fallback to <code>growing=\"Button\"</code>.\n\t\t * @type {ListGrowingMode}\n\t\t * @defaultvalue \"None\"\n\t\t * @since 1.0.0-rc.13\n\t\t * @public\n\t\t */\n\t\tgrowing: {\n\t\t\ttype: ListGrowingMode,\n\t\t\tdefaultValue: ListGrowingMode.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the component would display a loading indicator over the list.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.0.0-rc.6\n\t\t */\n\t\tbusy: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @defaultValue 1000\n\t\t * @public\n\t\t */\n\t\tbusyDelay: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 1000,\n\t\t},\n\n\t\t/**\n\t\t * Defines the accessible name of the component.\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the IDs of the elements that label the input.\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleNameRef: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"\",\n\t\t},\n\n\t\t/**\n\t\t * Defines the accessible role of the component.\n\t\t * <br><br>\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultvalue \"list\"\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleRole: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"list\",\n\t\t},\n\n\t\t/**\n\t\t * Defines if the entire list is in view port.\n\t\t * @private\n\t\t */\n\t\t_inViewport: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the active state of the <code>More</code> button.\n\t\t * @private\n\t\t */\n\t\t_loadMoreActive: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tevents: /** @lends  sap.ui.webcomponents.main.List.prototype */ {\n\n\t\t/**\n\t\t * Fired when an item is activated, unless the item's <code>type</code> property\n\t\t * is set to <code>Inactive</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#item-click\n\t\t * @allowPreventDefault\n\t\t * @param {HTMLElement} item The clicked item.\n\t\t * @public\n\t\t */\n\t\t\"item-click\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the <code>Close</code> button of any item is clicked\n\t\t * <br><br>\n\t\t * <b>Note:</b> This event is applicable to <code>ui5-li-notification</code> items only,\n\t\t * not to be confused with <code>item-delete</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#item-close\n\t\t * @param {HTMLElement} item the item about to be closed.\n\t\t * @public\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t\"item-close\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the <code>Toggle</code> button of any item is clicked.\n\t\t * <br><br>\n\t\t * <b>Note:</b> This event is applicable to <code>ui5-li-notification-group</code> items only.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#item-toggle\n\t\t * @param {HTMLElement} item the toggled item.\n\t\t * @public\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t\"item-toggle\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the Delete button of any item is pressed.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A Delete button is displayed on each item,\n\t\t * when the component <code>mode</code> property is set to <code>Delete</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#item-delete\n\t\t * @param {HTMLElement} item the deleted item.\n\t\t * @public\n\t\t */\n\t\t\"item-delete\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when selection is changed by user interaction\n\t\t * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#selection-change\n\t\t * @param {Array} selectedItems An array of the selected items.\n\t\t * @param {Array} previouslySelectedItems An array of the previously selected items.\n\t\t * @public\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedItems: { type: Array },\n\t\t\t\tpreviouslySelectedItems: { type: Array },\n\t\t\t\tselectionComponentPressed: { type: Boolean }, // protected, indicates if the user used the selection components to change the selection\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user scrolls to the bottom of the list.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The event is fired when the <code>growing='Scroll'</code> property is enabled.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.List#load-more\n\t\t * @public\n\t\t * @since 1.0.0-rc.6\n\t\t */\n\t\t\"load-more\": {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-list</code> component allows displaying a list of items, advanced keyboard\n * handling support for navigating between items, and predefined modes to improve the development efficiency.\n * <br><br>\n * The <code>ui5-list</code> is a container for the available list items:\n * <ul>\n * <li><code>ui5-li</code></li>\n * <li><code>ui5-li-custom</code></li>\n * <li><code>ui5-li-groupheader</code></li>\n * </ul>\n * <br><br>\n * To benefit from the built-in selection mechanism, you can use the available\n * selection modes, such as\n * <code>SingleSelect</code>, <code>MultiSelect</code> and <code>Delete</code>.\n * <br><br>\n * Additionally, the <code>ui5-list</code> provides header, footer, and customization for the list item separators.\n *\n * <br><br>\n * <h3>Keyboard Handling</h3>\n *\n * <h4>Basic Navigation</h4\n * The <code>ui5-list</code> provides advanced keyboard handling.\n * When a list is focused the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n *\n * <ul>\n * <li>[UP/DOWN] - Navigates up and down the items</li>\n * <li>[HOME] - Navigates to first item</li>\n * <li>[END] - Navigates to the last item</li>\n * </ul>\n *\n * The user can use the following keyboard shortcuts to perform actions (such as select, delete),\n * when the <code>mode</code> property is in use:\n * <ul>\n * <li>[SPACE] - Select an item (if <code>type</code> is 'Active') when <code>mode</code> is selection</li>\n * <li>[DELETE] - Delete an item if <code>mode</code> property is <code>Delete</code></li>\n * </ul>\n *\n * <h4>Fast Navigation</h4>\n * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.\n * In order to use this functionality, you need to import the following module:\n * <code>import \"@ui5/webcomponents-base/dist/features/F6Navigation.js\"</code>\n * <br><br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/List.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/StandardListItem.js\";</code> (for <code>ui5-li</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/CustomListItem.js\";</code> (for <code>ui5-li-custom</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/GroupHeaderListItem.js\";</code> (for <code>ui5-li-groupheader</code>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.List\n * @extends UI5Element\n * @tagname ui5-list\n * @appenddocs StandardListItem CustomListItem GroupHeaderListItem\n * @public\n */\nclass List extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn ListTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn listCss;\n\t}\n\n\tstatic async onDefine() {\n\t\tList.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [BusyIndicator];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.initItemNavigation();\n\n\t\t// Stores the last focused item within the internal ul element.\n\t\tthis._previouslyFocusedItem = null;\n\n\t\t// Indicates that the List is forwarding the focus before or after the internal ul.\n\t\tthis._forwardingFocus = false;\n\n\t\tthis._previouslySelectedItem = null;\n\n\t\t// Indicates that the List has already subscribed for resize.\n\t\tthis.resizeListenerAttached = false;\n\n\t\t// Indicates if the IntersectionObserver started observing the List\n\t\tthis.listEndObserved = false;\n\n\t\tthis.addEventListener(\"ui5-_press\", this.onItemPress.bind(this));\n\t\tthis.addEventListener(\"ui5-close\", this.onItemClose.bind(this));\n\t\tthis.addEventListener(\"ui5-toggle\", this.onItemToggle.bind(this));\n\t\tthis.addEventListener(\"ui5-_focused\", this.onItemFocused.bind(this));\n\t\tthis.addEventListener(\"ui5-_forward-after\", this.onForwardAfter.bind(this));\n\t\tthis.addEventListener(\"ui5-_forward-before\", this.onForwardBefore.bind(this));\n\t\tthis.addEventListener(\"ui5-_selection-requested\", this.onSelectionRequested.bind(this));\n\t\tthis.addEventListener(\"ui5-_focus-requested\", this.focusUploadCollectionItem.bind(this));\n\n\t\tthis._handleResize = this.checkListInViewport.bind(this);\n\n\t\t// Indicates the List bottom most part has been detected by the IntersectionObserver\n\t\t// for the first time.\n\t\tthis.initialIntersection = true;\n\t}\n\n\tonExitDOM() {\n\t\tthis.unobserveListEnd();\n\t\tthis.resizeListenerAttached = false;\n\t\tResizeHandler.deregister(this.getDomRef(), this._handleResize);\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.prepareListItems();\n\t}\n\n\tonAfterRendering() {\n\t\tif (this.growsOnScroll) {\n\t\t\tthis.observeListEnd();\n\t\t} else if (this.listEndObserved) {\n\t\t\tthis.unobserveListEnd();\n\t\t}\n\n\t\tif (this.grows) {\n\t\t\tthis.checkListInViewport();\n\t\t\tthis.attachForResize();\n\t\t}\n\t}\n\n\tattachForResize() {\n\t\tif (!this.resizeListenerAttached) {\n\t\t\tthis.resizeListenerAttached = true;\n\t\t\tResizeHandler.register(this.getDomRef(), this._handleResize);\n\t\t}\n\t}\n\n\tget shouldRenderH1() {\n\t\treturn !this.header.length && this.headerText;\n\t}\n\n\tget headerID() {\n\t\treturn `${this._id}-header`;\n\t}\n\n\tget modeLabelID() {\n\t\treturn `${this._id}-modeLabel`;\n\t}\n\n\tget listEndDOM() {\n\t\treturn this.shadowRoot.querySelector(\".ui5-list-end-marker\");\n\t}\n\n\tget hasData() {\n\t\treturn this.getSlottedNodes(\"items\").length !== 0;\n\t}\n\n\tget showNoDataText() {\n\t\treturn !this.hasData && this.noDataText;\n\t}\n\n\tget isDelete() {\n\t\treturn this.mode === ListMode.Delete;\n\t}\n\n\tget isSingleSelect() {\n\t\treturn [\n\t\t\tListMode.SingleSelect,\n\t\t\tListMode.SingleSelectBegin,\n\t\t\tListMode.SingleSelectEnd,\n\t\t\tListMode.SingleSelectAuto,\n\t\t].includes(this.mode);\n\t}\n\n\tget isMultiSelect() {\n\t\treturn this.mode === ListMode.MultiSelect;\n\t}\n\n\tget ariaLabelledBy() {\n\t\tif (this.accessibleNameRef || this.accessibleName) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst ids = [];\n\n\t\tif (this.isMultiSelect || this.isSingleSelect || this.isDelete) {\n\t\t\tids.push(this.modeLabelID);\n\t\t}\n\n\t\tif (this.shouldRenderH1) {\n\t\t\tids.push(this.headerID);\n\t\t}\n\n\t\treturn ids.length ? ids.join(\" \") : undefined;\n\t}\n\n\tget ariaLabelTxt() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget ariaLabelModeText() {\n\t\tif (this.isMultiSelect) {\n\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_MULTISELECTABLE);\n\t\t}\n\t\tif (this.isSingleSelect) {\n\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_SELECTABLE);\n\t\t}\n\t\tif (this.isDelete) {\n\t\t\treturn List.i18nBundle.getText(ARIA_LABEL_LIST_DELETABLE);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget grows() {\n\t\treturn this.growing !== ListGrowingMode.None;\n\t}\n\n\tget growsOnScroll() {\n\t\treturn this.growing === ListGrowingMode.Scroll && !isIE();\n\t}\n\n\tget growsWithButton() {\n\t\tif (isIE()) {\n\t\t\t// On IE fallback to \"More\" button, even if growing of type \"Scroll\" is set.\n\t\t\treturn this.grows;\n\t\t}\n\n\t\treturn this.growing === ListGrowingMode.Button;\n\t}\n\n\tget _growingButtonText() {\n\t\treturn List.i18nBundle.getText(LOAD_MORE_TEXT);\n\t}\n\n\tget busyIndPosition() {\n\t\tif (isIE() || !this.grows) {\n\t\t\treturn \"absolute\";\n\t\t}\n\n\t\treturn this._inViewport ? \"absolute\" : \"sticky\";\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tbusyInd: {\n\t\t\t\tposition: this.busyIndPosition,\n\t\t\t},\n\t\t};\n\t}\n\n\tinitItemNavigation() {\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tskipItemsSize: PAGE_UP_DOWN_SIZE, // PAGE_UP and PAGE_DOWN will skip trough 10 items\n\t\t\tnavigationMode: NavigationMode.Vertical,\n\t\t\tgetItemsCallback: () => this.getEnabledItems(),\n\t\t});\n\t}\n\n\tprepareListItems() {\n\t\tconst slottedItems = this.getSlottedNodes(\"items\");\n\n\t\tslottedItems.forEach((item, key) => {\n\t\t\tconst isLastChild = key === slottedItems.length - 1;\n\t\t\tconst showBottomBorder = this.separators === ListSeparators.All\n\t\t\t\t|| (this.separators === ListSeparators.Inner && !isLastChild);\n\n\t\t\titem._mode = this.mode;\n\t\t\titem.hasBorder = showBottomBorder;\n\t\t});\n\n\t\tthis._previouslySelectedItem = null;\n\t}\n\n\tasync observeListEnd() {\n\t\tif (!this.listEndObserved) {\n\t\t\tawait renderFinished();\n\t\t\tthis.getIntersectionObserver().observe(this.listEndDOM);\n\t\t\tthis.listEndObserved = true;\n\t\t}\n\t}\n\n\tunobserveListEnd() {\n\t\tif (this.growingIntersectionObserver) {\n\t\t\tthis.growingIntersectionObserver.disconnect();\n\t\t\tthis.growingIntersectionObserver = null;\n\t\t\tthis.listEndObserved = false;\n\t\t}\n\t}\n\n\tonInteresection(entries) {\n\t\tif (this.initialIntersection) {\n\t\t\tthis.initialIntersection = false;\n\t\t\treturn;\n\t\t}\n\t\tentries.forEach(entry => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tdebounce(this.loadMore.bind(this), INFINITE_SCROLL_DEBOUNCE_RATE);\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t* ITEM SELECTION BASED ON THE CURRENT MODE\n\t*/\n\tonSelectionRequested(event) {\n\t\tconst previouslySelectedItems = this.getSelectedItems();\n\t\tlet selectionChange = false;\n\t\tthis._selectionRequested = true;\n\n\t\tif (this[`handle${this.mode}`]) {\n\t\t\tselectionChange = this[`handle${this.mode}`](event.detail.item, event.detail.selected);\n\t\t}\n\n\t\tif (selectionChange) {\n\t\t\tthis.fireEvent(\"selection-change\", {\n\t\t\t\tselectedItems: this.getSelectedItems(),\n\t\t\t\tpreviouslySelectedItems,\n\t\t\t\tselectionComponentPressed: event.detail.selectionComponentPressed,\n\t\t\t\tkey: event.detail.key,\n\t\t\t});\n\t\t}\n\t}\n\n\thandleSingleSelect(item) {\n\t\tif (item.selected) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.deselectSelectedItems();\n\t\titem.selected = true;\n\n\t\treturn true;\n\t}\n\n\thandleSingleSelectBegin(item) {\n\t\treturn this.handleSingleSelect(item);\n\t}\n\n\thandleSingleSelectEnd(item) {\n\t\treturn this.handleSingleSelect(item);\n\t}\n\n\thandleSingleSelectAuto(item) {\n\t\treturn this.handleSingleSelect(item);\n\t}\n\n\thandleMultiSelect(item, selected) {\n\t\titem.selected = selected;\n\t\treturn true;\n\t}\n\n\thandleDelete(item) {\n\t\tthis.fireEvent(\"item-delete\", { item });\n\t}\n\n\tdeselectSelectedItems() {\n\t\tthis.getSelectedItems().forEach(item => { item.selected = false; });\n\t}\n\n\tgetSelectedItems() {\n\t\treturn this.getSlottedNodes(\"items\").filter(item => item.selected);\n\t}\n\n\tgetEnabledItems() {\n\t\treturn this.getSlottedNodes(\"items\").filter(item => !item.disabled);\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isTabNext(event)) {\n\t\t\tthis._handleTabNext(event);\n\t\t}\n\t}\n\n\t_onLoadMoreKeydown(event) {\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\n\t\tif (isTabNext(event)) {\n\t\t\tthis.setPreviouslyFocusedItem(event.target);\n\t\t\tthis.focusAfterElement();\n\t\t}\n\t}\n\n\t_onLoadMoreKeyup(event) {\n\t\tif (isSpace(event)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t}\n\t\tthis._loadMoreActive = false;\n\t}\n\n\t_onLoadMoreMousedown() {\n\t\tthis._loadMoreActive = true;\n\t}\n\n\t_onLoadMoreMouseup() {\n\t\tthis._loadMoreActive = false;\n\t}\n\n\t_onLoadMoreClick() {\n\t\tthis.loadMore();\n\t}\n\n\tcheckListInViewport() {\n\t\tthis._inViewport = isElementInView(this.getDomRef());\n\t}\n\n\tloadMore() {\n\t\tthis.fireEvent(\"load-more\");\n\t}\n\n\t/*\n\t* KEYBOARD SUPPORT\n\t*/\n\t_handleTabNext(event) {\n\t\t// If forward navigation is performed, we check if the List has headerToolbar.\n\t\t// If yes - we check if the target is at the last tabbable element of the headerToolbar\n\t\t// to forward correctly the focus to the selected, previously focused or to the first list item.\n\t\tlet lastTabbableEl;\n\t\tconst target = this.getNormalizedTarget(event.target);\n\n\t\tif (this.headerToolbar) {\n\t\t\tlastTabbableEl = this.getHeaderToolbarLastTabbableElement();\n\t\t}\n\n\t\tif (!lastTabbableEl) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (lastTabbableEl === target) {\n\t\t\tif (this.getFirstItem(x => x.selected && !x.disabled)) {\n\t\t\t\tthis.focusFirstSelectedItem();\n\t\t\t} else if (this.getPreviouslyFocusedItem()) {\n\t\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t\t} else {\n\t\t\t\tthis.focusFirstItem();\n\t\t\t}\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_onfocusin(event) {\n\t\t// If the focusin event does not origin from one of the 'triggers' - ignore it.\n\t\tif (!this.isForwardElement(this.getNormalizedTarget(event.target))) {\n\t\t\tevent.stopImmediatePropagation();\n\t\t\treturn;\n\t\t}\n\n\t\t// The focus arrives in the List for the first time.\n\t\t// If there is selected item - focus it or focus the first item.\n\t\tif (!this.getPreviouslyFocusedItem()) {\n\t\t\tif (this.getFirstItem(x => x.selected && !x.disabled)) {\n\t\t\t\tthis.focusFirstSelectedItem();\n\t\t\t} else {\n\t\t\t\tthis.focusFirstItem();\n\t\t\t}\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t\treturn;\n\t\t}\n\n\t\t// The focus returns to the List,\n\t\t// focus the first selected item or the previously focused element.\n\t\tif (!this.getForwardingFocus()) {\n\t\t\tif (this.getFirstItem(x => x.selected && !x.disabled)) {\n\t\t\t\tthis.focusFirstSelectedItem();\n\t\t\t} else {\n\t\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t\t}\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.setForwardingFocus(false);\n\t}\n\n\tisForwardElement(node) {\n\t\tconst nodeId = node.id;\n\t\tconst afterElement = this.getAfterElement();\n\t\tconst beforeElement = this.getBeforeElement();\n\n\t\tif (this._id === nodeId || (beforeElement && beforeElement.id === nodeId)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn afterElement && afterElement.id === nodeId;\n\t}\n\n\tonItemFocused(event) {\n\t\tconst target = event.target;\n\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t\tthis.fireEvent(\"item-focused\", { item: target });\n\n\t\tif (this.mode === ListMode.SingleSelectAuto) {\n\t\t\tthis.onSelectionRequested({\n\t\t\t\tdetail: {\n\t\t\t\t\titem: target,\n\t\t\t\t\tselectionComponentPressed: false,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tkey: event.detail.key,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tonItemPress(event) {\n\t\tconst pressedItem = event.detail.item;\n\n\t\tif (!this.fireEvent(\"item-click\", { item: pressedItem }, true)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._selectionRequested && this.mode !== ListMode.Delete) {\n\t\t\tthis._selectionRequested = true;\n\t\t\tthis.onSelectionRequested({\n\t\t\t\tdetail: {\n\t\t\t\t\titem: pressedItem,\n\t\t\t\t\tselectionComponentPressed: false,\n\t\t\t\t\tselected: !pressedItem.selected,\n\t\t\t\t\tkey: event.detail.key,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis._selectionRequested = false;\n\t}\n\n\t// This is applicable to NoficationListItem\n\tonItemClose(event) {\n\t\tthis.fireEvent(\"item-close\", { item: event.detail.item });\n\t}\n\n\tonItemToggle(event) {\n\t\tthis.fireEvent(\"item-toggle\", { item: event.detail.item });\n\t}\n\n\tonForwardBefore(event) {\n\t\tthis.setPreviouslyFocusedItem(event.target);\n\t\tthis.focusBeforeElement();\n\t\tevent.stopImmediatePropagation();\n\t}\n\n\tonForwardAfter(event) {\n\t\tthis.setPreviouslyFocusedItem(event.target);\n\n\t\tif (!this.growsWithButton) {\n\t\t\tthis.focusAfterElement();\n\t\t}\n\t}\n\n\tfocusBeforeElement() {\n\t\tthis.setForwardingFocus(true);\n\t\tthis.getBeforeElement().focus();\n\t}\n\n\tfocusAfterElement() {\n\t\tthis.setForwardingFocus(true);\n\t\tthis.getAfterElement().focus();\n\t}\n\n\tfocusFirstItem() {\n\t\t// only enabled items are focusable\n\t\tconst firstItem = this.getFirstItem(x => !x.disabled);\n\n\t\tif (firstItem) {\n\t\t\tfirstItem.focus();\n\t\t}\n\t}\n\n\tfocusPreviouslyFocusedItem() {\n\t\tconst previouslyFocusedItem = this.getPreviouslyFocusedItem();\n\n\t\tif (previouslyFocusedItem) {\n\t\t\tpreviouslyFocusedItem.focus();\n\t\t}\n\t}\n\n\tfocusFirstSelectedItem() {\n\t\t// only enabled items are focusable\n\t\tconst firstSelectedItem = this.getFirstItem(x => x.selected && !x.disabled);\n\n\t\tif (firstSelectedItem) {\n\t\t\tfirstSelectedItem.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses a list item and sets its tabindex to \"0\" via the ItemNavigation\n\t * @protected\n\t * @param item\n\t */\n\tfocusItem(item) {\n\t\tthis._itemNavigation.setCurrentItem(item);\n\t\titem.focus();\n\t}\n\n\tfocusUploadCollectionItem(event) {\n\t\tsetTimeout(() => {\n\t\t\tthis.setPreviouslyFocusedItem(event.target);\n\t\t\tthis.focusPreviouslyFocusedItem();\n\t\t}, 0);\n\t}\n\n\tsetForwardingFocus(forwardingFocus) {\n\t\tthis._forwardingFocus = forwardingFocus;\n\t}\n\n\tgetForwardingFocus() {\n\t\treturn this._forwardingFocus;\n\t}\n\n\tsetPreviouslyFocusedItem(item) {\n\t\tthis._previouslyFocusedItem = item;\n\t}\n\n\tgetPreviouslyFocusedItem() {\n\t\treturn this._previouslyFocusedItem;\n\t}\n\n\tgetFirstItem(filter) {\n\t\tconst slottedItems = this.getSlottedNodes(\"items\");\n\t\tlet firstItem = null;\n\n\t\tif (!filter) {\n\t\t\treturn !!slottedItems.length && slottedItems[0];\n\t\t}\n\n\t\tfor (let i = 0; i < slottedItems.length; i++) {\n\t\t\tif (filter(slottedItems[i])) {\n\t\t\t\tfirstItem = slottedItems[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tgetAfterElement() {\n\t\tif (!this._afterElement) {\n\t\t\tthis._afterElement = this.shadowRoot.querySelector(`#${this._id}-after`);\n\t\t}\n\t\treturn this._afterElement;\n\t}\n\n\tgetBeforeElement() {\n\t\tif (!this._beforeElement) {\n\t\t\tthis._beforeElement = this.shadowRoot.querySelector(`#${this._id}-before`);\n\t\t}\n\t\treturn this._beforeElement;\n\t}\n\n\tgetHeaderToolbarLastTabbableElement() {\n\t\treturn getLastTabbableElement(this.headerToolbar.getDomRef()) || this.headerToolbar.getDomRef();\n\t}\n\n\tgetNormalizedTarget(target) {\n\t\tlet focused = target;\n\n\t\tif (target.shadowRoot && target.shadowRoot.activeElement) {\n\t\t\tfocused = target.shadowRoot.activeElement;\n\t\t}\n\n\t\treturn focused;\n\t}\n\n\tgetIntersectionObserver() {\n\t\tif (!this.growingIntersectionObserver) {\n\t\t\tthis.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n\t\t\t\troot: null,\n\t\t\t\trootMargin: \"0px\",\n\t\t\t\tthreshold: 1.0,\n\t\t\t});\n\t\t}\n\n\t\treturn this.growingIntersectionObserver;\n\t}\n}\n\nList.define();\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}