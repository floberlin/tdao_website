{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport AI01decoder from './AI01decoder';\nimport StringBuilder from '../../../../util/StringBuilder';\n\nvar AI01AndOtherAIs = function (_super) {\n  __extends(AI01AndOtherAIs, _super); // the second one is the encodation method, and the other two are for the variable length\n\n\n  function AI01AndOtherAIs(information) {\n    return _super.call(this, information) || this;\n  }\n\n  AI01AndOtherAIs.prototype.parseInformation = function () {\n    var buff = new StringBuilder();\n    buff.append('(01)');\n    var initialGtinPosition = buff.length();\n    var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n    buff.append(firstGtinDigit);\n    this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n    return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n  };\n\n  AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; // first bit encodes the linkage flag,\n\n  return AI01AndOtherAIs;\n}(AI01decoder);\n\nexport default AI01AndOtherAIs;","map":{"version":3,"sources":["../../../../../../../src/core/oned/rss/expanded/decoders/AI01AndOtherAIs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,WAAP,MAAwB,eAAxB;AAEA,OAAO,aAAP,MAA0B,gCAA1B;;AAEA,IAAA,eAAA,GAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA,CAA7C,CAGE;;;AAEA,WAAA,eAAA,CAAY,WAAZ,EAAiC;WAC/B,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAN,KAAkB,I;AACnB;;AAEM,EAAA,eAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,YAAA;AAEE,QAAI,IAAI,GAAG,IAAI,aAAJ,EAAX;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,MAAZ;AACA,QAAI,mBAAmB,GAAG,IAAI,CAAC,MAAL,EAA1B;AACA,QAAI,cAAc,GAAG,KAAK,iBAAL,GAAyB,+BAAzB,CAAyD,eAAe,CAAC,WAAzE,EAAsF,CAAtF,CAArB;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,cAAZ;AACA,SAAK,6BAAL,CAAmC,IAAnC,EAAyC,eAAe,CAAC,WAAhB,GAA8B,CAAvE,EAA0E,mBAA1E;AACA,WAAO,KAAK,iBAAL,GAAyB,cAAzB,CAAwC,IAAxC,EAA8C,eAAe,CAAC,WAAhB,GAA8B,EAA5E,CAAP;AACD,GATM;;AAPiB,EAAA,eAAA,CAAA,WAAA,GAAc,IAAI,CAAJ,GAAQ,CAAtB,CAF1B,CAEmD;;AAkBnD,SAAA,eAAA;AAAC,CApBD,CAA6C,WAA7C,CAAA;;eAAqB,e","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport AI01decoder from './AI01decoder';\nimport StringBuilder from '../../../../util/StringBuilder';\nvar AI01AndOtherAIs = /** @class */ (function (_super) {\n    __extends(AI01AndOtherAIs, _super);\n    // the second one is the encodation method, and the other two are for the variable length\n    function AI01AndOtherAIs(information) {\n        return _super.call(this, information) || this;\n    }\n    AI01AndOtherAIs.prototype.parseInformation = function () {\n        var buff = new StringBuilder();\n        buff.append('(01)');\n        var initialGtinPosition = buff.length();\n        var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n        buff.append(firstGtinDigit);\n        this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n        return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n    };\n    AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; // first bit encodes the linkage flag,\n    return AI01AndOtherAIs;\n}(AI01decoder));\nexport default AI01AndOtherAIs;\n//# sourceMappingURL=AI01AndOtherAIs.js.map"]},"metadata":{},"sourceType":"module"}