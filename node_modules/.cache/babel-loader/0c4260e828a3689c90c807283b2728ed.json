{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { useI18nBundle, useIsRTL, useIsomorphicLayoutEffect } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { enrichEventWithDetails, debounce } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { GlobalStyleClasses } from '@ui5/webcomponents-react/dist/GlobalStyleClasses';\nimport { TableScaleWidthMode } from '@ui5/webcomponents-react/dist/TableScaleWidthMode';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/dist/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/dist/TableSelectionMode';\nimport { TableVisibleRowCountMode } from '@ui5/webcomponents-react/dist/TableVisibleRowCountMode';\nimport clsx from 'clsx';\nimport React, { useRef, useCallback, useEffect, useState, forwardRef, Fragment, useMemo, isValidElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { makeRenderer, actions, defaultOrderByFn, useTable, useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns } from 'react-table';\nimport { CssSizeVariables, CssSizeVariablesNames } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { useVirtual } from 'react-virtual';\nimport '@ui5/webcomponents-icons/dist/filter.js';\nimport '@ui5/webcomponents-icons/dist/group-2.js';\nimport '@ui5/webcomponents-icons/dist/sort-ascending.js';\nimport '@ui5/webcomponents-icons/dist/sort-descending.js';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport '@ui5/webcomponents-icons/dist/decline.js';\nimport { CLEAR_SORTING, SORT_ASCENDING, SORT_DESCENDING, GROUP, UNGROUP, DRAG_TO_RESIZE } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { CustomListItem } from '@ui5/webcomponents-react/dist/CustomListItem';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { List } from '@ui5/webcomponents-react/dist/List';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { Popover } from '@ui5/webcomponents-react/dist/Popover';\nimport { PopoverHorizontalAlign } from '@ui5/webcomponents-react/dist/PopoverHorizontalAlign';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';\nimport { TextAlign } from '@ui5/webcomponents-react/dist/TextAlign';\nimport { createPortal } from 'react-dom';\nimport { VerticalAlign } from '@ui5/webcomponents-react/dist/VerticalAlign';\nimport { Input } from '@ui5/webcomponents-react/dist/Input';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { isIE } from '@ui5/webcomponents-react-base/dist/Device';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport { Loader } from '@ui5/webcomponents-react/dist/Loader';\nimport ContentLoader from 'react-content-loader';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { CheckBox } from '@ui5/webcomponents-react/dist/CheckBox';\nimport '@ui5/webcomponents-icons/dist/navigation-down-arrow.js';\nimport '@ui5/webcomponents-icons/dist/navigation-right-arrow.js';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nvar styles$7 = {\n  table: {\n    position: 'relative',\n    width: '100%',\n    maxWidth: '100%',\n    overflowY: 'hidden',\n    overflowX: 'auto',\n    height: '100%',\n    minHeight: '3rem',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    backgroundColor: ThemingParameters.sapList_Background\n  },\n  tableHeaderRow: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    display: 'inline-flex',\n    '& div:first-child $th': {\n      borderLeft: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n    }\n  },\n  hasNavigationIndicator: {\n    '& $tableHeaderRow :nth-last-child(2) $th': {\n      borderRight: 'none'\n    },\n    '& $tr :nth-last-child(2)': {\n      borderRight: 'none'\n    }\n  },\n  tableHeaderBackgroundElement: {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    borderTop: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n  },\n  th: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    color: ThemingParameters.sapList_HeaderTextColor,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    borderTop: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    padding: \"0 0.5rem\",\n    textAlign: 'start',\n    boxSizing: 'border-box',\n    '&[data-column-id=\"__ui5wcr__internal_highlight_column\"]': {\n      borderRight: '1px solid transparent'\n    },\n    '&:last-child': {\n      '& [data-resizer]': {\n        transform: 'translateX(0px)'\n      }\n    },\n    '&:focus': {\n      '&[data-column-id=\"__ui5wcr__internal_selection_column\"]': {\n        borderLeft: '1px solid transparent'\n      },\n      outlineOffset: \"calc(-1 * \".concat(ThemingParameters.sapContent_FocusWidth, \")\"),\n      outline: \"\".concat(ThemingParameters.sapContent_FocusWidth, \" \").concat(ThemingParameters.sapContent_FocusStyle, \" \").concat(ThemingParameters.sapContent_FocusColor)\n    }\n  },\n  tbody: {\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    scrollBarWidth: 'none !important',\n    '-ms-overflow-style': 'none',\n    '&::-webkit-scrollbar': {\n      width: 0,\n      height: 0\n    }\n  },\n  alternateRowColor: {\n    backgroundColor: ThemingParameters.sapList_AlternatingBackground\n  },\n  tr: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    color: ThemingParameters.sapList_TextColor,\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    boxSizing: 'border-box',\n    display: 'flex',\n    willChange: 'transform',\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    },\n    '&[data-is-selected]': {\n      borderBottom: \"1px solid \".concat(ThemingParameters.sapList_SelectionBorderColor),\n      backgroundColor: ThemingParameters.sapList_SelectionBackgroundColor\n    },\n    '&[data-is-selected]:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_SelectionBackground\n    }\n  },\n  trActive: {\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    '&:active': {\n      backgroundColor: ThemingParameters.sapList_Active_Background,\n      '& $tableCell': {\n        borderRight: \"1px solid \".concat(ThemingParameters.sapList_Active_Background),\n        color: \"\".concat(ThemingParameters.sapList_Active_TextColor),\n        '--sapTextColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n  tableGroupHeader: {\n    '&$tr': {\n      backgroundColor: \"\".concat(ThemingParameters.sapList_TableGroupHeaderBackground),\n      border: \"1px solid \".concat(ThemingParameters.sapList_TableGroupHeaderBorderColor),\n      color: ThemingParameters.sapList_TextColor,\n      '& $tableCell': {\n        borderRight: 'none'\n      }\n    }\n  },\n  tableCell: {\n    height: '100%',\n    boxSizing: 'border-box',\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    display: 'inline-flex',\n    padding: '0 0.5rem',\n    '&:first-child': {\n      borderLeft: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n    },\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    alignItems: 'center',\n    position: 'relative',\n    '&:focus': {\n      outlineOffset: \"calc(-1 * \".concat(ThemingParameters.sapContent_FocusWidth, \")\"),\n      outline: \"\".concat(ThemingParameters.sapContent_FocusWidth, \" \").concat(ThemingParameters.sapContent_FocusStyle, \" \").concat(ThemingParameters.sapContent_FocusColor)\n    }\n  },\n  noDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    backgroundColor: ThemingParameters.sapList_Background,\n    width: '100%',\n    boxSizing: 'border-box',\n    color: ThemingParameters.sapList_TextColor,\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n  },\n  valueStateSuccess: {\n    backgroundColor: ThemingParameters.sapSuccessColor\n  },\n  valueStateError: {\n    backgroundColor: ThemingParameters.sapErrorColor\n  },\n  valueStateWarning: {\n    backgroundColor: ThemingParameters.sapWarningColor\n  },\n  valueStateInformation: {\n    backgroundColor: ThemingParameters.sapInformationColor\n  }\n};\nvar styles$8 = styles$7;\n\nvar stopPropagation = function stopPropagation(e) {\n  var _e$stopImmediatePropa;\n\n  e.stopPropagation();\n  (_e$stopImmediatePropa = e.stopImmediatePropagation) === null || _e$stopImmediatePropa === void 0 ? void 0 : _e$stopImmediatePropa.call(e);\n};\n\nvar styles$6 = {\n  popover: {\n    fontWeight: 'normal'\n  },\n  filter: {\n    padding: '0px 1rem',\n    height: 'var(--_ui5_custom_list_item_height)',\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n  },\n  filterIcon: {\n    paddingRight: '0.5rem',\n    minWidth: '1rem',\n    minHeight: '1rem'\n  }\n};\nvar useStyles$8 = createUseStyles(styles$6, {\n  name: 'ColumnHeaderModal'\n});\n\nvar ColumnHeaderModal = function ColumnHeaderModal(props) {\n  var column = props.column,\n      onSort = props.onSort,\n      onGroupBy = props.onGroupBy,\n      open = props.open,\n      setPopoverOpen = props.setPopoverOpen,\n      targetRef = props.targetRef,\n      portalContainer = props.portalContainer,\n      isRtl = props.isRtl;\n  var classes = useStyles$8();\n  var showFilter = column.canFilter;\n  var showGroup = column.canGroupBy;\n  var showSort = column.canSort;\n  var ref = useRef(null);\n  var listRef = useRef(null);\n  var Filter = column.Filter;\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var clearSortingText = i18nBundle.getText(CLEAR_SORTING);\n  var sortAscendingText = i18nBundle.getText(SORT_ASCENDING);\n  var sortDescendingText = i18nBundle.getText(SORT_DESCENDING);\n  var groupText = i18nBundle.getText(GROUP);\n  var ungroupText = i18nBundle.getText(UNGROUP);\n  var handleSort = useCallback(function (e) {\n    var sortType = e.detail.item.getAttribute('data-sort');\n\n    switch (sortType) {\n      case 'asc':\n        column.toggleSortBy(false);\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'desc':\n        column.toggleSortBy(true);\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'clear':\n        column.clearSortBy();\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'group':\n        var willGroup = !column.isGrouped;\n        column.toggleGroupBy(willGroup);\n\n        if (typeof onGroupBy === 'function') {\n          onGroupBy(enrichEventWithDetails(e, {\n            column: column,\n            isGrouped: willGroup\n          }));\n        }\n\n        break;\n    }\n\n    if (ref.current) {\n      ref.current.close();\n    }\n  }, [column, ref, onGroupBy, onSort]);\n  var isSortedAscending = column.isSorted && column.isSortedDesc === false;\n  var isSortedDescending = column.isSorted && column.isSortedDesc === true;\n  useEffect(function () {\n    var popoverInstance = ref.current;\n\n    if (open) {\n      popoverInstance === null || popoverInstance === void 0 ? void 0 : popoverInstance.showAt(targetRef.current);\n    }\n  }, [open, targetRef.current, ref.current]);\n  var onAfterClose = useCallback(function (e) {\n    var _ref$current;\n\n    stopPropagation(e);\n    ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.close();\n    setPopoverOpen(false);\n  }, [setPopoverOpen]);\n\n  var onAfterOpen = function onAfterOpen() {\n    var _listRef$current, _listRef$current$chil, _listRef$current$chil2;\n\n    (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : (_listRef$current$chil = _listRef$current.children) === null || _listRef$current$chil === void 0 ? void 0 : (_listRef$current$chil2 = _listRef$current$chil[0]) === null || _listRef$current$chil2 === void 0 ? void 0 : _listRef$current$chil2.focus();\n  };\n\n  var horizontalAlign = function () {\n    switch (column.hAlign) {\n      case TextAlign.Begin:\n        return isRtl ? PopoverHorizontalAlign.Right : PopoverHorizontalAlign.Left;\n\n      case TextAlign.End:\n        return isRtl ? PopoverHorizontalAlign.Left : PopoverHorizontalAlign.Right;\n\n      case TextAlign.Left:\n        return PopoverHorizontalAlign.Left;\n\n      case TextAlign.Right:\n        return PopoverHorizontalAlign.Right;\n\n      case TextAlign.Center:\n        return PopoverHorizontalAlign.Center;\n\n      default:\n        return isRtl ? PopoverHorizontalAlign.Right : PopoverHorizontalAlign.Left;\n    }\n  }();\n\n  if (!open) return null;\n  return /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(Popover, {\n    hideArrow: true,\n    horizontalAlign: horizontalAlign,\n    placementType: PopoverPlacementType.Bottom,\n    ref: ref,\n    className: classes.popover,\n    onAfterClose: onAfterClose,\n    onAfterOpen: onAfterOpen\n  }, /*#__PURE__*/React.createElement(List, {\n    onItemClick: handleSort,\n    ref: listRef\n  }, isSortedAscending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemType.Active,\n    icon: \"decline\",\n    \"data-sort\": \"clear\"\n  }, clearSortingText), showSort && !isSortedAscending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemType.Active,\n    icon: \"sort-ascending\",\n    \"data-sort\": \"asc\"\n  }, sortAscendingText), showSort && !isSortedDescending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemType.Active,\n    icon: \"sort-descending\",\n    \"data-sort\": \"desc\"\n  }, sortDescendingText), isSortedDescending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemType.Active,\n    icon: \"decline\",\n    \"data-sort\": \"clear\"\n  }, clearSortingText), showFilter && !column.isGrouped &&\n  /*#__PURE__*/\n  //todo maybe need to enhance Input selection after ui5-webcomponents issue has been fixed\n  React.createElement(CustomListItem, {\n    type: ListItemType.Inactive\n  }, /*#__PURE__*/React.createElement(FlexBox, {\n    alignItems: FlexBoxAlignItems.Center,\n    className: classes.filter\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"filter\",\n    className: classes.filterIcon\n  }), /*#__PURE__*/React.createElement(Filter, {\n    column: column,\n    popoverRef: ref\n  }))), showGroup && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemType.Active,\n    icon: \"group-2\",\n    \"data-sort\": 'group'\n  }, column.isGrouped ? ungroupText : groupText))), portalContainer);\n};\n\nColumnHeaderModal.displayName = 'ColumnHeaderModal';\nvar styles$5 = {\n  header: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'begin',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    color: ThemingParameters.sapList_TextColor,\n    background: ThemingParameters.sapList_HeaderBackground,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative',\n    width: '100%',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    boxSizing: 'border-box',\n    '&[data-h-align=\"End\"]': {\n      '& $text': {\n        textAlign: 'end'\n      }\n    }\n  },\n  text: {\n    width: '100%',\n    textAlign: 'start'\n  },\n  iconContainer: {\n    display: 'inline-block',\n    position: 'absolute',\n    color: ThemingParameters.sapContent_IconColor\n  }\n};\nvar useStyles$7 = createUseStyles(styles$5, {\n  name: 'TableColumnHeader'\n});\n\nvar ColumnHeader = function ColumnHeader(props) {\n  var classes = useStyles$7();\n  var id = props.id,\n      children = props.children,\n      column = props.column,\n      className = props.className,\n      style = props.style,\n      onSort = props.onSort,\n      onGroupBy = props.onGroupBy,\n      onDragEnter = props.onDragEnter,\n      onDragOver = props.onDragOver,\n      onDragStart = props.onDragStart,\n      onDrop = props.onDrop,\n      onDragEnd = props.onDragEnd,\n      headerTooltip = props.headerTooltip,\n      isDraggable = props.isDraggable,\n      dragOver = props.dragOver,\n      role = props.role,\n      virtualColumn = props.virtualColumn,\n      isRtl = props.isRtl,\n      columnIndex = props.columnIndex,\n      visibleColumnIndex = props.visibleColumnIndex,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      portalContainer = props.portalContainer;\n  var isFiltered = column.filterValue && column.filterValue.length > 0;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      popoverOpen = _useState2[0],\n      setPopoverOpen = _useState2[1];\n\n  var tooltip = function () {\n    if (headerTooltip) {\n      return headerTooltip;\n    }\n\n    if (typeof children === 'string') {\n      return children;\n    }\n\n    return null;\n  }();\n\n  var textStyle = function () {\n    var margin = 0;\n    if (column.isSorted) margin++;\n    if (column.isGrouped) margin++;\n    if (isFiltered) margin++;\n\n    if (margin === 0) {\n      return {};\n    }\n\n    if (margin > 0) margin += 0.5;\n\n    if (isRtl) {\n      return {\n        marginLeft: \"\".concat(margin, \"rem\")\n      };\n    }\n\n    return {\n      marginRight: \"\".concat(margin, \"rem\")\n    };\n  }();\n\n  var hasPopover = column.canGroupBy || column.canSort || column.canFilter;\n\n  var handleHeaderCellClick = function handleHeaderCellClick(e) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n\n    if (hasPopover) {\n      setPopoverOpen(true);\n    }\n  };\n\n  var directionStyles = isRtl ? {\n    right: 0,\n    transform: \"translateX(-\".concat(virtualColumn.start, \"px)\")\n  } : {\n    left: 0,\n    transform: \"translateX(\".concat(virtualColumn.start, \"px)\")\n  };\n  var iconContainerDirectionStyles = isRtl ? {\n    left: '0.5rem'\n  } : {\n    right: '0.5rem'\n  };\n\n  var handleHeaderCellKeyDown = function handleHeaderCellKeyDown(e) {\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n\n    if (hasPopover && e.code === 'Enter') {\n      setPopoverOpen(true);\n    }\n\n    if (e.code === 'Space') {\n      e.preventDefault();\n    }\n  };\n\n  var handleHeaderCellKeyUp = function handleHeaderCellKeyUp(e) {\n    if (hasPopover && e.code === 'Space') {\n      setPopoverOpen(true);\n    }\n  };\n\n  var targetRef = useRef();\n  if (!column) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: targetRef,\n    style: _objectSpread({\n      position: 'absolute',\n      top: 0,\n      width: \"\".concat(virtualColumn.size, \"px\")\n    }, directionStyles)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-visible-column-index\": visibleColumnIndex,\n    \"data-visible-row-index\": 0,\n    \"data-row-index\": 0,\n    \"data-column-index\": columnIndex,\n    tabIndex: -1,\n    id: id,\n    className: className,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      cursor: hasPopover ? 'pointer' : 'auto',\n      borderLeft: dragOver ? \"3px solid \".concat(ThemingParameters.sapSelectedColor) : undefined\n    }),\n    role: role,\n    draggable: isDraggable,\n    onDragEnter: onDragEnter,\n    onDragOver: onDragOver,\n    onDragStart: onDragStart,\n    onDrop: onDrop,\n    onDragEnd: onDragEnd,\n    \"data-column-id\": id,\n    onClick: handleHeaderCellClick,\n    onKeyDown: handleHeaderCellKeyDown,\n    onKeyUp: handleHeaderCellKeyUp\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    \"data-h-align\": column.hAlign\n  }, /*#__PURE__*/React.createElement(Text, {\n    tooltip: tooltip,\n    wrapping: false,\n    style: textStyle,\n    className: classes.text\n  }, children), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer,\n    style: iconContainerDirectionStyles\n  }, isFiltered && /*#__PURE__*/React.createElement(Icon, {\n    name: \"filter\"\n  }), column.isSorted && /*#__PURE__*/React.createElement(Icon, {\n    name: column.isSortedDesc ? 'sort-descending' : 'sort-ascending'\n  }), column.isGrouped && /*#__PURE__*/React.createElement(Icon, {\n    name: \"group-2\"\n  }))), hasPopover && targetRef.current && /*#__PURE__*/React.createElement(ColumnHeaderModal, {\n    isRtl: isRtl,\n    column: column,\n    onSort: onSort,\n    onGroupBy: onGroupBy,\n    targetRef: targetRef,\n    open: popoverOpen,\n    setPopoverOpen: setPopoverOpen,\n    portalContainer: portalContainer\n  })));\n};\n\nvar _excluded$1 = [\"key\"];\nvar styles$4 = {\n  resizer: {\n    display: 'inline-block',\n    width: '3px',\n    height: '100%',\n    position: 'absolute',\n    bottom: 0,\n    top: 0,\n    zIndex: 1,\n    cursor: 'col-resize',\n    willChange: 'transform',\n    '&:hover, &:active': {\n      backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor\n    }\n  }\n};\nvar useStyles$6 = createUseStyles(styles$4, {\n  name: 'Resizer'\n});\nvar ColumnHeaderContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var headerProps = props.headerProps,\n      headerGroup = props.headerGroup,\n      onSort = props.onSort,\n      onGroupByChanged = props.onGroupByChanged,\n      onDragStart = props.onDragStart,\n      onDragOver = props.onDragOver,\n      onDrop = props.onDrop,\n      onDragEnter = props.onDragEnter,\n      onDragEnd = props.onDragEnd,\n      dragOver = props.dragOver,\n      tableRef = props.tableRef,\n      visibleColumnsWidth = props.visibleColumnsWidth,\n      overscanCountHorizontal = props.overscanCountHorizontal,\n      resizeInfo = props.resizeInfo,\n      reactWindowRef = props.reactWindowRef,\n      isRtl = props.isRtl,\n      portalContainer = props.portalContainer;\n  var columnVirtualizer = useVirtual({\n    size: visibleColumnsWidth.length,\n    parentRef: tableRef,\n    estimateSize: useCallback(function (index) {\n      return visibleColumnsWidth[index];\n    }, [visibleColumnsWidth]),\n    horizontal: true,\n    overscan: overscanCountHorizontal\n  });\n  reactWindowRef.current = _objectSpread(_objectSpread({}, reactWindowRef.current), {}, {\n    horizontalScrollToOffset: columnVirtualizer.scrollToOffset,\n    horizontalScrollToIndex: columnVirtualizer.scrollToIndex\n  });\n  var classes = useStyles$6();\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, headerProps, {\n    style: {\n      width: \"\".concat(columnVirtualizer.totalSize, \"px\")\n    },\n    ref: ref,\n    \"data-component-name\": \"AnalyticalTableHeaderRow\"\n  }), columnVirtualizer.virtualItems.map(function (virtualColumn, index) {\n    var column = headerGroup.headers[virtualColumn.index];\n\n    if (!column) {\n      return null;\n    }\n\n    var isLastColumn = !column.disableResizing && virtualColumn.index + 1 === headerGroup.headers.length;\n    var resizerDirectionStyle = isRtl ? {\n      right: \"\".concat(column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0), \"px\"),\n      transform: 'translateX(50%)'\n    } : {\n      left: \"\".concat(column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0), \"px\"),\n      transform: 'translateX(-50%)'\n    };\n\n    var _column$getHeaderProp = column.getHeaderProps(),\n        key = _column$getHeaderProp.key,\n        rest = _objectWithoutProperties(_column$getHeaderProp, _excluded$1);\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: key\n    }, column.canResize && column.getResizerProps && /*#__PURE__*/React.createElement(\"div\", _extends({}, column.getResizerProps(), {\n      \"data-resizer\": true,\n      className: classes.resizer,\n      style: resizerDirectionStyle\n    })), /*#__PURE__*/React.createElement(ColumnHeader, _extends({}, rest, {\n      visibleColumnIndex: index,\n      columnIndex: virtualColumn.index,\n      onSort: onSort,\n      onGroupBy: onGroupByChanged,\n      onDragStart: onDragStart,\n      onDragOver: onDragOver,\n      onDrop: onDrop,\n      onDragEnter: onDragEnter,\n      onDragEnd: onDragEnd,\n      dragOver: column.id === dragOver,\n      headerTooltip: column.headerTooltip,\n      isDraggable: (column.canReorder || !column.disableDragAndDrop) && !resizeInfo.isResizingColumn,\n      virtualColumn: virtualColumn,\n      isRtl: isRtl,\n      portalContainer: portalContainer\n    }), column.render('Header')));\n  }));\n});\n\nvar DefaultFilterComponent = function DefaultFilterComponent(_ref) {\n  var _column$filterValue;\n\n  var column = _ref.column;\n  var handleChange = useCallback(function (e) {\n    column.setFilter(e.target.value || undefined);\n  }, [column.setFilter]);\n  return /*#__PURE__*/React.createElement(Input, {\n    onInput: handleChange,\n    value: (_column$filterValue = column.filterValue) !== null && _column$filterValue !== void 0 ? _column$filterValue : ''\n  });\n};\n\nvar Cell$3 = function Cell(_ref) {\n  var _ref$cell = _ref.cell,\n      _ref$cell$value = _ref$cell.value,\n      value = _ref$cell$value === void 0 ? '' : _ref$cell$value,\n      isGrouped = _ref$cell.isGrouped,\n      row = _ref.row;\n  var cellContent = \"\".concat(value !== null && value !== void 0 ? value : '');\n\n  if (isGrouped) {\n    cellContent += \" (\".concat(row.subRows.length, \")\");\n  }\n\n  return /*#__PURE__*/React.createElement(Text, {\n    wrapping: false,\n    tooltip: cellContent\n  }, cellContent);\n};\n\nvar tableGroupExpandCollapseIcon$1 = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\nvar isBrowserIe = isIE();\n\nvar getPadding = function getPadding(level) {\n  switch (level) {\n    case 0:\n      return '0px';\n\n    case 1:\n      return isBrowserIe ? '1rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n\n    case 2:\n      return isBrowserIe ? '1.5rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n\n    case 3:\n      return isBrowserIe ? '2rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n\n    default:\n      return isBrowserIe ? \"calc(2rem + \".concat(level - 3, \"rem * 0.5)\") : \"calc(\".concat(CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3, \" + \").concat(level - 3, \"rem * 0.5)\");\n  }\n};\n\nvar Expandable = function Expandable(props) {\n  var cell = props.cell,\n      row = props.row,\n      column = props.column,\n      columns = props.columns,\n      webComponentsReactProperties = props.webComponentsReactProperties,\n      isRtl = props.state.isRtl;\n  var tableColumns = columns.filter(function (_ref) {\n    var id = _ref.id;\n    return id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column' && id !== '__ui5wcr__internal_navigation_column';\n  });\n  var columnIndex = tableColumns.findIndex(function (col) {\n    return col.id === column.id;\n  });\n  var paddingRtl = isRtl ? 'paddingRight' : 'paddingLeft';\n  var paddingLeft;\n\n  if (row.canExpand) {\n    paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n  } else {\n    paddingLeft = columnIndex === 0 ? \"calc(\".concat(getPadding(row.depth), \" + 2rem)\") : 0;\n  }\n\n  var style = _defineProperty({}, paddingRtl, paddingLeft);\n\n  var rowProps = row.getToggleRowExpandedProps();\n  var subComponentExpandable = typeof (webComponentsReactProperties === null || webComponentsReactProperties === void 0 ? void 0 : webComponentsReactProperties.renderRowSubComponent) === 'function' && !!(webComponentsReactProperties !== null && webComponentsReactProperties !== void 0 && webComponentsReactProperties.renderRowSubComponent(row)) && !webComponentsReactProperties.alwaysShowSubComponent;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columnIndex === 0 && (row.canExpand || subComponentExpandable) ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: rowProps.onClick,\n    title: rowProps.title,\n    style: _objectSpread(_objectSpread({}, rowProps.style), style)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    interactive: true,\n    name: \"\".concat(row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'),\n    style: tableGroupExpandCollapseIcon$1\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    style: style\n  }), cell.render('Cell'));\n};\n\nvar tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nvar Grouped = function Grouped(props) {\n  var cell = props.cell,\n      row = props.row;\n  var style = {};\n\n  if (cell.column.hAlign && (cell.column.hAlign !== TextAlign.Left || cell.column.hAlign !== TextAlign.Begin)) {\n    style.marginRight = 'auto';\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", row.getToggleRowExpandedProps({\n    style: style\n  }), /*#__PURE__*/React.createElement(Icon, {\n    name: \"\".concat(row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'),\n    style: tableGroupExpandCollapseIcon\n  })), cell.render('Cell'));\n};\n\nvar PopInStyles = {\n  container: {\n    width: '100%'\n  },\n  defaultCell: {\n    fontFamily: \"\".concat(ThemingParameters.sapFontBoldFamily),\n    '& *': {\n      fontFamily: \"\".concat(ThemingParameters.sapFontBoldFamily)\n    }\n  },\n  header: {\n    height: '16px'\n  }\n};\nvar useStyles$5 = createUseStyles(PopInStyles, {\n  name: 'PopIn'\n});\n\nvar PopIn = function PopIn(instance) {\n  var _state$popInColumns;\n\n  var state = instance.state,\n      contentToRender = instance.contentToRender,\n      cell = instance.cell,\n      row = instance.row,\n      internalRowHeight = instance.internalRowHeight;\n  var classes = useStyles$5();\n  return /*#__PURE__*/React.createElement(FlexBox, {\n    direction: FlexBoxDirection.Column,\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(FlexBox, {\n    alignItems: contentToRender !== 'Grouped' && contentToRender !== 'Expandable' ? FlexBoxAlignItems.Start : FlexBoxAlignItems.Center,\n    wrap: FlexBoxWrap.NoWrap,\n    className: classes.defaultCell,\n    style: {\n      height: internalRowHeight\n    }\n  }, cell.render(contentToRender)), contentToRender !== 'Grouped' && ((_state$popInColumns = state.popInColumns) === null || _state$popInColumns === void 0 ? void 0 : _state$popInColumns.map(function (item) {\n    var _item$column2;\n\n    var popInInstanceProps = row.allCells.find(function (cell) {\n      return cell.column.id === item.id;\n    });\n\n    var renderHeader = function renderHeader() {\n      if (item.column.PopInHeader) {\n        return typeof item.column.PopInHeader === 'function' ? item.column.PopInHeader(_objectSpread(_objectSpread({}, instance), popInInstanceProps)) : item.column.PopInHeader;\n      }\n\n      return typeof item.column.Header === 'function' ? makeRenderer(_objectSpread(_objectSpread({}, instance), popInInstanceProps), item.column)(item.column.Header) : item.column.Header;\n    };\n\n    var renderCell = function renderCell() {\n      var _item$column;\n\n      if ((_item$column = item.column) !== null && _item$column !== void 0 && _item$column.Cell) {\n        var _cell = item.column.Cell;\n\n        if (typeof _cell === 'string') {\n          return /*#__PURE__*/React.createElement(Text, {\n            wrapping: false,\n            tooltip: _cell\n          }, _cell);\n        }\n\n        return makeRenderer(_objectSpread(_objectSpread(_objectSpread({}, instance), popInInstanceProps), {}, {\n          isPopIn: true\n        }), item.column)(item.column.Cell);\n      }\n\n      return popInInstanceProps !== null && popInInstanceProps !== void 0 && popInInstanceProps.value ? /*#__PURE__*/React.createElement(Text, {\n        wrapping: false,\n        tooltip: popInInstanceProps.value\n      }, popInInstanceProps.value) : null;\n    };\n\n    return /*#__PURE__*/React.createElement(FlexBox, {\n      direction: FlexBoxDirection.Column,\n      key: item.id\n    }, ((_item$column2 = item.column) === null || _item$column2 === void 0 ? void 0 : _item$column2.Header) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.header\n    }, renderHeader(), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: internalRowHeight\n      }\n    }, popInInstanceProps && renderCell()));\n  })));\n};\n\nvar RepeatedValue = function RepeatedValue() {\n  return null;\n};\n\nvar DEFAULT_COLUMN_WIDTH = 60;\n\nvar defaultFilterMethod = function defaultFilterMethod(filter, row) {\n  return new RegExp(filter.value, 'gi').test(String(row[filter.id]));\n};\n\nvar DefaultColumn = {\n  Filter: DefaultFilterComponent,\n  minWidth: DEFAULT_COLUMN_WIDTH,\n  vAlign: VerticalAlign.Middle,\n  defaultFilter: defaultFilterMethod,\n  Grouped: Grouped,\n  Cell: Cell$3,\n  Expandable: Expandable,\n  RepeatedValue: RepeatedValue,\n  PopIn: PopIn\n};\nvar styles$3 = {\n  loader: {\n    position: 'absolute',\n    top: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n};\nvar useStyles$4 = createUseStyles(styles$3, {\n  name: 'LoadingComponent'\n});\n\nvar DefaultLoadingComponent = function DefaultLoadingComponent(_ref) {\n  var style = _ref.style;\n  var classes = useStyles$4();\n  return /*#__PURE__*/React.createElement(Loader, {\n    delay: 500,\n    style: style,\n    className: classes.loader\n  });\n};\n\nDefaultLoadingComponent.displayName = 'DefaultLoadingComponent';\n\nvar getArrayOfLength = function getArrayOfLength(len) {\n  return Array.from(Array(len).keys());\n};\n\nvar TableRow = function TableRow(_ref) {\n  var columns = _ref.columns,\n      y = _ref.y,\n      row = _ref.row;\n  var columnOffset = 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columns.map(function (column, i) {\n    var el = /*#__PURE__*/React.createElement(\"rect\", {\n      key: \"column-\".concat(i, \"-row-\").concat(row),\n      x: columnOffset + 2,\n      y: y,\n      rx: \"2\",\n      ry: \"8\",\n      width: column.totalWidth - 4,\n      height: \"16\"\n    });\n    columnOffset += column.totalWidth;\n    return el;\n  }));\n};\n\nvar TablePlaceholder = function TablePlaceholder(props) {\n  var columns = props.columns,\n      rows = props.rows,\n      style = props.style,\n      rowHeight = props.rowHeight,\n      tableWidth = props.tableWidth,\n      isRtl = props.isRtl;\n  var height = rows * rowHeight;\n  var innerStyles = useMemo(function () {\n    return _objectSpread({\n      backgroundColor: ThemingParameters.sapList_Background\n    }, style);\n  }, [style, ThemingParameters.sapList_Background]);\n  return /*#__PURE__*/React.createElement(ContentLoader, {\n    style: innerStyles,\n    height: height,\n    width: tableWidth,\n    rtl: isRtl,\n    speed: 2,\n    backgroundColor: ThemingParameters.sapContent_ImagePlaceholderBackground,\n    foregroundColor: ThemingParameters.sapContent_ImagePlaceholderForegroundColor,\n    backgroundOpacity: ThemingParameters.sapContent_DisabledOpacity\n  }, getArrayOfLength(rows).map(function (_, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      columns: columns,\n      y: rowHeight * index + rowHeight / 2,\n      row: index\n    });\n  }));\n};\n\nTablePlaceholder.displayName = 'TablePlaceholder';\nTablePlaceholder.defaultProps = {\n  rows: 5\n};\n\nvar DefaultNoDataComponent = function DefaultNoDataComponent(_ref) {\n  var noDataText = _ref.noDataText,\n      className = _ref.className,\n      style = _ref.style;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, noDataText);\n};\n\nvar getColumnId = function getColumnId(column) {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\n\nvar useDragAndDrop = function useDragAndDrop(props, isRtl, setColumnOrder, columnOrder, resizeInfo, columns) {\n  var onColumnsReordered = props.onColumnsReordered;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragOver = _useState2[0],\n      setDragOver = _useState2[1];\n\n  var handleDragStart = useCallback(function (e) {\n    if (resizeInfo.isResizingColumn) {\n      e.preventDefault();\n      return;\n    }\n\n    e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n  }, [resizeInfo.isResizingColumn]);\n  var handleDragOver = useCallback(function (e) {\n    e.preventDefault();\n  }, []);\n  var handleDragEnter = useCallback(function (e) {\n    setDragOver(e.currentTarget.dataset.columnId);\n  }, []);\n  var handleOnDrop = useCallback(function (e) {\n    setDragOver('');\n    var droppedColId = e.currentTarget.dataset.columnId;\n    var draggedColId = e.dataTransfer.getData('text');\n    if (droppedColId === draggedColId) return;\n    var internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map(function (col) {\n      return getColumnId(col);\n    });\n    var droppedColIdx = internalColumnOrder.findIndex(function (col) {\n      return col === droppedColId;\n    });\n    var draggedColIdx = internalColumnOrder.findIndex(function (col) {\n      return col === draggedColId;\n    });\n\n    var tempCols = _toConsumableArray(internalColumnOrder);\n\n    var targetIndex = droppedColIdx > draggedColIdx ? isRtl ? droppedColIdx : droppedColIdx - 1 : droppedColIdx;\n    tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n    setColumnOrder(tempCols);\n    var columnsNewOrder = tempCols.map(function (tempColId) {\n      return columns.find(function (col) {\n        return getColumnId(col) === tempColId;\n      });\n    });\n    onColumnsReordered(enrichEventWithDetails(e, {\n      columnsNewOrder: columnsNewOrder,\n      column: columns[draggedColIdx]\n    }));\n  }, [columnOrder, onColumnsReordered, columns]);\n  var handleOnDragEnd = useCallback(function () {\n    setDragOver('');\n  }, [dragOver]);\n  return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};\n\nvar ROW_SAMPLE_SIZE = 20;\nvar DEFAULT_HEADER_NUM_CHAR = 10;\nvar MAX_WIDTH = 700; // a function, which approximates header px sizes given a character length\n\nvar approximateHeaderPxFromCharLength = function approximateHeaderPxFromCharLength(charLength) {\n  return charLength < 15 ? Math.sqrt(charLength * 1500) : 8 * charLength;\n};\n\nvar approximateContentPxFromCharLength = function approximateContentPxFromCharLength(charLength) {\n  return 8 * charLength;\n};\n\nvar columnsDeps$2 = function columnsDeps(deps, _ref) {\n  var _ref$instance = _ref.instance,\n      state = _ref$instance.state,\n      webComponentsReactProperties = _ref$instance.webComponentsReactProperties,\n      visibleColumns = _ref$instance.visibleColumns;\n  return [].concat(_toConsumableArray(deps), [state.tableClientWidth, state.hiddenColumns.length, visibleColumns === null || visibleColumns === void 0 ? void 0 : visibleColumns.length, webComponentsReactProperties.scaleWidthMode, webComponentsReactProperties.loading]);\n};\n\nvar columns$3 = function columns(_columns, _ref2) {\n  var instance = _ref2.instance;\n\n  if (!instance.state || !instance.rows) {\n    return _columns;\n  }\n\n  var rows = instance.rows,\n      state = instance.state;\n  var hiddenColumns = state.hiddenColumns,\n      totalWidth = state.tableClientWidth;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      scaleWidthMode = _instance$webComponen.scaleWidthMode,\n      loading = _instance$webComponen.loading;\n  if (_columns.length === 0 || !totalWidth) return _columns; //map columns to visibleColumns\n\n  var visibleColumns = instance.visibleColumns.map(function (visCol) {\n    var column = _columns.find(function (col) {\n      return col.id === visCol.id || col.accessor !== undefined && visCol.id !== undefined && col.accessor === visCol.id;\n    });\n\n    if (column) {\n      return column;\n    }\n\n    return column !== null && column !== void 0 ? column : false;\n  }).filter(Boolean);\n\n  var calculateDefaultTableWidth = function calculateDefaultTableWidth() {\n    var columnsWithWidthProperties = visibleColumns.filter(function (column) {\n      var _ref3, _ref4, _column$width;\n\n      return (_ref3 = (_ref4 = (_column$width = column.width) !== null && _column$width !== void 0 ? _column$width : column.minWidth) !== null && _ref4 !== void 0 ? _ref4 : column.maxWidth) !== null && _ref3 !== void 0 ? _ref3 : false;\n    }).map(function (column) {\n      var _column$id;\n\n      return {\n        accessor: (_column$id = column.id) !== null && _column$id !== void 0 ? _column$id : column.accessor,\n        minWidth: column.minWidth,\n        width: column.width,\n        maxWidth: column.maxWidth\n      };\n    });\n    var availableWidth = totalWidth;\n    var defaultColumnsCount = visibleColumns.length;\n    var columnsWithFixedWidth = columnsWithWidthProperties.map(function (column) {\n      var width = column.width,\n          minWidth = column.minWidth,\n          maxWidth = column.maxWidth,\n          accessor = column.accessor;\n\n      if (width) {\n        // necessary because of default minWidth\n        var acceptedWidth = accessor !== '__ui5wcr__internal_highlight_column' && accessor !== '__ui5wcr__internal_selection_column' && accessor !== '__ui5wcr__internal_navigation_column' && width < 60 ? 60 : width;\n        availableWidth -= acceptedWidth;\n        defaultColumnsCount--;\n        return acceptedWidth;\n      }\n\n      var columnsWithMaxWidth = columnsWithWidthProperties.filter(function (item) {\n        return item.maxWidth;\n      });\n      var aggregatedColumnsMaxWidth = columnsWithMaxWidth.reduce(function (acc, cur) {\n        return acc + cur.maxWidth;\n      }, 0);\n      var aggregatedColumnsMinWidth = columnsWithWidthProperties.filter(function (item) {\n        return item.minWidth && !item.maxWidth;\n      }).reduce(function (acc, cur) {\n        return acc + cur.minWidth;\n      }, 0);\n\n      if (minWidth > availableWidth / defaultColumnsCount) {\n        // don't apply minWidth if enough space is available because of maxWidth properties\n        if (availableWidth - aggregatedColumnsMaxWidth > aggregatedColumnsMinWidth + (visibleColumns.length - columnsWithWidthProperties.length) * 60) {\n          // apply minWidth only if it's larger than the calculated available width\n          if (minWidth > (availableWidth - aggregatedColumnsMaxWidth) / columnsWithMaxWidth.length) {\n            availableWidth -= minWidth;\n            defaultColumnsCount--;\n            return minWidth;\n          }\n\n          return false;\n        }\n\n        availableWidth -= minWidth;\n        defaultColumnsCount--;\n        return minWidth;\n      }\n\n      if (maxWidth < availableWidth / defaultColumnsCount) {\n        availableWidth -= maxWidth;\n        defaultColumnsCount--;\n        return maxWidth;\n      }\n\n      return false;\n    }).filter(Boolean);\n    var fixedWidth = columnsWithFixedWidth.reduce(function (acc, val) {\n      return acc + val;\n    }, 0); // check if columns are visible and table has width\n\n    if (visibleColumns.length > 0 && totalWidth > 0) {\n      // set fixedWidth as defaultWidth if all visible columns have fixed value\n      if (visibleColumns.length === columnsWithFixedWidth.length) {\n        return fixedWidth / visibleColumns.length;\n      } // spread default columns\n\n\n      if (totalWidth >= fixedWidth + defaultColumnsCount * DEFAULT_COLUMN_WIDTH) {\n        return (totalWidth - fixedWidth) / defaultColumnsCount;\n      }\n    }\n\n    return DEFAULT_COLUMN_WIDTH;\n  };\n\n  var hasData = instance.data.length > 0;\n\n  if (scaleWidthMode === TableScaleWidthMode.Default || !hasData && loading) {\n    var defaultWidth = calculateDefaultTableWidth();\n    return _columns.map(function (column) {\n      var _column$width2;\n\n      return _objectSpread(_objectSpread({}, column), {}, {\n        width: (_column$width2 = column.width) !== null && _column$width2 !== void 0 ? _column$width2 : defaultWidth\n      });\n    });\n  }\n\n  var rowSample = rows.slice(0, ROW_SAMPLE_SIZE);\n  var columnMeta = visibleColumns.reduce(function (acc, column) {\n    var _column$id5;\n\n    if (column.id === '__ui5wcr__internal_selection_column' || column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_navigation_column') {\n      var _column$id2;\n\n      acc[(_column$id2 = column.id) !== null && _column$id2 !== void 0 ? _column$id2 : column.accessor] = {\n        minHeaderWidth: column.width,\n        fullWidth: column.width,\n        contentCharAvg: 0\n      };\n      return acc;\n    }\n\n    var headerLength = typeof column.Header === 'string' ? column.Header.length : DEFAULT_HEADER_NUM_CHAR; // max character length\n\n    var contentMaxCharLength = Math.max.apply(Math, [headerLength].concat(_toConsumableArray(rowSample.map(function (row) {\n      var _row$values, _column$id3;\n\n      var dataPoint = (_row$values = row.values) === null || _row$values === void 0 ? void 0 : _row$values[(_column$id3 = column.id) !== null && _column$id3 !== void 0 ? _column$id3 : column.accessor];\n\n      if (dataPoint) {\n        if (typeof dataPoint === 'string') return dataPoint.length;\n        if (typeof dataPoint === 'number') return (dataPoint + '').length;\n      }\n\n      return 0;\n    })))); // avg character length\n\n    var contentCharAvg = rowSample.reduce(function (acc, item) {\n      var _item$values, _column$id4;\n\n      var dataPoint = (_item$values = item.values) === null || _item$values === void 0 ? void 0 : _item$values[(_column$id4 = column.id) !== null && _column$id4 !== void 0 ? _column$id4 : column.accessor];\n      var val = 0;\n\n      if (dataPoint) {\n        if (typeof dataPoint === 'string') val = dataPoint.length;\n        if (typeof dataPoint === 'number') val = (dataPoint + '').length;\n      }\n\n      return acc + val;\n    }, 0) / rowSample.length;\n    var minHeaderWidth = approximateHeaderPxFromCharLength(headerLength);\n    acc[(_column$id5 = column.id) !== null && _column$id5 !== void 0 ? _column$id5 : column.accessor] = {\n      minHeaderWidth: minHeaderWidth,\n      fullWidth: Math.max(minHeaderWidth, approximateContentPxFromCharLength(contentMaxCharLength)),\n      contentCharAvg: contentCharAvg\n    };\n    return acc;\n  }, {});\n  var totalCharNum = Object.values(columnMeta).reduce(function (acc, item) {\n    return acc + item.contentCharAvg;\n  }, 0);\n  var reservedWidth = visibleColumns.reduce(function (acc, column) {\n    var _column$id6;\n\n    var _columnMeta = columnMeta[(_column$id6 = column.id) !== null && _column$id6 !== void 0 ? _column$id6 : column.accessor],\n        minHeaderWidth = _columnMeta.minHeaderWidth,\n        fullWidth = _columnMeta.fullWidth;\n    return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0, scaleWidthMode === TableScaleWidthMode.Grow ? fullWidth : 0) || 0;\n  }, 0);\n  var availableWidth = totalWidth - reservedWidth;\n\n  if (scaleWidthMode === TableScaleWidthMode.Smart || availableWidth > 0) {\n    if (scaleWidthMode === TableScaleWidthMode.Grow) {\n      reservedWidth = visibleColumns.reduce(function (acc, column) {\n        var _column$id7;\n\n        var minHeaderWidth = columnMeta[(_column$id7 = column.id) !== null && _column$id7 !== void 0 ? _column$id7 : column.accessor].minHeaderWidth;\n        return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0) || 0;\n      }, 0);\n      availableWidth = totalWidth - reservedWidth;\n    }\n\n    return _columns.map(function (column) {\n      var _column$isVisible, _column$id8, _column$id9;\n\n      var isColumnVisible = ((_column$isVisible = column.isVisible) !== null && _column$isVisible !== void 0 ? _column$isVisible : true) && !hiddenColumns.includes((_column$id8 = column.id) !== null && _column$id8 !== void 0 ? _column$id8 : column.accessor);\n      var meta = columnMeta[(_column$id9 = column.id) !== null && _column$id9 !== void 0 ? _column$id9 : column.accessor];\n\n      if (isColumnVisible && meta) {\n        var _column$width3, _column$minWidth;\n\n        var minHeaderWidth = meta.minHeaderWidth,\n            contentCharAvg = meta.contentCharAvg;\n        var additionalSpaceFactor = totalCharNum > 0 ? contentCharAvg / totalCharNum : 1 / visibleColumns.length;\n        var targetWidth = additionalSpaceFactor * availableWidth + minHeaderWidth;\n        return _objectSpread(_objectSpread({}, column), {}, {\n          width: (_column$width3 = column.width) !== null && _column$width3 !== void 0 ? _column$width3 : targetWidth,\n          minWidth: (_column$minWidth = column.minWidth) !== null && _column$minWidth !== void 0 ? _column$minWidth : minHeaderWidth\n        });\n      }\n\n      return column;\n    });\n  } // TableScaleWidthMode Grow\n\n\n  return _columns.map(function (column) {\n    var _column$isVisible2, _column$id10, _column$id11;\n\n    var isColumnVisible = ((_column$isVisible2 = column.isVisible) !== null && _column$isVisible2 !== void 0 ? _column$isVisible2 : true) && !hiddenColumns.includes((_column$id10 = column.id) !== null && _column$id10 !== void 0 ? _column$id10 : column.accessor);\n    var meta = columnMeta[(_column$id11 = column.id) !== null && _column$id11 !== void 0 ? _column$id11 : column.accessor];\n\n    if (isColumnVisible && meta) {\n      var _column$width4;\n\n      var fullWidth = meta.fullWidth;\n      return _objectSpread(_objectSpread({}, column), {}, {\n        width: (_column$width4 = column.width) !== null && _column$width4 !== void 0 ? _column$width4 : fullWidth,\n        maxWidth: MAX_WIDTH\n      });\n    }\n\n    return column;\n  });\n};\n\nvar useDynamicColumnWidths = function useDynamicColumnWidths(hooks) {\n  hooks.columns.push(columns$3);\n  hooks.columnsDeps.push(columnsDeps$2);\n};\n\nvar getFirstVisibleCell = function getFirstVisibleCell(target, currentlyFocusedCell, noData) {\n  var firstVisibleCell = noData ? target.querySelector(\"div[data-visible-column-index=\\\"0\\\"][data-visible-row-index=\\\"0\\\"]\") : target.querySelector(\"div[data-visible-column-index=\\\"0\\\"][data-visible-row-index=\\\"1\\\"]\");\n\n  if (firstVisibleCell) {\n    firstVisibleCell.tabIndex = 0;\n    firstVisibleCell.focus();\n    currentlyFocusedCell.current = firstVisibleCell;\n  }\n};\n\nvar findParentCell = function findParentCell(target) {\n  if (target === undefined || target === null) return;\n\n  if (target.dataset.rowIndex !== undefined && target.dataset.columnIndex !== undefined || target.dataset.rowIndexSub !== undefined && target.dataset.columnIndexSub !== undefined) {\n    return target;\n  } else {\n    return findParentCell(target.parentElement);\n  }\n};\n\nvar setFocus = function setFocus(currentlyFocusedCell, nextElement) {\n  currentlyFocusedCell.current.tabIndex = -1;\n\n  if (nextElement) {\n    nextElement.tabIndex = 0;\n    nextElement.focus();\n    currentlyFocusedCell.current = nextElement;\n  }\n};\n\nvar getTableProps = function getTableProps(tableProps, _ref) {\n  var _ref$instance = _ref.instance,\n      webComponentsReactProperties = _ref$instance.webComponentsReactProperties,\n      data = _ref$instance.data;\n  var currentlyFocusedCell = useRef(null);\n  var tableRef = webComponentsReactProperties.tableRef;\n  var noData = data.length === 0;\n  var onTableBlur = useCallback(function (e) {\n    if (e.target.tagName === 'UI5-LI' || e.target.tagName === 'UI5-LI-CUSTOM') {\n      currentlyFocusedCell.current = null;\n    }\n  }, [currentlyFocusedCell.current]);\n  var onTableFocus = useCallback(function (e) {\n    var isFirstCellAvailable = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"1\"]');\n\n    if (e.target.dataset.componentName === 'AnalyticalTableContainer') {\n      e.target.tabIndex = -1;\n\n      if (currentlyFocusedCell.current) {\n        var _dataset$rowIndex, _dataset$columnIndex;\n\n        var dataset = currentlyFocusedCell.current.dataset;\n        var rowIndex = parseInt((_dataset$rowIndex = dataset.rowIndex) !== null && _dataset$rowIndex !== void 0 ? _dataset$rowIndex : dataset.rowIndexSub, 10);\n        var columnIndex = parseInt((_dataset$columnIndex = dataset.columnIndex) !== null && _dataset$columnIndex !== void 0 ? _dataset$columnIndex : dataset.columnIndexSub, 10);\n\n        if (e.target.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-row-index=\\\"\").concat(rowIndex, \"\\\"]\")) || e.target.querySelector(\"div[data-column-index-sub=\\\"\".concat(columnIndex, \"\\\"][data-row-index-sub=\\\"\").concat(rowIndex, \"\\\"]\"))) {\n          currentlyFocusedCell.current.tabIndex = 0;\n          currentlyFocusedCell.current.focus();\n        } else {\n          getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n        }\n      } else if (isFirstCellAvailable) {\n        var firstCell = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"0\"]');\n        firstCell.tabIndex = 0;\n        firstCell.focus();\n        currentlyFocusedCell.current = firstCell;\n      } else {\n        getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n      }\n    } else {\n      var tableCell = findParentCell(e.target);\n\n      if (tableCell) {\n        currentlyFocusedCell.current = tableCell;\n      } else {\n        getFirstVisibleCell(tableRef.current, currentlyFocusedCell, noData);\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current, noData]);\n  var onKeyboardNavigation = useCallback(function (e) {\n    if (currentlyFocusedCell.current) {\n      var columnIndex = parseInt(currentlyFocusedCell.current.dataset.columnIndex, 10);\n      var rowIndex = parseInt(currentlyFocusedCell.current.dataset.rowIndex, 10);\n\n      switch (e.key) {\n        case 'End':\n          {\n            e.preventDefault();\n            var visibleColumns = tableRef.current.querySelector(\"div[data-component-name=\\\"AnalyticalTableHeaderRow\\\"]\").children;\n            var lastVisibleColumn = Array.from(visibleColumns).slice(0).reduceRight(function (prev, cur, index, arr) {\n              var _cur$children, _cur$children$;\n\n              var columnIndex = parseInt((_cur$children = cur.children) === null || _cur$children === void 0 ? void 0 : (_cur$children$ = _cur$children[0]) === null || _cur$children$ === void 0 ? void 0 : _cur$children$.dataset.columnIndex, 10);\n\n              if (!isNaN(columnIndex)) {\n                arr.length = 0;\n                return columnIndex;\n              }\n\n              return cur;\n            });\n            var newElement = tableRef.current.querySelector(\"div[data-visible-column-index=\\\"\".concat(lastVisibleColumn + 1, \"\\\"][data-row-index=\\\"\").concat(rowIndex, \"\\\"]\"));\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n\n        case 'Home':\n          {\n            e.preventDefault();\n\n            var _newElement = tableRef.current.querySelector(\"div[data-visible-column-index=\\\"0\\\"][data-row-index=\\\"\".concat(rowIndex, \"\\\"]\"));\n\n            setFocus(currentlyFocusedCell, _newElement);\n            break;\n          }\n\n        case 'PageDown':\n          {\n            e.preventDefault();\n\n            if (currentlyFocusedCell.current.dataset.rowIndex === '0') {\n              var _newElement2 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-row-index=\\\"\").concat(rowIndex + 1, \"\\\"]\"));\n\n              setFocus(currentlyFocusedCell, _newElement2);\n            } else {\n              var _tableRef$current$que, _tableRef$current$que2;\n\n              var lastVisibleRow = (_tableRef$current$que = tableRef.current.querySelector(\"div[data-component-name=\\\"AnalyticalTableBody\\\"]\")) === null || _tableRef$current$que === void 0 ? void 0 : (_tableRef$current$que2 = _tableRef$current$que.children) === null || _tableRef$current$que2 === void 0 ? void 0 : _tableRef$current$que2[0].children.length;\n\n              var _newElement3 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-visible-row-index=\\\"\").concat(lastVisibleRow, \"\\\"]\"));\n\n              setFocus(currentlyFocusedCell, _newElement3);\n            }\n\n            break;\n          }\n\n        case 'PageUp':\n          {\n            e.preventDefault();\n\n            if (currentlyFocusedCell.current.dataset.rowIndex <= '1') {\n              var _newElement4 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-row-index=\\\"0\\\"]\"));\n\n              setFocus(currentlyFocusedCell, _newElement4);\n            } else {\n              var _newElement5 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-visible-row-index=\\\"1\\\"]\"));\n\n              setFocus(currentlyFocusedCell, _newElement5);\n            }\n\n            break;\n          }\n\n        case 'ArrowRight':\n          {\n            e.preventDefault();\n\n            var _newElement6 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex + 1, \"\\\"][data-row-index=\\\"\").concat(rowIndex, \"\\\"]\"));\n\n            if (_newElement6) {\n              setFocus(currentlyFocusedCell, _newElement6);\n            }\n\n            break;\n          }\n\n        case 'ArrowLeft':\n          {\n            e.preventDefault();\n\n            var _newElement7 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex - 1, \"\\\"][data-row-index=\\\"\").concat(rowIndex, \"\\\"]\"));\n\n            if (_newElement7) {\n              setFocus(currentlyFocusedCell, _newElement7);\n            }\n\n            break;\n          }\n\n        case 'ArrowDown':\n          {\n            var _parent$children, _firstChildOfParent$d, _currentlyFocusedCell, _currentlyFocusedCell2;\n\n            e.preventDefault();\n            var parent = currentlyFocusedCell.current.parentElement;\n            var firstChildOfParent = parent === null || parent === void 0 ? void 0 : (_parent$children = parent.children) === null || _parent$children === void 0 ? void 0 : _parent$children[0];\n            var hasSubcomponent = firstChildOfParent === null || firstChildOfParent === void 0 ? void 0 : (_firstChildOfParent$d = firstChildOfParent.dataset) === null || _firstChildOfParent$d === void 0 ? void 0 : _firstChildOfParent$d.subcomponent;\n\n            var _newElement8 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-row-index=\\\"\").concat(rowIndex + 1, \"\\\"]\"));\n\n            if (hasSubcomponent && !((_currentlyFocusedCell = currentlyFocusedCell.current) !== null && _currentlyFocusedCell !== void 0 && (_currentlyFocusedCell2 = _currentlyFocusedCell.dataset) !== null && _currentlyFocusedCell2 !== void 0 && _currentlyFocusedCell2.subcomponent)) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildOfParent.tabIndex = 0;\n              firstChildOfParent.dataset.rowIndexSub = \"\".concat(rowIndex);\n              firstChildOfParent.dataset.columnIndexSub = \"\".concat(columnIndex);\n              firstChildOfParent.focus();\n              currentlyFocusedCell.current = firstChildOfParent;\n            } else if (_newElement8) {\n              setFocus(currentlyFocusedCell, _newElement8);\n            } else if (e.target.dataset.subcomponent) {\n              var nextElementToSubComp = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(parseInt(e.target.dataset.columnIndexSub), \"\\\"][data-row-index=\\\"\").concat(parseInt(e.target.dataset.rowIndexSub) + 1, \"\\\"]\"));\n              setFocus(currentlyFocusedCell, nextElementToSubComp);\n            }\n\n            break;\n          }\n\n        case 'ArrowUp':\n          {\n            var _firstChildPrevRow$da, _currentlyFocusedCell3, _currentlyFocusedCell4;\n\n            e.preventDefault();\n            var previousRowCell = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(columnIndex, \"\\\"][data-row-index=\\\"\").concat(rowIndex - 1, \"\\\"]\"));\n            var firstChildPrevRow = previousRowCell === null || previousRowCell === void 0 ? void 0 : previousRowCell.parentElement.children[0];\n\n            var _hasSubcomponent = firstChildPrevRow === null || firstChildPrevRow === void 0 ? void 0 : (_firstChildPrevRow$da = firstChildPrevRow.dataset) === null || _firstChildPrevRow$da === void 0 ? void 0 : _firstChildPrevRow$da.subcomponent;\n\n            if ((_currentlyFocusedCell3 = currentlyFocusedCell.current) !== null && _currentlyFocusedCell3 !== void 0 && (_currentlyFocusedCell4 = _currentlyFocusedCell3.dataset) !== null && _currentlyFocusedCell4 !== void 0 && _currentlyFocusedCell4.subcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n\n              var _newElement9 = tableRef.current.querySelector(\"div[data-column-index=\\\"\".concat(parseInt(e.target.dataset.columnIndexSub), \"\\\"][data-row-index=\\\"\").concat(parseInt(e.target.dataset.rowIndexSub), \"\\\"]\"));\n\n              _newElement9.tabIndex = 0;\n\n              _newElement9.focus();\n\n              currentlyFocusedCell.current = _newElement9;\n            } else if (_hasSubcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildPrevRow.dataset.rowIndexSub = \"\".concat(rowIndex - 1);\n              firstChildPrevRow.dataset.columnIndexSub = \"\".concat(columnIndex);\n              firstChildPrevRow.tabIndex = 0;\n              firstChildPrevRow.focus();\n              currentlyFocusedCell.current = firstChildPrevRow;\n            } else if (previousRowCell) {\n              setFocus(currentlyFocusedCell, previousRowCell);\n            }\n\n            break;\n          }\n      }\n    }\n  }, [currentlyFocusedCell.current, tableRef.current]);\n  return [tableProps, {\n    onFocus: onTableFocus,\n    onKeyDown: onKeyboardNavigation,\n    onBlur: onTableBlur\n  }];\n};\n\nvar useKeyboardNavigation = function useKeyboardNavigation(hooks) {\n  hooks.getTableProps.push(getTableProps);\n};\n\nvar popInVisibleColumnsDeps = function popInVisibleColumnsDeps(deps, _ref) {\n  var state = _ref.instance.state;\n  return [].concat(_toConsumableArray(deps), [state.tableClientWidth]);\n};\n\nvar popInVisibleColumns = function popInVisibleColumns(cols, _ref2) {\n  var instance = _ref2.instance;\n  var state = instance.state,\n      dispatch = instance.dispatch;\n  var tableClientWidth = state.isScrollable ? (state === null || state === void 0 ? void 0 : state.tableClientWidth) + 14\n  /*scrollbar width*/\n  : state === null || state === void 0 ? void 0 : state.tableClientWidth;\n  var popInColumns = cols.filter(function (item) {\n    return item.responsivePopIn && tableClientWidth < item.responsiveMinWidth;\n  }).map(function (item) {\n    var _item$id;\n\n    return {\n      id: (_item$id = item.id) !== null && _item$id !== void 0 ? _item$id : item.accessor,\n      column: item\n    };\n  });\n  dispatch({\n    type: 'SET_POPIN_COLUMNS',\n    payload: popInColumns\n  });\n  return cols.filter(function (col) {\n    return !popInColumns.some(function (item) {\n      var _col$id;\n\n      return item.id === ((_col$id = col.id) !== null && _col$id !== void 0 ? _col$id : col.accessor);\n    }) && (col.hasOwnProperty('responsiveMinWidth') ? !tableClientWidth || tableClientWidth >= col.responsiveMinWidth : true);\n  });\n};\n\nvar usePopIn = function usePopIn(hooks) {\n  hooks.visibleColumns.push(popInVisibleColumns);\n  hooks.visibleColumnsDeps.push(popInVisibleColumnsDeps);\n};\n\nvar baseStyles$1 = {\n  width: '100%',\n  height: '100%'\n};\nvar StyleClassMap = new Map();\nStyleClassMap.set(ValueState.None, undefined);\nStyleClassMap.set(ValueState.Success, 'valueStateSuccess');\nStyleClassMap.set(ValueState.Warning, 'valueStateWarning');\nStyleClassMap.set(ValueState.Error, 'valueStateError');\nStyleClassMap.set(ValueState.Information, 'valueStateInformation');\n/*\n * COMPONENTS\n */\n\nvar Header$2 = function Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '6px'\n    }\n  });\n};\n\nvar Cell$2 = function Cell(instance) {\n  var cell = instance.cell,\n      webComponentsReactProperties = instance.webComponentsReactProperties;\n  var styleClass = StyleClassMap.get(cell.value) ? webComponentsReactProperties.classes[StyleClassMap.get(cell.value)] : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: baseStyles$1,\n    className: styleClass\n  });\n};\n/*\n * TABLE HOOKS\n */\n\n\nvar columnsDeps$1 = function columnsDeps(deps, _ref) {\n  var webComponentsReactProperties = _ref.instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField]);\n};\n\nvar visibleColumnsDeps$2 = function visibleColumnsDeps(deps, _ref2) {\n  var instance = _ref2.instance;\n  return [].concat(_toConsumableArray(deps), [instance.webComponentsReactProperties.withRowHighlight]);\n};\n\nvar visibleColumns$2 = function visibleColumns(currentVisibleColumns, _ref3) {\n  var webComponentsReactProperties = _ref3.instance.webComponentsReactProperties;\n\n  if (!webComponentsReactProperties.withRowHighlight) {\n    return currentVisibleColumns.filter(function (_ref4) {\n      var id = _ref4.id;\n      return id !== '__ui5wcr__internal_highlight_column';\n    });\n  }\n\n  var highlightColumn = currentVisibleColumns.find(function (_ref5) {\n    var id = _ref5.id;\n    return id === '__ui5wcr__internal_highlight_column';\n  });\n  return [highlightColumn].concat(_toConsumableArray(currentVisibleColumns.filter(function (_ref6) {\n    var id = _ref6.id;\n    return id !== '__ui5wcr__internal_highlight_column';\n  })));\n};\n\nvar columns$2 = function columns(currentColumns, _ref7) {\n  var instance = _ref7.instance;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      withRowHighlight = _instance$webComponen.withRowHighlight,\n      highlightField = _instance$webComponen.highlightField;\n\n  if (!withRowHighlight) {\n    return currentColumns;\n  }\n\n  return [{\n    id: '__ui5wcr__internal_highlight_column',\n    accessor: highlightField,\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: 6,\n    minWidth: 6,\n    maxWidth: 6,\n    Header: Header$2,\n    Cell: Cell$2\n  }].concat(_toConsumableArray(currentColumns));\n};\n\nvar useRowHighlight = function useRowHighlight(hooks) {\n  hooks.columns.push(columns$2);\n  hooks.columnsDeps.push(columnsDeps$1);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps$2);\n  hooks.visibleColumns.push(visibleColumns$2);\n};\n\nuseRowHighlight.pluginName = 'useRowHighlight';\nvar baseStyles = {\n  width: '100%',\n  height: '100%'\n};\n/*\n * COMPONENTS\n */\n\nvar Header$1 = function Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '6px'\n    }\n  });\n};\n\nvar Cell$1 = function Cell(instance) {\n  var isNavigatedCell = instance.isNavigatedCell,\n      webComponentsReactProperties = instance.webComponentsReactProperties;\n\n  if (isNavigatedCell) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: baseStyles,\n      className: webComponentsReactProperties.classes.valueStateInformation\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: baseStyles\n  });\n};\n/*\n * TABLE HOOKS\n */\n\n\nvar columnsDeps = function columnsDeps(deps, _ref) {\n  var webComponentsReactProperties = _ref.instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [webComponentsReactProperties.withNavigationHighlight]);\n};\n\nvar visibleColumnsDeps$1 = function visibleColumnsDeps(deps, _ref2) {\n  var instance = _ref2.instance;\n  return [].concat(_toConsumableArray(deps), [instance.webComponentsReactProperties.withNavigationHighlight]);\n};\n\nvar visibleColumns$1 = function visibleColumns(currentVisibleColumns, _ref3) {\n  var webComponentsReactProperties = _ref3.instance.webComponentsReactProperties;\n\n  if (!webComponentsReactProperties.withNavigationHighlight) {\n    return currentVisibleColumns.filter(function (_ref4) {\n      var id = _ref4.id;\n      return id !== '__ui5wcr__internal_navigation_column';\n    });\n  }\n\n  var highlightColumn = currentVisibleColumns.find(function (_ref5) {\n    var id = _ref5.id;\n    return id === '__ui5wcr__internal_navigation_column';\n  });\n  return [].concat(_toConsumableArray(currentVisibleColumns.filter(function (_ref6) {\n    var id = _ref6.id;\n    return id !== '__ui5wcr__internal_navigation_column';\n  })), [highlightColumn]);\n};\n\nvar columns$1 = function columns(currentColumns, _ref7) {\n  var instance = _ref7.instance;\n  var withNavigationHighlight = instance.webComponentsReactProperties.withNavigationHighlight;\n\n  if (!withNavigationHighlight) {\n    return currentColumns;\n  }\n\n  return [].concat(_toConsumableArray(currentColumns), [{\n    id: '__ui5wcr__internal_navigation_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: 6,\n    minWidth: 6,\n    maxWidth: 6,\n    Header: Header$1,\n    Cell: Cell$1\n  }]);\n};\n\nvar useRowNavigationIndicators = function useRowNavigationIndicators(hooks) {\n  hooks.columns.push(columns$1);\n  hooks.columnsDeps.push(columnsDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps$1);\n  hooks.visibleColumns.push(visibleColumns$1);\n};\n\nvar divStyle = {\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n};\nvar customCheckBoxStyling = {\n  cursor: 'pointer',\n  verticalAlign: 'middle'\n};\n/*\n * COMPONENTS\n */\n\nvar Header = function Header(instance) {\n  var getToggleAllRowsSelectedProps = instance.getToggleAllRowsSelectedProps,\n      selectionMode = instance.webComponentsReactProperties.selectionMode;\n\n  if (selectionMode === TableSelectionMode.SingleSelect) {\n    return null;\n  }\n\n  var checkBoxProps = getToggleAllRowsSelectedProps();\n  return /*#__PURE__*/React.createElement(CheckBox, _extends({}, checkBoxProps, {\n    style: customCheckBoxStyling,\n    tabIndex: -1,\n    onChange: undefined,\n    checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked\n  }));\n};\n\nvar Cell = function Cell(_ref) {\n  var row = _ref.row,\n      _ref$webComponentsRea = _ref.webComponentsReactProperties,\n      selectionBehavior = _ref$webComponentsRea.selectionBehavior,\n      selectionMode = _ref$webComponentsRea.selectionMode;\n\n  var handleCellClick = function handleCellClick(e) {\n    if (TableSelectionBehavior.RowSelector === selectionBehavior) {\n      row.getRowProps().onClick(e, true);\n    }\n  };\n\n  if (row.isGrouped && selectionMode === TableSelectionMode.SingleSelect) {\n    return null;\n  }\n\n  if (selectionMode === TableSelectionMode.SingleSelect) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      onClick: handleCellClick,\n      \"data-name\": \"internal_selection_column\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CheckBox, _extends({}, row.getToggleRowSelectedProps(), {\n    tabIndex: -1,\n    onChange: handleCellClick,\n    style: customCheckBoxStyling,\n    \"data-name\": \"internal_selection_column\"\n  }));\n};\n/*\n * TABLE HOOKS\n */\n\n\nvar headerProps = function headerProps(props, _ref2) {\n  var _ref2$instance = _ref2.instance,\n      flatRows = _ref2$instance.flatRows,\n      _ref2$instance$webCom = _ref2$instance.webComponentsReactProperties,\n      onRowSelected = _ref2$instance$webCom.onRowSelected,\n      selectionMode = _ref2$instance$webCom.selectionMode,\n      toggleAllRowsSelected = _ref2$instance.toggleAllRowsSelected,\n      isAllRowsSelected = _ref2$instance.isAllRowsSelected;\n\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === TableSelectionMode.MultiSelect) {\n    var onClick = function onClick(e) {\n      toggleAllRowsSelected();\n\n      if (typeof onRowSelected === 'function') {\n        onRowSelected( // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n        enrichEventWithDetails(e, {\n          allRowsSelected: !isAllRowsSelected,\n          selectedFlatRows: !isAllRowsSelected ? flatRows : []\n        }));\n      }\n    };\n\n    var onKeyDown = function onKeyDown(e) {\n      if (e.code === 'Space' || e.code === 'Enter') {\n        e.preventDefault();\n        onClick(e);\n      }\n    };\n\n    return [props, {\n      onClick: onClick,\n      onKeyDown: onKeyDown\n    }];\n  }\n\n  return props;\n};\n\nvar columnDeps = function columnDeps(deps, _ref3) {\n  var webComponentsReactProperties = _ref3.instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior]);\n};\n\nvar visibleColumnsDeps = function visibleColumnsDeps(deps, _ref4) {\n  var instance = _ref4.instance;\n  return [].concat(_toConsumableArray(deps), [instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior]);\n};\n\nvar visibleColumns = function visibleColumns(currentVisibleColumns, _ref5) {\n  var webComponentsReactProperties = _ref5.instance.webComponentsReactProperties;\n\n  if (webComponentsReactProperties.selectionMode === TableSelectionMode.None || webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.RowOnly) {\n    return currentVisibleColumns;\n  }\n\n  var selectionColumn = currentVisibleColumns.find(function (_ref6) {\n    var id = _ref6.id;\n    return id === '__ui5wcr__internal_selection_column';\n  });\n  return [selectionColumn].concat(_toConsumableArray(currentVisibleColumns.filter(function (_ref7) {\n    var id = _ref7.id;\n    return id !== '__ui5wcr__internal_selection_column';\n  })));\n};\n\nvar columns = function columns(currentColumns, _ref8) {\n  var instance = _ref8.instance;\n  var webComponentsReactProperties = instance.webComponentsReactProperties;\n  var selectionMode = webComponentsReactProperties.selectionMode,\n      selectionBehavior = webComponentsReactProperties.selectionBehavior,\n      tableRef = webComponentsReactProperties.tableRef;\n\n  if (selectionMode === TableSelectionMode.None || selectionBehavior === TableSelectionBehavior.RowOnly) {\n    return currentColumns;\n  }\n\n  var tableSelectionColumnWidth = tableRef.current && parseInt(getComputedStyle(tableRef.current).getPropertyValue(\"--\".concat(CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth)), 10);\n  var selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n  return [{\n    id: '__ui5wcr__internal_selection_column',\n    accessor: '__ui5wcr__internal_selection_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: selectionColumnWidth,\n    minWidth: selectionColumnWidth,\n    maxWidth: selectionColumnWidth,\n    Header: Header,\n    Cell: Cell\n  }].concat(_toConsumableArray(currentColumns));\n};\n\nvar useRowSelectionColumn = function useRowSelectionColumn(hooks) {\n  hooks.getHeaderProps.push(headerProps);\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\n\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar getRowProps$1 = function getRowProps(rowProps, _ref) {\n  var row = _ref.row,\n      instance = _ref.instance;\n  var webComponentsReactProperties = instance.webComponentsReactProperties,\n      toggleRowSelected = instance.toggleRowSelected,\n      selectedFlatRows = instance.selectedFlatRows,\n      flatRows = instance.flatRows;\n\n  var handleRowSelect = function handleRowSelect(e) {\n    var _e$target, _e$target$dataset, _e$nativeEvent, _row$original, _e$target2, _e$target2$dataset;\n\n    var selectionCellClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (((_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$dataset = _e$target.dataset) === null || _e$target$dataset === void 0 ? void 0 : _e$target$dataset.name) !== 'internal_selection_column' && !(e.markerAllowTableRowSelection === true || ((_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : _e$nativeEvent.markerAllowTableRowSelection) === true) && webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(e.target.tagName)) {\n      return;\n    } // dont select empty rows\n\n\n    var isEmptyRow = (_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow;\n\n    if (isEmptyRow) {\n      return;\n    } // dont select grouped rows\n\n\n    if (row.isGrouped) {\n      return;\n    }\n\n    var selectionBehavior = webComponentsReactProperties.selectionBehavior,\n        selectionMode = webComponentsReactProperties.selectionMode,\n        onRowSelected = webComponentsReactProperties.onRowSelected,\n        onRowClick = webComponentsReactProperties.onRowClick;\n\n    if (typeof onRowClick === 'function' && ((_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : (_e$target2$dataset = _e$target2.dataset) === null || _e$target2$dataset === void 0 ? void 0 : _e$target2$dataset.name) !== 'internal_selection_column') {\n      onRowClick(enrichEventWithDetails(e, {\n        row: row\n      }));\n    }\n\n    if (webComponentsReactProperties.selectionMode === TableSelectionMode.None) {\n      return;\n    } // dont continue if the row was clicked and selection mode is row selector only\n\n\n    if (selectionBehavior === TableSelectionBehavior.RowSelector && !selectionCellClick) {\n      return;\n    }\n\n    if (selectionMode === TableSelectionMode.SingleSelect) {\n      var _iterator = _createForOfIteratorHelper(selectedFlatRows),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var selectedRow = _step.value;\n\n          if (selectedRow.id !== row.id) {\n            toggleRowSelected(selectedRow.id, false);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    instance.toggleRowSelected(row.id); // fire event\n\n    if (typeof onRowSelected === 'function') {\n      var payload = {\n        row: row,\n        isSelected: !row.isSelected,\n        selectedFlatRows: !row.isSelected ? [row.id] : [],\n        allRowsSelected: false\n      };\n\n      if (selectionMode === TableSelectionMode.MultiSelect) {\n        var isRowSelected = selectionCellClick ? row.isSelected : !row.isSelected;\n\n        if (selectionCellClick) {\n          payload.isSelected = row.isSelected;\n        }\n\n        payload.selectedFlatRows = isRowSelected ? [].concat(_toConsumableArray(selectedFlatRows), [row]) : selectedFlatRows.filter(function (prevRow) {\n          return prevRow.id !== row.id;\n        });\n\n        if (payload.selectedFlatRows.length === flatRows.length) {\n          payload.allRowsSelected = true;\n        }\n      }\n\n      onRowSelected(enrichEventWithDetails(e, payload));\n    }\n  };\n\n  return [rowProps, {\n    onKeyDown: function onKeyDown(e) {\n      var selectionCellClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (e.key === 'Enter' || e.code === 'Space') {\n        if (!webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(e.target.tagName)) {\n          e.preventDefault();\n        }\n\n        handleRowSelect(e, selectionCellClick);\n      }\n    },\n    onClick: handleRowSelect\n  }];\n};\n\nvar useSingleRowStateSelection = function useSingleRowStateSelection(hooks) {\n  hooks.getRowProps.push(getRowProps$1);\n};\n\nuseSingleRowStateSelection.pluginName = 'useSingleRowStateSelection';\n\nvar getHeaderGroupProps = function getHeaderGroupProps(headerGroupProps, _ref) {\n  var instance = _ref.instance;\n  var classes = instance.webComponentsReactProperties.classes;\n  return [headerGroupProps, {\n    className: classes.tableHeaderRow\n  }];\n};\n\nvar getHeaderProps = function getHeaderProps(columnProps, _ref2) {\n  var instance = _ref2.instance,\n      column = _ref2.column;\n  var classes = instance.webComponentsReactProperties.classes;\n  var style = {\n    width: column.totalWidth\n  };\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column' || column.id === '__ui5wcr__internal_navigation_column') {\n    style.padding = 0;\n  }\n\n  return [columnProps, {\n    className: classes.th,\n    column: column,\n    style: style,\n    id: column.id\n  }];\n};\n\nvar ROW_SELECTION_ATTRIBUTE = 'data-is-selected';\n\nvar getRowProps = function getRowProps(rowProps, _ref3) {\n  var _row$original;\n\n  var instance = _ref3.instance,\n      row = _ref3.row;\n  var webComponentsReactProperties = instance.webComponentsReactProperties;\n  var classes = webComponentsReactProperties.classes,\n      selectionBehavior = webComponentsReactProperties.selectionBehavior,\n      selectionMode = webComponentsReactProperties.selectionMode,\n      alternateRowColor = webComponentsReactProperties.alternateRowColor;\n  var isEmptyRow = (_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow;\n  var className = classes.tr;\n  var rowCanBeSelected = [TableSelectionMode.SingleSelect, TableSelectionMode.MultiSelect].includes(selectionMode) && !isEmptyRow;\n\n  if (row.isGrouped) {\n    className += \" \".concat(classes.tableGroupHeader);\n  }\n\n  if (alternateRowColor && row.index % 2 !== 0) {\n    className += \" \".concat(classes.alternateRowColor);\n  }\n\n  var newRowProps = {\n    className: className,\n    role: 'row',\n    'aria-rowindex': row.index\n  };\n\n  if (rowCanBeSelected) {\n    if (TableSelectionBehavior.RowSelector !== selectionBehavior) {\n      newRowProps.className += \" \".concat(classes.trActive);\n    }\n\n    if (row.isSelected) {\n      newRowProps[ROW_SELECTION_ATTRIBUTE] = '';\n    }\n  }\n\n  return [rowProps, newRowProps];\n};\n\nvar getCellProps = function getCellProps(cellProps, _ref4) {\n  var column = _ref4.cell.column,\n      instance = _ref4.instance;\n  var columnIndex = instance.visibleColumns.findIndex(function (_ref5) {\n    var id = _ref5.id;\n    return id === column.id;\n  });\n  var classes = instance.webComponentsReactProperties.classes;\n  var style = {\n    width: \"\".concat(column.totalWidth, \"px\")\n  };\n\n  switch (column.hAlign) {\n    case TextAlign.Begin:\n      style.justifyContent = 'flex-start';\n      style.textAlign = 'start';\n      break;\n\n    case TextAlign.Center:\n      style.justifyContent = 'center';\n      style.textAlign = 'center';\n      break;\n\n    case TextAlign.End:\n      style.justifyContent = 'flex-end';\n      style.textAlign = 'end';\n      break;\n\n    case TextAlign.Left:\n      style.justifyContent = 'left';\n      style.textAlign = 'left';\n      break;\n\n    case TextAlign.Right:\n      style.justifyContent = 'right';\n      style.textAlign = 'right';\n      break;\n\n    case TextAlign.Initial:\n      style.justifyContent = 'initial';\n      style.textAlign = 'initial';\n      break;\n  }\n\n  switch (column.vAlign) {\n    case VerticalAlign.Bottom:\n      style.alignItems = 'flex-end';\n      break;\n\n    case VerticalAlign.Middle:\n      style.alignItems = 'center';\n      break;\n\n    case VerticalAlign.Top:\n      style.alignItems = 'flex-start';\n      break;\n  }\n\n  var className = classes.tableCell;\n\n  if (column.className) {\n    className += \" \".concat(column.className);\n  }\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column' || column.id === '__ui5wcr__internal_navigation_column') {\n    style.padding = 0;\n  }\n\n  return [cellProps, {\n    className: className,\n    style: style,\n    tabIndex: -1,\n    'aria-colindex': columnIndex + 1 // aria index is 1 based, not 0\n\n  }];\n};\n\nvar useStyling = function useStyling(hooks) {\n  hooks.getHeaderGroupProps.push(getHeaderGroupProps);\n  hooks.getHeaderProps.push(getHeaderProps);\n  hooks.getRowProps.push(getRowProps);\n  hooks.getCellProps.push(getCellProps);\n};\n\nuseStyling.pluginName = 'useStyling';\n\nvar useTableScrollHandles = function useTableScrollHandles(ref) {\n  var analyticalTableRef = useRef(null);\n\n  if (ref) {\n    analyticalTableRef = ref;\n  }\n\n  var reactWindowRef = useRef({});\n  useEffect(function () {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: function scrollTo(offset, align) {\n          var _reactWindowRef$curre;\n\n          if (typeof ((_reactWindowRef$curre = reactWindowRef.current) === null || _reactWindowRef$curre === void 0 ? void 0 : _reactWindowRef$curre.scrollToOffset) === 'function') {\n            reactWindowRef.current.scrollToOffset(offset, {\n              align: align\n            });\n          }\n        },\n        scrollToItem: function scrollToItem(index, align) {\n          var _reactWindowRef$curre2;\n\n          if (typeof ((_reactWindowRef$curre2 = reactWindowRef.current) === null || _reactWindowRef$curre2 === void 0 ? void 0 : _reactWindowRef$curre2.scrollToIndex) === 'function') {\n            reactWindowRef.current.scrollToIndex(index, {\n              align: align\n            });\n          }\n        },\n        horizontalScrollTo: function horizontalScrollTo(offset, align) {\n          var _reactWindowRef$curre3;\n\n          if (typeof ((_reactWindowRef$curre3 = reactWindowRef.current) === null || _reactWindowRef$curre3 === void 0 ? void 0 : _reactWindowRef$curre3.horizontalScrollToOffset) === 'function') {\n            reactWindowRef.current.horizontalScrollToOffset(offset, {\n              align: align\n            });\n          }\n        },\n        horizontalScrollToItem: function horizontalScrollToItem(index, align) {\n          var _reactWindowRef$curre4;\n\n          if (typeof ((_reactWindowRef$curre4 = reactWindowRef.current) === null || _reactWindowRef$curre4 === void 0 ? void 0 : _reactWindowRef$curre4.horizontalScrollToIndex) === 'function') {\n            reactWindowRef.current.horizontalScrollToIndex(index, {\n              align: align\n            });\n          }\n        }\n      });\n    }\n  }, []);\n  return [analyticalTableRef, reactWindowRef];\n};\n\nvar getToggleRowExpandedProps = function getToggleRowExpandedProps(rowProps, _ref) {\n  var row = _ref.row,\n      instance = _ref.instance;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      onRowExpandChange = _instance$webComponen.onRowExpandChange,\n      isTreeTable = _instance$webComponen.isTreeTable,\n      renderRowSubComponent = _instance$webComponen.renderRowSubComponent;\n  var onClick = useCallback(function (e) {\n    e.stopPropagation();\n    e.persist();\n    row.toggleRowExpanded();\n    var column = null;\n\n    if (!isTreeTable && !renderRowSubComponent) {\n      column = row.cells.find(function (cell) {\n        return cell.column.id === row.groupByID;\n      }).column;\n    }\n\n    onRowExpandChange(enrichEventWithDetails(e, {\n      row: row,\n      column: column\n    }));\n  }, [row, isTreeTable, onRowExpandChange]);\n  return [rowProps, {\n    onClick: onClick\n  }];\n};\n\nvar useToggleRowExpand = function useToggleRowExpand(hooks) {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\n\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';\n\nvar getVisibleColumnsWidth = function getVisibleColumnsWidth(instance) {\n  var visibleColumnsWidth = instance.visibleColumns.map(function (item) {\n    return item.totalWidth;\n  });\n  Object.assign(instance, {\n    visibleColumnsWidth: visibleColumnsWidth\n  });\n};\n\nvar useVisibleColumnsWidth = function useVisibleColumnsWidth(hooks) {\n  hooks.useInstance.push(getVisibleColumnsWidth);\n};\n\nuseVisibleColumnsWidth.pluginName = 'useVisibleColumnsWidth';\nvar styles$2 = {\n  headerSection: {\n    boxSizing: 'border-box',\n    borderTop: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    backgroundColor: ThemingParameters.sapList_HeaderBackground\n  },\n  scrollbar: {\n    overflowY: 'auto',\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    boxSizing: 'border-box'\n  },\n  bottomSection: {\n    flexGrow: 1,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    boxSizing: 'border-box',\n    borderRight: 'none',\n    borderBottom: 'none'\n  },\n  bottomSectionWithScrollbar: {\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n  }\n};\nvar useStyles$3 = createUseStyles(styles$2, {\n  name: 'VerticalScrollbar'\n});\nvar VerticalScrollbar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _tableRef$current, _tableRef$current2;\n\n  var internalRowHeight = props.internalRowHeight,\n      tableRef = props.tableRef,\n      minRows = props.minRows,\n      rows = props.rows,\n      handleVerticalScrollBarScroll = props.handleVerticalScrollBarScroll,\n      popInRowHeight = props.popInRowHeight;\n  var classes = useStyles$3();\n  var hasHorizontalScrollbar = (tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.clientWidth) !== (tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.scrollWidth);\n  var horizontalScrollbarSectionStyles = clsx(classes.bottomSection, hasHorizontalScrollbar && classes.bottomSectionWithScrollbar);\n  return /*#__PURE__*/React.createElement(FlexBox, {\n    direction: FlexBoxDirection.Column,\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"\".concat(internalRowHeight, \"px\")\n    },\n    className: classes.headerSection\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      height: tableRef.current ? \"\".concat(tableRef.current.clientHeight - internalRowHeight, \"px\") : '0'\n    },\n    onScroll: handleVerticalScrollBarScroll,\n    className: \"\".concat(GlobalStyleClasses.sapScrollBar, \" \").concat(classes.scrollbar)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"\".concat(Math.max(minRows, rows.length) * popInRowHeight, \"px\"),\n      width: '1px'\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: horizontalScrollbarSectionStyles\n  }));\n});\nVerticalScrollbar.displayName = 'VerticalScrollbar';\nvar styles$1 = {\n  subcomponent: {\n    position: 'absolute',\n    width: '100%',\n    '&:focus': {\n      outlineOffset: \"calc(-1 * \".concat(ThemingParameters.sapContent_FocusWidth, \")\"),\n      outline: \"\".concat(ThemingParameters.sapContent_FocusWidth, \" \").concat(ThemingParameters.sapContent_FocusStyle, \" \").concat(ThemingParameters.sapContent_FocusColor)\n    }\n  }\n};\nvar useStyles$2 = createUseStyles(styles$1, {\n  name: 'RowSubComponent'\n});\n\nvar RowSubComponent = function RowSubComponent(props) {\n  var _subComponentRef$curr3, _subComponentsHeight$2;\n\n  var subComponentsHeight = props.subComponentsHeight,\n      virtualRow = props.virtualRow,\n      dispatch = props.dispatch,\n      row = props.row,\n      rowHeight = props.rowHeight,\n      children = props.children,\n      rows = props.rows,\n      alwaysShowSubComponent = props.alwaysShowSubComponent;\n  var subComponentRef = useRef(null);\n  var classes = useStyles$2();\n  useEffect(function () {\n    var _subComponentRef$curr;\n\n    var subComponentHeightObserver = new ResizeObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var target = entry.target.getBoundingClientRect();\n\n        if (target) {\n          var _borderBoxSize$blockS, _subComponentsHeight$; // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n\n\n          var borderBoxSize = Array.isArray(entry.borderBoxSize) ? entry.borderBoxSize[0] : entry.borderBoxSize; // Safari doesn't implement `borderBoxSize`\n\n          var subCompHeight = (_borderBoxSize$blockS = borderBoxSize === null || borderBoxSize === void 0 ? void 0 : borderBoxSize.blockSize) !== null && _borderBoxSize$blockS !== void 0 ? _borderBoxSize$blockS : target.height;\n\n          if ((subComponentsHeight === null || subComponentsHeight === void 0 ? void 0 : (_subComponentsHeight$ = subComponentsHeight[virtualRow.index]) === null || _subComponentsHeight$ === void 0 ? void 0 : _subComponentsHeight$.subComponentHeight) !== subCompHeight && subCompHeight !== 0) {\n            // use most common sub-component height of first 10 sub-components as default height\n            if (alwaysShowSubComponent && subComponentsHeight && Object.keys(subComponentsHeight).length === 10) {\n              var objGroupedByHeight = Object.values(subComponentsHeight).reduce(function (acc, cur) {\n                var count = acc === null || acc === void 0 ? void 0 : acc[cur.subComponentHeight];\n\n                if (typeof count === 'number') {\n                  return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.subComponentHeight, count + 1));\n                }\n\n                return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.subComponentHeight, 1));\n              }, {});\n              var mostUsedHeight = Object.keys(objGroupedByHeight).reduce(function (a, b) {\n                return objGroupedByHeight[a] > objGroupedByHeight[b] ? a : b;\n              });\n              var estimatedHeights = rows.reduce(function (acc, cur, index) {\n                acc[index] = {\n                  subComponentHeight: parseInt(mostUsedHeight),\n                  rowId: cur.id\n                };\n                return acc;\n              }, {});\n              dispatch({\n                type: 'SUB_COMPONENTS_HEIGHT',\n                payload: _objectSpread(_objectSpread({}, estimatedHeights), subComponentsHeight)\n              });\n            } else {\n              dispatch({\n                type: 'SUB_COMPONENTS_HEIGHT',\n                payload: _objectSpread(_objectSpread({}, subComponentsHeight), {}, _defineProperty({}, virtualRow.index, {\n                  subComponentHeight: subCompHeight,\n                  rowId: row.id\n                }))\n              });\n            }\n          }\n        }\n      });\n    });\n\n    if ((_subComponentRef$curr = subComponentRef.current) !== null && _subComponentRef$curr !== void 0 && _subComponentRef$curr.firstChild) {\n      var _subComponentRef$curr2;\n\n      subComponentHeightObserver.observe((_subComponentRef$curr2 = subComponentRef.current) === null || _subComponentRef$curr2 === void 0 ? void 0 : _subComponentRef$curr2.firstChild);\n    }\n\n    return function () {\n      subComponentHeightObserver.disconnect();\n    };\n  }, [(_subComponentRef$curr3 = subComponentRef.current) === null || _subComponentRef$curr3 === void 0 ? void 0 : _subComponentRef$curr3.firstChild, subComponentsHeight, row.id, subComponentsHeight === null || subComponentsHeight === void 0 ? void 0 : (_subComponentsHeight$2 = subComponentsHeight[virtualRow.index]) === null || _subComponentsHeight$2 === void 0 ? void 0 : _subComponentsHeight$2.subComponentHeight, virtualRow.index]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: subComponentRef,\n    \"data-subcomponent\": true,\n    tabIndex: -1,\n    style: {\n      boxSizing: 'border-box',\n      transform: \"translateY(\".concat(rowHeight, \"px)\")\n    },\n    className: classes.subcomponent\n  }, children);\n};\n\nvar VirtualTableBody = function VirtualTableBody(props) {\n  var classes = props.classes,\n      prepareRow = props.prepareRow,\n      rows = props.rows,\n      minRows = props.minRows,\n      reactWindowRef = props.reactWindowRef,\n      isTreeTable = props.isTreeTable,\n      internalRowHeight = props.internalRowHeight,\n      visibleRows = props.visibleRows,\n      overscanCount = props.overscanCount,\n      visibleColumns = props.visibleColumns,\n      tableRef = props.tableRef,\n      visibleColumnsWidth = props.visibleColumnsWidth,\n      parentRef = props.parentRef,\n      overscanCountHorizontal = props.overscanCountHorizontal,\n      renderRowSubComponent = props.renderRowSubComponent,\n      popInRowHeight = props.popInRowHeight,\n      markNavigatedRow = props.markNavigatedRow,\n      isRtl = props.isRtl,\n      alwaysShowSubComponent = props.alwaysShowSubComponent,\n      dispatch = props.dispatch,\n      subComponentsHeight = props.subComponentsHeight;\n  var itemCount = Math.max(minRows, rows.length);\n  var overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n  var rowHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n  var rowVirtualizer = useVirtual({\n    size: itemCount,\n    parentRef: parentRef,\n    estimateSize: React.useCallback(function (index) {\n      var _rows$index, _subComponentsHeight$, _rows$index2;\n\n      if (renderRowSubComponent && ((_rows$index = rows[index]) !== null && _rows$index !== void 0 && _rows$index.isExpanded || alwaysShowSubComponent) && (subComponentsHeight === null || subComponentsHeight === void 0 ? void 0 : (_subComponentsHeight$ = subComponentsHeight[index]) === null || _subComponentsHeight$ === void 0 ? void 0 : _subComponentsHeight$.rowId) === ((_rows$index2 = rows[index]) === null || _rows$index2 === void 0 ? void 0 : _rows$index2.id)) {\n        var _subComponentsHeight$2, _subComponentsHeight$3;\n\n        return rowHeight + ((_subComponentsHeight$2 = subComponentsHeight === null || subComponentsHeight === void 0 ? void 0 : (_subComponentsHeight$3 = subComponentsHeight[index]) === null || _subComponentsHeight$3 === void 0 ? void 0 : _subComponentsHeight$3.subComponentHeight) !== null && _subComponentsHeight$2 !== void 0 ? _subComponentsHeight$2 : 0);\n      }\n\n      return rowHeight;\n    }, [rowHeight, rows, renderRowSubComponent, alwaysShowSubComponent, subComponentsHeight]),\n    overscan: overscan\n  });\n  var columnVirtualizer = useVirtual({\n    size: visibleColumns.length,\n    parentRef: tableRef,\n    estimateSize: useCallback(function (index) {\n      return visibleColumnsWidth[index];\n    }, [visibleColumnsWidth]),\n    horizontal: true,\n    overscan: overscanCountHorizontal\n  });\n  reactWindowRef.current = _objectSpread(_objectSpread({}, reactWindowRef.current), {}, {\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  });\n  var popInColumn = useMemo(function () {\n    return visibleColumns.filter(function (item) {\n      return item.id !== '__ui5wcr__internal_highlight_column' && item.id !== '__ui5wcr__internal_selection_column' && item.id !== '__ui5wcr__internal_navigation_column';\n    })[0];\n  }, [visibleColumns]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      height: \"\".concat(rowVirtualizer.totalSize, \"px\"),\n      width: \"\".concat(columnVirtualizer.totalSize, \"px\")\n    }\n  }, rowVirtualizer.virtualItems.map(function (virtualRow, visibleRowIndex) {\n    var _subComponentsHeight$4, _rowProps$style;\n\n    var row = rows[virtualRow.index];\n    var rowIndexWithHeader = virtualRow.index + 1;\n\n    if (!row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"empty_row_\".concat(virtualRow.index),\n        className: classes.tr,\n        style: {\n          height: \"\".concat(virtualRow.size, \"px\"),\n          transform: \"translateY(\".concat(virtualRow.start, \"px)\")\n        }\n      });\n    }\n\n    prepareRow(row);\n    var rowProps = row.getRowProps();\n    var isNavigatedCell = markNavigatedRow(row);\n    var RowSubComponent$1 = typeof renderRowSubComponent === 'function' ? renderRowSubComponent(row) : undefined;\n\n    if (!RowSubComponent$1 && subComponentsHeight && subComponentsHeight !== null && subComponentsHeight !== void 0 && (_subComponentsHeight$4 = subComponentsHeight[virtualRow.index]) !== null && _subComponentsHeight$4 !== void 0 && _subComponentsHeight$4.subComponentHeight) {\n      dispatch({\n        type: 'SUB_COMPONENTS_HEIGHT',\n        payload: _objectSpread(_objectSpread({}, subComponentsHeight), {}, _defineProperty({}, virtualRow.index, {\n          subComponentHeight: 0,\n          rowId: row.id\n        }))\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rowProps, {\n      style: _objectSpread(_objectSpread({}, (_rowProps$style = rowProps.style) !== null && _rowProps$style !== void 0 ? _rowProps$style : {}), {}, {\n        height: \"\".concat(rowHeight, \"px\"),\n        transform: \"translateY(\".concat(virtualRow.start, \"px)\"),\n        position: 'absolute'\n      })\n    }), RowSubComponent$1 && (row.isExpanded || alwaysShowSubComponent) && /*#__PURE__*/React.createElement(RowSubComponent, {\n      subComponentsHeight: subComponentsHeight,\n      virtualRow: virtualRow,\n      dispatch: dispatch,\n      row: row,\n      rowHeight: rowHeight,\n      rows: rows,\n      alwaysShowSubComponent: alwaysShowSubComponent\n    }, RowSubComponent$1), columnVirtualizer.virtualItems.map(function (virtualColumn, visibleColumnIndex) {\n      var _row$original;\n\n      var cell = row.cells[virtualColumn.index];\n      var directionStyles = isRtl ? {\n        transform: \"translateX(-\".concat(virtualColumn.start, \"px)\"),\n        right: 0\n      } : {\n        transform: \"translateX(\".concat(virtualColumn.start, \"px)\"),\n        left: 0\n      };\n\n      if (!cell) {\n        return null;\n      }\n\n      var cellProps = cell.getCellProps();\n\n      if ((_row$original = row.original) !== null && _row$original !== void 0 && _row$original.emptyRow) {\n        return /*#__PURE__*/React.createElement(\"div\", cellProps);\n      }\n\n      var contentToRender;\n\n      if (cell.column.id === '__ui5wcr__internal_highlight_column' || cell.column.id === '__ui5wcr__internal_selection_column' || cell.column.id === '__ui5wcr__internal_navigation_column') {\n        contentToRender = 'Cell';\n      } else if (isTreeTable || !alwaysShowSubComponent && RowSubComponent$1) {\n        contentToRender = 'Expandable';\n      } else if (cell.isGrouped) {\n        contentToRender = 'Grouped';\n      } else if (cell.isAggregated) {\n        contentToRender = 'Aggregated';\n      } else if (cell.isPlaceholder) {\n        contentToRender = 'RepeatedValue';\n      } else {\n        contentToRender = 'Cell';\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, cellProps, {\n        \"data-visible-column-index\": visibleColumnIndex,\n        \"data-column-index\": virtualColumn.index,\n        \"data-visible-row-index\": visibleRowIndex + 1,\n        \"data-row-index\": rowIndexWithHeader,\n        style: _objectSpread(_objectSpread({}, cellProps.style), {}, {\n          position: 'absolute',\n          width: \"\".concat(virtualColumn.size, \"px\"),\n          top: 0\n        }, directionStyles)\n      }), popInRowHeight !== internalRowHeight && popInColumn.id === cell.column.id ? cell.render('PopIn', {\n        contentToRender: contentToRender,\n        internalRowHeight: internalRowHeight\n      }) : cell.render(contentToRender, isNavigatedCell === true ? {\n        isNavigatedCell: isNavigatedCell\n      } : {}));\n    }));\n  }));\n};\n\nvar VirtualTableBodyContainer = function VirtualTableBodyContainer(props) {\n  var tableBodyHeight = props.tableBodyHeight,\n      totalColumnsWidth = props.totalColumnsWidth,\n      children = props.children,\n      parentRef = props.parentRef,\n      classes = props.classes,\n      infiniteScroll = props.infiniteScroll,\n      infiniteScrollThreshold = props.infiniteScrollThreshold,\n      onLoadMore = props.onLoadMore,\n      rows = props.rows,\n      internalRowHeight = props.internalRowHeight,\n      handleExternalScroll = props.handleExternalScroll,\n      visibleRows = props.visibleRows,\n      popInRowHeight = props.popInRowHeight;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMounted = _useState2[0],\n      setIsMounted = _useState2[1];\n\n  useEffect(function () {\n    if (parentRef.current) {\n      setIsMounted(true);\n    }\n  }, [parentRef.current]);\n  var classNames = clsx(classes.tbody);\n  var lastScrollTop = useRef(0);\n  var firedInfiniteLoadEvents = useRef(new Set());\n  var prevRowsLength = useRef(rows.length);\n  useEffect(function () {\n    if (prevRowsLength.current > rows.length) {\n      firedInfiniteLoadEvents.current.clear();\n      parentRef.current.scrollTop = 0;\n      lastScrollTop.current = 0;\n    }\n  }, [rows.length, prevRowsLength.current]);\n  useEffect(function () {\n    prevRowsLength.current = rows.length;\n  }, [rows.length]);\n  var onScroll = useCallback(function (event) {\n    handleExternalScroll();\n    var scrollOffset = event.target.scrollTop;\n    var isScrollingDown = lastScrollTop.current < scrollOffset;\n\n    if (isScrollingDown && infiniteScroll) {\n      lastScrollTop.current = scrollOffset;\n      var currentLastRow = Math.floor(scrollOffset / popInRowHeight) + (popInRowHeight === internalRowHeight ? visibleRows : Math.floor(tableBodyHeight / popInRowHeight));\n\n      if (rows.length - currentLastRow < infiniteScrollThreshold) {\n        if (!firedInfiniteLoadEvents.current.has(rows.length)) {\n          var rootNodes = rows.filter(function (row) {\n            return row.depth === 0;\n          });\n          onLoadMore({\n            detail: {\n              rowCount: rootNodes.length,\n              totalRowCount: rows.length\n            }\n          });\n        }\n\n        firedInfiniteLoadEvents.current.add(rows.length);\n      }\n    }\n  }, [infiniteScroll, infiniteScrollThreshold, onLoadMore, rows.length, internalRowHeight, firedInfiniteLoadEvents, lastScrollTop, handleExternalScroll, popInRowHeight, tableBodyHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames,\n    ref: parentRef,\n    onScroll: onScroll,\n    style: {\n      position: 'relative',\n      overflowY: 'auto',\n      height: \"\".concat(tableBodyHeight, \"px\"),\n      width: \"\".concat(totalColumnsWidth, \"px\")\n    },\n    \"data-component-name\": \"AnalyticalTableBody\"\n  }, isMounted && children);\n};\n\nvar stateReducer = function stateReducer(prevState, action) {\n  var payload = action.payload;\n\n  if (prevState.isRtl && action.type === actions.columnResizing) {\n    var clientX = action.clientX;\n    var _prevState$columnResi = prevState.columnResizing,\n        startX = _prevState$columnResi.startX,\n        columnWidth = _prevState$columnResi.columnWidth,\n        headerIdWidths = _prevState$columnResi.headerIdWidths;\n    var deltaX = startX - clientX;\n    var percentageDeltaX = deltaX / columnWidth;\n    var newColumnWidths = {};\n    headerIdWidths.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          headerId = _ref2[0],\n          headerWidth = _ref2[1];\n\n      newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n    });\n    return _objectSpread(_objectSpread({}, prevState), {}, {\n      columnResizing: _objectSpread(_objectSpread({}, prevState.columnResizing), {}, {\n        columnWidths: _objectSpread(_objectSpread({}, prevState.columnResizing.columnWidths), newColumnWidths)\n      })\n    });\n  }\n\n  switch (action.type) {\n    case 'TABLE_RESIZE':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        tableClientWidth: payload.tableClientWidth\n      });\n\n    case 'VISIBLE_ROWS':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        visibleRows: payload.visibleRows\n      });\n\n    case 'TABLE_SCROLLING_ENABLED':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isScrollable: payload.isScrollable\n      });\n\n    case 'SET_SELECTED_ROW_IDS':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        selectedRowIds: payload.selectedRowIds\n      });\n\n    case 'SET_POPIN_COLUMNS':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        popInColumns: payload\n      });\n\n    case 'INTERACTIVE_ROWS_HAVE_POPIN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        interactiveRowsHavePopIn: payload\n      });\n\n    case 'IS_RTL':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isRtl: payload.isRtl\n      });\n\n    case 'SUB_COMPONENTS_HEIGHT':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        subComponentsHeight: payload\n      });\n\n    default:\n      return prevState;\n  }\n};\n\nvar styles = {\n  minHeight: '1.5rem',\n  display: 'flex',\n  alignItems: 'center'\n};\nvar TitleBar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    ref: ref\n  }, typeof children === 'string' && /*#__PURE__*/React.createElement(Title, null, children), /*#__PURE__*/isValidElement(children) && children);\n});\n\nvar orderByFn = function orderByFn(rows, functions, directions) {\n  var wrapSortFn = function wrapSortFn(sortFn, index) {\n    var desc = directions[index] === false || directions[index] === 'desc';\n    return function (rowA, rowB) {\n      var _rowA$original, _rowB$original, _rowA$original2, _rowB$original2, _rowA$original3, _rowB$original3;\n\n      if ((_rowA$original = rowA.original) !== null && _rowA$original !== void 0 && _rowA$original.emptyRow && !((_rowB$original = rowB.original) !== null && _rowB$original !== void 0 && _rowB$original.emptyRow)) {\n        return desc ? -1 : 1;\n      }\n\n      if (!((_rowA$original2 = rowA.original) !== null && _rowA$original2 !== void 0 && _rowA$original2.emptyRow) && (_rowB$original2 = rowB.original) !== null && _rowB$original2 !== void 0 && _rowB$original2.emptyRow) {\n        return desc ? 1 : -1;\n      }\n\n      if ((_rowA$original3 = rowA.original) !== null && _rowA$original3 !== void 0 && _rowA$original3.emptyRow && (_rowB$original3 = rowB.original) !== null && _rowB$original3 !== void 0 && _rowB$original3.emptyRow) {\n        return 0;\n      }\n\n      return sortFn(rowA, rowB);\n    };\n  };\n\n  var wrappedSortfunctions = functions.map(wrapSortFn);\n  return defaultOrderByFn(rows, wrappedSortfunctions, directions);\n}; // copied from https://github.com/tannerlinsley/react-table/blob/f97fb98509d0b27cc0bebcf3137872afe4f2809e/src/utils.js#L320-L347 (13. Jan 2021)\n\n\nvar tagNamesWhichShouldNotSelectARow = new Set(['UI5-AVATAR', 'UI5-BUTTON', 'UI5-CALENDAR', 'UI5-CHECKBOX', 'UI5-COLOR-PICKER', 'UI5-COMBOBOX', 'UI5-DATE-PICKER', 'UI5-DATERANGE-PICKER', 'UI5-DATETIME-PICKER', 'UI5-DURATION-PICKER', 'UI5-FILE-UPLOADER', 'UI5-ICON', 'UI5-INPUT', 'UI5-LINK', 'UI5-MULTI-COMBOBOX', 'UI5-MULTI-INPUT', 'UI5-RADIO-BUTTON', 'UI5-RANGE-SLIDER', 'UI5-RATING-INDICATOR', 'UI5-SEGMENTED-BUTTON', 'UI5-SELECT', 'UI5-SLIDER', 'UI5-STEP-INPUT', 'UI5-SWITCH', 'UI5-TEXT-AREA', 'UI5-TIME-PICKER', 'UI5-TOGGLE-BUTTON', 'UI5-UPLOAD-COLLECTION']);\nvar verticalResizerStyles = {\n  container: {\n    overflow: 'hidden',\n    position: 'relative',\n    height: '5px',\n    textAlign: 'center',\n    cursor: 'row-resize',\n    boxSizing: 'border-box',\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor,\n      color: ThemingParameters.sapHighlightTextColor\n    },\n    '&:before': {\n      fontSize: '10px',\n      fontFamily: ThemingParameters.sapFontFamily,\n      top: 0,\n      position: 'absolute',\n      content: \"\\\"\\u2981\\u2981\\u2981\\u2981\\\"\",\n      lineHeight: '5px',\n      pointerEvents: 'none'\n    }\n  },\n  resizer: {\n    position: 'absolute',\n    opacity: 0.5,\n    backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor,\n    height: '5px'\n  }\n};\nvar useStyles$1 = createUseStyles(verticalResizerStyles, {\n  name: 'VerticalResizer'\n});\n\nvar isTouchEvent = function isTouchEvent(e, touchEvent) {\n  if (e.type === touchEvent) {\n    return !(e.touches && e.touches.length > 1);\n  }\n\n  return false;\n};\n\nvar VerticalResizer = function VerticalResizer(props) {\n  var _analyticalTableRef$c, _verticalResizerRef$c7, _verticalResizerRef$c8;\n\n  var analyticalTableRef = props.analyticalTableRef,\n      dispatch = props.dispatch,\n      extensionsHeight = props.extensionsHeight,\n      internalRowHeight = props.internalRowHeight,\n      hasPopInColumns = props.hasPopInColumns,\n      popInRowHeight = props.popInRowHeight,\n      portalContainer = props.portalContainer;\n  var classes = useStyles$1();\n  var startY = useRef(null);\n  var verticalResizerRef = useRef(null);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      resizerPosition = _useState2[0],\n      setResizerPosition = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDragging = _useState4[0],\n      setIsDragging = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mountTouchEvents = _useState6[0],\n      setMountTouchEvents = _useState6[1];\n\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var handleResizeStart = useCallback(function (e) {\n    e.preventDefault();\n    var touchEvent = isTouchEvent(e, 'touchstart');\n    startY.current = touchEvent ? Math.round(e.touches[0].pageY) : e.pageY;\n    setMountTouchEvents(touchEvent);\n    setIsDragging(true);\n  }, [startY.current, setIsDragging]);\n  var handleMove = useCallback(function (e) {\n    setResizerPosition(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        top: isTouchEvent(e, 'touchmove') ? Math.round(e.touches[0].pageY) : e.pageY\n      });\n    });\n  }, [setResizerPosition]);\n  var handleResizeEnd = useCallback(function (e) {\n    setIsDragging(false);\n    var rowCount = Math.floor((analyticalTableRef.current.clientHeight + (isTouchEvent(e, 'touchend') ? Math.round(e.changedTouches[0].pageY) : e.pageY) - startY.current - extensionsHeight - 5\n    /*resizer height*/\n    ) / popInRowHeight);\n\n    if (hasPopInColumns) {\n      dispatch({\n        type: 'INTERACTIVE_ROWS_HAVE_POPIN',\n        payload: true\n      });\n    }\n\n    dispatch({\n      type: 'VISIBLE_ROWS',\n      payload: {\n        visibleRows: rowCount\n      }\n    });\n  }, [(_analyticalTableRef$c = analyticalTableRef.current) === null || _analyticalTableRef$c === void 0 ? void 0 : _analyticalTableRef$c.clientHeight, startY.current, extensionsHeight, internalRowHeight, dispatch]);\n  useEffect(function () {\n    var removeEventListeners = function removeEventListeners() {\n      if (mountTouchEvents) {\n        document.removeEventListener('touchmove', handleMove);\n        document.removeEventListener('touchend', handleResizeEnd);\n      } else {\n        document.removeEventListener('mouseup', handleResizeEnd);\n        document.removeEventListener('mousemove', handleMove);\n      }\n    };\n\n    if (isDragging) {\n      if (mountTouchEvents) {\n        document.addEventListener('touchmove', handleMove);\n        document.addEventListener('touchend', handleResizeEnd);\n      } else {\n        document.addEventListener('mousemove', handleMove);\n        document.addEventListener('mouseup', handleResizeEnd);\n      }\n    } else {\n      removeEventListeners();\n    }\n\n    return function () {\n      removeEventListeners();\n    };\n  }, [isDragging]);\n  useEffect(function () {\n    var _verticalResizerRef$c, _verticalResizerRef$c2, _verticalResizerRef$c3, _verticalResizerRef$c4, _verticalResizerRef$c5, _verticalResizerRef$c6;\n\n    var resizerPosTop = ((_verticalResizerRef$c = verticalResizerRef.current) === null || _verticalResizerRef$c === void 0 ? void 0 : (_verticalResizerRef$c2 = _verticalResizerRef$c.getBoundingClientRect()) === null || _verticalResizerRef$c2 === void 0 ? void 0 : _verticalResizerRef$c2.top) + window.scrollY;\n    var resizerPosLeft = ((_verticalResizerRef$c3 = verticalResizerRef.current) === null || _verticalResizerRef$c3 === void 0 ? void 0 : (_verticalResizerRef$c4 = _verticalResizerRef$c3.getBoundingClientRect()) === null || _verticalResizerRef$c4 === void 0 ? void 0 : _verticalResizerRef$c4.left) + window.scrollX;\n    var resizerPosWidth = (_verticalResizerRef$c5 = verticalResizerRef.current) === null || _verticalResizerRef$c5 === void 0 ? void 0 : (_verticalResizerRef$c6 = _verticalResizerRef$c5.getBoundingClientRect()) === null || _verticalResizerRef$c6 === void 0 ? void 0 : _verticalResizerRef$c6.width;\n\n    if (!isDragging && resizerPosTop > 0) {\n      setResizerPosition({\n        left: resizerPosLeft,\n        top: resizerPosTop,\n        width: resizerPosWidth\n      });\n    }\n  }, [(_verticalResizerRef$c7 = verticalResizerRef.current) === null || _verticalResizerRef$c7 === void 0 ? void 0 : (_verticalResizerRef$c8 = _verticalResizerRef$c7.getBoundingClientRect()) === null || _verticalResizerRef$c8 === void 0 ? void 0 : _verticalResizerRef$c8.top, isDragging]);\n  useEffect(function () {\n    return function () {\n      dispatch({\n        type: 'WITH_POPIN',\n        payload: false\n      });\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: verticalResizerRef,\n    onMouseDown: handleResizeStart,\n    onTouchStart: handleResizeStart,\n    role: \"separator\",\n    title: i18nBundle.getText(DRAG_TO_RESIZE)\n  }, resizerPosition && isDragging && /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.resizer,\n    style: {\n      top: resizerPosition.top,\n      left: resizerPosition.left,\n      width: resizerPosition.width\n    }\n  }), portalContainer));\n};\n\nvar _excluded = [\"alternateRowColor\", \"alwaysShowSubComponent\", \"className\", \"columnOrder\", \"columns\", \"extension\", \"filterable\", \"globalFilterValue\", \"groupBy\", \"groupable\", \"header\", \"highlightField\", \"infiniteScroll\", \"infiniteScrollThreshold\", \"isTreeTable\", \"loading\", \"markNavigatedRow\", \"minRows\", \"noDataText\", \"overscanCount\", \"overscanCountHorizontal\", \"portalContainer\", \"reactTableOptions\", \"renderRowSubComponent\", \"rowHeight\", \"scaleWidthMode\", \"selectedRowIds\", \"selectionBehavior\", \"selectionMode\", \"sortable\", \"style\", \"subRowsKey\", \"tableHooks\", \"tableInstance\", \"tooltip\", \"visibleRowCountMode\", \"visibleRows\", \"withNavigationHighlight\", \"withRowHighlight\", \"onGroup\", \"onLoadMore\", \"onRowClick\", \"onRowExpandChange\", \"onRowSelected\", \"onSort\", \"LoadingComponent\", \"NoDataComponent\"],\n    _excluded2 = [\"onColumnsReordered\", \"data\"];\nvar useStyles = createUseStyles(styles$8, {\n  name: 'AnalyticalTable'\n});\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\n\nvar AnalyticalTable = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _titleBarRef$current$, _titleBarRef$current, _extensionRef$current, _extensionRef$current2, _headerRef$current$of, _headerRef$current, _tableRef$current, _tableState$popInColu, _tableState$visibleRo, _analyticalTableRef$c5, _analyticalTableRef$c6, _analyticalTableRef$c7, _tableState$popInColu3, _props$data, _props$data2, _props$data3, _props$data4, _tableState$popInColu4;\n\n  var alternateRowColor = props.alternateRowColor,\n      alwaysShowSubComponent = props.alwaysShowSubComponent,\n      className = props.className,\n      columnOrder = props.columnOrder,\n      columns = props.columns,\n      extension = props.extension,\n      filterable = props.filterable,\n      globalFilterValue = props.globalFilterValue,\n      groupBy = props.groupBy,\n      groupable = props.groupable,\n      header = props.header,\n      highlightField = props.highlightField,\n      infiniteScroll = props.infiniteScroll,\n      infiniteScrollThreshold = props.infiniteScrollThreshold,\n      isTreeTable = props.isTreeTable,\n      loading = props.loading,\n      markNavigatedRow = props.markNavigatedRow,\n      minRows = props.minRows,\n      noDataText = props.noDataText,\n      overscanCount = props.overscanCount,\n      overscanCountHorizontal = props.overscanCountHorizontal,\n      portalContainer = props.portalContainer,\n      reactTableOptions = props.reactTableOptions,\n      renderRowSubComponent = props.renderRowSubComponent,\n      rowHeight = props.rowHeight,\n      scaleWidthMode = props.scaleWidthMode,\n      selectedRowIds = props.selectedRowIds,\n      selectionBehavior = props.selectionBehavior,\n      selectionMode = props.selectionMode,\n      sortable = props.sortable,\n      style = props.style,\n      subRowsKey = props.subRowsKey,\n      tableHooks = props.tableHooks,\n      tableInstance = props.tableInstance,\n      tooltip = props.tooltip,\n      visibleRowCountMode = props.visibleRowCountMode,\n      visibleRows = props.visibleRows,\n      withNavigationHighlight = props.withNavigationHighlight,\n      withRowHighlight = props.withRowHighlight,\n      onGroup = props.onGroup,\n      onLoadMore = props.onLoadMore,\n      onRowClick = props.onRowClick,\n      onRowExpandChange = props.onRowExpandChange,\n      onRowSelected = props.onRowSelected,\n      onSort = props.onSort,\n      LoadingComponent = props.LoadingComponent,\n      NoDataComponent = props.NoDataComponent,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var classes = useStyles();\n\n  var _useTableScrollHandle = useTableScrollHandles(ref),\n      _useTableScrollHandle2 = _slicedToArray(_useTableScrollHandle, 2),\n      analyticalTableRef = _useTableScrollHandle2[0],\n      reactWindowRef = _useTableScrollHandle2[1];\n\n  var tableRef = useRef();\n  var isRtl = useIsRTL(analyticalTableRef);\n  var getSubRows = useCallback(function (row) {\n    return row[subRowsKey] || [];\n  }, [subRowsKey]);\n  var data = useMemo(function () {\n    if (props.data.length === 0) {\n      return props.data;\n    }\n\n    if (minRows > props.data.length) {\n      var missingRows = minRows - props.data.length;\n      var emptyRows = Array.from({\n        length: missingRows\n      }, function (v, i) {\n        return i;\n      }).map(function () {\n        return {\n          emptyRow: true\n        };\n      });\n      return [].concat(_toConsumableArray(props.data), _toConsumableArray(emptyRows));\n    }\n\n    return props.data;\n  }, [props.data, minRows]);\n  var tableInstanceRef = useRef(null);\n  tableInstanceRef.current = useTable.apply(void 0, [_objectSpread({\n    columns: columns,\n    data: data,\n    defaultColumn: DefaultColumn,\n    orderByFn: orderByFn,\n    getSubRows: getSubRows,\n    stateReducer: stateReducer,\n    disableFilters: !filterable,\n    disableSortBy: !sortable,\n    disableGroupBy: isTreeTable || renderRowSubComponent ? true : !groupable,\n    selectSubRows: false,\n    webComponentsReactProperties: {\n      tagNamesWhichShouldNotSelectARow: tagNamesWhichShouldNotSelectARow,\n      tableRef: tableRef,\n      selectionMode: selectionMode,\n      selectionBehavior: selectionBehavior,\n      classes: classes,\n      onRowSelected: onRowSelected,\n      onRowClick: onRowClick,\n      onRowExpandChange: onRowExpandChange,\n      isTreeTable: isTreeTable,\n      alternateRowColor: alternateRowColor,\n      scaleWidthMode: scaleWidthMode,\n      loading: loading,\n      withRowHighlight: withRowHighlight,\n      highlightField: highlightField,\n      withNavigationHighlight: withNavigationHighlight,\n      markNavigatedRow: markNavigatedRow,\n      renderRowSubComponent: renderRowSubComponent,\n      alwaysShowSubComponent: alwaysShowSubComponent,\n      reactWindowRef: reactWindowRef\n    }\n  }, reactTableOptions), useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns, useRowSelectionColumn, useSingleRowStateSelection, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation].concat(_toConsumableArray(tableHooks)));\n  var _tableInstanceRef$cur = tableInstanceRef.current,\n      getTableProps = _tableInstanceRef$cur.getTableProps,\n      headerGroups = _tableInstanceRef$cur.headerGroups,\n      rows = _tableInstanceRef$cur.rows,\n      prepareRow = _tableInstanceRef$cur.prepareRow,\n      tableState = _tableInstanceRef$cur.state,\n      tableInternalColumns = _tableInstanceRef$cur.columns,\n      setColumnOrder = _tableInstanceRef$cur.setColumnOrder,\n      dispatch = _tableInstanceRef$cur.dispatch,\n      totalColumnsWidth = _tableInstanceRef$cur.totalColumnsWidth,\n      visibleColumns = _tableInstanceRef$cur.visibleColumns,\n      visibleColumnsWidth = _tableInstanceRef$cur.visibleColumnsWidth,\n      setGroupBy = _tableInstanceRef$cur.setGroupBy,\n      setGlobalFilter = _tableInstanceRef$cur.setGlobalFilter;\n\n  if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n    tableInstance.current = tableInstanceRef.current;\n  }\n\n  if (typeof tableInstance === 'function') {\n    tableInstance(tableInstanceRef.current);\n  }\n\n  var titleBarRef = useRef(null);\n  var extensionRef = useRef(null);\n  var headerRef = useRef(null);\n  var extensionsHeight = ((_titleBarRef$current$ = (_titleBarRef$current = titleBarRef.current) === null || _titleBarRef$current === void 0 ? void 0 : _titleBarRef$current.offsetHeight) !== null && _titleBarRef$current$ !== void 0 ? _titleBarRef$current$ : 0) + ((_extensionRef$current = (_extensionRef$current2 = extensionRef.current) === null || _extensionRef$current2 === void 0 ? void 0 : _extensionRef$current2.offsetHeight) !== null && _extensionRef$current !== void 0 ? _extensionRef$current : 0) + ((_headerRef$current$of = (_headerRef$current = headerRef.current) === null || _headerRef$current === void 0 ? void 0 : _headerRef$current.offsetHeight) !== null && _headerRef$current$of !== void 0 ? _headerRef$current$of : 0);\n  var calcRowHeight = parseInt(getComputedStyle((_tableRef$current = tableRef.current) !== null && _tableRef$current !== void 0 ? _tableRef$current : document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44');\n  var internalRowHeight = rowHeight !== null && rowHeight !== void 0 ? rowHeight : calcRowHeight;\n  var popInRowHeight = (tableState === null || tableState === void 0 ? void 0 : (_tableState$popInColu = tableState.popInColumns) === null || _tableState$popInColu === void 0 ? void 0 : _tableState$popInColu.length) > 0 ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16) : internalRowHeight;\n  var internalVisibleRowCount = (_tableState$visibleRo = tableState.visibleRows) !== null && _tableState$visibleRo !== void 0 ? _tableState$visibleRo : visibleRows;\n  var updateTableClientWidth = useCallback(function () {\n    if (tableRef.current) {\n      dispatch({\n        type: 'TABLE_RESIZE',\n        payload: {\n          tableClientWidth: tableRef.current.clientWidth\n        }\n      });\n    }\n  }, [tableRef.current]);\n  var updateRowsCount = useCallback(function () {\n    var _analyticalTableRef$c;\n\n    if (visibleRowCountMode === TableVisibleRowCountMode.Auto && (_analyticalTableRef$c = analyticalTableRef.current) !== null && _analyticalTableRef$c !== void 0 && _analyticalTableRef$c.parentElement) {\n      var _analyticalTableRef$c2, _analyticalTableRef$c3, _analyticalTableRef$c4;\n\n      var parentElement = (_analyticalTableRef$c2 = analyticalTableRef.current) === null || _analyticalTableRef$c2 === void 0 ? void 0 : _analyticalTableRef$c2.parentElement;\n      var tableYPosition = parentElement && getComputedStyle(parentElement).position === 'relative' && (_analyticalTableRef$c3 = analyticalTableRef.current) !== null && _analyticalTableRef$c3 !== void 0 && _analyticalTableRef$c3.offsetTop ? (_analyticalTableRef$c4 = analyticalTableRef.current) === null || _analyticalTableRef$c4 === void 0 ? void 0 : _analyticalTableRef$c4.offsetTop : 0;\n      var parentHeight = parentElement === null || parentElement === void 0 ? void 0 : parentElement.getBoundingClientRect().height;\n      var tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n      var rowCount = Math.floor((tableHeight - extensionsHeight) / popInRowHeight);\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: rowCount\n        }\n      });\n    }\n  }, [(_analyticalTableRef$c5 = analyticalTableRef.current) === null || _analyticalTableRef$c5 === void 0 ? void 0 : (_analyticalTableRef$c6 = _analyticalTableRef$c5.parentElement) === null || _analyticalTableRef$c6 === void 0 ? void 0 : _analyticalTableRef$c6.getBoundingClientRect().height, (_analyticalTableRef$c7 = analyticalTableRef.current) === null || _analyticalTableRef$c7 === void 0 ? void 0 : _analyticalTableRef$c7.getBoundingClientRect().y, extensionsHeight, popInRowHeight, visibleRowCountMode]);\n  useEffect(function () {\n    setGlobalFilter(globalFilterValue);\n  }, [globalFilterValue, setGlobalFilter]);\n  useEffect(function () {\n    var _analyticalTableRef$c8;\n\n    var tableWidthObserver = new ResizeObserver(debounce(updateTableClientWidth, 500));\n    tableWidthObserver.observe(tableRef.current);\n    var parentHeightObserver = new ResizeObserver(debounce(updateRowsCount, 500));\n    parentHeightObserver.observe((_analyticalTableRef$c8 = analyticalTableRef.current) === null || _analyticalTableRef$c8 === void 0 ? void 0 : _analyticalTableRef$c8.parentElement);\n    return function () {\n      tableWidthObserver.disconnect();\n      parentHeightObserver.disconnect();\n    };\n  }, [updateTableClientWidth, updateRowsCount]);\n  useIsomorphicLayoutEffect(function () {\n    dispatch({\n      type: 'IS_RTL',\n      payload: {\n        isRtl: isRtl\n      }\n    });\n  }, [isRtl]);\n  useIsomorphicLayoutEffect(function () {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n  useIsomorphicLayoutEffect(function () {\n    updateRowsCount();\n  }, [updateRowsCount]);\n  useEffect(function () {\n    if (tableState.visibleRows !== undefined && visibleRowCountMode === TableVisibleRowCountMode.Fixed) {\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: undefined\n        }\n      });\n    }\n  }, [visibleRowCountMode, tableState.visibleRows]);\n  useEffect(function () {\n    setGroupBy(groupBy);\n  }, [groupBy, setGroupBy]);\n  useEffect(function () {\n    dispatch({\n      type: 'SET_SELECTED_ROW_IDS',\n      payload: {\n        selectedRowIds: selectedRowIds\n      }\n    });\n  }, [selectedRowIds]);\n  useEffect(function () {\n    var _tableState$popInColu2;\n\n    if (tableState !== null && tableState !== void 0 && tableState.interactiveRowsHavePopIn && (!(tableState !== null && tableState !== void 0 && tableState.popInColumns) || (tableState === null || tableState === void 0 ? void 0 : (_tableState$popInColu2 = tableState.popInColumns) === null || _tableState$popInColu2 === void 0 ? void 0 : _tableState$popInColu2.length) === 0)) {\n      dispatch({\n        type: 'WITH_POPIN',\n        payload: false\n      });\n    }\n  }, [tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn, tableState === null || tableState === void 0 ? void 0 : (_tableState$popInColu3 = tableState.popInColumns) === null || _tableState$popInColu3 === void 0 ? void 0 : _tableState$popInColu3.length]);\n  var tableBodyHeight = useMemo(function () {\n    var rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    var rowHeight = visibleRowCountMode === TableVisibleRowCountMode.Auto || tableState !== null && tableState !== void 0 && tableState.interactiveRowsHavePopIn ? popInRowHeight : internalRowHeight;\n    return rowHeight * rowNum;\n  }, [internalRowHeight, rows.length, internalVisibleRowCount, minRows, popInRowHeight, visibleRowCountMode, tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn]); // scroll bar detection\n\n  useEffect(function () {\n    var visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n\n    if (popInRowHeight !== internalRowHeight) {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount\n        }\n      });\n    } else {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: rows.length > visibleRowCount\n        }\n      });\n    }\n  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n  var noDataStyles = {\n    height: \"\".concat(tableBodyHeight, \"px\"),\n    width: totalColumnsWidth ? \"\".concat(totalColumnsWidth, \"px\") : '100%'\n  };\n  var onGroupByChanged = useCallback(function (e) {\n    var _e$detail = e.detail,\n        column = _e$detail.column,\n        isGrouped = _e$detail.isGrouped;\n    var groupedColumns = [];\n\n    if (isGrouped) {\n      groupedColumns = [].concat(_toConsumableArray(tableState.groupBy), [column.id]);\n    } else {\n      groupedColumns = tableState.groupBy.filter(function (group) {\n        return group !== column.id;\n      });\n    }\n\n    setGroupBy(groupedColumns);\n    onGroup(enrichEventWithDetails(e, {\n      column: column,\n      groupedColumns: groupedColumns\n    }));\n  }, [tableState.groupBy, onGroup, setGroupBy]);\n  useEffect(function () {\n    if ((columnOrder === null || columnOrder === void 0 ? void 0 : columnOrder.length) > 0) {\n      setColumnOrder(columnOrder);\n    }\n  }, [columnOrder]);\n\n  var _useDragAndDrop = useDragAndDrop(props, isRtl, setColumnOrder, tableState.columnOrder, tableState.columnResizing, tableInternalColumns),\n      _useDragAndDrop2 = _slicedToArray(_useDragAndDrop, 6),\n      dragOver = _useDragAndDrop2[0],\n      handleDragEnter = _useDragAndDrop2[1],\n      handleDragStart = _useDragAndDrop2[2],\n      handleDragOver = _useDragAndDrop2[3],\n      handleOnDrop = _useDragAndDrop2[4],\n      handleOnDragEnd = _useDragAndDrop2[5];\n\n  rest.onColumnsReordered;\n  rest.data;\n\n  var propsWithoutOmitted = _objectWithoutProperties(rest, _excluded2);\n\n  var inlineStyle = useMemo(function () {\n    var tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n\n    if (!!rowHeight) {\n      tableStyles['--sapWcrAnalyticalTableRowHeight'] = \"\".concat(rowHeight, \"px\");\n    }\n\n    if (tableState.tableClientWidth > 0) {\n      var _styles = _objectSpread(_objectSpread({}, tableStyles), style);\n\n      if (totalColumnsWidth < tableState.tableClientWidth) {\n        return _objectSpread(_objectSpread({}, _styles), {}, {\n          borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n        });\n      }\n\n      return _styles;\n    }\n\n    return _objectSpread(_objectSpread(_objectSpread({}, tableStyles), style), {}, {\n      visibility: 'hidden'\n    });\n  }, [tableState.tableClientWidth, style, rowHeight, totalColumnsWidth]);\n  var parentRef = useRef(null);\n  var verticalScrollBarRef = useRef(null);\n\n  var handleBodyScroll = function handleBodyScroll() {\n    if (verticalScrollBarRef.current && verticalScrollBarRef.current.scrollTop !== parentRef.current.scrollTop) {\n      if (!parentRef.current.isExternalVerticalScroll) {\n        verticalScrollBarRef.current.scrollTop = parentRef.current.scrollTop;\n        verticalScrollBarRef.current.isExternalVerticalScroll = true;\n      }\n\n      parentRef.current.isExternalVerticalScroll = false;\n    }\n  };\n\n  var handleVerticalScrollBarScroll = function handleVerticalScrollBarScroll() {\n    if (!verticalScrollBarRef.current.isExternalVerticalScroll) {\n      parentRef.current.scrollTop = verticalScrollBarRef.current.scrollTop;\n      parentRef.current.isExternalVerticalScroll = true;\n    }\n\n    verticalScrollBarRef.current.isExternalVerticalScroll = false;\n  };\n\n  var tableClasses = clsx(classes.table, GlobalStyleClasses.sapScrollBar, withNavigationHighlight && classes.hasNavigationIndicator);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: className,\n    style: inlineStyle,\n    title: tooltip,\n    ref: analyticalTableRef\n  }, propsWithoutOmitted), header && /*#__PURE__*/React.createElement(TitleBar, {\n    ref: titleBarRef\n  }, header), extension && /*#__PURE__*/React.createElement(\"div\", {\n    ref: extensionRef\n  }, extension), /*#__PURE__*/React.createElement(FlexBox, null, /*#__PURE__*/React.createElement(\"div\", _extends({}, getTableProps(), {\n    tabIndex: 0,\n    role: \"grid\",\n    \"aria-rowcount\": rows.length,\n    \"aria-colcount\": visibleColumns.length,\n    \"data-per-page\": internalVisibleRowCount,\n    \"data-component-name\": \"AnalyticalTableContainer\",\n    ref: tableRef,\n    className: tableClasses\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableHeaderBackgroundElement\n  }), headerGroups.map(function (headerGroup) {\n    var headerProps = {};\n\n    if (headerGroup.getHeaderGroupProps) {\n      headerProps = headerGroup.getHeaderGroupProps();\n    }\n\n    return tableRef.current && /*#__PURE__*/React.createElement(ColumnHeaderContainer, {\n      ref: headerRef,\n      key: headerProps.key,\n      reactWindowRef: reactWindowRef,\n      tableRef: tableRef,\n      resizeInfo: tableState.columnResizing,\n      visibleColumnsWidth: visibleColumnsWidth,\n      headerProps: headerProps,\n      headerGroup: headerGroup,\n      overscanCountHorizontal: overscanCountHorizontal,\n      onSort: onSort,\n      onGroupByChanged: onGroupByChanged,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDrop: handleOnDrop,\n      onDragEnter: handleDragEnter,\n      onDragEnd: handleOnDragEnd,\n      dragOver: dragOver,\n      isRtl: isRtl,\n      portalContainer: portalContainer\n    });\n  }), loading && ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length) > 0 && /*#__PURE__*/React.createElement(LoadingComponent, {\n    style: {\n      width: \"\".concat(totalColumnsWidth, \"px\")\n    }\n  }), loading && ((_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.length) === 0 && /*#__PURE__*/React.createElement(TablePlaceholder, {\n    isRtl: isRtl,\n    columns: visibleColumns,\n    rows: props.minRows,\n    style: noDataStyles,\n    rowHeight: internalRowHeight,\n    tableWidth: totalColumnsWidth\n  }), !loading && ((_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.length) === 0 && /*#__PURE__*/React.createElement(NoDataComponent, {\n    noDataText: noDataText,\n    className: classes.noDataContainer,\n    style: noDataStyles\n  }), ((_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.length) > 0 && tableRef.current && /*#__PURE__*/React.createElement(VirtualTableBodyContainer, {\n    tableBodyHeight: tableBodyHeight,\n    totalColumnsWidth: totalColumnsWidth,\n    parentRef: parentRef,\n    classes: classes,\n    infiniteScroll: infiniteScroll,\n    infiniteScrollThreshold: infiniteScrollThreshold,\n    onLoadMore: onLoadMore,\n    internalRowHeight: internalRowHeight,\n    popInRowHeight: popInRowHeight,\n    rows: rows,\n    handleExternalScroll: handleBodyScroll,\n    visibleRows: internalVisibleRowCount\n  }, /*#__PURE__*/React.createElement(VirtualTableBody, {\n    classes: classes,\n    prepareRow: prepareRow,\n    rows: rows,\n    minRows: minRows,\n    reactWindowRef: reactWindowRef,\n    isTreeTable: isTreeTable,\n    internalRowHeight: internalRowHeight,\n    popInRowHeight: popInRowHeight,\n    visibleRows: internalVisibleRowCount,\n    alternateRowColor: alternateRowColor,\n    overscanCount: overscanCount,\n    tableRef: tableRef,\n    parentRef: parentRef,\n    visibleColumns: visibleColumns,\n    visibleColumnsWidth: visibleColumnsWidth,\n    overscanCountHorizontal: overscanCountHorizontal,\n    renderRowSubComponent: renderRowSubComponent,\n    alwaysShowSubComponent: alwaysShowSubComponent,\n    markNavigatedRow: markNavigatedRow,\n    isRtl: isRtl,\n    subComponentsHeight: tableState.subComponentsHeight,\n    dispatch: dispatch\n  }))), (tableState.isScrollable === undefined || tableState.isScrollable) && /*#__PURE__*/React.createElement(VerticalScrollbar, {\n    internalRowHeight: internalRowHeight,\n    popInRowHeight: popInRowHeight,\n    tableRef: tableRef,\n    minRows: minRows,\n    rows: rows,\n    handleVerticalScrollBarScroll: handleVerticalScrollBarScroll,\n    ref: verticalScrollBarRef\n  })), visibleRowCountMode === TableVisibleRowCountMode.Interactive && /*#__PURE__*/React.createElement(VerticalResizer, {\n    popInRowHeight: popInRowHeight,\n    hasPopInColumns: (tableState === null || tableState === void 0 ? void 0 : (_tableState$popInColu4 = tableState.popInColumns) === null || _tableState$popInColu4 === void 0 ? void 0 : _tableState$popInColu4.length) > 0,\n    analyticalTableRef: analyticalTableRef,\n    dispatch: dispatch,\n    extensionsHeight: extensionsHeight,\n    internalRowHeight: internalRowHeight,\n    portalContainer: portalContainer\n  }));\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n  infiniteScrollThreshold: 20,\n  loading: false,\n  sortable: true,\n  filterable: false,\n  groupable: false,\n  selectionMode: TableSelectionMode.None,\n  selectionBehavior: TableSelectionBehavior.Row,\n  scaleWidthMode: TableScaleWidthMode.Default,\n  data: [],\n  columns: [],\n  minRows: 5,\n  groupBy: [],\n  NoDataComponent: DefaultNoDataComponent,\n  LoadingComponent: DefaultLoadingComponent,\n  noDataText: 'No Data',\n  reactTableOptions: {},\n  tableHooks: [],\n  visibleRows: 15,\n  subRowsKey: 'subRows',\n  highlightField: 'status',\n  markNavigatedRow: function markNavigatedRow() {\n    return false;\n  },\n  selectedRowIds: {},\n  onGroup: function onGroup() {},\n  onRowExpandChange: function onRowExpandChange() {},\n  onColumnsReordered: function onColumnsReordered() {},\n  isTreeTable: false,\n  alternateRowColor: false,\n  overscanCountHorizontal: 5,\n  visibleRowCountMode: TableVisibleRowCountMode.Fixed,\n  alwaysShowSubComponent: false,\n  portalContainer: document.body\n};\nexport { AnalyticalTable };","map":{"version":3,"sources":["../src/components/AnalyticalTable/AnayticalTable.jss.ts","../src/internal/stopPropagation.ts","../src/components/AnalyticalTable/ColumnHeader/ColumnHeaderModal.tsx","../src/components/AnalyticalTable/ColumnHeader/index.tsx","../src/components/AnalyticalTable/ColumnHeader/ColumnHeaderContainer.tsx","../src/components/AnalyticalTable/defaults/FilterComponent/index.tsx","../src/components/AnalyticalTable/defaults/Column/Cell.tsx","../src/components/AnalyticalTable/defaults/Column/Expandable.tsx","../src/components/AnalyticalTable/defaults/Column/Grouped.tsx","../src/components/AnalyticalTable/defaults/Column/PopIn.tsx","../src/components/AnalyticalTable/defaults/Column/RepeatedValue.tsx","../src/components/AnalyticalTable/defaults/Column/index.tsx","../src/components/AnalyticalTable/defaults/LoadingComponent/index.tsx","../src/components/AnalyticalTable/defaults/LoadingComponent/TablePlaceholder.tsx","../src/components/AnalyticalTable/defaults/NoDataComponent/index.tsx","../src/components/AnalyticalTable/hooks/useDragAndDrop.ts","../src/components/AnalyticalTable/hooks/useDynamicColumnWidths.ts","../src/components/AnalyticalTable/hooks/useKeyboardNavigation.ts","../src/components/AnalyticalTable/hooks/usePopIn.ts","../src/components/AnalyticalTable/hooks/useRowHighlight.tsx","../src/components/AnalyticalTable/hooks/useRowNavigationIndicator.tsx","../src/components/AnalyticalTable/hooks/useRowSelectionColumn.tsx","../src/components/AnalyticalTable/hooks/useSingleRowStateSelection.ts","../src/components/AnalyticalTable/hooks/useStyling.ts","../src/components/AnalyticalTable/hooks/useTableScrollHandles.ts","../src/components/AnalyticalTable/hooks/useToggleRowExpand.ts","../src/components/AnalyticalTable/hooks/useVisibleColumnsWidth.ts","../src/components/AnalyticalTable/scrollbars/VerticalScrollbar.tsx","../src/components/AnalyticalTable/TableBody/RowSubComponent.tsx","../src/components/AnalyticalTable/TableBody/VirtualTableBody.tsx","../src/components/AnalyticalTable/TableBody/VirtualTableBodyContainer.tsx","../src/components/AnalyticalTable/tableReducer/stateReducer.ts","../src/components/AnalyticalTable/TitleBar/index.tsx","../src/components/AnalyticalTable/util/index.ts","../src/components/AnalyticalTable/VerticalResizer.tsx","../src/components/AnalyticalTable/index.tsx"],"names":["styles","table","position","width","maxWidth","overflowY","overflowX","height","minHeight","fontFamily","ThemingParameters","fontSize","fontWeight","backgroundColor","sapList_Background","tableHeaderRow","CssSizeVariables","display","borderLeft","hasNavigationIndicator","borderRight","tableHeaderBackgroundElement","boxSizing","left","right","borderTop","borderBottom","th","color","padding","textAlign","transform","outlineOffset","outline","tbody","scrollBarWidth","alternateRowColor","sapList_AlternatingBackground","tr","top","willChange","sapList_Hover_Background","sapList_SelectionBackgroundColor","sapList_Hover_SelectionBackground","trActive","cursor","sapList_Active_TextColor","tableGroupHeader","border","tableCell","overflow","textOverflow","whiteSpace","alignItems","noDataContainer","justifyContent","valueStateSuccess","sapSuccessColor","valueStateError","sapErrorColor","valueStateWarning","sapWarningColor","valueStateInformation","sapInformationColor","stopPropagation","e","popover","filter","filterIcon","paddingRight","minWidth","useStyles","createUseStyles","name","ColumnHeaderModal","column","onSort","onGroupBy","open","setPopoverOpen","targetRef","portalContainer","isRtl","props","classes","showFilter","showGroup","showSort","ref","useRef","listRef","Filter","i18nBundle","useI18nBundle","clearSortingText","sortAscendingText","sortDescendingText","groupText","ungroupText","handleSort","useCallback","sortType","enrichEventWithDetails","sortDirection","willGroup","isGrouped","isSortedAscending","isSortedDescending","useEffect","popoverInstance","onAfterClose","onAfterOpen","horizontalAlign","TextAlign","PopoverHorizontalAlign","createPortal","PopoverPlacementType","ListItemType","Inactive","FlexBoxAlignItems","header","background","text","iconContainer","sapContent_IconColor","ColumnHeader","id","children","className","style","onDragEnter","onDragOver","onDragStart","onDrop","onDragEnd","headerTooltip","isDraggable","dragOver","role","virtualColumn","columnIndex","visibleColumnIndex","onClick","onKeyDown","isFiltered","popoverOpen","useState","tooltip","textStyle","margin","marginLeft","marginRight","hasPopover","handleHeaderCellClick","directionStyles","iconContainerDirectionStyles","handleHeaderCellKeyDown","handleHeaderCellKeyUp","undefined","hAlign","resizer","bottom","zIndex","sapContent_DragAndDropActiveColor","ColumnHeaderContainer","forwardRef","headerProps","headerGroup","onGroupByChanged","tableRef","visibleColumnsWidth","overscanCountHorizontal","resizeInfo","reactWindowRef","columnVirtualizer","useVirtual","size","parentRef","estimateSize","horizontal","overscan","horizontalScrollToOffset","horizontalScrollToIndex","scrollToIndex","isLastColumn","resizerDirectionStyle","key","rest","DefaultFilterComponent","handleChange","Cell","cell","value","row","cellContent","tableGroupExpandCollapseIcon","isBrowserIe","isIE","getPadding","level","Expandable","columns","webComponentsReactProperties","tableColumns","col","paddingRtl","paddingLeft","rowProps","subComponentExpandable","Grouped","PopInStyles","container","defaultCell","PopIn","state","contentToRender","internalRowHeight","instance","FlexBoxDirection","FlexBoxWrap","popInInstanceProps","item","renderHeader","makeRenderer","renderCell","isPopIn","RepeatedValue","DEFAULT_COLUMN_WIDTH","defaultFilterMethod","String","DefaultColumn","vAlign","VerticalAlign","defaultFilter","loader","DefaultLoadingComponent","getArrayOfLength","Array","TableRow","y","columnOffset","el","TablePlaceholder","rows","rowHeight","tableWidth","innerStyles","useMemo","sapContent_DisabledOpacity","index","DefaultNoDataComponent","noDataText","getColumnId","useDragAndDrop","onColumnsReordered","setDragOver","handleDragStart","handleDragOver","handleDragEnter","handleOnDrop","droppedColId","draggedColId","internalColumnOrder","columnOrder","droppedColIdx","draggedColIdx","tempCols","targetIndex","setColumnOrder","columnsNewOrder","handleOnDragEnd","ROW_SAMPLE_SIZE","DEFAULT_HEADER_NUM_CHAR","MAX_WIDTH","approximateHeaderPxFromCharLength","charLength","Math","approximateContentPxFromCharLength","columnsDeps","visibleColumns","hiddenColumns","totalWidth","scaleWidthMode","loading","visCol","calculateDefaultTableWidth","columnsWithWidthProperties","accessor","availableWidth","defaultColumnsCount","columnsWithFixedWidth","acceptedWidth","columnsWithMaxWidth","aggregatedColumnsMaxWidth","acc","cur","aggregatedColumnsMinWidth","fixedWidth","hasData","TableScaleWidthMode","defaultWidth","rowSample","columnMeta","minHeaderWidth","fullWidth","contentCharAvg","headerLength","contentMaxCharLength","dataPoint","val","totalCharNum","reservedWidth","isColumnVisible","meta","additionalSpaceFactor","targetWidth","useDynamicColumnWidths","hooks","getFirstVisibleCell","firstVisibleCell","noData","target","currentlyFocusedCell","findParentCell","setFocus","nextElement","getTableProps","data","onTableBlur","onTableFocus","isFirstCellAvailable","dataset","rowIndex","parseInt","firstCell","onKeyboardNavigation","lastVisibleColumn","isNaN","arr","newElement","lastVisibleRow","parent","firstChildOfParent","hasSubcomponent","nextElementToSubComp","previousRowCell","firstChildPrevRow","onFocus","onBlur","useKeyboardNavigation","popInVisibleColumnsDeps","popInVisibleColumns","dispatch","tableClientWidth","popInColumns","type","payload","usePopIn","baseStyles","StyleClassMap","ValueState","Header","styleClass","visibleColumnsDeps","highlightColumn","withRowHighlight","highlightField","disableFilters","disableSortBy","disableGroupBy","disableResizing","disableDragAndDrop","useRowHighlight","isNavigatedCell","withNavigationHighlight","useRowNavigationIndicators","divStyle","customCheckBoxStyling","verticalAlign","getToggleAllRowsSelectedProps","selectionMode","TableSelectionMode","checkBoxProps","checked","selectionBehavior","handleCellClick","TableSelectionBehavior","flatRows","onRowSelected","toggleAllRowsSelected","isAllRowsSelected","allRowsSelected","selectedFlatRows","columnDeps","selectionColumn","tableSelectionColumnWidth","getComputedStyle","CssSizeVariablesNames","selectionColumnWidth","useRowSelectionColumn","getRowProps","toggleRowSelected","handleRowSelect","selectionCellClick","isEmptyRow","onRowClick","selectedRow","isSelected","isRowSelected","prevRow","useSingleRowStateSelection","getHeaderGroupProps","getHeaderProps","ROW_SELECTION_ATTRIBUTE","rowCanBeSelected","newRowProps","getCellProps","tabIndex","useStyling","useTableScrollHandles","analyticalTableRef","Object","scrollTo","align","scrollToItem","horizontalScrollTo","horizontalScrollToItem","getToggleRowExpandedProps","onRowExpandChange","isTreeTable","renderRowSubComponent","useToggleRowExpand","getVisibleColumnsWidth","useVisibleColumnsWidth","headerSection","sapList_HeaderBackground","scrollbar","bottomSection","flexGrow","bottomSectionWithScrollbar","VerticalScrollbar","minRows","handleVerticalScrollBarScroll","popInRowHeight","hasHorizontalScrollbar","horizontalScrollbarSectionStyles","clsx","GlobalStyleClasses","subcomponent","RowSubComponent","subComponentsHeight","virtualRow","alwaysShowSubComponent","subComponentRef","subComponentHeightObserver","entries","entry","borderBoxSize","subCompHeight","objGroupedByHeight","count","mostUsedHeight","estimatedHeights","subComponentHeight","rowId","VirtualTableBody","prepareRow","visibleRows","overscanCount","markNavigatedRow","itemCount","rowVirtualizer","scrollToOffset","popInColumn","rowIndexWithHeader","cellProps","visibleRowIndex","VirtualTableBodyContainer","tableBodyHeight","totalColumnsWidth","infiniteScroll","infiniteScrollThreshold","onLoadMore","handleExternalScroll","isMounted","setIsMounted","classNames","lastScrollTop","firedInfiniteLoadEvents","prevRowsLength","onScroll","scrollOffset","event","isScrollingDown","currentLastRow","rootNodes","detail","rowCount","totalRowCount","length","stateReducer","action","prevState","actions","clientX","startX","columnWidth","headerIdWidths","deltaX","percentageDeltaX","newColumnWidths","headerId","headerWidth","columnResizing","columnWidths","isScrollable","selectedRowIds","interactiveRowsHavePopIn","TitleBar","isValidElement","orderByFn","wrapSortFn","desc","directions","rowB","rowA","sortFn","wrappedSortfunctions","functions","defaultOrderByFn","tagNamesWhichShouldNotSelectARow","verticalResizerStyles","sapHighlightTextColor","content","lineHeight","pointerEvents","opacity","isTouchEvent","VerticalResizer","extensionsHeight","hasPopInColumns","startY","verticalResizerRef","resizerPosition","setResizerPosition","isDragging","setIsDragging","mountTouchEvents","setMountTouchEvents","handleResizeStart","touchEvent","handleMove","pageY","handleResizeEnd","removeEventListeners","document","resizerPosTop","window","resizerPosLeft","resizerPosWidth","AnalyticalTable","extension","filterable","globalFilterValue","groupBy","groupable","reactTableOptions","sortable","subRowsKey","tableHooks","tableInstance","visibleRowCountMode","onGroup","LoadingComponent","NoDataComponent","useIsRTL","getSubRows","missingRows","emptyRows","emptyRow","tableInstanceRef","defaultColumn","selectSubRows","headerGroups","tableState","tableInternalColumns","setGroupBy","setGlobalFilter","titleBarRef","extensionRef","headerRef","calcRowHeight","internalVisibleRowCount","updateTableClientWidth","clientWidth","updateRowsCount","TableVisibleRowCountMode","parentElement","tableYPosition","parentHeight","tableHeight","tableWidthObserver","debounce","parentHeightObserver","useIsomorphicLayoutEffect","rowNum","visibleRowCount","noDataStyles","groupedColumns","group","propsWithoutOmitted","inlineStyle","tableStyles","flexDirection","visibility","verticalScrollBarRef","handleBodyScroll","tableClasses","body"],"mappings":"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","sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nconst styles = {\n  table: {\n    position: 'relative',\n    width: '100%',\n    maxWidth: '100%',\n    overflowY: 'hidden',\n    overflowX: 'auto',\n    height: '100%',\n    minHeight: '3rem',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    backgroundColor: ThemingParameters.sapList_Background\n  },\n  tableHeaderRow: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    display: 'inline-flex',\n    '& div:first-child $th': {\n      borderLeft: `1px solid ${ThemingParameters.sapList_BorderColor}`\n    }\n  },\n  hasNavigationIndicator: {\n    '& $tableHeaderRow :nth-last-child(2) $th': {\n      borderRight: 'none'\n    },\n    '& $tr :nth-last-child(2)': {\n      borderRight: 'none'\n    }\n  },\n  tableHeaderBackgroundElement: {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    borderTop: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n  },\n  th: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    color: ThemingParameters.sapList_HeaderTextColor,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    borderTop: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    padding: `0 0.5rem`,\n    textAlign: 'start',\n    boxSizing: 'border-box',\n    '&[data-column-id=\"__ui5wcr__internal_highlight_column\"]': {\n      borderRight: '1px solid transparent'\n    },\n    '&:last-child': {\n      '& [data-resizer]': {\n        transform: 'translateX(0px)'\n      }\n    },\n    '&:focus': {\n      '&[data-column-id=\"__ui5wcr__internal_selection_column\"]': {\n        borderLeft: '1px solid transparent'\n      },\n      outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`,\n      outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`\n    }\n  },\n  tbody: {\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    scrollBarWidth: 'none !important',\n    '-ms-overflow-style': 'none',\n    '&::-webkit-scrollbar': {\n      width: 0,\n      height: 0\n    }\n  },\n  alternateRowColor: {\n    backgroundColor: ThemingParameters.sapList_AlternatingBackground\n  },\n  tr: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    color: ThemingParameters.sapList_TextColor,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    boxSizing: 'border-box',\n    display: 'flex',\n    willChange: 'transform',\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    },\n    '&[data-is-selected]': {\n      borderBottom: `1px solid ${ThemingParameters.sapList_SelectionBorderColor}`,\n      backgroundColor: ThemingParameters.sapList_SelectionBackgroundColor\n    },\n    '&[data-is-selected]:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_SelectionBackground\n    }\n  },\n  trActive: {\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    '&:active': {\n      backgroundColor: ThemingParameters.sapList_Active_Background,\n      '& $tableCell': {\n        borderRight: `1px solid ${ThemingParameters.sapList_Active_Background}`,\n        color: `${ThemingParameters.sapList_Active_TextColor}`,\n        '--sapTextColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n  tableGroupHeader: {\n    '&$tr': {\n      backgroundColor: `${ThemingParameters.sapList_TableGroupHeaderBackground}`,\n      border: `1px solid ${ThemingParameters.sapList_TableGroupHeaderBorderColor}`,\n      color: ThemingParameters.sapList_TextColor,\n      '& $tableCell': {\n        borderRight: 'none'\n      }\n    }\n  },\n  tableCell: {\n    height: '100%',\n    boxSizing: 'border-box',\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    display: 'inline-flex',\n    padding: '0 0.5rem',\n    '&:first-child': {\n      borderLeft: `1px solid ${ThemingParameters.sapList_BorderColor}`\n    },\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    alignItems: 'center',\n    position: 'relative',\n    '&:focus': {\n      outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`,\n      outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`\n    }\n  },\n  noDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    backgroundColor: ThemingParameters.sapList_Background,\n    width: '100%',\n    boxSizing: 'border-box',\n    color: ThemingParameters.sapList_TextColor,\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n  },\n  valueStateSuccess: {\n    backgroundColor: ThemingParameters.sapSuccessColor\n  },\n  valueStateError: {\n    backgroundColor: ThemingParameters.sapErrorColor\n  },\n  valueStateWarning: {\n    backgroundColor: ThemingParameters.sapWarningColor\n  },\n  valueStateInformation: {\n    backgroundColor: ThemingParameters.sapInformationColor\n  }\n};\n\nexport default styles;\n","export const stopPropagation = (e) => {\n  e.stopPropagation();\n  e.stopImmediatePropagation?.();\n};\n","import '@ui5/webcomponents-icons/dist/decline.js';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport {\n  CLEAR_SORTING,\n  GROUP,\n  SORT_ASCENDING,\n  SORT_DESCENDING,\n  UNGROUP\n} from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { CustomListItem } from '@ui5/webcomponents-react/dist/CustomListItem';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { List } from '@ui5/webcomponents-react/dist/List';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { Popover, PopoverDomRef } from '@ui5/webcomponents-react/dist/Popover';\nimport { PopoverHorizontalAlign } from '@ui5/webcomponents-react/dist/PopoverHorizontalAlign';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';\nimport { TextAlign } from '@ui5/webcomponents-react/dist/TextAlign';\nimport React, { RefObject, useCallback, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createUseStyles } from 'react-jss';\nimport { stopPropagation } from '../../../internal/stopPropagation';\nimport { ColumnType } from '../types/ColumnType';\n\nexport interface ColumnHeaderModalProperties {\n  column: ColumnType;\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroupBy?: (e: CustomEvent<{ column: unknown; isGrouped: boolean }>) => void;\n  open: boolean;\n  setPopoverOpen: (open: boolean) => void;\n  targetRef: RefObject<any>;\n  portalContainer: Element;\n  isRtl: boolean;\n}\n\nconst styles = {\n  popover: {\n    fontWeight: 'normal'\n  },\n  filter: {\n    padding: '0px 1rem',\n    height: 'var(--_ui5_custom_list_item_height)',\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n  },\n  filterIcon: { paddingRight: '0.5rem', minWidth: '1rem', minHeight: '1rem' }\n};\nconst useStyles = createUseStyles(styles, { name: 'ColumnHeaderModal' });\n\nexport const ColumnHeaderModal = (props: ColumnHeaderModalProperties) => {\n  const { column, onSort, onGroupBy, open, setPopoverOpen, targetRef, portalContainer, isRtl } = props;\n  const classes = useStyles();\n  const showFilter = column.canFilter;\n  const showGroup = column.canGroupBy;\n  const showSort = column.canSort;\n\n  const ref = useRef<PopoverDomRef>(null);\n  const listRef = useRef(null);\n\n  const { Filter } = column;\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const clearSortingText = i18nBundle.getText(CLEAR_SORTING);\n  const sortAscendingText = i18nBundle.getText(SORT_ASCENDING);\n  const sortDescendingText = i18nBundle.getText(SORT_DESCENDING);\n  const groupText = i18nBundle.getText(GROUP);\n  const ungroupText = i18nBundle.getText(UNGROUP);\n\n  const handleSort = useCallback(\n    (e) => {\n      const sortType = e.detail.item.getAttribute('data-sort');\n\n      switch (sortType) {\n        case 'asc':\n          column.toggleSortBy(false);\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'desc':\n          column.toggleSortBy(true);\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'clear':\n          column.clearSortBy();\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'group':\n          const willGroup = !column.isGrouped;\n          column.toggleGroupBy(willGroup);\n          if (typeof onGroupBy === 'function') {\n            onGroupBy(\n              enrichEventWithDetails(e, {\n                column,\n                isGrouped: willGroup\n              })\n            );\n          }\n          break;\n      }\n      if (ref.current) {\n        ref.current.close();\n      }\n    },\n    [column, ref, onGroupBy, onSort]\n  );\n\n  const isSortedAscending = column.isSorted && column.isSortedDesc === false;\n  const isSortedDescending = column.isSorted && column.isSortedDesc === true;\n\n  useEffect(() => {\n    const popoverInstance = ref.current;\n    if (open) {\n      popoverInstance?.showAt(targetRef.current);\n    }\n  }, [open, targetRef.current, ref.current]);\n\n  const onAfterClose = useCallback(\n    (e) => {\n      stopPropagation(e);\n      ref?.current?.close();\n      setPopoverOpen(false);\n    },\n    [setPopoverOpen]\n  );\n\n  const onAfterOpen = () => {\n    listRef.current?.children?.[0]?.focus();\n  };\n\n  const horizontalAlign = (() => {\n    switch (column.hAlign) {\n      case TextAlign.Begin:\n        return isRtl ? PopoverHorizontalAlign.Right : PopoverHorizontalAlign.Left;\n      case TextAlign.End:\n        return isRtl ? PopoverHorizontalAlign.Left : PopoverHorizontalAlign.Right;\n      case TextAlign.Left:\n        return PopoverHorizontalAlign.Left;\n      case TextAlign.Right:\n        return PopoverHorizontalAlign.Right;\n      case TextAlign.Center:\n        return PopoverHorizontalAlign.Center;\n      default:\n        return isRtl ? PopoverHorizontalAlign.Right : PopoverHorizontalAlign.Left;\n    }\n  })();\n\n  if (!open) return null;\n  return createPortal(\n    <Popover\n      hideArrow\n      horizontalAlign={horizontalAlign}\n      placementType={PopoverPlacementType.Bottom}\n      ref={ref}\n      className={classes.popover}\n      onAfterClose={onAfterClose}\n      onAfterOpen={onAfterOpen}\n    >\n      <List onItemClick={handleSort} ref={listRef}>\n        {isSortedAscending && (\n          <StandardListItem type={ListItemType.Active} icon=\"decline\" data-sort=\"clear\">\n            {clearSortingText}\n          </StandardListItem>\n        )}\n        {showSort && !isSortedAscending && (\n          <StandardListItem type={ListItemType.Active} icon=\"sort-ascending\" data-sort=\"asc\">\n            {sortAscendingText}\n          </StandardListItem>\n        )}\n        {showSort && !isSortedDescending && (\n          <StandardListItem type={ListItemType.Active} icon=\"sort-descending\" data-sort=\"desc\">\n            {sortDescendingText}\n          </StandardListItem>\n        )}\n        {isSortedDescending && (\n          <StandardListItem type={ListItemType.Active} icon=\"decline\" data-sort=\"clear\">\n            {clearSortingText}\n          </StandardListItem>\n        )}\n        {showFilter && !column.isGrouped && (\n          //todo maybe need to enhance Input selection after ui5-webcomponents issue has been fixed\n          <CustomListItem type={ListItemType.Inactive}>\n            <FlexBox alignItems={FlexBoxAlignItems.Center} className={classes.filter}>\n              <Icon name=\"filter\" className={classes.filterIcon} />\n              <Filter column={column} popoverRef={ref} />\n            </FlexBox>\n          </CustomListItem>\n        )}\n        {showGroup && (\n          <StandardListItem type={ListItemType.Active} icon=\"group-2\" data-sort={'group'}>\n            {column.isGrouped ? ungroupText : groupText}\n          </StandardListItem>\n        )}\n      </List>\n    </Popover>,\n    portalContainer\n  );\n};\nColumnHeaderModal.displayName = 'ColumnHeaderModal';\n","import '@ui5/webcomponents-icons/dist/filter.js';\nimport '@ui5/webcomponents-icons/dist/group-2.js';\nimport '@ui5/webcomponents-icons/dist/sort-ascending.js';\nimport '@ui5/webcomponents-icons/dist/sort-descending.js';\nimport { createUseStyles } from 'react-jss';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport React, {\n  CSSProperties,\n  DragEventHandler,\n  FC,\n  MouseEventHandler,\n  KeyboardEventHandler,\n  ReactNode,\n  useRef,\n  useState\n} from 'react';\nimport { VirtualItem } from 'react-virtual';\nimport { ColumnType } from '../types/ColumnType';\nimport { ColumnHeaderModal } from './ColumnHeaderModal';\n\nexport interface ColumnHeaderProps {\n  visibleColumnIndex: number;\n  columnIndex: number;\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroupBy?: (e: CustomEvent<{ column: unknown; isGrouped: boolean }>) => void;\n  onDragStart: DragEventHandler<HTMLDivElement>;\n  onDragOver: DragEventHandler<HTMLDivElement>;\n  onDrop: DragEventHandler<HTMLDivElement>;\n  onDragEnter: DragEventHandler<HTMLDivElement>;\n  onDragEnd: DragEventHandler<HTMLDivElement>;\n  dragOver: boolean;\n  isDraggable: boolean;\n  headerTooltip: string;\n  virtualColumn: VirtualItem;\n  isRtl: boolean;\n  children: ReactNode | ReactNode[];\n  portalContainer: Element;\n\n  //getHeaderProps()\n  id: string;\n  onClick: MouseEventHandler<HTMLDivElement> | undefined;\n  onKeyDown?: KeyboardEventHandler<HTMLDivElement> | undefined;\n  className: string;\n  style: CSSProperties;\n  column: ColumnType;\n  role: string;\n}\n\nconst styles = {\n  header: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'begin',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    color: ThemingParameters.sapList_TextColor,\n    background: ThemingParameters.sapList_HeaderBackground,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative',\n    width: '100%',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    boxSizing: 'border-box',\n    '&[data-h-align=\"End\"]': {\n      '& $text': {\n        textAlign: 'end'\n      }\n    }\n  },\n  text: {\n    width: '100%',\n    textAlign: 'start'\n  },\n  iconContainer: {\n    display: 'inline-block',\n    position: 'absolute',\n    color: ThemingParameters.sapContent_IconColor\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'TableColumnHeader' });\n\nexport const ColumnHeader: FC<ColumnHeaderProps> = (props: ColumnHeaderProps) => {\n  const classes = useStyles();\n  const {\n    id,\n    children,\n    column,\n    className,\n    style,\n    onSort,\n    onGroupBy,\n    onDragEnter,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onDragEnd,\n    headerTooltip,\n    isDraggable,\n    dragOver,\n    role,\n    virtualColumn,\n    isRtl,\n    columnIndex,\n    visibleColumnIndex,\n    onClick,\n    onKeyDown,\n    portalContainer\n  } = props;\n\n  const isFiltered = column.filterValue && column.filterValue.length > 0;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const tooltip = (() => {\n    if (headerTooltip) {\n      return headerTooltip;\n    }\n    if (typeof children === 'string') {\n      return children;\n    }\n    return null;\n  })();\n\n  const textStyle = (() => {\n    let margin = 0;\n\n    if (column.isSorted) margin++;\n    if (column.isGrouped) margin++;\n    if (isFiltered) margin++;\n\n    if (margin === 0) {\n      return {};\n    }\n\n    if (margin > 0) margin += 0.5;\n\n    if (isRtl) {\n      return {\n        marginLeft: `${margin}rem`\n      };\n    }\n    return {\n      marginRight: `${margin}rem`\n    };\n  })();\n\n  const hasPopover = column.canGroupBy || column.canSort || column.canFilter;\n\n  const handleHeaderCellClick = (e) => {\n    onClick?.(e);\n    if (hasPopover) {\n      setPopoverOpen(true);\n    }\n  };\n  const directionStyles = isRtl\n    ? { right: 0, transform: `translateX(-${virtualColumn.start}px)` }\n    : { left: 0, transform: `translateX(${virtualColumn.start}px)` };\n\n  const iconContainerDirectionStyles = isRtl ? { left: '0.5rem' } : { right: '0.5rem' };\n\n  const handleHeaderCellKeyDown = (e) => {\n    onKeyDown?.(e);\n    if (hasPopover && e.code === 'Enter') {\n      setPopoverOpen(true);\n    }\n    if (e.code === 'Space') {\n      e.preventDefault();\n    }\n  };\n\n  const handleHeaderCellKeyUp = (e) => {\n    if (hasPopover && e.code === 'Space') {\n      setPopoverOpen(true);\n    }\n  };\n\n  const targetRef = useRef();\n  if (!column) return null;\n\n  return (\n    <div\n      ref={targetRef}\n      style={{\n        position: 'absolute',\n        top: 0,\n        width: `${virtualColumn.size}px`,\n        ...directionStyles\n      }}\n    >\n      <div\n        data-visible-column-index={visibleColumnIndex}\n        data-visible-row-index={0}\n        data-row-index={0}\n        data-column-index={columnIndex}\n        tabIndex={-1}\n        id={id}\n        className={className}\n        style={{\n          ...style,\n          cursor: hasPopover ? 'pointer' : 'auto',\n          borderLeft: dragOver ? `3px solid ${ThemingParameters.sapSelectedColor}` : undefined\n        }}\n        role={role}\n        draggable={isDraggable}\n        onDragEnter={onDragEnter}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n        onDrop={onDrop}\n        onDragEnd={onDragEnd}\n        data-column-id={id}\n        onClick={handleHeaderCellClick}\n        onKeyDown={handleHeaderCellKeyDown}\n        onKeyUp={handleHeaderCellKeyUp}\n      >\n        <div className={classes.header} data-h-align={column.hAlign}>\n          <Text tooltip={tooltip} wrapping={false} style={textStyle} className={classes.text}>\n            {children}\n          </Text>\n          <div className={classes.iconContainer} style={iconContainerDirectionStyles}>\n            {isFiltered && <Icon name=\"filter\" />}\n            {column.isSorted && <Icon name={column.isSortedDesc ? 'sort-descending' : 'sort-ascending'} />}\n            {column.isGrouped && <Icon name=\"group-2\" />}\n          </div>\n        </div>\n        {hasPopover && targetRef.current && (\n          <ColumnHeaderModal\n            isRtl={isRtl}\n            column={column}\n            onSort={onSort}\n            onGroupBy={onGroupBy}\n            targetRef={targetRef}\n            open={popoverOpen}\n            setPopoverOpen={setPopoverOpen}\n            portalContainer={portalContainer}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React, { forwardRef, Fragment, MutableRefObject, Ref, useCallback } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useVirtual, VirtualItem } from 'react-virtual';\nimport { ColumnHeader } from './index';\n\nconst styles = {\n  resizer: {\n    display: 'inline-block',\n    width: '3px',\n    height: '100%',\n    position: 'absolute',\n    bottom: 0,\n    top: 0,\n    zIndex: 1,\n    cursor: 'col-resize',\n    willChange: 'transform',\n    '&:hover, &:active': {\n      backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor\n    }\n  }\n};\n\ninterface ColumnHeaderContainerProps {\n  headerProps: Record<string, unknown>;\n  headerGroup: Record<string, any>;\n  onSort: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroupByChanged: (e: CustomEvent<{ column?: any; isGrouped?: boolean }>) => void;\n  onDragStart: any;\n  onDragOver: any;\n  onDrop: any;\n  onDragEnter: any;\n  onDragEnd: any;\n  dragOver: any;\n  tableRef: MutableRefObject<any>;\n  visibleColumnsWidth: any[];\n  overscanCountHorizontal: number;\n  resizeInfo: Record<string, unknown>;\n  reactWindowRef: MutableRefObject<any>;\n  isRtl: boolean;\n  portalContainer: Element;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'Resizer' });\n\nexport const ColumnHeaderContainer = forwardRef((props: ColumnHeaderContainerProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    headerProps,\n    headerGroup,\n    onSort,\n    onGroupByChanged,\n    onDragStart,\n    onDragOver,\n    onDrop,\n    onDragEnter,\n    onDragEnd,\n    dragOver,\n    tableRef,\n    visibleColumnsWidth,\n    overscanCountHorizontal,\n    resizeInfo,\n    reactWindowRef,\n    isRtl,\n    portalContainer\n  } = props;\n  const columnVirtualizer = useVirtual({\n    size: visibleColumnsWidth.length,\n    parentRef: tableRef,\n    estimateSize: useCallback(\n      (index) => {\n        return visibleColumnsWidth[index];\n      },\n      [visibleColumnsWidth]\n    ),\n    horizontal: true,\n    overscan: overscanCountHorizontal\n  });\n\n  reactWindowRef.current = {\n    ...reactWindowRef.current,\n    horizontalScrollToOffset: columnVirtualizer.scrollToOffset,\n    horizontalScrollToIndex: columnVirtualizer.scrollToIndex\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...headerProps}\n      style={{ width: `${columnVirtualizer.totalSize}px` }}\n      ref={ref}\n      data-component-name=\"AnalyticalTableHeaderRow\"\n    >\n      {columnVirtualizer.virtualItems.map((virtualColumn: VirtualItem, index) => {\n        const column = headerGroup.headers[virtualColumn.index];\n        if (!column) {\n          return null;\n        }\n        const isLastColumn = !column.disableResizing && virtualColumn.index + 1 === headerGroup.headers.length;\n        const resizerDirectionStyle = isRtl\n          ? {\n              right: `${column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0)}px`,\n              transform: 'translateX(50%)'\n            }\n          : {\n              left: `${column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0)}px`,\n              transform: 'translateX(-50%)'\n            };\n\n        const { key, ...rest } = column.getHeaderProps();\n        return (\n          <Fragment key={key}>\n            {column.canResize && column.getResizerProps && (\n              <div\n                {...column.getResizerProps()}\n                data-resizer\n                className={classes.resizer}\n                style={resizerDirectionStyle}\n              />\n            )}\n            <ColumnHeader\n              {...rest}\n              visibleColumnIndex={index}\n              columnIndex={virtualColumn.index}\n              onSort={onSort}\n              onGroupBy={onGroupByChanged}\n              onDragStart={onDragStart}\n              onDragOver={onDragOver}\n              onDrop={onDrop}\n              onDragEnter={onDragEnter}\n              onDragEnd={onDragEnd}\n              dragOver={column.id === dragOver}\n              headerTooltip={column.headerTooltip}\n              isDraggable={(column.canReorder || !column.disableDragAndDrop) && !resizeInfo.isResizingColumn}\n              virtualColumn={virtualColumn}\n              isRtl={isRtl}\n              portalContainer={portalContainer}\n            >\n              {column.render('Header')}\n            </ColumnHeader>\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n});\n","import { Input } from '@ui5/webcomponents-react/dist/Input';\nimport React, { FC, useCallback } from 'react';\n\nexport const DefaultFilterComponent: FC<any> = ({ column }) => {\n  const handleChange = useCallback(\n    (e) => {\n      column.setFilter(e.target.value || undefined);\n    },\n    [column.setFilter]\n  );\n  return <Input onInput={handleChange} value={column.filterValue ?? ''} />;\n};\n","import { Text } from '@ui5/webcomponents-react/dist/Text';\nimport React from 'react';\n\nexport const Cell = ({ cell: { value = '', isGrouped }, row }) => {\n  let cellContent = `${value ?? ''}`;\n  if (isGrouped) {\n    cellContent += ` (${row.subRows.length})`;\n  }\n  return (\n    <Text wrapping={false} tooltip={cellContent}>\n      {cellContent}\n    </Text>\n  );\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { isIE } from '@ui5/webcomponents-react-base/dist/Device';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport React, { CSSProperties } from 'react';\n\nconst tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\nconst isBrowserIe = isIE();\nconst getPadding = (level) => {\n  switch (level) {\n    case 0:\n      return '0px';\n    case 1:\n      return isBrowserIe ? '1rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n    case 2:\n      return isBrowserIe ? '1.5rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n    case 3:\n      return isBrowserIe ? '2rem' : CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n    default:\n      return isBrowserIe\n        ? `calc(2rem + ${level - 3}rem * 0.5)`\n        : `calc(${CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n  }\n};\n\nexport const Expandable = (props) => {\n  const {\n    cell,\n    row,\n    column,\n    columns,\n    webComponentsReactProperties,\n    state: { isRtl }\n  } = props;\n\n  const tableColumns = columns.filter(\n    ({ id }) =>\n      id !== '__ui5wcr__internal_selection_column' &&\n      id !== '__ui5wcr__internal_highlight_column' &&\n      id !== '__ui5wcr__internal_navigation_column'\n  );\n\n  const columnIndex = tableColumns.findIndex((col) => col.id === column.id);\n  const paddingRtl = isRtl ? 'paddingRight' : 'paddingLeft';\n  let paddingLeft;\n  if (row.canExpand) {\n    paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n  } else {\n    paddingLeft = columnIndex === 0 ? `calc(${getPadding(row.depth)} + 2rem)` : 0;\n  }\n  const style: CSSProperties = {\n    [paddingRtl]: paddingLeft\n  };\n  const rowProps = row.getToggleRowExpandedProps();\n\n  const subComponentExpandable =\n    typeof webComponentsReactProperties?.renderRowSubComponent === 'function' &&\n    !!webComponentsReactProperties?.renderRowSubComponent(row) &&\n    !webComponentsReactProperties.alwaysShowSubComponent;\n\n  return (\n    <>\n      {columnIndex === 0 && (row.canExpand || subComponentExpandable) ? (\n        <span onClick={rowProps.onClick} title={rowProps.title} style={{ ...rowProps.style, ...style }}>\n          <Icon\n            interactive\n            name={`${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`}\n            style={tableGroupExpandCollapseIcon}\n          />\n        </span>\n      ) : (\n        <span style={style} />\n      )}\n      {cell.render('Cell')}\n    </>\n  );\n};\n","import { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { TextAlign } from '@ui5/webcomponents-react/dist/TextAlign';\nimport React, { CSSProperties } from 'react';\n\nconst tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nexport const Grouped = (props) => {\n  const { cell, row } = props;\n\n  const style: CSSProperties = {};\n  if (cell.column.hAlign && (cell.column.hAlign !== TextAlign.Left || cell.column.hAlign !== TextAlign.Begin)) {\n    style.marginRight = 'auto';\n  }\n  return (\n    <>\n      <span {...row.getToggleRowExpandedProps({ style })}>\n        <Icon\n          name={`${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`}\n          style={tableGroupExpandCollapseIcon}\n        />\n      </span>\n      {cell.render('Cell')}\n    </>\n  );\n};\n","import { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { makeRenderer } from 'react-table';\n\nconst PopInStyles = {\n  container: {\n    width: '100%'\n  },\n  defaultCell: {\n    fontFamily: `${ThemingParameters.sapFontBoldFamily}`,\n    '& *': {\n      fontFamily: `${ThemingParameters.sapFontBoldFamily}`\n    }\n  },\n  header: {\n    height: '16px'\n  }\n};\n\nconst useStyles = createUseStyles(PopInStyles, { name: 'PopIn' });\n\nexport const PopIn = (instance) => {\n  const { state, contentToRender, cell, row, internalRowHeight } = instance;\n\n  const classes = useStyles();\n  return (\n    <FlexBox direction={FlexBoxDirection.Column} className={classes.container}>\n      <FlexBox\n        alignItems={\n          contentToRender !== 'Grouped' && contentToRender !== 'Expandable'\n            ? FlexBoxAlignItems.Start\n            : FlexBoxAlignItems.Center\n        }\n        wrap={FlexBoxWrap.NoWrap}\n        className={classes.defaultCell}\n        style={{\n          height: internalRowHeight\n        }}\n      >\n        {cell.render(contentToRender)}\n      </FlexBox>\n      {contentToRender !== 'Grouped' &&\n        state.popInColumns?.map((item) => {\n          const popInInstanceProps = row.allCells.find((cell) => cell.column.id === item.id);\n          const renderHeader = () => {\n            if (item.column.PopInHeader) {\n              return typeof item.column.PopInHeader === 'function'\n                ? item.column.PopInHeader({ ...instance, ...popInInstanceProps })\n                : item.column.PopInHeader;\n            }\n            return typeof item.column.Header === 'function'\n              ? makeRenderer({ ...instance, ...popInInstanceProps }, item.column)(item.column.Header)\n              : item.column.Header;\n          };\n          const renderCell = () => {\n            if (item.column?.Cell) {\n              const cell = item.column.Cell;\n              if (typeof cell === 'string') {\n                return (\n                  <Text wrapping={false} tooltip={cell}>\n                    {cell}\n                  </Text>\n                );\n              }\n              return makeRenderer({ ...instance, ...popInInstanceProps, isPopIn: true }, item.column)(item.column.Cell);\n            }\n            return popInInstanceProps?.value ? (\n              <Text wrapping={false} tooltip={popInInstanceProps.value}>\n                {popInInstanceProps.value}\n              </Text>\n            ) : null;\n          };\n          return (\n            <FlexBox direction={FlexBoxDirection.Column} key={item.id}>\n              {item.column?.Header && <div className={classes.header}>{renderHeader()}:</div>}\n              <div style={{ height: internalRowHeight }}>{popInInstanceProps && renderCell()}</div>\n            </FlexBox>\n          );\n        })}\n    </FlexBox>\n  );\n};\n","export const RepeatedValue = () => null;\n","import { VerticalAlign } from '@ui5/webcomponents-react/dist/VerticalAlign';\nimport { DefaultFilterComponent } from '../FilterComponent';\nimport { Cell } from './Cell';\nimport { Expandable } from './Expandable';\nimport { Grouped } from './Grouped';\nimport { PopIn } from './PopIn';\nimport { RepeatedValue } from './RepeatedValue';\n\nexport const DEFAULT_COLUMN_WIDTH = 60;\n\nconst defaultFilterMethod = (filter, row) => {\n  return new RegExp(filter.value, 'gi').test(String(row[filter.id]));\n};\n\nexport const DefaultColumn = {\n  Filter: DefaultFilterComponent,\n  minWidth: DEFAULT_COLUMN_WIDTH,\n  vAlign: VerticalAlign.Middle,\n  defaultFilter: defaultFilterMethod,\n  Grouped: Grouped,\n  Cell: Cell,\n  Expandable: Expandable,\n  RepeatedValue: RepeatedValue,\n  PopIn: PopIn\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { Loader } from '@ui5/webcomponents-react/dist/Loader';\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst styles = {\n  loader: {\n    position: 'absolute',\n    top: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  }\n};\nconst useStyles = createUseStyles(styles, { name: 'LoadingComponent' });\n\nconst DefaultLoadingComponent = ({ style }) => {\n  const classes = useStyles();\n  return <Loader delay={500} style={style} className={classes.loader} />;\n};\n\nDefaultLoadingComponent.displayName = 'DefaultLoadingComponent';\n\nexport { DefaultLoadingComponent };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React, { CSSProperties, FC, useMemo } from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst getArrayOfLength = (len) => Array.from(Array(len).keys());\n\ntype RowProps = { columns: any[]; y: number; row: number };\nconst TableRow: FC<RowProps> = ({ columns, y, row }: RowProps) => {\n  let columnOffset = 0;\n  return (\n    <>\n      {columns.map((column, i) => {\n        const el = (\n          <rect\n            key={`column-${i}-row-${row}`}\n            x={columnOffset + 2}\n            y={y}\n            rx=\"2\"\n            ry=\"8\"\n            width={column.totalWidth - 4}\n            height=\"16\"\n          />\n        );\n        columnOffset += column.totalWidth;\n        return el;\n      })}\n    </>\n  );\n};\n\ntype Props = {\n  columns: any[];\n  rows: number;\n  style: CSSProperties;\n  rowHeight: number;\n  tableWidth: number;\n  isRtl: boolean;\n};\nexport const TablePlaceholder: FC<Props> = (props: Props) => {\n  const { columns, rows, style, rowHeight, tableWidth, isRtl } = props;\n\n  const height = rows * rowHeight;\n\n  const innerStyles = useMemo(() => {\n    return {\n      backgroundColor: ThemingParameters.sapList_Background,\n      ...style\n    };\n  }, [style, ThemingParameters.sapList_Background]);\n\n  return (\n    <ContentLoader\n      style={innerStyles}\n      height={height}\n      width={tableWidth}\n      rtl={isRtl}\n      speed={2}\n      backgroundColor={ThemingParameters.sapContent_ImagePlaceholderBackground}\n      foregroundColor={ThemingParameters.sapContent_ImagePlaceholderForegroundColor}\n      backgroundOpacity={ThemingParameters.sapContent_DisabledOpacity as any}\n    >\n      {getArrayOfLength(rows).map((_, index) => (\n        <TableRow key={index} columns={columns} y={rowHeight * index + rowHeight / 2} row={index} />\n      ))}\n    </ContentLoader>\n  );\n};\n\nTablePlaceholder.displayName = 'TablePlaceholder';\n\nTablePlaceholder.defaultProps = {\n  rows: 5\n};\n","import React from 'react';\n\nexport const DefaultNoDataComponent = ({ noDataText, className, style }) => {\n  return (\n    <div className={className} style={style}>\n      {noDataText}\n    </div>\n  );\n};\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useCallback, useState } from 'react';\n\nconst getColumnId = (column) => {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\n\nexport const useDragAndDrop = (props, isRtl, setColumnOrder, columnOrder, resizeInfo, columns: any[]) => {\n  const { onColumnsReordered } = props;\n\n  const [dragOver, setDragOver] = useState('');\n\n  const handleDragStart = useCallback(\n    (e) => {\n      if (resizeInfo.isResizingColumn) {\n        e.preventDefault();\n        return;\n      }\n      e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n    },\n    [resizeInfo.isResizingColumn]\n  );\n\n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  const handleDragEnter = useCallback((e) => {\n    setDragOver(e.currentTarget.dataset.columnId);\n  }, []);\n\n  const handleOnDrop = useCallback(\n    (e) => {\n      setDragOver('');\n\n      const droppedColId = e.currentTarget.dataset.columnId;\n      const draggedColId = e.dataTransfer.getData('text');\n      if (droppedColId === draggedColId) return;\n\n      const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map((col) => getColumnId(col));\n      const droppedColIdx = internalColumnOrder.findIndex((col) => col === droppedColId);\n      const draggedColIdx = internalColumnOrder.findIndex((col) => col === draggedColId);\n\n      const tempCols = [...internalColumnOrder];\n      const targetIndex = droppedColIdx > draggedColIdx ? (isRtl ? droppedColIdx : droppedColIdx - 1) : droppedColIdx;\n\n      tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n      setColumnOrder(tempCols);\n\n      const columnsNewOrder = tempCols.map((tempColId) => columns.find((col) => getColumnId(col) === tempColId));\n      onColumnsReordered(\n        enrichEventWithDetails(e, {\n          columnsNewOrder,\n          column: columns[draggedColIdx]\n        })\n      );\n    },\n    [columnOrder, onColumnsReordered, columns]\n  );\n\n  const handleOnDragEnd = useCallback(() => {\n    setDragOver('');\n  }, [dragOver]);\n\n  return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};\n","import { TableScaleWidthMode } from '@ui5/webcomponents-react/dist/TableScaleWidthMode';\nimport { DEFAULT_COLUMN_WIDTH } from '../defaults/Column';\n\nconst ROW_SAMPLE_SIZE = 20;\nconst DEFAULT_HEADER_NUM_CHAR = 10;\nconst MAX_WIDTH = 700;\n\n// a function, which approximates header px sizes given a character length\nconst approximateHeaderPxFromCharLength = (charLength) =>\n  charLength < 15 ? Math.sqrt(charLength * 1500) : 8 * charLength;\nconst approximateContentPxFromCharLength = (charLength) => 8 * charLength;\n\nconst columnsDeps = (deps, { instance: { state, webComponentsReactProperties, visibleColumns } }) => [\n  ...deps,\n  state.tableClientWidth,\n  state.hiddenColumns.length,\n  visibleColumns?.length,\n  webComponentsReactProperties.scaleWidthMode,\n  webComponentsReactProperties.loading\n];\n\nconst columns = (columns, { instance }) => {\n  if (!instance.state || !instance.rows) {\n    return columns;\n  }\n  const { rows, state } = instance;\n\n  const { hiddenColumns, tableClientWidth: totalWidth } = state;\n  const { scaleWidthMode, loading } = instance.webComponentsReactProperties;\n\n  if (columns.length === 0 || !totalWidth) return columns;\n\n  //map columns to visibleColumns\n  const visibleColumns = instance.visibleColumns\n    .map((visCol) => {\n      const column = columns.find((col) => {\n        return (\n          col.id === visCol.id || (col.accessor !== undefined && visCol.id !== undefined && col.accessor === visCol.id)\n        );\n      });\n      if (column) {\n        return column;\n      }\n      return column ?? false;\n    })\n    .filter(Boolean);\n\n  const calculateDefaultTableWidth = () => {\n    const columnsWithWidthProperties = visibleColumns\n      .filter((column) => column.width ?? column.minWidth ?? column.maxWidth ?? false)\n      .map((column) => ({\n        accessor: column.id ?? column.accessor,\n        minWidth: column.minWidth,\n        width: column.width,\n        maxWidth: column.maxWidth\n      }));\n    let availableWidth = totalWidth;\n    let defaultColumnsCount = visibleColumns.length;\n\n    const columnsWithFixedWidth = columnsWithWidthProperties\n      .map((column) => {\n        const { width, minWidth, maxWidth, accessor } = column;\n        if (width) {\n          // necessary because of default minWidth\n          const acceptedWidth =\n            accessor !== '__ui5wcr__internal_highlight_column' &&\n            accessor !== '__ui5wcr__internal_selection_column' &&\n            accessor !== '__ui5wcr__internal_navigation_column' &&\n            width < 60\n              ? 60\n              : width;\n\n          availableWidth -= acceptedWidth;\n          defaultColumnsCount--;\n          return acceptedWidth;\n        }\n        const columnsWithMaxWidth = columnsWithWidthProperties.filter((item) => item.maxWidth);\n        const aggregatedColumnsMaxWidth = columnsWithMaxWidth.reduce((acc, cur) => acc + cur.maxWidth, 0);\n        const aggregatedColumnsMinWidth = columnsWithWidthProperties\n          .filter((item) => item.minWidth && !item.maxWidth)\n          .reduce((acc, cur) => acc + cur.minWidth, 0);\n\n        if (minWidth > availableWidth / defaultColumnsCount) {\n          // don't apply minWidth if enough space is available because of maxWidth properties\n          if (\n            availableWidth - aggregatedColumnsMaxWidth >\n            aggregatedColumnsMinWidth + (visibleColumns.length - columnsWithWidthProperties.length) * 60\n          ) {\n            // apply minWidth only if it's larger than the calculated available width\n            if (minWidth > (availableWidth - aggregatedColumnsMaxWidth) / columnsWithMaxWidth.length) {\n              availableWidth -= minWidth;\n              defaultColumnsCount--;\n              return minWidth;\n            }\n            return false;\n          }\n          availableWidth -= minWidth;\n          defaultColumnsCount--;\n          return minWidth;\n        }\n        if (maxWidth < availableWidth / defaultColumnsCount) {\n          availableWidth -= maxWidth;\n          defaultColumnsCount--;\n          return maxWidth;\n        }\n        return false;\n      })\n      .filter(Boolean);\n\n    const fixedWidth = columnsWithFixedWidth.reduce((acc, val) => acc + val, 0);\n    // check if columns are visible and table has width\n    if (visibleColumns.length > 0 && totalWidth > 0) {\n      // set fixedWidth as defaultWidth if all visible columns have fixed value\n      if (visibleColumns.length === columnsWithFixedWidth.length) {\n        return fixedWidth / visibleColumns.length;\n      }\n      // spread default columns\n      if (totalWidth >= fixedWidth + defaultColumnsCount * DEFAULT_COLUMN_WIDTH) {\n        return (totalWidth - fixedWidth) / defaultColumnsCount;\n      }\n    }\n    return DEFAULT_COLUMN_WIDTH;\n  };\n\n  const hasData = instance.data.length > 0;\n\n  if (scaleWidthMode === TableScaleWidthMode.Default || (!hasData && loading)) {\n    const defaultWidth = calculateDefaultTableWidth();\n    return columns.map((column) => ({ ...column, width: column.width ?? defaultWidth }));\n  }\n\n  const rowSample = rows.slice(0, ROW_SAMPLE_SIZE);\n\n  const columnMeta = visibleColumns.reduce((acc, column) => {\n    if (\n      column.id === '__ui5wcr__internal_selection_column' ||\n      column.id === '__ui5wcr__internal_highlight_column' ||\n      column.id === '__ui5wcr__internal_navigation_column'\n    ) {\n      acc[column.id ?? column.accessor] = {\n        minHeaderWidth: column.width,\n        fullWidth: column.width,\n        contentCharAvg: 0\n      };\n      return acc;\n    }\n\n    const headerLength = typeof column.Header === 'string' ? column.Header.length : DEFAULT_HEADER_NUM_CHAR;\n\n    // max character length\n    const contentMaxCharLength = Math.max(\n      headerLength,\n      ...rowSample.map((row) => {\n        const dataPoint = row.values?.[column.id ?? column.accessor];\n        if (dataPoint) {\n          if (typeof dataPoint === 'string') return dataPoint.length;\n          if (typeof dataPoint === 'number') return (dataPoint + '').length;\n        }\n        return 0;\n      })\n    );\n\n    // avg character length\n    const contentCharAvg =\n      rowSample.reduce((acc, item) => {\n        const dataPoint = item.values?.[column.id ?? column.accessor];\n        let val = 0;\n        if (dataPoint) {\n          if (typeof dataPoint === 'string') val = dataPoint.length;\n          if (typeof dataPoint === 'number') val = (dataPoint + '').length;\n        }\n        return acc + val;\n      }, 0) / rowSample.length;\n\n    const minHeaderWidth = approximateHeaderPxFromCharLength(headerLength);\n\n    acc[column.id ?? column.accessor] = {\n      minHeaderWidth,\n      fullWidth: Math.max(minHeaderWidth, approximateContentPxFromCharLength(contentMaxCharLength)),\n      contentCharAvg\n    };\n    return acc;\n  }, {});\n\n  const totalCharNum = Object.values(columnMeta).reduce(\n    (acc: number, item: any) => acc + item.contentCharAvg,\n    0\n  ) as number;\n\n  let reservedWidth = visibleColumns.reduce((acc, column) => {\n    const { minHeaderWidth, fullWidth } = columnMeta[column.id ?? column.accessor];\n    return (\n      acc +\n        Math.max(\n          column.minWidth || 0,\n          column.width || 0,\n          minHeaderWidth || 0,\n          scaleWidthMode === TableScaleWidthMode.Grow ? fullWidth : 0\n        ) || 0\n    );\n  }, 0);\n\n  let availableWidth = totalWidth - reservedWidth;\n\n  if (scaleWidthMode === TableScaleWidthMode.Smart || availableWidth > 0) {\n    if (scaleWidthMode === TableScaleWidthMode.Grow) {\n      reservedWidth = visibleColumns.reduce((acc, column) => {\n        const { minHeaderWidth } = columnMeta[column.id ?? column.accessor];\n        return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0) || 0;\n      }, 0);\n      availableWidth = totalWidth - reservedWidth;\n    }\n\n    return columns.map((column) => {\n      const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.id ?? column.accessor);\n      const meta = columnMeta[column.id ?? column.accessor];\n      if (isColumnVisible && meta) {\n        const { minHeaderWidth, contentCharAvg } = meta;\n        const additionalSpaceFactor = totalCharNum > 0 ? contentCharAvg / totalCharNum : 1 / visibleColumns.length;\n\n        const targetWidth = additionalSpaceFactor * availableWidth + minHeaderWidth;\n\n        return {\n          ...column,\n          width: column.width ?? targetWidth,\n          minWidth: column.minWidth ?? minHeaderWidth\n        };\n      }\n\n      return column;\n    });\n  }\n\n  // TableScaleWidthMode Grow\n  return columns.map((column) => {\n    const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.id ?? column.accessor);\n    const meta = columnMeta[column.id ?? column.accessor];\n    if (isColumnVisible && meta) {\n      const { fullWidth } = meta;\n      return {\n        ...column,\n        width: column.width ?? fullWidth,\n        maxWidth: MAX_WIDTH\n      };\n    }\n    return column;\n  });\n};\n\nexport const useDynamicColumnWidths = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n};\n","import { useCallback, useRef } from 'react';\n\nconst getFirstVisibleCell = (target, currentlyFocusedCell, noData) => {\n  const firstVisibleCell = noData\n    ? target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"0\"]`)\n    : target.querySelector(`div[data-visible-column-index=\"0\"][data-visible-row-index=\"1\"]`);\n  if (firstVisibleCell) {\n    firstVisibleCell.tabIndex = 0;\n    firstVisibleCell.focus();\n    currentlyFocusedCell.current = firstVisibleCell;\n  }\n};\n\nconst findParentCell = (target) => {\n  if (target === undefined || target === null) return;\n  if (\n    (target.dataset.rowIndex !== undefined && target.dataset.columnIndex !== undefined) ||\n    (target.dataset.rowIndexSub !== undefined && target.dataset.columnIndexSub !== undefined)\n  ) {\n    return target;\n  } else {\n    return findParentCell(target.parentElement);\n  }\n};\n\nconst setFocus = (currentlyFocusedCell, nextElement) => {\n  currentlyFocusedCell.current.tabIndex = -1;\n  if (nextElement) {\n    nextElement.tabIndex = 0;\n    nextElement.focus();\n    currentlyFocusedCell.current = nextElement;\n  }\n};\n\nconst getTableProps = (tableProps, { instance: { webComponentsReactProperties, data } }) => {\n  const currentlyFocusedCell = useRef<HTMLDivElement>(null);\n  const tableRef = webComponentsReactProperties.tableRef;\n  const noData = data.length === 0;\n\n  const onTableBlur = useCallback(\n    (e) => {\n      if (e.target.tagName === 'UI5-LI' || e.target.tagName === 'UI5-LI-CUSTOM') {\n        currentlyFocusedCell.current = null;\n      }\n    },\n    [currentlyFocusedCell.current]\n  );\n\n  const onTableFocus = useCallback(\n    (e) => {\n      const isFirstCellAvailable = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"1\"]');\n      if (e.target.dataset.componentName === 'AnalyticalTableContainer') {\n        e.target.tabIndex = -1;\n        if (currentlyFocusedCell.current) {\n          const { dataset } = currentlyFocusedCell.current;\n          const rowIndex = parseInt(dataset.rowIndex ?? dataset.rowIndexSub, 10);\n          const columnIndex = parseInt(dataset.columnIndex ?? dataset.columnIndexSub, 10);\n          if (\n            e.target.querySelector(`div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex}\"]`) ||\n            e.target.querySelector(`div[data-column-index-sub=\"${columnIndex}\"][data-row-index-sub=\"${rowIndex}\"]`)\n          ) {\n            currentlyFocusedCell.current.tabIndex = 0;\n            currentlyFocusedCell.current.focus();\n          } else {\n            getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n          }\n        } else if (isFirstCellAvailable) {\n          const firstCell = e.target.querySelector('div[data-column-index=\"0\"][data-row-index=\"0\"]');\n          firstCell.tabIndex = 0;\n          firstCell.focus();\n          currentlyFocusedCell.current = firstCell;\n        } else {\n          getFirstVisibleCell(e.target, currentlyFocusedCell, noData);\n        }\n      } else {\n        const tableCell = findParentCell(e.target);\n        if (tableCell) {\n          currentlyFocusedCell.current = tableCell;\n        } else {\n          getFirstVisibleCell(tableRef.current, currentlyFocusedCell, noData);\n        }\n      }\n    },\n    [currentlyFocusedCell.current, tableRef.current, noData]\n  );\n\n  const onKeyboardNavigation = useCallback(\n    (e) => {\n      if (currentlyFocusedCell.current) {\n        const columnIndex = parseInt(currentlyFocusedCell.current.dataset.columnIndex, 10);\n        const rowIndex = parseInt(currentlyFocusedCell.current.dataset.rowIndex, 10);\n        switch (e.key) {\n          case 'End': {\n            e.preventDefault();\n            const visibleColumns = tableRef.current.querySelector(\n              `div[data-component-name=\"AnalyticalTableHeaderRow\"]`\n            ).children;\n            const lastVisibleColumn = Array.from(visibleColumns)\n              .slice(0)\n              .reduceRight((prev, cur: HTMLDivElement, index, arr) => {\n                const columnIndex = parseInt((cur.children?.[0] as HTMLDivElement)?.dataset.columnIndex, 10);\n                if (!isNaN(columnIndex)) {\n                  arr.length = 0;\n                  return columnIndex;\n                }\n                return cur;\n              }) as number;\n\n            const newElement = tableRef.current.querySelector(\n              `div[data-visible-column-index=\"${lastVisibleColumn + 1}\"][data-row-index=\"${rowIndex}\"]`\n            );\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n          case 'Home': {\n            e.preventDefault();\n            const newElement = tableRef.current.querySelector(\n              `div[data-visible-column-index=\"0\"][data-row-index=\"${rowIndex}\"]`\n            );\n            setFocus(currentlyFocusedCell, newElement);\n            break;\n          }\n          case 'PageDown': {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex === '0') {\n              const newElement = tableRef.current.querySelector(\n                `div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`\n              );\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const lastVisibleRow = tableRef.current.querySelector(`div[data-component-name=\"AnalyticalTableBody\"]`)\n                ?.children?.[0].children.length;\n              const newElement = tableRef.current.querySelector(\n                `div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"${lastVisibleRow}\"]`\n              );\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n          case 'PageUp': {\n            e.preventDefault();\n            if (currentlyFocusedCell.current.dataset.rowIndex <= '1') {\n              const newElement = tableRef.current.querySelector(\n                `div[data-column-index=\"${columnIndex}\"][data-row-index=\"0\"]`\n              );\n              setFocus(currentlyFocusedCell, newElement);\n            } else {\n              const newElement = tableRef.current.querySelector(\n                `div[data-column-index=\"${columnIndex}\"][data-visible-row-index=\"1\"]`\n              );\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n          case 'ArrowRight': {\n            e.preventDefault();\n            const newElement = tableRef.current.querySelector(\n              `div[data-column-index=\"${columnIndex + 1}\"][data-row-index=\"${rowIndex}\"]`\n            );\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n          case 'ArrowLeft': {\n            e.preventDefault();\n            const newElement = tableRef.current.querySelector(\n              `div[data-column-index=\"${columnIndex - 1}\"][data-row-index=\"${rowIndex}\"]`\n            );\n            if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n            }\n            break;\n          }\n          case 'ArrowDown': {\n            e.preventDefault();\n            const parent = currentlyFocusedCell.current.parentElement as HTMLDivElement;\n            const firstChildOfParent = parent?.children?.[0] as HTMLDivElement;\n            const hasSubcomponent = firstChildOfParent?.dataset?.subcomponent;\n            const newElement = tableRef.current.querySelector(\n              `div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex + 1}\"]`\n            );\n            if (hasSubcomponent && !currentlyFocusedCell.current?.dataset?.subcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildOfParent.tabIndex = 0;\n              firstChildOfParent.dataset.rowIndexSub = `${rowIndex}`;\n              firstChildOfParent.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildOfParent.focus();\n              currentlyFocusedCell.current = firstChildOfParent;\n            } else if (newElement) {\n              setFocus(currentlyFocusedCell, newElement);\n            } else if (e.target.dataset.subcomponent) {\n              const nextElementToSubComp = tableRef.current.querySelector(\n                `div[data-column-index=\"${parseInt(e.target.dataset.columnIndexSub)}\"][data-row-index=\"${\n                  parseInt(e.target.dataset.rowIndexSub) + 1\n                }\"]`\n              );\n              setFocus(currentlyFocusedCell, nextElementToSubComp);\n            }\n            break;\n          }\n          case 'ArrowUp': {\n            e.preventDefault();\n            const previousRowCell = tableRef.current.querySelector(\n              `div[data-column-index=\"${columnIndex}\"][data-row-index=\"${rowIndex - 1}\"]`\n            );\n            const firstChildPrevRow = previousRowCell?.parentElement.children[0] as HTMLDivElement;\n            const hasSubcomponent = firstChildPrevRow?.dataset?.subcomponent;\n\n            if (currentlyFocusedCell.current?.dataset?.subcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              const newElement = tableRef.current.querySelector(\n                `div[data-column-index=\"${parseInt(e.target.dataset.columnIndexSub)}\"][data-row-index=\"${parseInt(\n                  e.target.dataset.rowIndexSub\n                )}\"]`\n              );\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            } else if (hasSubcomponent) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              firstChildPrevRow.dataset.rowIndexSub = `${rowIndex - 1}`;\n              firstChildPrevRow.dataset.columnIndexSub = `${columnIndex}`;\n              firstChildPrevRow.tabIndex = 0;\n              firstChildPrevRow.focus();\n              currentlyFocusedCell.current = firstChildPrevRow;\n            } else if (previousRowCell) {\n              setFocus(currentlyFocusedCell, previousRowCell);\n            }\n            break;\n          }\n        }\n      }\n    },\n    [currentlyFocusedCell.current, tableRef.current]\n  );\n  return [tableProps, { onFocus: onTableFocus, onKeyDown: onKeyboardNavigation, onBlur: onTableBlur }];\n};\n\nexport const useKeyboardNavigation = (hooks) => {\n  hooks.getTableProps.push(getTableProps);\n};\n","const popInVisibleColumnsDeps = (deps, { instance: { state } }) => [...deps, state.tableClientWidth];\n\nconst popInVisibleColumns = (cols, { instance }) => {\n  const { state, dispatch } = instance;\n\n  const tableClientWidth = state.isScrollable\n    ? state?.tableClientWidth + 14 /*scrollbar width*/\n    : state?.tableClientWidth;\n\n  const popInColumns = cols\n    .filter((item) => item.responsivePopIn && tableClientWidth < item.responsiveMinWidth)\n    .map((item) => ({ id: item.id ?? item.accessor, column: item }));\n\n  dispatch({ type: 'SET_POPIN_COLUMNS', payload: popInColumns });\n\n  return cols.filter(\n    (col) =>\n      !popInColumns.some((item) => item.id === (col.id ?? col.accessor)) &&\n      (col.hasOwnProperty('responsiveMinWidth')\n        ? !tableClientWidth || tableClientWidth >= col.responsiveMinWidth\n        : true)\n  );\n};\n\nexport const usePopIn = (hooks) => {\n  hooks.visibleColumns.push(popInVisibleColumns);\n  hooks.visibleColumnsDeps.push(popInVisibleColumnsDeps);\n};\n","import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport React from 'react';\n\nconst baseStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nconst StyleClassMap = new Map();\nStyleClassMap.set(ValueState.None, undefined);\nStyleClassMap.set(ValueState.Success, 'valueStateSuccess');\nStyleClassMap.set(ValueState.Warning, 'valueStateWarning');\nStyleClassMap.set(ValueState.Error, 'valueStateError');\nStyleClassMap.set(ValueState.Information, 'valueStateInformation');\n\n/*\n * COMPONENTS\n */\nconst Header = () => <div style={{ width: '6px' }} />;\n\nconst Cell = (instance) => {\n  const { cell, webComponentsReactProperties } = instance;\n  const styleClass = StyleClassMap.get(cell.value)\n    ? webComponentsReactProperties.classes[StyleClassMap.get(cell.value)]\n    : undefined;\n  return <div style={baseStyles} className={styleClass} />;\n};\n\n/*\n * TABLE HOOKS\n */\nconst columnsDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n  return [...deps, webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField];\n};\nconst visibleColumnsDeps = (deps, { instance }) => [...deps, instance.webComponentsReactProperties.withRowHighlight];\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n  if (!webComponentsReactProperties.withRowHighlight) {\n    return currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_highlight_column');\n  }\n\n  const highlightColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_highlight_column');\n  return [highlightColumn, ...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_highlight_column')];\n};\n\nconst columns = (currentColumns, { instance }) => {\n  const { withRowHighlight, highlightField } = instance.webComponentsReactProperties;\n\n  if (!withRowHighlight) {\n    return currentColumns;\n  }\n  return [\n    {\n      id: '__ui5wcr__internal_highlight_column',\n      accessor: highlightField,\n      disableFilters: true,\n      disableSortBy: true,\n      disableGroupBy: true,\n      disableResizing: true,\n      disableDragAndDrop: true,\n      width: 6,\n      minWidth: 6,\n      maxWidth: 6,\n      Header,\n      Cell\n    },\n    ...currentColumns\n  ];\n};\n\nexport const useRowHighlight = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\n\nuseRowHighlight.pluginName = 'useRowHighlight';\n","import React from 'react';\n\nconst baseStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n/*\n * COMPONENTS\n */\nconst Header = () => <div style={{ width: '6px' }} />;\n\nconst Cell = (instance) => {\n  const { isNavigatedCell, webComponentsReactProperties } = instance;\n  if (isNavigatedCell) {\n    return <div style={baseStyles} className={webComponentsReactProperties.classes.valueStateInformation} />;\n  }\n  return <div style={baseStyles} />;\n};\n\n/*\n * TABLE HOOKS\n */\nconst columnsDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n  return [...deps, webComponentsReactProperties.withNavigationHighlight];\n};\nconst visibleColumnsDeps = (deps, { instance }) => [\n  ...deps,\n  instance.webComponentsReactProperties.withNavigationHighlight\n];\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n  if (!webComponentsReactProperties.withNavigationHighlight) {\n    return currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_navigation_column');\n  }\n\n  const highlightColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_navigation_column');\n  return [...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_navigation_column'), highlightColumn];\n};\n\nconst columns = (currentColumns, { instance }) => {\n  const { withNavigationHighlight } = instance.webComponentsReactProperties;\n\n  if (!withNavigationHighlight) {\n    return currentColumns;\n  }\n  return [\n    ...currentColumns,\n    {\n      id: '__ui5wcr__internal_navigation_column',\n      disableFilters: true,\n      disableSortBy: true,\n      disableGroupBy: true,\n      disableResizing: true,\n      disableDragAndDrop: true,\n      width: 6,\n      minWidth: 6,\n      maxWidth: 6,\n      Header,\n      Cell\n    }\n  ];\n};\n\nexport const useRowNavigationIndicators = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\n","import { CssSizeVariablesNames } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { CheckBox } from '@ui5/webcomponents-react/dist/CheckBox';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/dist/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/dist/TableSelectionMode';\nimport React from 'react';\n\nconst divStyle = { width: '100%', height: '100%', cursor: 'pointer' };\nconst customCheckBoxStyling = {\n  cursor: 'pointer',\n  verticalAlign: 'middle'\n};\n\n/*\n * COMPONENTS\n */\n\nconst Header = (instance) => {\n  const {\n    getToggleAllRowsSelectedProps,\n    webComponentsReactProperties: { selectionMode }\n  } = instance;\n\n  if (selectionMode === TableSelectionMode.SingleSelect) {\n    return null;\n  }\n  const checkBoxProps = getToggleAllRowsSelectedProps();\n  return (\n    <CheckBox\n      {...checkBoxProps}\n      style={customCheckBoxStyling}\n      tabIndex={-1}\n      onChange={undefined}\n      checked={checkBoxProps.indeterminate ? true : checkBoxProps.checked}\n    />\n  );\n};\n\nconst Cell = ({ row, webComponentsReactProperties: { selectionBehavior, selectionMode } }) => {\n  const handleCellClick = (e) => {\n    if (TableSelectionBehavior.RowSelector === selectionBehavior) {\n      row.getRowProps().onClick(e, true);\n    }\n  };\n\n  if (row.isGrouped && selectionMode === TableSelectionMode.SingleSelect) {\n    return null;\n  }\n  if (selectionMode === TableSelectionMode.SingleSelect) {\n    return <div style={divStyle} onClick={handleCellClick} data-name=\"internal_selection_column\" />;\n  }\n\n  return (\n    <CheckBox\n      {...row.getToggleRowSelectedProps()}\n      tabIndex={-1}\n      onChange={handleCellClick}\n      style={customCheckBoxStyling}\n      data-name=\"internal_selection_column\"\n    />\n  );\n};\n\n/*\n * TABLE HOOKS\n */\n\nconst headerProps = (\n  props,\n  {\n    instance: {\n      flatRows,\n      webComponentsReactProperties: { onRowSelected, selectionMode },\n      toggleAllRowsSelected,\n      isAllRowsSelected\n    }\n  }\n) => {\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === TableSelectionMode.MultiSelect) {\n    const onClick = (e) => {\n      toggleAllRowsSelected();\n      if (typeof onRowSelected === 'function') {\n        onRowSelected(\n          // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n          enrichEventWithDetails(e, {\n            allRowsSelected: !isAllRowsSelected,\n            selectedFlatRows: !isAllRowsSelected ? flatRows : []\n          })\n        );\n      }\n    };\n\n    const onKeyDown = (e) => {\n      if (e.code === 'Space' || e.code === 'Enter') {\n        e.preventDefault();\n        onClick(e);\n      }\n    };\n    return [props, { onClick, onKeyDown }];\n  }\n  return props;\n};\n\nconst columnDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\n\nconst visibleColumnsDeps = (deps, { instance }) => [\n  ...deps,\n  instance.webComponentsReactProperties.selectionMode,\n  instance.webComponentsReactProperties.selectionBehavior\n];\n\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n  if (\n    webComponentsReactProperties.selectionMode === TableSelectionMode.None ||\n    webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.RowOnly\n  ) {\n    return currentVisibleColumns;\n  }\n\n  const selectionColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_selection_column');\n  return [selectionColumn, ...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_selection_column')];\n};\nconst columns = (currentColumns, { instance }) => {\n  const { webComponentsReactProperties } = instance;\n  const { selectionMode, selectionBehavior, tableRef } = webComponentsReactProperties;\n\n  if (selectionMode === TableSelectionMode.None || selectionBehavior === TableSelectionBehavior.RowOnly) {\n    return currentColumns;\n  }\n  const tableSelectionColumnWidth =\n    tableRef.current &&\n    parseInt(\n      getComputedStyle(tableRef.current).getPropertyValue(\n        `--${CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth}`\n      ),\n      10\n    );\n  const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n\n  return [\n    {\n      id: '__ui5wcr__internal_selection_column',\n      accessor: '__ui5wcr__internal_selection_column',\n      disableFilters: true,\n      disableSortBy: true,\n      disableGroupBy: true,\n      disableResizing: true,\n      disableDragAndDrop: true,\n      width: selectionColumnWidth,\n      minWidth: selectionColumnWidth,\n      maxWidth: selectionColumnWidth,\n      Header,\n      Cell\n    },\n    ...currentColumns\n  ];\n};\n\nexport const useRowSelectionColumn = (hooks) => {\n  hooks.getHeaderProps.push(headerProps);\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/dist/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/dist/TableSelectionMode';\n\nconst getRowProps = (rowProps, { row, instance }) => {\n  const { webComponentsReactProperties, toggleRowSelected, selectedFlatRows, flatRows } = instance;\n  const handleRowSelect = (e, selectionCellClick = false) => {\n    if (\n      e.target?.dataset?.name !== 'internal_selection_column' &&\n      !(e.markerAllowTableRowSelection === true || e.nativeEvent?.markerAllowTableRowSelection === true) &&\n      webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(e.target.tagName)\n    ) {\n      return;\n    }\n\n    // dont select empty rows\n    const isEmptyRow = row.original?.emptyRow;\n    if (isEmptyRow) {\n      return;\n    }\n\n    // dont select grouped rows\n    if (row.isGrouped) {\n      return;\n    }\n\n    const { selectionBehavior, selectionMode, onRowSelected, onRowClick } = webComponentsReactProperties;\n\n    if (typeof onRowClick === 'function' && e.target?.dataset?.name !== 'internal_selection_column') {\n      onRowClick(enrichEventWithDetails(e, { row }));\n    }\n\n    if (webComponentsReactProperties.selectionMode === TableSelectionMode.None) {\n      return;\n    }\n\n    // dont continue if the row was clicked and selection mode is row selector only\n    if (selectionBehavior === TableSelectionBehavior.RowSelector && !selectionCellClick) {\n      return;\n    }\n\n    if (selectionMode === TableSelectionMode.SingleSelect) {\n      for (const selectedRow of selectedFlatRows) {\n        if (selectedRow.id !== row.id) {\n          toggleRowSelected(selectedRow.id, false);\n        }\n      }\n    }\n    instance.toggleRowSelected(row.id);\n\n    // fire event\n    if (typeof onRowSelected === 'function') {\n      const payload = {\n        row,\n        isSelected: !row.isSelected,\n        selectedFlatRows: !row.isSelected ? [row.id] : [],\n        allRowsSelected: false\n      };\n      if (selectionMode === TableSelectionMode.MultiSelect) {\n        const isRowSelected = selectionCellClick ? row.isSelected : !row.isSelected;\n        if (selectionCellClick) {\n          payload.isSelected = row.isSelected;\n        }\n        payload.selectedFlatRows = isRowSelected\n          ? [...selectedFlatRows, row]\n          : selectedFlatRows.filter((prevRow) => prevRow.id !== row.id);\n\n        if (payload.selectedFlatRows.length === flatRows.length) {\n          payload.allRowsSelected = true;\n        }\n      }\n      onRowSelected(enrichEventWithDetails(e, payload));\n    }\n  };\n\n  return [\n    rowProps,\n    {\n      onKeyDown: (e, selectionCellClick = false) => {\n        if (e.key === 'Enter' || e.code === 'Space') {\n          if (!webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(e.target.tagName)) {\n            e.preventDefault();\n          }\n          handleRowSelect(e, selectionCellClick);\n        }\n      },\n      onClick: handleRowSelect\n    }\n  ];\n};\n\nexport const useSingleRowStateSelection = (hooks) => {\n  hooks.getRowProps.push(getRowProps);\n};\nuseSingleRowStateSelection.pluginName = 'useSingleRowStateSelection';\n","import { TableSelectionBehavior } from '@ui5/webcomponents-react/dist/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/dist/TableSelectionMode';\nimport { TextAlign } from '@ui5/webcomponents-react/dist/TextAlign';\nimport { VerticalAlign } from '@ui5/webcomponents-react/dist/VerticalAlign';\nimport { CSSProperties } from 'react';\n\nconst getHeaderGroupProps = (headerGroupProps, { instance }) => {\n  const { classes } = instance.webComponentsReactProperties;\n  return [\n    headerGroupProps,\n    {\n      className: classes.tableHeaderRow\n    }\n  ];\n};\n\nconst getHeaderProps = (columnProps, { instance, column }) => {\n  const { classes } = instance.webComponentsReactProperties;\n  const style: CSSProperties = {\n    width: column.totalWidth\n  };\n\n  if (\n    column.id === '__ui5wcr__internal_highlight_column' ||\n    column.id === '__ui5wcr__internal_selection_column' ||\n    column.id === '__ui5wcr__internal_navigation_column'\n  ) {\n    style.padding = 0;\n  }\n\n  return [\n    columnProps,\n    {\n      className: classes.th,\n      column,\n      style: style,\n      id: column.id\n    }\n  ];\n};\n\nconst ROW_SELECTION_ATTRIBUTE = 'data-is-selected';\n\nconst getRowProps = (rowProps, { instance, row }) => {\n  const { webComponentsReactProperties } = instance;\n  const { classes, selectionBehavior, selectionMode, alternateRowColor } = webComponentsReactProperties;\n  const isEmptyRow = row.original?.emptyRow;\n  let className = classes.tr;\n  const rowCanBeSelected =\n    [TableSelectionMode.SingleSelect, TableSelectionMode.MultiSelect].includes(selectionMode) && !isEmptyRow;\n\n  if (row.isGrouped) {\n    className += ` ${classes.tableGroupHeader}`;\n  }\n\n  if (alternateRowColor && row.index % 2 !== 0) {\n    className += ` ${classes.alternateRowColor}`;\n  }\n\n  const newRowProps = {\n    className,\n    role: 'row',\n    'aria-rowindex': row.index\n  };\n\n  if (rowCanBeSelected) {\n    if (TableSelectionBehavior.RowSelector !== selectionBehavior) {\n      newRowProps.className += ` ${classes.trActive}`;\n    }\n    if (row.isSelected) {\n      newRowProps[ROW_SELECTION_ATTRIBUTE] = '';\n    }\n  }\n\n  return [rowProps, newRowProps];\n};\n\nconst getCellProps = (cellProps, { cell: { column }, instance }) => {\n  const columnIndex = instance.visibleColumns.findIndex(({ id }) => id === column.id);\n  const { classes } = instance.webComponentsReactProperties;\n  const style: CSSProperties = { width: `${column.totalWidth}px` };\n\n  switch (column.hAlign) {\n    case TextAlign.Begin:\n      style.justifyContent = 'flex-start';\n      style.textAlign = 'start';\n      break;\n    case TextAlign.Center:\n      style.justifyContent = 'center';\n      style.textAlign = 'center';\n      break;\n    case TextAlign.End:\n      style.justifyContent = 'flex-end';\n      style.textAlign = 'end';\n      break;\n    case TextAlign.Left:\n      style.justifyContent = 'left';\n      style.textAlign = 'left';\n      break;\n    case TextAlign.Right:\n      style.justifyContent = 'right';\n      style.textAlign = 'right';\n      break;\n    case TextAlign.Initial:\n      style.justifyContent = 'initial';\n      style.textAlign = 'initial';\n      break;\n  }\n  switch (column.vAlign) {\n    case VerticalAlign.Bottom:\n      style.alignItems = 'flex-end';\n      break;\n    case VerticalAlign.Middle:\n      style.alignItems = 'center';\n      break;\n    case VerticalAlign.Top:\n      style.alignItems = 'flex-start';\n      break;\n  }\n\n  let className = classes.tableCell;\n  if (column.className) {\n    className += ` ${column.className}`;\n  }\n\n  if (\n    column.id === '__ui5wcr__internal_highlight_column' ||\n    column.id === '__ui5wcr__internal_selection_column' ||\n    column.id === '__ui5wcr__internal_navigation_column'\n  ) {\n    style.padding = 0;\n  }\n\n  return [\n    cellProps,\n    {\n      className,\n      style,\n      tabIndex: -1,\n      'aria-colindex': columnIndex + 1 // aria index is 1 based, not 0\n    }\n  ];\n};\n\nexport const useStyling = (hooks) => {\n  hooks.getHeaderGroupProps.push(getHeaderGroupProps);\n  hooks.getHeaderProps.push(getHeaderProps);\n  hooks.getRowProps.push(getRowProps);\n  hooks.getCellProps.push(getCellProps);\n};\nuseStyling.pluginName = 'useStyling';\n","import { useEffect, useRef } from 'react';\n\nexport const useTableScrollHandles = (ref) => {\n  let analyticalTableRef = useRef(null);\n  if (ref) {\n    analyticalTableRef = ref;\n  }\n  const reactWindowRef = useRef<any>({});\n\n  useEffect(() => {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: (offset, align) => {\n          if (typeof reactWindowRef.current?.scrollToOffset === 'function') {\n            reactWindowRef.current.scrollToOffset(offset, { align });\n          }\n        },\n        scrollToItem: (index, align) => {\n          if (typeof reactWindowRef.current?.scrollToIndex === 'function') {\n            reactWindowRef.current.scrollToIndex(index, { align });\n          }\n        },\n        horizontalScrollTo: (offset, align) => {\n          if (typeof reactWindowRef.current?.horizontalScrollToOffset === 'function') {\n            reactWindowRef.current.horizontalScrollToOffset(offset, { align });\n          }\n        },\n        horizontalScrollToItem: (index, align) => {\n          if (typeof reactWindowRef.current?.horizontalScrollToIndex === 'function') {\n            reactWindowRef.current.horizontalScrollToIndex(index, { align });\n          }\n        }\n      });\n    }\n  }, []);\n\n  return [analyticalTableRef, reactWindowRef];\n};\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useCallback } from 'react';\n\nconst getToggleRowExpandedProps = (rowProps, { row, instance }) => {\n  const { onRowExpandChange, isTreeTable, renderRowSubComponent } = instance.webComponentsReactProperties;\n  const onClick = useCallback(\n    (e) => {\n      e.stopPropagation();\n      e.persist();\n      row.toggleRowExpanded();\n      let column = null;\n      if (!isTreeTable && !renderRowSubComponent) {\n        column = row.cells.find((cell) => cell.column.id === row.groupByID).column;\n      }\n\n      onRowExpandChange(enrichEventWithDetails(e, { row, column }));\n    },\n    [row, isTreeTable, onRowExpandChange]\n  );\n  return [\n    rowProps,\n    {\n      onClick\n    }\n  ];\n};\n\nexport const useToggleRowExpand = (hooks) => {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';\n","const getVisibleColumnsWidth = (instance) => {\n  const visibleColumnsWidth = instance.visibleColumns.map((item) => item.totalWidth);\n  Object.assign(instance, { visibleColumnsWidth });\n};\n\nexport const useVisibleColumnsWidth = (hooks) => {\n  hooks.useInstance.push(getVisibleColumnsWidth);\n};\nuseVisibleColumnsWidth.pluginName = 'useVisibleColumnsWidth';\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { GlobalStyleClasses } from '@ui5/webcomponents-react/dist/GlobalStyleClasses';\nimport React, { forwardRef, Ref, RefObject } from 'react';\nimport clsx from 'clsx';\nimport { createUseStyles } from 'react-jss';\n\ninterface VerticalScrollbarProps {\n  internalRowHeight: number;\n  tableRef: RefObject<any>;\n  minRows: number;\n  rows: any[];\n  handleVerticalScrollBarScroll: any;\n  popInRowHeight: number;\n}\n\nconst styles = {\n  headerSection: {\n    boxSizing: 'border-box',\n    borderTop: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground\n  },\n  scrollbar: {\n    overflowY: 'auto',\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    boxSizing: 'border-box'\n  },\n  bottomSection: {\n    flexGrow: 1,\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    boxSizing: 'border-box',\n    borderRight: 'none',\n    borderBottom: 'none'\n  },\n  bottomSectionWithScrollbar: {\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'VerticalScrollbar' });\n\nexport const VerticalScrollbar = forwardRef((props: VerticalScrollbarProps, ref: Ref<HTMLDivElement>) => {\n  const { internalRowHeight, tableRef, minRows, rows, handleVerticalScrollBarScroll, popInRowHeight } = props;\n  const classes = useStyles();\n  const hasHorizontalScrollbar = tableRef?.current?.clientWidth !== tableRef?.current?.scrollWidth;\n\n  const horizontalScrollbarSectionStyles = clsx(\n    classes.bottomSection,\n    hasHorizontalScrollbar && classes.bottomSectionWithScrollbar\n  );\n\n  return (\n    <FlexBox direction={FlexBoxDirection.Column} style={{ position: 'relative' }}>\n      <div\n        style={{\n          height: `${internalRowHeight}px`\n        }}\n        className={classes.headerSection}\n      />\n      <div\n        ref={ref}\n        style={{\n          height: tableRef.current ? `${tableRef.current.clientHeight - internalRowHeight}px` : '0'\n        }}\n        onScroll={handleVerticalScrollBarScroll}\n        className={`${GlobalStyleClasses.sapScrollBar} ${classes.scrollbar}`}\n      >\n        <div\n          style={{\n            height: `${Math.max(minRows, rows.length) * popInRowHeight}px`,\n            width: '1px'\n          }}\n        />\n      </div>\n      <div className={horizontalScrollbarSectionStyles} />\n    </FlexBox>\n  );\n});\n\nVerticalScrollbar.displayName = 'VerticalScrollbar';\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React, { useEffect, useRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { VirtualItem } from 'react-virtual';\n\nconst styles = {\n  subcomponent: {\n    position: 'absolute',\n    width: '100%',\n    '&:focus': {\n      outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`,\n      outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`\n    }\n  }\n};\nconst useStyles = createUseStyles(styles, { name: 'RowSubComponent' });\n\ninterface RowSubComponent {\n  subComponentsHeight: Record<string, { rowId: string; subComponentHeight?: number }>;\n  virtualRow: VirtualItem;\n  dispatch: (e: { type: string; payload?: any }) => void;\n  row: any;\n  rowHeight: number;\n  children: any;\n  rows: any[];\n  alwaysShowSubComponent: boolean;\n}\n\nexport const RowSubComponent = (props: RowSubComponent) => {\n  const { subComponentsHeight, virtualRow, dispatch, row, rowHeight, children, rows, alwaysShowSubComponent } = props;\n  const subComponentRef = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const subComponentHeightObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        const target = entry.target.getBoundingClientRect();\n        if (target) {\n          // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n          const borderBoxSize = Array.isArray(entry.borderBoxSize) ? entry.borderBoxSize[0] : entry.borderBoxSize;\n          // Safari doesn't implement `borderBoxSize`\n          const subCompHeight = borderBoxSize?.blockSize ?? target.height;\n          if (subComponentsHeight?.[virtualRow.index]?.subComponentHeight !== subCompHeight && subCompHeight !== 0) {\n            // use most common sub-component height of first 10 sub-components as default height\n            if (alwaysShowSubComponent && subComponentsHeight && Object.keys(subComponentsHeight).length === 10) {\n              const objGroupedByHeight = Object.values(subComponentsHeight).reduce((acc, cur) => {\n                const count = acc?.[cur.subComponentHeight];\n                if (typeof count === 'number') {\n                  return { ...acc, [cur.subComponentHeight]: count + 1 };\n                }\n                return { ...acc, [cur.subComponentHeight]: 1 };\n              }, {});\n\n              const mostUsedHeight = Object.keys(objGroupedByHeight).reduce((a, b) =>\n                objGroupedByHeight[a] > objGroupedByHeight[b] ? a : b\n              );\n              const estimatedHeights = rows.reduce((acc, cur, index) => {\n                acc[index] = { subComponentHeight: parseInt(mostUsedHeight), rowId: cur.id };\n                return acc;\n              }, {});\n              dispatch({\n                type: 'SUB_COMPONENTS_HEIGHT',\n                payload: { ...estimatedHeights, ...subComponentsHeight }\n              });\n            } else {\n              dispatch({\n                type: 'SUB_COMPONENTS_HEIGHT',\n                payload: {\n                  ...subComponentsHeight,\n                  [virtualRow.index]: { subComponentHeight: subCompHeight, rowId: row.id }\n                }\n              });\n            }\n          }\n        }\n      });\n    });\n    if (subComponentRef.current?.firstChild) {\n      subComponentHeightObserver.observe(subComponentRef.current?.firstChild);\n    }\n    return () => {\n      subComponentHeightObserver.disconnect();\n    };\n  }, [\n    subComponentRef.current?.firstChild,\n    subComponentsHeight,\n    row.id,\n    subComponentsHeight?.[virtualRow.index]?.subComponentHeight,\n    virtualRow.index\n  ]);\n\n  return (\n    <div\n      ref={subComponentRef}\n      data-subcomponent\n      tabIndex={-1}\n      style={{\n        boxSizing: 'border-box',\n        transform: `translateY(${rowHeight}px)`\n      }}\n      className={classes.subcomponent}\n    >\n      {children}\n    </div>\n  );\n};\n","import '@ui5/webcomponents-icons/dist/navigation-down-arrow.js';\nimport '@ui5/webcomponents-icons/dist/navigation-right-arrow.js';\nimport React, { MutableRefObject, ReactNode, useCallback, useMemo } from 'react';\nimport { useVirtual } from 'react-virtual';\nimport { RowSubComponent as SubComponent } from './RowSubComponent';\n\ninterface VirtualTableBodyProps {\n  classes: Record<string, string>;\n  prepareRow: (row: unknown) => void;\n  rows: any[];\n  minRows: number;\n  reactWindowRef: MutableRefObject<any>;\n  isTreeTable: boolean;\n  internalRowHeight: number;\n  visibleRows: number;\n  alternateRowColor: boolean;\n  overscanCount: number;\n  visibleColumns: any[];\n  tableRef: MutableRefObject<any>;\n  visibleColumnsWidth: any[];\n  parentRef: MutableRefObject<any>;\n  overscanCountHorizontal: number;\n  renderRowSubComponent: (row?: any) => ReactNode;\n  popInRowHeight: number;\n  isRtl: boolean;\n  markNavigatedRow?: (row?: Record<any, any>) => boolean;\n  alwaysShowSubComponent: boolean;\n  dispatch?: (e: { type: string; payload?: any }) => void;\n  subComponentsHeight?: Record<string, { rowId: string; subComponentHeight?: number }>;\n}\n\nexport const VirtualTableBody = (props: VirtualTableBodyProps) => {\n  const {\n    classes,\n    prepareRow,\n    rows,\n    minRows,\n    reactWindowRef,\n    isTreeTable,\n    internalRowHeight,\n    visibleRows,\n    overscanCount,\n    visibleColumns,\n    tableRef,\n    visibleColumnsWidth,\n    parentRef,\n    overscanCountHorizontal,\n    renderRowSubComponent,\n    popInRowHeight,\n    markNavigatedRow,\n    isRtl,\n    alwaysShowSubComponent,\n    dispatch,\n    subComponentsHeight\n  } = props;\n\n  const itemCount = Math.max(minRows, rows.length);\n  const overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n  const rowHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;\n\n  const rowVirtualizer = useVirtual({\n    size: itemCount,\n    parentRef: parentRef,\n    estimateSize: React.useCallback(\n      (index) => {\n        if (\n          renderRowSubComponent &&\n          (rows[index]?.isExpanded || alwaysShowSubComponent) &&\n          subComponentsHeight?.[index]?.rowId === rows[index]?.id\n        ) {\n          return rowHeight + (subComponentsHeight?.[index]?.subComponentHeight ?? 0);\n        }\n        return rowHeight;\n      },\n      [rowHeight, rows, renderRowSubComponent, alwaysShowSubComponent, subComponentsHeight]\n    ),\n    overscan\n  });\n  const columnVirtualizer = useVirtual({\n    size: visibleColumns.length,\n    parentRef: tableRef,\n    estimateSize: useCallback(\n      (index) => {\n        return visibleColumnsWidth[index];\n      },\n      [visibleColumnsWidth]\n    ),\n    horizontal: true,\n    overscan: overscanCountHorizontal\n  });\n\n  reactWindowRef.current = {\n    ...reactWindowRef.current,\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  };\n\n  const popInColumn = useMemo(\n    () =>\n      visibleColumns.filter(\n        (item) =>\n          item.id !== '__ui5wcr__internal_highlight_column' &&\n          item.id !== '__ui5wcr__internal_selection_column' &&\n          item.id !== '__ui5wcr__internal_navigation_column'\n      )[0],\n    [visibleColumns]\n  );\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: `${rowVirtualizer.totalSize}px`,\n        width: `${columnVirtualizer.totalSize}px`\n      }}\n    >\n      {rowVirtualizer.virtualItems.map((virtualRow, visibleRowIndex) => {\n        const row = rows[virtualRow.index];\n        const rowIndexWithHeader = virtualRow.index + 1;\n        if (!row) {\n          return (\n            <div\n              key={`empty_row_${virtualRow.index}`}\n              className={classes.tr}\n              style={{\n                height: `${virtualRow.size}px`,\n                transform: `translateY(${virtualRow.start}px)`\n              }}\n            />\n          );\n        }\n        prepareRow(row);\n        const rowProps = row.getRowProps();\n        const isNavigatedCell = markNavigatedRow(row);\n        const RowSubComponent = typeof renderRowSubComponent === 'function' ? renderRowSubComponent(row) : undefined;\n\n        if (!RowSubComponent && subComponentsHeight && subComponentsHeight?.[virtualRow.index]?.subComponentHeight) {\n          dispatch({\n            type: 'SUB_COMPONENTS_HEIGHT',\n            payload: {\n              ...subComponentsHeight,\n              [virtualRow.index]: { subComponentHeight: 0, rowId: row.id }\n            }\n          });\n        }\n        return (\n          <div\n            {...rowProps}\n            style={{\n              ...(rowProps.style ?? {}),\n              height: `${rowHeight}px`,\n              transform: `translateY(${virtualRow.start}px)`,\n              position: 'absolute'\n            }}\n          >\n            {RowSubComponent && (row.isExpanded || alwaysShowSubComponent) && (\n              <SubComponent\n                subComponentsHeight={subComponentsHeight}\n                virtualRow={virtualRow}\n                dispatch={dispatch}\n                row={row}\n                rowHeight={rowHeight}\n                rows={rows}\n                alwaysShowSubComponent={alwaysShowSubComponent}\n              >\n                {RowSubComponent}\n              </SubComponent>\n            )}\n            {columnVirtualizer.virtualItems.map((virtualColumn, visibleColumnIndex) => {\n              const cell = row.cells[virtualColumn.index];\n              const directionStyles = isRtl\n                ? {\n                    transform: `translateX(-${virtualColumn.start}px)`,\n                    right: 0\n                  }\n                : { transform: `translateX(${virtualColumn.start}px)`, left: 0 };\n\n              if (!cell) {\n                return null;\n              }\n              const cellProps = cell.getCellProps();\n              if (row.original?.emptyRow) {\n                return <div {...cellProps} />;\n              }\n              let contentToRender;\n              if (\n                cell.column.id === '__ui5wcr__internal_highlight_column' ||\n                cell.column.id === '__ui5wcr__internal_selection_column' ||\n                cell.column.id === '__ui5wcr__internal_navigation_column'\n              ) {\n                contentToRender = 'Cell';\n              } else if (isTreeTable || (!alwaysShowSubComponent && RowSubComponent)) {\n                contentToRender = 'Expandable';\n              } else if (cell.isGrouped) {\n                contentToRender = 'Grouped';\n              } else if (cell.isAggregated) {\n                contentToRender = 'Aggregated';\n              } else if (cell.isPlaceholder) {\n                contentToRender = 'RepeatedValue';\n              } else {\n                contentToRender = 'Cell';\n              }\n              return (\n                <div\n                  {...cellProps}\n                  data-visible-column-index={visibleColumnIndex}\n                  data-column-index={virtualColumn.index}\n                  data-visible-row-index={visibleRowIndex + 1}\n                  data-row-index={rowIndexWithHeader}\n                  style={{\n                    ...cellProps.style,\n                    position: 'absolute',\n                    width: `${virtualColumn.size}px`,\n                    top: 0,\n                    ...directionStyles\n                  }}\n                >\n                  {popInRowHeight !== internalRowHeight && popInColumn.id === cell.column.id\n                    ? cell.render('PopIn', { contentToRender, internalRowHeight })\n                    : cell.render(contentToRender, isNavigatedCell === true ? { isNavigatedCell } : {})}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nexport const VirtualTableBodyContainer = (props) => {\n  const {\n    tableBodyHeight,\n    totalColumnsWidth,\n    children,\n    parentRef,\n    classes,\n    infiniteScroll,\n    infiniteScrollThreshold,\n    onLoadMore,\n    rows,\n    internalRowHeight,\n    handleExternalScroll,\n    visibleRows,\n    popInRowHeight\n  } = props;\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    if (parentRef.current) {\n      setIsMounted(true);\n    }\n  }, [parentRef.current]);\n\n  const classNames = clsx(classes.tbody);\n\n  const lastScrollTop = useRef(0);\n  const firedInfiniteLoadEvents = useRef(new Set());\n  const prevRowsLength = useRef(rows.length);\n\n  useEffect(() => {\n    if (prevRowsLength.current > rows.length) {\n      firedInfiniteLoadEvents.current.clear();\n      parentRef.current.scrollTop = 0;\n      lastScrollTop.current = 0;\n    }\n  }, [rows.length, prevRowsLength.current]);\n\n  useEffect(() => {\n    prevRowsLength.current = rows.length;\n  }, [rows.length]);\n\n  const onScroll = useCallback(\n    (event) => {\n      handleExternalScroll();\n      const scrollOffset = event.target.scrollTop;\n      const isScrollingDown = lastScrollTop.current < scrollOffset;\n      if (isScrollingDown && infiniteScroll) {\n        lastScrollTop.current = scrollOffset;\n        const currentLastRow =\n          Math.floor(scrollOffset / popInRowHeight) +\n          (popInRowHeight === internalRowHeight ? visibleRows : Math.floor(tableBodyHeight / popInRowHeight));\n        if (rows.length - currentLastRow < infiniteScrollThreshold) {\n          if (!firedInfiniteLoadEvents.current.has(rows.length)) {\n            const rootNodes = rows.filter((row) => row.depth === 0);\n            onLoadMore({\n              detail: {\n                rowCount: rootNodes.length,\n                totalRowCount: rows.length\n              }\n            });\n          }\n          firedInfiniteLoadEvents.current.add(rows.length);\n        }\n      }\n    },\n    [\n      infiniteScroll,\n      infiniteScrollThreshold,\n      onLoadMore,\n      rows.length,\n      internalRowHeight,\n      firedInfiniteLoadEvents,\n      lastScrollTop,\n      handleExternalScroll,\n      popInRowHeight,\n      tableBodyHeight\n    ]\n  );\n\n  return (\n    <div\n      className={classNames}\n      ref={parentRef}\n      onScroll={onScroll}\n      style={{\n        position: 'relative',\n        overflowY: 'auto',\n        height: `${tableBodyHeight}px`,\n        width: `${totalColumnsWidth}px`\n      }}\n      data-component-name=\"AnalyticalTableBody\"\n    >\n      {isMounted && children}\n    </div>\n  );\n};\n","import { actions } from 'react-table';\n\nexport const stateReducer = (prevState, action) => {\n  const { payload } = action;\n\n  if (prevState.isRtl && action.type === actions.columnResizing) {\n    const { clientX } = action;\n    const { startX, columnWidth, headerIdWidths } = prevState.columnResizing;\n\n    const deltaX = startX - clientX;\n    const percentageDeltaX = deltaX / columnWidth;\n\n    const newColumnWidths = {};\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n    });\n\n    return {\n      ...prevState,\n      columnResizing: {\n        ...prevState.columnResizing,\n        columnWidths: {\n          ...prevState.columnResizing.columnWidths,\n          ...newColumnWidths\n        }\n      }\n    };\n  }\n\n  switch (action.type) {\n    case 'TABLE_RESIZE':\n      return { ...prevState, tableClientWidth: payload.tableClientWidth };\n    case 'VISIBLE_ROWS':\n      return { ...prevState, visibleRows: payload.visibleRows };\n    case 'TABLE_SCROLLING_ENABLED':\n      return { ...prevState, isScrollable: payload.isScrollable };\n    case 'SET_SELECTED_ROW_IDS':\n      return { ...prevState, selectedRowIds: payload.selectedRowIds };\n    case 'SET_POPIN_COLUMNS':\n      return { ...prevState, popInColumns: payload };\n    case 'INTERACTIVE_ROWS_HAVE_POPIN':\n      return { ...prevState, interactiveRowsHavePopIn: payload };\n    case 'IS_RTL':\n      return { ...prevState, isRtl: payload.isRtl };\n    case 'SUB_COMPONENTS_HEIGHT':\n      return { ...prevState, subComponentsHeight: payload };\n    default:\n      return prevState;\n  }\n};\n","import { Title } from '@ui5/webcomponents-react/dist/Title';\nimport React, { forwardRef, isValidElement, ReactNode, ReactText, Ref } from 'react';\n\nconst styles = {\n  minHeight: '1.5rem',\n  display: 'flex',\n  alignItems: 'center'\n};\n\nexport interface TitleBarProps {\n  children: ReactText | ReactNode;\n}\n\nexport const TitleBar = forwardRef((props: TitleBarProps, ref: Ref<HTMLDivElement>) => {\n  const { children } = props;\n  return (\n    <div style={styles} ref={ref}>\n      {typeof children === 'string' && <Title>{children}</Title>}\n      {isValidElement(children) && children}\n    </div>\n  );\n});\n","import { defaultOrderByFn } from 'react-table';\n\nexport const orderByFn = (rows, functions, directions) => {\n  const wrapSortFn = (sortFn, index) => {\n    const desc = directions[index] === false || directions[index] === 'desc';\n\n    return (rowA, rowB) => {\n      if (rowA.original?.emptyRow && !rowB.original?.emptyRow) {\n        return desc ? -1 : 1;\n      }\n      if (!rowA.original?.emptyRow && rowB.original?.emptyRow) {\n        return desc ? 1 : -1;\n      }\n      if (rowA.original?.emptyRow && rowB.original?.emptyRow) {\n        return 0;\n      }\n      return sortFn(rowA, rowB);\n    };\n  };\n\n  const wrappedSortfunctions = functions.map(wrapSortFn);\n\n  return defaultOrderByFn(rows, wrappedSortfunctions, directions);\n};\n\n// copied from https://github.com/tannerlinsley/react-table/blob/f97fb98509d0b27cc0bebcf3137872afe4f2809e/src/utils.js#L320-L347 (13. Jan 2021)\nconst reOpenBracket = /\\[/g;\nconst reCloseBracket = /\\]/g;\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map((d) => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  );\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr);\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr);\n    }\n  }\n  return newArr;\n}\n\n// copied from https://github.com/tannerlinsley/react-table/blob/master/src/utils.js#L169-L191 (13.Jan 2021)\nconst pathObjCache = new Map();\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj;\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path);\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path);\n      pathObjCache.set(cacheKey, pathObj);\n      return pathObj;\n    })();\n  let val;\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => {\n      return cursor[pathPart];\n    }, obj);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def;\n}\n\nexport const tagNamesWhichShouldNotSelectARow = new Set([\n  'UI5-AVATAR',\n  'UI5-BUTTON',\n  'UI5-CALENDAR',\n  'UI5-CHECKBOX',\n  'UI5-COLOR-PICKER',\n  'UI5-COMBOBOX',\n  'UI5-DATE-PICKER',\n  'UI5-DATERANGE-PICKER',\n  'UI5-DATETIME-PICKER',\n  'UI5-DURATION-PICKER',\n  'UI5-FILE-UPLOADER',\n  'UI5-ICON',\n  'UI5-INPUT',\n  'UI5-LINK',\n  'UI5-MULTI-COMBOBOX',\n  'UI5-MULTI-INPUT',\n  'UI5-RADIO-BUTTON',\n  'UI5-RANGE-SLIDER',\n  'UI5-RATING-INDICATOR',\n  'UI5-SEGMENTED-BUTTON',\n  'UI5-SELECT',\n  'UI5-SLIDER',\n  'UI5-STEP-INPUT',\n  'UI5-SWITCH',\n  'UI5-TEXT-AREA',\n  'UI5-TIME-PICKER',\n  'UI5-TOGGLE-BUTTON',\n  'UI5-UPLOAD-COLLECTION'\n]);\n","import { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { DRAG_TO_RESIZE } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport React, { MutableRefObject, useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createUseStyles } from 'react-jss';\n\nconst verticalResizerStyles = {\n  container: {\n    overflow: 'hidden',\n    position: 'relative',\n    height: '5px',\n    textAlign: 'center',\n    cursor: 'row-resize',\n    boxSizing: 'border-box',\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor,\n      color: ThemingParameters.sapHighlightTextColor\n    },\n    '&:before': {\n      fontSize: '10px',\n      fontFamily: ThemingParameters.sapFontFamily,\n      top: 0,\n      position: 'absolute',\n      content: '\"\\u2981\\u2981\\u2981\\u2981\"',\n      lineHeight: '5px',\n      pointerEvents: 'none'\n    }\n  },\n  resizer: {\n    position: 'absolute',\n    opacity: 0.5,\n    backgroundColor: ThemingParameters.sapContent_DragAndDropActiveColor,\n    height: '5px'\n  }\n};\n\nconst useStyles = createUseStyles(verticalResizerStyles, { name: 'VerticalResizer' });\n\ninterface VerticalResizerProps {\n  analyticalTableRef: MutableRefObject<any>;\n  dispatch: (e: { type: string; payload?: any }) => void;\n  extensionsHeight: number;\n  internalRowHeight: number;\n  hasPopInColumns: boolean;\n  popInRowHeight: number;\n  portalContainer: Element;\n}\n\nconst isTouchEvent = (e, touchEvent) => {\n  if (e.type === touchEvent) {\n    return !(e.touches && e.touches.length > 1);\n  }\n  return false;\n};\n\nexport const VerticalResizer = (props: VerticalResizerProps) => {\n  const {\n    analyticalTableRef,\n    dispatch,\n    extensionsHeight,\n    internalRowHeight,\n    hasPopInColumns,\n    popInRowHeight,\n    portalContainer\n  } = props;\n  const classes = useStyles();\n  const startY = useRef(null);\n  const verticalResizerRef = useRef(null);\n  const [resizerPosition, setResizerPosition] = useState(undefined);\n  const [isDragging, setIsDragging] = useState(false);\n  const [mountTouchEvents, setMountTouchEvents] = useState(false);\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const handleResizeStart = useCallback(\n    (e) => {\n      e.preventDefault();\n      const touchEvent = isTouchEvent(e, 'touchstart');\n      startY.current = touchEvent ? Math.round(e.touches[0].pageY) : e.pageY;\n      setMountTouchEvents(touchEvent);\n      setIsDragging(true);\n    },\n    [startY.current, setIsDragging]\n  );\n\n  const handleMove = useCallback(\n    (e) => {\n      setResizerPosition((prev) => ({\n        ...prev,\n        top: isTouchEvent(e, 'touchmove') ? Math.round(e.touches[0].pageY) : e.pageY\n      }));\n    },\n    [setResizerPosition]\n  );\n  const handleResizeEnd = useCallback(\n    (e) => {\n      setIsDragging(false);\n      const rowCount = Math.floor(\n        (analyticalTableRef.current.clientHeight +\n          (isTouchEvent(e, 'touchend') ? Math.round(e.changedTouches[0].pageY) : e.pageY) -\n          startY.current -\n          extensionsHeight -\n          5) /*resizer height*/ /\n          popInRowHeight\n      );\n      if (hasPopInColumns) {\n        dispatch({ type: 'INTERACTIVE_ROWS_HAVE_POPIN', payload: true });\n      }\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: { visibleRows: rowCount }\n      });\n    },\n    [analyticalTableRef.current?.clientHeight, startY.current, extensionsHeight, internalRowHeight, dispatch]\n  );\n  useEffect(() => {\n    const removeEventListeners = () => {\n      if (mountTouchEvents) {\n        document.removeEventListener('touchmove', handleMove);\n        document.removeEventListener('touchend', handleResizeEnd);\n      } else {\n        document.removeEventListener('mouseup', handleResizeEnd);\n        document.removeEventListener('mousemove', handleMove);\n      }\n    };\n    if (isDragging) {\n      if (mountTouchEvents) {\n        document.addEventListener('touchmove', handleMove);\n        document.addEventListener('touchend', handleResizeEnd);\n      } else {\n        document.addEventListener('mousemove', handleMove);\n        document.addEventListener('mouseup', handleResizeEnd);\n      }\n    } else {\n      removeEventListeners();\n    }\n    return () => {\n      removeEventListeners();\n    };\n  }, [isDragging]);\n\n  useEffect(() => {\n    const resizerPosTop = verticalResizerRef.current?.getBoundingClientRect()?.top + window.scrollY;\n    const resizerPosLeft = verticalResizerRef.current?.getBoundingClientRect()?.left + window.scrollX;\n    const resizerPosWidth = verticalResizerRef.current?.getBoundingClientRect()?.width;\n    if (!isDragging && resizerPosTop > 0) {\n      setResizerPosition({ left: resizerPosLeft, top: resizerPosTop, width: resizerPosWidth });\n    }\n  }, [verticalResizerRef.current?.getBoundingClientRect()?.top, isDragging]);\n\n  useEffect(() => {\n    return () => {\n      dispatch({ type: 'WITH_POPIN', payload: false });\n    };\n  }, []);\n\n  return (\n    <div\n      className={classes.container}\n      ref={verticalResizerRef}\n      onMouseDown={handleResizeStart}\n      onTouchStart={handleResizeStart}\n      role=\"separator\"\n      title={i18nBundle.getText(DRAG_TO_RESIZE)}\n    >\n      {resizerPosition &&\n        isDragging &&\n        createPortal(\n          <div\n            className={classes.resizer}\n            style={{ top: resizerPosition.top, left: resizerPosition.left, width: resizerPosition.width }}\n          />,\n          portalContainer\n        )}\n    </div>\n  );\n};\n","import { useIsomorphicLayoutEffect, useIsRTL } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { debounce, enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { AnalyticalTableScrollMode } from '@ui5/webcomponents-react/dist/AnalyticalTableScrollMode';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { GlobalStyleClasses } from '@ui5/webcomponents-react/dist/GlobalStyleClasses';\nimport { TableScaleWidthMode } from '@ui5/webcomponents-react/dist/TableScaleWidthMode';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/dist/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/dist/TableSelectionMode';\nimport { TableVisibleRowCountMode } from '@ui5/webcomponents-react/dist/TableVisibleRowCountMode';\nimport { TextAlign } from '@ui5/webcomponents-react/dist/TextAlign';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { VerticalAlign } from '@ui5/webcomponents-react/dist/VerticalAlign';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport clsx from 'clsx';\nimport React, {\n  ComponentType,\n  CSSProperties,\n  forwardRef,\n  MutableRefObject,\n  ReactNode,\n  ReactText,\n  Ref,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  PluginHook,\n  useColumnOrder,\n  useExpanded,\n  useFilters,\n  useGlobalFilter,\n  useGroupBy,\n  useResizeColumns,\n  useRowSelect,\n  useSortBy,\n  useTable\n} from 'react-table';\nimport styles from './AnayticalTable.jss';\nimport { ColumnHeaderContainer } from './ColumnHeader/ColumnHeaderContainer';\nimport { DefaultColumn } from './defaults/Column';\nimport { DefaultLoadingComponent } from './defaults/LoadingComponent';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent';\nimport { useDragAndDrop } from './hooks/useDragAndDrop';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport { usePopIn } from './hooks/usePopIn';\nimport { useRowHighlight } from './hooks/useRowHighlight';\nimport { useRowNavigationIndicators } from './hooks/useRowNavigationIndicator';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection';\nimport { useStyling } from './hooks/useStyling';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand';\nimport { useVisibleColumnsWidth } from './hooks/useVisibleColumnsWidth';\nimport { VerticalScrollbar } from './scrollbars/VerticalScrollbar';\nimport { VirtualTableBody } from './TableBody/VirtualTableBody';\nimport { VirtualTableBodyContainer } from './TableBody/VirtualTableBodyContainer';\nimport { stateReducer } from './tableReducer/stateReducer';\nimport { TitleBar } from './TitleBar';\nimport { orderByFn, tagNamesWhichShouldNotSelectARow } from './util';\nimport { VerticalResizer } from './VerticalResizer';\n\nexport interface AnalyticalTableColumnDefinition {\n  // base properties\n  /**\n   * This `string`/`function` is used to build the data model for your column. <br />\n   * __Note__: You can also specify deeply nested values with accessors like `info.hobby` or even `address[0].street`\n   */\n  accessor: string | ((row: any, rowIndex: number) => any);\n  /**\n   * Defines the unique ID for the column. It is used by reference in things like sorting, grouping, filtering etc.\n   * __Note__: Required if `accessor` is a function, otherwise `accessor` will overwrite the id.\n   */\n  id?: string;\n  /**\n   * Can either be string or a React component that will be rendered as column header\n   */\n  Header?: string | ComponentType<any>;\n  /**\n   * Tooltip for the column header. If not set, the display text will be the same as the Header if it is a `string`.\n   */\n  headerTooltip?: string;\n  /**\n   * Custom cell renderer. If set, the table will call that component for every cell and pass all required information as props, e.g. the cell value as `props.cell.value`\n   */\n  Cell?: string | ComponentType<any>;\n  /**\n   * Cell width, if not set the table will distribute all columns without a width evenly.\n   */\n  width?: number;\n  /**\n   * Minimum width of the column, e.g. used for resizing.\n   */\n  minWidth?: number;\n  /**\n   * Maximum with of the column, e.g. used for resizing.\n   */\n  maxWidth?: number;\n\n  // useFilters\n  /**\n   * Filter Component to be rendered in the Header.\n   */\n  Filter?: string | ComponentType<any>;\n  /**\n   * Disable filters for this column.\n   */\n  disableFilters?: boolean;\n  /**\n   * If set to true, this column will be filterable, regardless if it has a valid `accessor`.\n   */\n  defaultCanFilter?: boolean;\n  /**\n   * Either a string or a filter function.<br />Supported String Values: <ul><li>`text`</li><li>`exactText`</li><li>`exactTextCase`</li><li>`equals`</li></ul>\n   */\n  filter?: string | Function;\n\n  // useGlobalFilter\n  /**\n   * Disables global filtering for this column\n   */\n  disableGlobalFilter?: boolean;\n\n  // useGroupBy\n  /**\n   * Component to render for aggregated cells.\n   */\n  Aggregated?: string | ComponentType<any>;\n  /**\n   * Aggregation function or string.<br />Supported String Values: <ul><li>`min`</li><li>`max`</li><li>`median`</li><li>`count`</li></ul>\n   */\n  aggregate?: string | ((leafValues, aggregatedValues) => any);\n  /**\n   * When attempting to group/aggregate non primitive cell values (eg. arrays of items) you will likely need to resolve a stable primitive value like a number or string to use in normal row aggregations. This property can be used to aggregate or simply access the value to be used in aggregations eg. count-ing the unique number of items in a cell's array value before sum-ing that count across the table.\n   */\n  aggregateValue?: string | ((values, row, column) => any);\n  /**\n   * Disable groupBy for this column.\n   */\n  disableGroupBy?: boolean;\n\n  // useSortBy\n  /**\n   * If set to true, this column will be sortable, regardless if it has a valid `accessor`.\n   */\n  defaultCanSort?: boolean;\n  /**\n   * Disable sorting for this column.\n   */\n  disableSortBy?: boolean;\n  /**\n   * If set to `true`, the first sort direction for this column will be descending instead of ascending.\n   */\n  sortDescFirst?: boolean;\n  /**\n   * If set to `true`, the underlying sorting direction will be inverted, but the UI will not.\n   */\n  sortInverted?: boolean;\n  /**\n   * String or custom sort function.<br />Supported String Values: <ul><li>`basic`</li><li>`datetime`</li><li>`alphanumeric`</li></ul>\n   */\n  sortType?: string | ((rowA, rowB, columnId: string, descending: boolean) => any);\n\n  // useResizeColumns\n  /**\n   * Disable resizing for this column.\n   */\n  disableResizing?: boolean;\n\n  // ui5 web components react properties\n  /**\n   * Horizontal alignment of the cell.\n   */\n  hAlign?: TextAlign;\n  /**\n   * Vertical alignment of the cell.\n   */\n  vAlign?: VerticalAlign;\n\n  // usePopIn\n  /**\n   * Enables the pop-in behavior of the column. When the `responsiveMinWidth` is smaller then the width of the table, the content of each cell will move to the first cell in the row, improving usability on small or mobile devices.\n   */\n  responsivePopIn?: boolean;\n  /**\n   * Defines how the table should react when its width falls below the `responsiveMinWidth`.\n   *\n   * - If `responsivePopIn` is `true` the content of this column will be moved to the first column.\n   * - If `responsivePopIn` is not set or `false` the column will be hidden.\n   */\n  responsiveMinWidth?: number;\n  /**\n   * Custom pop-in header renderer. If set, the table will call that component for every column that is \"popped-in\" and pass the table instance as prop.\n   */\n  PopInHeader?: string | ComponentType<any>;\n\n  //use useDragAndDrop\n  /**\n   * Defines if the column is reorderable by dragging and dropping columns.\n   *\n   * Defaults to: `true`\n   *\n   * @deprecated please use `disableDragAndDrop` instead.\n   */\n  canReorder?: boolean;\n  /**\n   * Defines if the column is reorderable by dragging and dropping columns.\n   */\n  disableDragAndDrop?: boolean;\n\n  // all other custom properties or [React Table](https://react-table.tanstack.com/) column options\n  [key: string]: any;\n}\n\ninterface DivWithCustomScrollProp extends HTMLDivElement {\n  isExternalVerticalScroll?: boolean;\n}\n\nexport interface AnalyticalTableDomRef extends Omit<HTMLDivElement, 'scrollTo'> {\n  scrollToItem: (index: number, align?: AnalyticalTableScrollMode) => void;\n  scrollTo: (scrollOffset: number) => void; // overrides native scrollTo function\n}\n\nexport interface AnalyticalTablePropTypes extends Omit<CommonProps, 'title'> {\n  /**\n   * Defines the columns array where you can define the configuration for each column.\n   */\n  columns: AnalyticalTableColumnDefinition[];\n  /**\n   * The data array that you want to display on the table.\n   */\n  data: Record<any, any>[];\n  /**\n   * Component or text rendered in the header section of the `AnalyticalTable`.\n   *\n   * __Note:__ If not set, it will be hidden.\n   */\n  header?: ReactText | ReactNode;\n  /**\n   * Extension section of the Table. If not set, no extension area will be rendered\n   */\n  extension?: ReactNode;\n  /**\n   * The minimum number of rows that are displayed. If the data contains less entries than `minRows`, it will be filled with empty rows.\n   */\n  minRows?: number;\n  /**\n   * Defines how the table table will render visible rows.\n   *\n   * - __\"Fixed\":__ The table always has as many rows as defined in the `visibleRowCount` prop.\n   * - __\"Auto\":__ The table automatically fills the height of the surrounding container.\n   * - __\"Interactive\":__ Adds a resizer to the bottom of the table to dynamically add or remove visible rows. The initial number of rows is defined by the `visibleRows` prop.\n   *\n   * __Note:__ When `\"Auto\"` is enabled, we recommend to use a fixed height for the outer container.\n   */\n  visibleRowCountMode?: TableVisibleRowCountMode | keyof typeof TableVisibleRowCountMode;\n  /**\n   * The number of rows visible without going into overflow.\n   *\n   * __Note:__ If the data contains more entries than the `visibleRow` count, a vertical scrollbar is rendered and the table goes into overflow.\n   */\n  visibleRows?: number;\n  /**\n   * Indicates whether a loading indicator should be shown.\n   *\n   * __Note:__ If the data array is not empty and loading is set to `true` a `Loader` will be displayed underneath the header, otherwise a loading placeholder will be shown.\n   * You can use your own placeholder by passing it to the `LoadingComponent` prop.\n   */\n  loading?: boolean;\n  /**\n   * Defines the text shown if the data array is empty. If not set \"No data\" will be displayed.\n   */\n  noDataText?: string;\n  /**\n   * Defines the height of the rows and header.\n   */\n  rowHeight?: number;\n  /**\n   * Defines whether the table should display rows with alternating row colors.\n   */\n  alternateRowColor?: boolean;\n  /**\n   * Flag whether the table should add an extra column at the end of the rows for displaying a navigation highlight.\n   */\n  withNavigationHighlight?: boolean;\n  /**\n   * Flag whether the table should add an extra column at the start of the rows for displaying row highlights, based on the `highlightField` prop.\n   */\n  withRowHighlight?: boolean;\n  /**\n   * Accessor for showing the row highlights. Only taken into account when `withRowHighlight` is set.\n   *\n   * Default Value: `status`.\n   *\n   * The value of this prop can either be a `string` pointing to a `ValueState` in your dataset\n   * or an accessor function which should return a `ValueState`.\n   */\n  highlightField?: string | ((row: Record<any, any>) => ValueState);\n  /**\n   * Defines whether columns are filterable.\n   */\n  filterable?: boolean;\n  /**\n   * Defines whether columns are sortable.\n   */\n  sortable?: boolean;\n  /**\n   * Defines whether columns are groupable.\n   */\n  groupable?: boolean;\n  /**\n   * Group table rows by adding the column's `accessor` or `id` to the array.\n   *\n   * __Note:__ This prop has no effect when `isTreeTable` is true or `renderRowSubComponent` is set.\n   */\n  groupBy?: string[];\n  /**\n   * Defines the selection behavior of the table.\n   *\n   * - __\"Row\":__ A selection column is rendered along with the normal columns. The whole row is selectable.\n   * - __\"RowOnly\":__ No selection column is rendered along with the normal columns. The whole row is selectable.\n   * - __\"RowSelector\":__ The row is only selectable by clicking on the corresponding field in the selection column.\n   */\n  selectionBehavior?: TableSelectionBehavior | keyof typeof TableSelectionBehavior;\n  /**\n   * Defines the `SelectionMode` of the table.\n   *\n   * - __\"None\":__ The rows are not selectable.\n   * - __\"SingleSelect\":__ You can select only one row at once. Clicking on another row will unselect the previously selected row.\n   * - __\"MultiSelect\":__ You can select multiple rows.\n   */\n  selectionMode?: TableSelectionMode | keyof typeof TableSelectionMode;\n  /**\n   * Defines the column growing behaviour. Possible Values:\n   *\n   * - **Default**: Every column without fixed width gets the maximum available space of the table.\n   * - **Smart**: Every column gets the space it needs for displaying the full header text. If all headers need more space than the available table width, horizontal scrolling will be enabled. If there is space left, columns with a long content will get more space until there is no more table space left.\n   * - **Grow**: Every column gets the space it needs for displaying its full header text and full content of all cells. If it requires more space than the table has, horizontal scrolling will be enabled.\n   *\n   */\n  scaleWidthMode?: TableScaleWidthMode | keyof typeof TableScaleWidthMode;\n  /**\n   * Defines the columns order by their `accessor` or `id`.\n   */\n  columnOrder?: string[];\n  /**\n   * Defines whether infinite scroll is active.\n   */\n  infiniteScroll?: boolean;\n  /**\n   * The `infiniteScrollThreshold` defines at how many remaining rows the `onLoadMore` event should be fired.\n   *\n   * Example: Your initial dataset consists of 50 entries and you want to load more data when the user scrolled to the 40th row. Then you should set the `infiniteScrollThreshold` to 10.\n   */\n  infiniteScrollThreshold?: number;\n  /**\n   * The current global filter value.\n   */\n  globalFilterValue?: string;\n  /**\n   * Additional options which will be passed to [react-table´s useTable hook](https://react-table.tanstack.com/docs/api/useTable#table-options)\n   */\n  reactTableOptions?: Record<string, unknown>;\n  /**\n   * You can use this prob to add custom hooks to the table.\n   */\n  tableHooks?: PluginHook<any>[];\n  /**\n   * Defines the key for nested rows.\n   *\n   * Default: \"children\"\n   */\n  subRowsKey?: string;\n  /**\n   * The key must consist of a valid `rowId` like `{ 2: true }` or `{ '0.2.0': true }` for nested rows.\n   */\n  selectedRowIds?: { [key: string]: boolean };\n  /**\n   * Defines whether the table should act as tree-table.\n   */\n  isTreeTable?: boolean;\n  /**\n   * The amount of columns to load both behind and ahead of the current window range.\n   */\n  overscanCountHorizontal?: number;\n  /**\n   * The amount of rows to load both behind and ahead of the current window range.\n   */\n  overscanCount?: number;\n  /**\n   * Defines the subcomponent that should be displayed below each row.\n   */\n  renderRowSubComponent?: (row?: any) => ReactNode;\n  /**\n   * Defines whether a subcomponent should be rendered as expandable container or directly at the bottom of the row.\n   */\n  alwaysShowSubComponent?: boolean;\n  /**\n   * Defines where modals and other elements which should be mounted outside of the DOM hierarchy are rendered into via `React.createPortal`.\n   *\n   * Defaults to: `document.body`\n   */\n  portalContainer?: Element;\n\n  // events\n  /**\n   * This callback can be used to programmatically show an indicator for navigated rows. It has no effect if `withNavigationHighlight` is not set.\n   *\n   * __Must be memoized!__\n   */\n  markNavigatedRow?: (row?: Record<any, any>) => boolean;\n  /**\n   * Fired when the sorting of the rows changes.\n   */\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  /**\n   * Fired when the grouping of the rows changes.\n   */\n  onGroup?: (e: CustomEvent<{ column: unknown; groupedColumns: string[] }>) => void;\n  /**\n   * Fired when a row is selected or unselected.\n   */\n  onRowSelected?: (\n    e?: CustomEvent<{\n      allRowsSelected?: boolean;\n      row?: Record<string, unknown>;\n      isSelected?: boolean;\n      selectedFlatRows?: Record<string, unknown>[] | string[];\n    }>\n  ) => void;\n  /**\n   * Fired when a row is clicked\n   */\n  onRowClick?: (e?: CustomEvent<{ row?: unknown }>) => void;\n  /**\n   * Fired when a row is expanded or collapsed\n   */\n  onRowExpandChange?: (e?: CustomEvent<{ row: unknown; column: unknown }>) => void;\n  /**\n   * Fired when the columns order is changed.\n   */\n  onColumnsReordered?: (e?: CustomEvent<{ columnsNewOrder: string[]; column: unknown }>) => void;\n  /**\n   * Fired when the `infiniteScrollThreshold` is reached.\n   *\n   * @param {number} e.detail.rowCount - The number of rows\n   * @param {number} e.detail.totalRowCount - The total number of rows, including sub-rows\n   */\n  onLoadMore?: (e?: { detail: { rowCount: number; totalRowCount: number } }) => void;\n\n  // default components\n  /**\n   * Component that will be rendered when the table is not loading and has no data.\n   */\n  NoDataComponent?: ComponentType<any>;\n  /**\n   * Component that will be rendered when the table is loading and has no data.\n   */\n  LoadingComponent?: ComponentType<any>;\n\n  /**\n   * Exposes the internal table instance.\n   * This object will contain all [instance properties](https://react-table.tanstack.com/docs/api/useTable#instance-properties)\n   * of the `useTable` hook and all instance properties from `useColumnOrder`, `useExpanded`, `useFilters`,\n   * `useGlobalFilter`, `useGroupBy`,`useResizeColumns`, `useRowSelect` and `useSortBy` plugin hooks.\n   *\n   * **Note**: Use this prop with care, some properties might have an impact on the internal `AnalyticalTable` implementation.\n   */\n  tableInstance?: Ref<Record<string, any>>;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'AnalyticalTable' });\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\nconst AnalyticalTable = forwardRef((props: AnalyticalTablePropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    alternateRowColor,\n    alwaysShowSubComponent,\n    className,\n    columnOrder,\n    columns,\n    extension,\n    filterable,\n    globalFilterValue,\n    groupBy,\n    groupable,\n    header,\n    highlightField,\n    infiniteScroll,\n    infiniteScrollThreshold,\n    isTreeTable,\n    loading,\n    markNavigatedRow,\n    minRows,\n    noDataText,\n    overscanCount,\n    overscanCountHorizontal,\n    portalContainer,\n    reactTableOptions,\n    renderRowSubComponent,\n    rowHeight,\n    scaleWidthMode,\n    selectedRowIds,\n    selectionBehavior,\n    selectionMode,\n    sortable,\n    style,\n    subRowsKey,\n    tableHooks,\n    tableInstance,\n    tooltip,\n    visibleRowCountMode,\n    visibleRows,\n    withNavigationHighlight,\n    withRowHighlight,\n    onGroup,\n    onLoadMore,\n    onRowClick,\n    onRowExpandChange,\n    onRowSelected,\n    onSort,\n    LoadingComponent,\n    NoDataComponent,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const [analyticalTableRef, reactWindowRef] = useTableScrollHandles(ref);\n  const tableRef: RefObject<DivWithCustomScrollProp> = useRef();\n\n  const isRtl = useIsRTL(analyticalTableRef);\n\n  const getSubRows = useCallback((row) => row[subRowsKey] || [], [subRowsKey]);\n\n  const data = useMemo(() => {\n    if (props.data.length === 0) {\n      return props.data;\n    }\n    if (minRows > props.data.length) {\n      const missingRows: number = minRows - props.data.length;\n      const emptyRows = Array.from({ length: missingRows }, (v, i) => i).map(() => ({ emptyRow: true }));\n\n      return [...props.data, ...emptyRows];\n    }\n    return props.data;\n  }, [props.data, minRows]);\n\n  const tableInstanceRef = useRef<Record<string, any>>(null);\n\n  tableInstanceRef.current = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: DefaultColumn,\n      orderByFn,\n      getSubRows,\n      stateReducer,\n      disableFilters: !filterable,\n      disableSortBy: !sortable,\n      disableGroupBy: isTreeTable || renderRowSubComponent ? true : !groupable,\n      selectSubRows: false,\n      webComponentsReactProperties: {\n        tagNamesWhichShouldNotSelectARow,\n        tableRef,\n        selectionMode,\n        selectionBehavior,\n        classes,\n        onRowSelected,\n        onRowClick,\n        onRowExpandChange,\n        isTreeTable,\n        alternateRowColor,\n        scaleWidthMode,\n        loading,\n        withRowHighlight,\n        highlightField,\n        withNavigationHighlight,\n        markNavigatedRow,\n        renderRowSubComponent,\n        alwaysShowSubComponent,\n        reactWindowRef\n      },\n      ...reactTableOptions\n    },\n    useFilters,\n    useGlobalFilter,\n    useColumnOrder,\n    useGroupBy,\n    useSortBy,\n    useExpanded,\n    useRowSelect,\n    useResizeColumns,\n    useRowSelectionColumn,\n    useSingleRowStateSelection,\n    useRowHighlight,\n    useRowNavigationIndicators,\n    useDynamicColumnWidths,\n    useStyling,\n    useToggleRowExpand,\n    usePopIn,\n    useVisibleColumnsWidth,\n    useKeyboardNavigation,\n    ...tableHooks\n  );\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: tableState,\n    columns: tableInternalColumns,\n    setColumnOrder,\n    dispatch,\n    totalColumnsWidth,\n    visibleColumns,\n    visibleColumnsWidth,\n    setGroupBy,\n    setGlobalFilter\n  } = tableInstanceRef.current;\n\n  if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n    (tableInstance as MutableRefObject<Record<string, any>>).current = tableInstanceRef.current;\n  }\n  if (typeof tableInstance === 'function') {\n    tableInstance(tableInstanceRef.current);\n  }\n\n  const titleBarRef = useRef(null);\n  const extensionRef = useRef(null);\n  const headerRef = useRef(null);\n\n  const extensionsHeight =\n    (titleBarRef.current?.offsetHeight ?? 0) +\n    (extensionRef.current?.offsetHeight ?? 0) +\n    (headerRef.current?.offsetHeight ?? 0);\n\n  const calcRowHeight = parseInt(\n    getComputedStyle(tableRef.current ?? document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44'\n  );\n  const internalRowHeight = rowHeight ?? calcRowHeight;\n  const popInRowHeight =\n    tableState?.popInColumns?.length > 0\n      ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16)\n      : internalRowHeight;\n\n  const internalVisibleRowCount = tableState.visibleRows ?? visibleRows;\n\n  const updateTableClientWidth = useCallback(() => {\n    if (tableRef.current) {\n      dispatch({ type: 'TABLE_RESIZE', payload: { tableClientWidth: tableRef.current.clientWidth } });\n    }\n  }, [tableRef.current]);\n\n  const updateRowsCount = useCallback(() => {\n    if (visibleRowCountMode === TableVisibleRowCountMode.Auto && analyticalTableRef.current?.parentElement) {\n      const parentElement = analyticalTableRef.current?.parentElement;\n      const tableYPosition =\n        parentElement &&\n        getComputedStyle(parentElement).position === 'relative' &&\n        analyticalTableRef.current?.offsetTop\n          ? analyticalTableRef.current?.offsetTop\n          : 0;\n      const parentHeight = parentElement?.getBoundingClientRect().height;\n      const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n      const rowCount = Math.floor((tableHeight - extensionsHeight) / popInRowHeight);\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: { visibleRows: rowCount }\n      });\n    }\n  }, [\n    analyticalTableRef.current?.parentElement?.getBoundingClientRect().height,\n    analyticalTableRef.current?.getBoundingClientRect().y,\n    extensionsHeight,\n    popInRowHeight,\n    visibleRowCountMode\n  ]);\n\n  useEffect(() => {\n    setGlobalFilter(globalFilterValue);\n  }, [globalFilterValue, setGlobalFilter]);\n\n  useEffect(() => {\n    const tableWidthObserver = new ResizeObserver(debounce(updateTableClientWidth, 500));\n    tableWidthObserver.observe(tableRef.current);\n\n    const parentHeightObserver = new ResizeObserver(debounce(updateRowsCount, 500));\n    parentHeightObserver.observe(analyticalTableRef.current?.parentElement);\n    return () => {\n      tableWidthObserver.disconnect();\n      parentHeightObserver.disconnect();\n    };\n  }, [updateTableClientWidth, updateRowsCount]);\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch({ type: 'IS_RTL', payload: { isRtl } });\n  }, [isRtl]);\n\n  useIsomorphicLayoutEffect(() => {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    updateRowsCount();\n  }, [updateRowsCount]);\n\n  useEffect(() => {\n    if (tableState.visibleRows !== undefined && visibleRowCountMode === TableVisibleRowCountMode.Fixed) {\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: { visibleRows: undefined }\n      });\n    }\n  }, [visibleRowCountMode, tableState.visibleRows]);\n\n  useEffect(() => {\n    setGroupBy(groupBy);\n  }, [groupBy, setGroupBy]);\n\n  useEffect(() => {\n    dispatch({ type: 'SET_SELECTED_ROW_IDS', payload: { selectedRowIds } });\n  }, [selectedRowIds]);\n\n  useEffect(() => {\n    if (tableState?.interactiveRowsHavePopIn && (!tableState?.popInColumns || tableState?.popInColumns?.length === 0)) {\n      dispatch({ type: 'WITH_POPIN', payload: false });\n    }\n  }, [tableState?.interactiveRowsHavePopIn, tableState?.popInColumns?.length]);\n\n  const tableBodyHeight = useMemo(() => {\n    const rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    const rowHeight =\n      visibleRowCountMode === TableVisibleRowCountMode.Auto || tableState?.interactiveRowsHavePopIn\n        ? popInRowHeight\n        : internalRowHeight;\n    return rowHeight * rowNum;\n  }, [\n    internalRowHeight,\n    rows.length,\n    internalVisibleRowCount,\n    minRows,\n    popInRowHeight,\n    visibleRowCountMode,\n    tableState?.interactiveRowsHavePopIn\n  ]);\n\n  // scroll bar detection\n  useEffect(() => {\n    const visibleRowCount =\n      rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    if (popInRowHeight !== internalRowHeight) {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: { isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount }\n      });\n    } else {\n      dispatch({ type: 'TABLE_SCROLLING_ENABLED', payload: { isScrollable: rows.length > visibleRowCount } });\n    }\n  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n\n  const noDataStyles = {\n    height: `${tableBodyHeight}px`,\n    width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%'\n  };\n\n  const onGroupByChanged = useCallback(\n    (e) => {\n      const { column, isGrouped } = e.detail;\n      let groupedColumns = [];\n      if (isGrouped) {\n        groupedColumns = [...tableState.groupBy, column.id];\n      } else {\n        groupedColumns = tableState.groupBy.filter((group) => group !== column.id);\n      }\n      setGroupBy(groupedColumns);\n      onGroup(\n        enrichEventWithDetails(e, {\n          column,\n          groupedColumns\n        })\n      );\n    },\n    [tableState.groupBy, onGroup, setGroupBy]\n  );\n\n  useEffect(() => {\n    if (columnOrder?.length > 0) {\n      setColumnOrder(columnOrder);\n    }\n  }, [columnOrder]);\n\n  const [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd] = useDragAndDrop(\n    props,\n    isRtl,\n    setColumnOrder,\n    tableState.columnOrder,\n    tableState.columnResizing,\n    tableInternalColumns\n  );\n\n  const { onColumnsReordered: _0, data: _1, ...propsWithoutOmitted } = rest;\n\n  const inlineStyle = useMemo(() => {\n    const tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n    if (!!rowHeight) {\n      tableStyles['--sapWcrAnalyticalTableRowHeight'] = `${rowHeight}px`;\n    }\n\n    if (tableState.tableClientWidth > 0) {\n      const styles = {\n        ...tableStyles,\n        ...style\n      } as CSSProperties;\n\n      if (totalColumnsWidth < tableState.tableClientWidth) {\n        return { ...styles, borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}` };\n      }\n      return styles;\n    }\n    return {\n      ...tableStyles,\n      ...style,\n      visibility: 'hidden'\n    } as CSSProperties;\n  }, [tableState.tableClientWidth, style, rowHeight, totalColumnsWidth]);\n\n  const parentRef: RefObject<DivWithCustomScrollProp> = useRef(null);\n\n  const verticalScrollBarRef: RefObject<DivWithCustomScrollProp> = useRef(null);\n\n  const handleBodyScroll = () => {\n    if (verticalScrollBarRef.current && verticalScrollBarRef.current.scrollTop !== parentRef.current.scrollTop) {\n      if (!parentRef.current.isExternalVerticalScroll) {\n        verticalScrollBarRef.current.scrollTop = parentRef.current.scrollTop;\n        verticalScrollBarRef.current.isExternalVerticalScroll = true;\n      }\n      parentRef.current.isExternalVerticalScroll = false;\n    }\n  };\n\n  const handleVerticalScrollBarScroll = () => {\n    if (!verticalScrollBarRef.current.isExternalVerticalScroll) {\n      parentRef.current.scrollTop = verticalScrollBarRef.current.scrollTop;\n      parentRef.current.isExternalVerticalScroll = true;\n    }\n    verticalScrollBarRef.current.isExternalVerticalScroll = false;\n  };\n\n  const tableClasses = clsx(\n    classes.table,\n    GlobalStyleClasses.sapScrollBar,\n    withNavigationHighlight && classes.hasNavigationIndicator\n  );\n\n  return (\n    <div className={className} style={inlineStyle} title={tooltip} ref={analyticalTableRef} {...propsWithoutOmitted}>\n      {header && <TitleBar ref={titleBarRef}>{header}</TitleBar>}\n      {extension && <div ref={extensionRef}>{extension}</div>}\n      <FlexBox>\n        <div\n          {...getTableProps()}\n          tabIndex={0}\n          role=\"grid\"\n          aria-rowcount={rows.length}\n          aria-colcount={visibleColumns.length}\n          data-per-page={internalVisibleRowCount}\n          data-component-name=\"AnalyticalTableContainer\"\n          ref={tableRef}\n          className={tableClasses}\n        >\n          <div className={classes.tableHeaderBackgroundElement} />\n          {headerGroups.map((headerGroup) => {\n            let headerProps: Record<string, unknown> = {};\n            if (headerGroup.getHeaderGroupProps) {\n              headerProps = headerGroup.getHeaderGroupProps();\n            }\n\n            return (\n              tableRef.current && (\n                <ColumnHeaderContainer\n                  ref={headerRef}\n                  key={headerProps.key as string}\n                  reactWindowRef={reactWindowRef}\n                  tableRef={tableRef}\n                  resizeInfo={tableState.columnResizing}\n                  visibleColumnsWidth={visibleColumnsWidth}\n                  headerProps={headerProps}\n                  headerGroup={headerGroup}\n                  overscanCountHorizontal={overscanCountHorizontal}\n                  onSort={onSort}\n                  onGroupByChanged={onGroupByChanged}\n                  onDragStart={handleDragStart}\n                  onDragOver={handleDragOver}\n                  onDrop={handleOnDrop}\n                  onDragEnter={handleDragEnter}\n                  onDragEnd={handleOnDragEnd}\n                  dragOver={dragOver}\n                  isRtl={isRtl}\n                  portalContainer={portalContainer}\n                />\n              )\n            );\n          })}\n          {loading && props.data?.length > 0 && <LoadingComponent style={{ width: `${totalColumnsWidth}px` }} />}\n          {loading && props.data?.length === 0 && (\n            <TablePlaceholder\n              isRtl={isRtl}\n              columns={visibleColumns}\n              rows={props.minRows}\n              style={noDataStyles}\n              rowHeight={internalRowHeight}\n              tableWidth={totalColumnsWidth}\n            />\n          )}\n          {!loading && props.data?.length === 0 && (\n            <NoDataComponent noDataText={noDataText} className={classes.noDataContainer} style={noDataStyles} />\n          )}\n          {props.data?.length > 0 && tableRef.current && (\n            <VirtualTableBodyContainer\n              tableBodyHeight={tableBodyHeight}\n              totalColumnsWidth={totalColumnsWidth}\n              parentRef={parentRef}\n              classes={classes}\n              infiniteScroll={infiniteScroll}\n              infiniteScrollThreshold={infiniteScrollThreshold}\n              onLoadMore={onLoadMore}\n              internalRowHeight={internalRowHeight}\n              popInRowHeight={popInRowHeight}\n              rows={rows}\n              handleExternalScroll={handleBodyScroll}\n              visibleRows={internalVisibleRowCount}\n            >\n              <VirtualTableBody\n                classes={classes}\n                prepareRow={prepareRow}\n                rows={rows}\n                minRows={minRows}\n                reactWindowRef={reactWindowRef}\n                isTreeTable={isTreeTable}\n                internalRowHeight={internalRowHeight}\n                popInRowHeight={popInRowHeight}\n                visibleRows={internalVisibleRowCount}\n                alternateRowColor={alternateRowColor}\n                overscanCount={overscanCount}\n                tableRef={tableRef}\n                parentRef={parentRef}\n                visibleColumns={visibleColumns}\n                visibleColumnsWidth={visibleColumnsWidth}\n                overscanCountHorizontal={overscanCountHorizontal}\n                renderRowSubComponent={renderRowSubComponent}\n                alwaysShowSubComponent={alwaysShowSubComponent}\n                markNavigatedRow={markNavigatedRow}\n                isRtl={isRtl}\n                subComponentsHeight={tableState.subComponentsHeight}\n                dispatch={dispatch}\n              />\n            </VirtualTableBodyContainer>\n          )}\n        </div>\n        {(tableState.isScrollable === undefined || tableState.isScrollable) && (\n          <VerticalScrollbar\n            internalRowHeight={internalRowHeight}\n            popInRowHeight={popInRowHeight}\n            tableRef={tableRef}\n            minRows={minRows}\n            rows={rows}\n            handleVerticalScrollBarScroll={handleVerticalScrollBarScroll}\n            ref={verticalScrollBarRef}\n          />\n        )}\n      </FlexBox>\n      {visibleRowCountMode === TableVisibleRowCountMode.Interactive && (\n        <VerticalResizer\n          popInRowHeight={popInRowHeight}\n          hasPopInColumns={tableState?.popInColumns?.length > 0}\n          analyticalTableRef={analyticalTableRef}\n          dispatch={dispatch}\n          extensionsHeight={extensionsHeight}\n          internalRowHeight={internalRowHeight}\n          portalContainer={portalContainer}\n        />\n      )}\n    </div>\n  );\n});\n\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n  infiniteScrollThreshold: 20,\n  loading: false,\n  sortable: true,\n  filterable: false,\n  groupable: false,\n  selectionMode: TableSelectionMode.None,\n  selectionBehavior: TableSelectionBehavior.Row,\n  scaleWidthMode: TableScaleWidthMode.Default,\n  data: [],\n  columns: [],\n  minRows: 5,\n  groupBy: [],\n  NoDataComponent: DefaultNoDataComponent,\n  LoadingComponent: DefaultLoadingComponent,\n  noDataText: 'No Data',\n  reactTableOptions: {},\n  tableHooks: [],\n  visibleRows: 15,\n  subRowsKey: 'subRows',\n  highlightField: 'status',\n  markNavigatedRow: () => false,\n  selectedRowIds: {},\n  onGroup: () => {},\n  onRowExpandChange: () => {},\n  onColumnsReordered: () => {},\n  isTreeTable: false,\n  alternateRowColor: false,\n  overscanCountHorizontal: 5,\n  visibleRowCountMode: TableVisibleRowCountMode.Fixed,\n  alwaysShowSubComponent: false,\n  portalContainer: document.body\n};\n\nexport { AnalyticalTable };\n"]},"metadata":{},"sourceType":"module"}