{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport '@ui5/webcomponents-icons/dist/hint';\nimport '@ui5/webcomponents-icons/dist/message-error';\nimport '@ui5/webcomponents-icons/dist/message-information';\nimport '@ui5/webcomponents-icons/dist/message-success';\nimport '@ui5/webcomponents-icons/dist/message-warning';\nimport '@ui5/webcomponents-icons/dist/question-mark';\nimport { useConsolidatedRef, useI18nBundle, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { ABORT, CANCEL, CLOSE, DELETE, IGNORE, NO, OK, RETRY, YES, HIGHLIGHT, WARNING, SUCCESS, INFORMATION, ERROR, CONFIRMATION } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { Dialog } from '@ui5/webcomponents-react/dist/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/dist/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/dist/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport React, { forwardRef, useMemo, isValidElement, useCallback, useEffect } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nvar stopPropagation = function stopPropagation(e) {\n  var _e$stopImmediatePropa;\n\n  e.stopPropagation();\n  (_e$stopImmediatePropa = e.stopImmediatePropagation) === null || _e$stopImmediatePropa === void 0 ? void 0 : _e$stopImmediatePropa.call(e);\n};\n\nvar style = {\n  messageBox: {\n    '--sapContent_Shadow0': 'none'\n  },\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: \"1px solid var(--messageBoxBorderColor)\",\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '& ui5-icon:first-child': {\n      marginRight: '0.5rem',\n      width: '1rem',\n      height: '1rem'\n    },\n    '& [ui5-title]': {\n      fontSize: '1rem'\n    },\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    }\n  },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& > *': {\n      margin: '0 0.25rem'\n    },\n    '& > ui5-button': {\n      display: 'flex',\n      minWidth: '4rem'\n    }\n  }\n};\nvar styles = style;\nvar useStyles = createUseStyles(styles, {\n  name: 'MessageBox'\n});\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.\n */\n\nvar MessageBox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _actionTranslations;\n\n  var open = props.open,\n      type = props.type,\n      children = props.children,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      slot = props.slot,\n      titleText = props.titleText,\n      icon = props.icon,\n      actions = props.actions,\n      emphasizedAction = props.emphasizedAction,\n      onClose = props.onClose,\n      initialFocus = props.initialFocus,\n      onBeforeOpen = props.onBeforeOpen,\n      onAfterOpen = props.onAfterOpen;\n  var dialogRef = useConsolidatedRef(ref);\n  var classes = useStyles();\n  var iconToRender = useMemo(function () {\n    if ( /*#__PURE__*/isValidElement(icon)) return icon;\n\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"question-mark\"\n        });\n\n      case MessageBoxTypes.ERROR:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-error\"\n        });\n\n      case MessageBoxTypes.INFORMATION:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-information\"\n        });\n\n      case MessageBoxTypes.SUCCESS:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-success\"\n        });\n\n      case MessageBoxTypes.WARNING:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-warning\"\n        });\n\n      case MessageBoxTypes.HIGHLIGHT:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"hint\"\n        });\n\n      default:\n        return null;\n    }\n  }, [icon, type]);\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var actionTranslations = (_actionTranslations = {}, _defineProperty(_actionTranslations, MessageBoxActions.ABORT, i18nBundle.getText(ABORT)), _defineProperty(_actionTranslations, MessageBoxActions.CANCEL, i18nBundle.getText(CANCEL)), _defineProperty(_actionTranslations, MessageBoxActions.CLOSE, i18nBundle.getText(CLOSE)), _defineProperty(_actionTranslations, MessageBoxActions.DELETE, i18nBundle.getText(DELETE)), _defineProperty(_actionTranslations, MessageBoxActions.IGNORE, i18nBundle.getText(IGNORE)), _defineProperty(_actionTranslations, MessageBoxActions.NO, i18nBundle.getText(NO)), _defineProperty(_actionTranslations, MessageBoxActions.OK, i18nBundle.getText(OK)), _defineProperty(_actionTranslations, MessageBoxActions.RETRY, i18nBundle.getText(RETRY)), _defineProperty(_actionTranslations, MessageBoxActions.YES, i18nBundle.getText(YES)), _actionTranslations);\n\n  var titleToRender = function titleToRender() {\n    if (titleText) {\n      return titleText;\n    }\n\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return i18nBundle.getText(CONFIRMATION);\n\n      case MessageBoxTypes.ERROR:\n        return i18nBundle.getText(ERROR);\n\n      case MessageBoxTypes.INFORMATION:\n        return i18nBundle.getText(INFORMATION);\n\n      case MessageBoxTypes.SUCCESS:\n        return i18nBundle.getText(SUCCESS);\n\n      case MessageBoxTypes.WARNING:\n        return i18nBundle.getText(WARNING);\n\n      case MessageBoxTypes.HIGHLIGHT:\n        return i18nBundle.getText(HIGHLIGHT);\n\n      default:\n        return null;\n    }\n  };\n\n  var getActions = function getActions() {\n    if (actions && actions.length > 0) {\n      return actions;\n    }\n\n    if (type === MessageBoxTypes.CONFIRM) {\n      return [MessageBoxActions.OK, MessageBoxActions.CANCEL];\n    }\n\n    if (type === MessageBoxTypes.ERROR) {\n      return [MessageBoxActions.CLOSE];\n    }\n\n    return [MessageBoxActions.OK];\n  };\n\n  var handleOnClose = useCallback(function (e) {\n    var action = e.target.dataset.action;\n    stopPropagation(e);\n    onClose(enrichEventWithDetails(e, {\n      action: action\n    }));\n  }, [onClose]);\n  useEffect(function () {\n    if (dialogRef.current) {\n      if (open) {\n        var _dialogRef$current$sh, _dialogRef$current;\n\n        (_dialogRef$current$sh = (_dialogRef$current = dialogRef.current).show) === null || _dialogRef$current$sh === void 0 ? void 0 : _dialogRef$current$sh.call(_dialogRef$current);\n      } else {\n        var _dialogRef$current$cl, _dialogRef$current2;\n\n        (_dialogRef$current$cl = (_dialogRef$current2 = dialogRef.current).close) === null || _dialogRef$current$cl === void 0 ? void 0 : _dialogRef$current$cl.call(_dialogRef$current2);\n      }\n    }\n  }, [dialogRef, open]);\n  var passThroughProps = usePassThroughHtmlProps(props, ['onClose']);\n  var messageBoxClassNames = StyleClassHelper.of(classes.messageBox).putIfPresent(className).className;\n  return /*#__PURE__*/React.createElement(Dialog, _extends({\n    slot: slot,\n    ref: dialogRef,\n    style: style,\n    tooltip: tooltip,\n    className: messageBoxClassNames,\n    onAfterOpen: onAfterOpen,\n    onBeforeOpen: onBeforeOpen,\n    onAfterClose: open ? handleOnClose : stopPropagation,\n    initialFocus: initialFocus\n  }, passThroughProps), /*#__PURE__*/React.createElement(\"header\", {\n    slot: \"header\",\n    className: classes.header,\n    \"data-type\": type\n  }, iconToRender, /*#__PURE__*/React.createElement(Title, {\n    level: TitleLevel.H2\n  }, titleToRender())), /*#__PURE__*/React.createElement(Text, {\n    className: classes.content\n  }, children), /*#__PURE__*/React.createElement(\"footer\", {\n    slot: \"footer\",\n    className: classes.footer\n  }, getActions().map(function (action, index) {\n    var _actionTranslations$a;\n\n    return /*#__PURE__*/React.createElement(Button, {\n      id: action,\n      key: \"\".concat(action, \"-\").concat(index),\n      design: emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent,\n      onClick: handleOnClose,\n      \"data-action\": action\n    }, (_actionTranslations$a = actionTranslations[action]) !== null && _actionTranslations$a !== void 0 ? _actionTranslations$a : action);\n  })));\n});\nMessageBox.displayName = 'MessageBox';\nMessageBox.defaultProps = {\n  open: false,\n  type: MessageBoxTypes.CONFIRM,\n  emphasizedAction: MessageBoxActions.OK,\n  actions: []\n};\nexport { MessageBox };","map":{"version":3,"sources":["../src/internal/stopPropagation.ts","../src/components/MessageBox/MessageBox.jss.ts","../src/components/MessageBox/index.tsx"],"names":["stopPropagation","e","style","messageBox","header","display","height","CssSizeVariables","textAlign","width","alignItems","padding","boxSizing","borderBottom","color","ThemingParameters","fontSize","marginRight","sapNegativeElementColor","sapCriticalElementColor","sapPositiveElementColor","sapNeutralElementColor","sapInformativeElementColor","content","footer","justifyContent","margin","minWidth","useStyles","createUseStyles","name","MessageBox","forwardRef","open","type","children","className","tooltip","slot","titleText","icon","actions","emphasizedAction","onClose","initialFocus","onBeforeOpen","onAfterOpen","props","dialogRef","useConsolidatedRef","classes","iconToRender","useMemo","isValidElement","MessageBoxTypes","i18nBundle","useI18nBundle","actionTranslations","MessageBoxActions","titleToRender","getActions","handleOnClose","useCallback","action","enrichEventWithDetails","useEffect","passThroughProps","usePassThroughHtmlProps","messageBoxClassNames","StyleClassHelper","TitleLevel","H2","ButtonDesign"],"mappings":"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","sourcesContent":["export const stopPropagation = (e) => {\n  e.stopPropagation();\n  e.stopImmediatePropagation?.();\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nconst style = {\n  messageBox: {\n    '--sapContent_Shadow0': 'none'\n  },\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid var(--messageBoxBorderColor)`,\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '& ui5-icon:first-child': {\n      marginRight: '0.5rem',\n      width: '1rem',\n      height: '1rem'\n    },\n    '& [ui5-title]': {\n      fontSize: '1rem'\n    },\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    }\n  },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& > *': {\n      margin: '0 0.25rem'\n    },\n    '& > ui5-button': {\n      display: 'flex',\n      minWidth: '4rem'\n    }\n  }\n};\n\nexport default style;\n","import '@ui5/webcomponents-icons/dist/hint';\nimport '@ui5/webcomponents-icons/dist/message-error';\nimport '@ui5/webcomponents-icons/dist/message-information';\nimport '@ui5/webcomponents-icons/dist/message-success';\nimport '@ui5/webcomponents-icons/dist/message-warning';\nimport '@ui5/webcomponents-icons/dist/question-mark';\nimport { useConsolidatedRef, useI18nBundle, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport {\n  ABORT,\n  CANCEL,\n  CLOSE,\n  CONFIRMATION,\n  DELETE,\n  ERROR,\n  HIGHLIGHT,\n  IGNORE,\n  INFORMATION,\n  NO,\n  OK,\n  RETRY,\n  SUCCESS,\n  WARNING,\n  YES\n} from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { Dialog } from '@ui5/webcomponents-react/dist/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/dist/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/dist/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DialogDomRef } from '@ui5/webcomponents-react/interfaces/Ui5DialogDomRef';\nimport React, {\n  forwardRef,\n  isValidElement,\n  ReactNode,\n  ReactNodeArray,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { stopPropagation } from '../../internal/stopPropagation';\nimport styles from './MessageBox.jss';\n\nexport interface MessageBoxPropTypes extends CommonProps {\n  /**\n   * Flag whether the Message Box should be opened or closed\n   */\n  open?: boolean;\n  /**\n   * A custom title for the MessageBox. If not present, it will be derived from the `MessageBox` type.\n   */\n  titleText?: string;\n  /**\n   * Defines the content of the `MessageBox`.\n   *\n   * **Note:** Although this prop accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children: ReactNode | ReactNodeArray;\n  /**\n   * Array of actions of the MessageBox. Those actions will be transformed into buttons in the `MessageBox` footer.\n   */\n  actions?: (MessageBoxActions | string)[];\n  /**\n   * Specifies which action of the created dialog will be emphasized.\n   *\n   * @since 0.16.3\n   */\n  emphasizedAction?: MessageBoxActions | string;\n  /**\n   * A custom icon. If not present, it will be derived from the `MessageBox` type.\n   */\n  icon?: ReactNode;\n  /**\n   * Defines the type of the `MessageBox` with predefined title, icon, actions and a visual highlight color.\n   */\n  type?: MessageBoxTypes;\n  /**\n   * Defines the ID of the HTML Element or the `MessageBoxAction`, which will get the initial focus.\n   */\n  initialFocus?: string | MessageBoxActions;\n  /**\n   * Callback to be executed when the `MessageBox` is closed (either by pressing on one of the `actions` or by pressing the `ESC` key). `event.detail.action` contains the pressed action button.\n   */\n  onClose: (event: CustomEvent<{ action: MessageBoxActions }>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. This event does not bubble.\n   */\n  onBeforeOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired after the component is opened. This event does not bubble.\n   */\n  onAfterOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'MessageBox' });\n\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.\n */\nconst MessageBox = forwardRef((props: MessageBoxPropTypes, ref: Ref<Ui5DialogDomRef>) => {\n  const {\n    open,\n    type,\n    children,\n    className,\n    style,\n    tooltip,\n    slot,\n    titleText,\n    icon,\n    actions,\n    emphasizedAction,\n    onClose,\n    initialFocus,\n    onBeforeOpen,\n    onAfterOpen\n  } = props;\n  const dialogRef = useConsolidatedRef<Ui5DialogDomRef>(ref);\n\n  const classes = useStyles();\n\n  const iconToRender = useMemo(() => {\n    if (isValidElement(icon)) return icon;\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return <Icon name=\"question-mark\" />;\n      case MessageBoxTypes.ERROR:\n        return <Icon name=\"message-error\" />;\n      case MessageBoxTypes.INFORMATION:\n        return <Icon name=\"message-information\" />;\n      case MessageBoxTypes.SUCCESS:\n        return <Icon name=\"message-success\" />;\n      case MessageBoxTypes.WARNING:\n        return <Icon name=\"message-warning\" />;\n      case MessageBoxTypes.HIGHLIGHT:\n        return <Icon name=\"hint\" />;\n      default:\n        return null;\n    }\n  }, [icon, type]);\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const actionTranslations = {\n    [MessageBoxActions.ABORT]: i18nBundle.getText(ABORT),\n    [MessageBoxActions.CANCEL]: i18nBundle.getText(CANCEL),\n    [MessageBoxActions.CLOSE]: i18nBundle.getText(CLOSE),\n    [MessageBoxActions.DELETE]: i18nBundle.getText(DELETE),\n    [MessageBoxActions.IGNORE]: i18nBundle.getText(IGNORE),\n    [MessageBoxActions.NO]: i18nBundle.getText(NO),\n    [MessageBoxActions.OK]: i18nBundle.getText(OK),\n    [MessageBoxActions.RETRY]: i18nBundle.getText(RETRY),\n    [MessageBoxActions.YES]: i18nBundle.getText(YES)\n  };\n\n  const titleToRender = () => {\n    if (titleText) {\n      return titleText;\n    }\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxTypes.ERROR:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxTypes.INFORMATION:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxTypes.SUCCESS:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxTypes.WARNING:\n        return i18nBundle.getText(WARNING);\n      case MessageBoxTypes.HIGHLIGHT:\n        return i18nBundle.getText(HIGHLIGHT);\n      default:\n        return null;\n    }\n  };\n\n  const getActions = () => {\n    if (actions && actions.length > 0) {\n      return actions;\n    }\n    if (type === MessageBoxTypes.CONFIRM) {\n      return [MessageBoxActions.OK, MessageBoxActions.CANCEL];\n    }\n    if (type === MessageBoxTypes.ERROR) {\n      return [MessageBoxActions.CLOSE];\n    }\n    return [MessageBoxActions.OK];\n  };\n\n  const handleOnClose = useCallback(\n    (e) => {\n      const { action } = e.target.dataset;\n      stopPropagation(e);\n      onClose(enrichEventWithDetails(e, { action }));\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    if (dialogRef.current) {\n      if (open) {\n        dialogRef.current.show?.();\n      } else {\n        dialogRef.current.close?.();\n      }\n    }\n  }, [dialogRef, open]);\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onClose']);\n\n  const messageBoxClassNames = StyleClassHelper.of(classes.messageBox).putIfPresent(className).className;\n\n  return (\n    <Dialog\n      slot={slot}\n      ref={dialogRef}\n      style={style}\n      tooltip={tooltip}\n      className={messageBoxClassNames}\n      onAfterOpen={onAfterOpen}\n      onBeforeOpen={onBeforeOpen}\n      onAfterClose={open ? handleOnClose : stopPropagation}\n      initialFocus={initialFocus}\n      {...passThroughProps}\n    >\n      <header slot=\"header\" className={classes.header} data-type={type}>\n        {iconToRender}\n        <Title level={TitleLevel.H2}>{titleToRender()}</Title>\n      </header>\n      <Text className={classes.content}>{children}</Text>\n      <footer slot=\"footer\" className={classes.footer}>\n        {getActions().map((action, index) => {\n          return (\n            <Button\n              id={action}\n              key={`${action}-${index}`}\n              design={emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent}\n              onClick={handleOnClose}\n              data-action={action}\n            >\n              {actionTranslations[action] ?? action}\n            </Button>\n          );\n        })}\n      </footer>\n    </Dialog>\n  );\n});\n\nMessageBox.displayName = 'MessageBox';\n\nMessageBox.defaultProps = {\n  open: false,\n  type: MessageBoxTypes.CONFIRM,\n  emphasizedAction: MessageBoxActions.OK,\n  actions: []\n};\n\nexport { MessageBox };\n"]},"metadata":{},"sourceType":"module"}