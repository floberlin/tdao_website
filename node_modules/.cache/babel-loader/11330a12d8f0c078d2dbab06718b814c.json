{"ast":null,"code":"import _slicedToArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This is the original style-map.js directive from lit-html 2 with the only difference that \"render\" is not called even for the first rendering (update is used instead)\n */\nimport { noChange } from 'lit-html';\nimport { directive, Directive, PartType } from 'lit-html/directive.js';\n\nvar StyleMapDirective = /*#__PURE__*/function (_Directive) {\n  _inherits(StyleMapDirective, _Directive);\n\n  var _super = _createSuper(StyleMapDirective);\n\n  function StyleMapDirective(partInfo) {\n    var _this;\n\n    _classCallCheck(this, StyleMapDirective);\n\n    var _a;\n\n    _this = _super.call(this, partInfo);\n\n    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== 'style' || ((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n      throw new Error('The `styleMap` directive must be used in the `style` attribute ' + 'and must be the only part in the attribute.');\n    }\n\n    return _this;\n  }\n\n  _createClass(StyleMapDirective, [{\n    key: \"render\",\n    value: function render(styleInfo) {\n      return \"\";\n    }\n  }, {\n    key: \"update\",\n    value: function update(part, _ref) {\n      var _this2 = this;\n\n      var _ref2 = _slicedToArray(_ref, 1),\n          styleInfo = _ref2[0];\n\n      var style = part.element.style;\n\n      if (this._previousStyleProperties === undefined) {\n        this._previousStyleProperties = new Set();\n\n        for (var name in styleInfo) {\n          this._previousStyleProperties.add(name);\n        } // return this.render(styleInfo);\n\n      } // Remove old properties that no longer exist in styleInfo\n      // We use forEach() instead of for-of so that re don't require down-level\n      // iteration.\n\n\n      this._previousStyleProperties.forEach(function (name) {\n        // If the name isn't in styleInfo or it's null/undefined\n        if (styleInfo[name] == null) {\n          _this2._previousStyleProperties.delete(name);\n\n          if (name.includes('-')) {\n            style.removeProperty(name);\n          } else {\n            // Note reset using empty string (vs null) as IE11 does not always\n            // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            style[name] = '';\n          }\n        }\n      }); // Add or update properties\n\n\n      for (var _name in styleInfo) {\n        var value = styleInfo[_name];\n\n        if (value != null) {\n          this._previousStyleProperties.add(_name);\n\n          if (_name.includes('-')) {\n            style.setProperty(_name, value);\n          } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            style[_name] = value;\n          }\n        }\n      }\n\n      return noChange;\n    }\n  }]);\n\n  return StyleMapDirective;\n}(Directive);\n\nexport var styleMap = directive(StyleMapDirective);","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js"],"names":["noChange","directive","Directive","PartType","StyleMapDirective","partInfo","_a","type","ATTRIBUTE","name","strings","length","Error","styleInfo","part","style","element","_previousStyleProperties","undefined","Set","add","forEach","delete","includes","removeProperty","value","setProperty","styleMap"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,UAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAAgD,uBAAhD;;IACMC,iB;;;;;AACL,6BAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACrB,QAAIC,EAAJ;;AACA,8BAAMD,QAAN;;AACA,QAAIA,QAAQ,CAACE,IAAT,KAAkBJ,QAAQ,CAACK,SAA3B,IACHH,QAAQ,CAACI,IAAT,KAAkB,OADf,IAEH,CAAC,CAACH,EAAE,GAAGD,QAAQ,CAACK,OAAf,MAA4B,IAA5B,IAAoCJ,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACK,MAAjE,IAA2E,CAF5E,EAE+E;AAC9E,YAAM,IAAIC,KAAJ,CAAU,oEACf,6CADK,CAAN;AAEA;;AARoB;AASrB;;;;WACD,gBAAOC,SAAP,EAAkB;AACjB,aAAO,EAAP;AACA;;;WACD,gBAAOC,IAAP,QAA0B;AAAA;;AAAA;AAAA,UAAZD,SAAY;;AACzB,UAAQE,KAAR,GAAkBD,IAAI,CAACE,OAAvB,CAAQD,KAAR;;AACA,UAAI,KAAKE,wBAAL,KAAkCC,SAAtC,EAAiD;AAChD,aAAKD,wBAAL,GAAgC,IAAIE,GAAJ,EAAhC;;AACA,aAAK,IAAMV,IAAX,IAAmBI,SAAnB,EAA8B;AAC7B,eAAKI,wBAAL,CAA8BG,GAA9B,CAAkCX,IAAlC;AACA,SAJ+C,CAKhD;;AACA,OARwB,CASzB;AACA;AACA;;;AACA,WAAKQ,wBAAL,CAA8BI,OAA9B,CAAsC,UAACZ,IAAD,EAAU;AAC/C;AACA,YAAII,SAAS,CAACJ,IAAD,CAAT,IAAmB,IAAvB,EAA6B;AAC5B,UAAA,MAAI,CAACQ,wBAAL,CAA8BK,MAA9B,CAAqCb,IAArC;;AACA,cAAIA,IAAI,CAACc,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACvBR,YAAAA,KAAK,CAACS,cAAN,CAAqBf,IAArB;AACA,WAFD,MAGK;AACJ;AACA;AACA;AACAM,YAAAA,KAAK,CAACN,IAAD,CAAL,GAAc,EAAd;AACA;AACD;AACD,OAdD,EAZyB,CA2BzB;;;AACA,WAAK,IAAMA,KAAX,IAAmBI,SAAnB,EAA8B;AAC7B,YAAMY,KAAK,GAAGZ,SAAS,CAACJ,KAAD,CAAvB;;AACA,YAAIgB,KAAK,IAAI,IAAb,EAAmB;AAClB,eAAKR,wBAAL,CAA8BG,GAA9B,CAAkCX,KAAlC;;AACA,cAAIA,KAAI,CAACc,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACvBR,YAAAA,KAAK,CAACW,WAAN,CAAkBjB,KAAlB,EAAwBgB,KAAxB;AACA,WAFD,MAGK;AACJ;AACAV,YAAAA,KAAK,CAACN,KAAD,CAAL,GAAcgB,KAAd;AACA;AACD;AACD;;AACD,aAAOzB,QAAP;AACA;;;;EAxD8BE,S;;AA2DhC,OAAO,IAAMyB,QAAQ,GAAG1B,SAAS,CAACG,iBAAD,CAA1B","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This is the original style-map.js directive from lit-html 2 with the only difference that \"render\" is not called even for the first rendering (update is used instead)\n */\n\nimport { noChange } from 'lit-html';\nimport { directive, Directive, PartType, } from 'lit-html/directive.js';\nclass StyleMapDirective extends Directive {\n\tconstructor(partInfo) {\n\t\tvar _a;\n\t\tsuper(partInfo);\n\t\tif (partInfo.type !== PartType.ATTRIBUTE ||\n\t\t\tpartInfo.name !== 'style' ||\n\t\t\t((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n\t\t\tthrow new Error('The `styleMap` directive must be used in the `style` attribute ' +\n\t\t\t\t'and must be the only part in the attribute.');\n\t\t}\n\t}\n\trender(styleInfo) {\n\t\treturn \"\";\n\t}\n\tupdate(part, [styleInfo]) {\n\t\tconst { style } = part.element;\n\t\tif (this._previousStyleProperties === undefined) {\n\t\t\tthis._previousStyleProperties = new Set();\n\t\t\tfor (const name in styleInfo) {\n\t\t\t\tthis._previousStyleProperties.add(name);\n\t\t\t}\n\t\t\t// return this.render(styleInfo);\n\t\t}\n\t\t// Remove old properties that no longer exist in styleInfo\n\t\t// We use forEach() instead of for-of so that re don't require down-level\n\t\t// iteration.\n\t\tthis._previousStyleProperties.forEach((name) => {\n\t\t\t// If the name isn't in styleInfo or it's null/undefined\n\t\t\tif (styleInfo[name] == null) {\n\t\t\t\tthis._previousStyleProperties.delete(name);\n\t\t\t\tif (name.includes('-')) {\n\t\t\t\t\tstyle.removeProperty(name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Note reset using empty string (vs null) as IE11 does not always\n\t\t\t\t\t// reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tstyle[name] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// Add or update properties\n\t\tfor (const name in styleInfo) {\n\t\t\tconst value = styleInfo[name];\n\t\t\tif (value != null) {\n\t\t\t\tthis._previousStyleProperties.add(name);\n\t\t\t\tif (name.includes('-')) {\n\t\t\t\t\tstyle.setProperty(name, value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tstyle[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn noChange;\n\t}\n}\n\nexport const styleMap = directive(StyleMapDirective);\n"]},"metadata":{},"sourceType":"module"}