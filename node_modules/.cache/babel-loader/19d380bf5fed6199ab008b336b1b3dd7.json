{"ast":null,"code":"// Generated file - do not change manually!\n\n/**\n * Defines how the text of a component will be displayed when there is not enough space.\n */\nvar WrappingType;\n\n(function (WrappingType) {\n  WrappingType[\"None\"] = \"None\";\n  WrappingType[\"Normal\"] = \"Normal\";\n})(WrappingType || (WrappingType = {}));\n\nexport { WrappingType };","map":{"version":3,"sources":["../src/enums/WrappingType.ts"],"names":["WrappingType"],"mappings":"AAAA;;AAEA;AACA;AACA;IACYA,Y;;WAAAA,Y,EAAAA;AAAAA,EAAAA,YAAAA,CAAAA,MAAAA,CAAAA,GAAAA,MAAAA;AAAAA,EAAAA,YAAAA,CAAAA,QAAAA,CAAAA,GAAAA,QAAAA;GAAAA,YAAAA,KAAAA,YAAAA,GAAAA,EAAAA,C","sourcesContent":["// Generated file - do not change manually!\n\n/**\n * Defines how the text of a component will be displayed when there is not enough space.\n */\nexport enum WrappingType {\n  /**\n   * The text will be truncated with an ellipsis.\n   */\n  None = 'None',\n\n  /**\n   * The text will wrap. The words will not be broken based on hyphenation.\n   */\n  Normal = 'Normal'\n}\n"]},"metadata":{},"sourceType":"module"}