{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport '@ui5/webcomponents-icons/dist/navigation-down-arrow';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { VARIANTS, CANCEL } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { List } from '@ui5/webcomponents-react/dist/List';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { ListMode } from '@ui5/webcomponents-react/dist/ListMode';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { ResponsivePopover } from '@ui5/webcomponents-react/dist/ResponsivePopover';\nimport { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport React, { forwardRef, useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createUseStyles } from 'react-jss';\n\nvar stopPropagation = function stopPropagation(e) {\n  var _e$stopImmediatePropa;\n\n  e.stopPropagation();\n  (_e$stopImmediatePropa = e.stopImmediatePropagation) === null || _e$stopImmediatePropa === void 0 ? void 0 : _e$stopImmediatePropa.call(e);\n};\n\nvar styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    cursor: 'pointer'\n  },\n  title: {\n    cursor: 'pointer',\n    color: ThemingParameters.sapButton_TextColor,\n    '&:hover': {\n      color: ThemingParameters.sapButton_Hover_TextColor\n    }\n  },\n  disabled: {\n    '& $title': {\n      color: ThemingParameters.sapGroup_TitleTextColor,\n      cursor: 'default',\n      '&:hover': {\n        color: 'ThemingParameters.sapGroup_TitleTextColor'\n      }\n    }\n  },\n  footer: {\n    margin: '0.4375rem 1rem 0.4325rem auto'\n  }\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'VariantManagement'\n});\n/**\n * The `VariantManagement` component can be used to manage variants, such as FilterBar variants or AnalyticalTable variants.\n */\n\nvar VariantManagement = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref, _props$selectedKey, _variantItems$;\n\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var variantItems = props.variantItems,\n      _props$titleText = props.titleText,\n      titleText = _props$titleText === void 0 ? i18nBundle.getText(VARIANTS) : _props$titleText,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      placement = props.placement,\n      level = props.level,\n      onSelect = props.onSelect,\n      closeOnItemSelect = props.closeOnItemSelect,\n      disabled = props.disabled;\n  var classes = useStyles();\n  var popoverRef = useRef(null);\n\n  var _useState = useState((_ref = (_props$selectedKey = props.selectedKey) !== null && _props$selectedKey !== void 0 ? _props$selectedKey : variantItems === null || variantItems === void 0 ? void 0 : (_variantItems$ = variantItems[0]) === null || _variantItems$ === void 0 ? void 0 : _variantItems$.key) !== null && _ref !== void 0 ? _ref : null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedKey = _useState2[0],\n      setSelectedKey = _useState2[1];\n\n  useEffect(function () {\n    if (props.selectedKey) {\n      setSelectedKey(props.selectedKey);\n    }\n  }, [props.selectedKey, setSelectedKey]);\n  var handleCancelButtonClick = useCallback(function () {\n    popoverRef.current.close();\n  }, [popoverRef]);\n  var handleOpenVariantManagement = useCallback(function (e) {\n    popoverRef.current.showAt(e.target);\n  }, [popoverRef]);\n  var text = i18nBundle.getText(CANCEL);\n  var footerButtons = useMemo(function () {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: classes.footer,\n      onClick: handleCancelButtonClick,\n      design: ButtonDesign.Emphasized\n    }, text);\n  }, [classes.footer, handleCancelButtonClick, text]);\n\n  var getItemByKey = function getItemByKey(key) {\n    return variantItems === null || variantItems === void 0 ? void 0 : variantItems.find(function (item) {\n      return item.key === key;\n    });\n  };\n\n  var selectedItem = getItemByKey(selectedKey) || variantItems[0];\n  var variantManagementClasses = StyleClassHelper.of(classes.container);\n\n  if (disabled) {\n    variantManagementClasses.put(classes.disabled);\n  }\n\n  if (className) {\n    variantManagementClasses.put(className);\n  }\n\n  var handleVariantItemSelect = useCallback(function (event) {\n    var newSelectedKey = event.detail.item.dataset.key;\n    setSelectedKey(newSelectedKey);\n    onSelect(enrichEventWithDetails(event, _objectSpread(_objectSpread({}, event.details), {}, {\n      selectedItem: getItemByKey(newSelectedKey) || variantItems[0]\n    })));\n\n    if (closeOnItemSelect) {\n      handleCancelButtonClick();\n    }\n  }, [handleCancelButtonClick, closeOnItemSelect, selectedKey, variantItems, setSelectedKey]);\n  var passThroughProps = usePassThroughHtmlProps(props, ['onSelect']);\n\n  if (!variantItems || variantItems.length < 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: variantManagementClasses.valueOf(),\n    style: style,\n    title: tooltip\n  }, passThroughProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Title, {\n    level: level,\n    className: classes.title\n  }, selectedItem.label), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOpenVariantManagement,\n    design: ButtonDesign.Transparent,\n    icon: \"navigation-down-arrow\",\n    disabled: disabled\n  }), /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(ResponsivePopover, {\n    ref: popoverRef,\n    headerText: titleText,\n    placementType: placement,\n    footer: footerButtons,\n    onAfterClose: stopPropagation\n  }, /*#__PURE__*/React.createElement(List, {\n    onItemClick: handleVariantItemSelect,\n    mode: ListMode.SingleSelect\n  }, variantItems.map(function (item) {\n    return /*#__PURE__*/React.createElement(StandardListItem, {\n      style: {\n        width: '300px'\n      },\n      \"data-key\": item.key,\n      type: ListItemType.Active,\n      key: item.key,\n      selected: selectedKey === item.key\n    }, item.label);\n  }))), document.body));\n});\nVariantManagement.defaultProps = {\n  onSelect: function onSelect() {},\n  closeOnItemSelect: true,\n  placement: PopoverPlacementType.Bottom,\n  level: TitleLevel.H4,\n  disabled: false,\n  variantItems: []\n};\nVariantManagement.displayName = 'VariantManagement';\nexport { VariantManagement };","map":{"version":3,"sources":["../src/internal/stopPropagation.ts","../src/components/VariantManagement/index.tsx"],"names":["stopPropagation","e","styles","container","display","alignItems","textAlign","cursor","title","color","ThemingParameters","sapButton_Hover_TextColor","disabled","footer","margin","useStyles","createUseStyles","name","VariantManagement","forwardRef","i18nBundle","useI18nBundle","variantItems","titleText","className","style","tooltip","placement","level","onSelect","closeOnItemSelect","props","classes","popoverRef","useRef","selectedKey","setSelectedKey","useState","useEffect","handleCancelButtonClick","useCallback","handleOpenVariantManagement","text","footerButtons","useMemo","ButtonDesign","Emphasized","getItemByKey","item","selectedItem","variantManagementClasses","StyleClassHelper","handleVariantItemSelect","newSelectedKey","event","enrichEventWithDetails","passThroughProps","usePassThroughHtmlProps","ref","createPortal","ListMode","SingleSelect","width","ListItemType","key","document","PopoverPlacementType","TitleLevel"],"mappings":"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","sourcesContent":["export const stopPropagation = (e) => {\n  e.stopPropagation();\n  e.stopImmediatePropagation?.();\n};\n","import '@ui5/webcomponents-icons/dist/navigation-down-arrow';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { CANCEL, VARIANTS } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { List } from '@ui5/webcomponents-react/dist/List';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { ListMode } from '@ui5/webcomponents-react/dist/ListMode';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { ResponsivePopover } from '@ui5/webcomponents-react/dist/ResponsivePopover';\nimport { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5ResponsivePopoverDomRef } from '@ui5/webcomponents-react/interfaces/Ui5ResponsivePopoverDomRef';\nimport React, { forwardRef, Ref, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createUseStyles } from 'react-jss';\nimport { stopPropagation } from '../../internal/stopPropagation';\n\nexport interface VariantItem {\n  key: string;\n  label: string;\n}\n\nexport interface VariantManagementPropTypes extends Omit<CommonProps, 'onSelect'> {\n  /**\n   * Determines on which side the VariantManagement popover is placed at.\n   */\n  placement?: PopoverPlacementType;\n  /**\n   * Describes the title of the VariantManagement popover.\n   *\n   * __Note:__ If not set, the default title is used.\n   */\n  titleText?: string;\n  /**\n   * Selects the <code>variantItem</code> by its key.\n   */\n  selectedKey?: string;\n  /**\n   * Defines whether the VariantManagement should be closed if an item was selected.\n   */\n  closeOnItemSelect?: boolean;\n  /**\n   * Variant items displayed by the VariantManagement component.\n   */\n  variantItems: VariantItem[];\n  /**\n   * Describes the `HTML Title` level of the variants.\n   */\n  level?: TitleLevel;\n  /**\n   * Defines whether the VariantManagement is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Fired after a variant has been selected.\n   */\n  onSelect?: (event: CustomEvent<{ item: HTMLElement; selectedItem: VariantItem }>) => void;\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    cursor: 'pointer'\n  },\n  title: {\n    cursor: 'pointer',\n    color: ThemingParameters.sapButton_TextColor,\n    '&:hover': {\n      color: ThemingParameters.sapButton_Hover_TextColor\n    }\n  },\n  disabled: {\n    '& $title': {\n      color: ThemingParameters.sapGroup_TitleTextColor,\n      cursor: 'default',\n      '&:hover': {\n        color: 'ThemingParameters.sapGroup_TitleTextColor'\n      }\n    }\n  },\n  footer: {\n    margin: '0.4375rem 1rem 0.4325rem auto'\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'VariantManagement' });\n\n/**\n * The `VariantManagement` component can be used to manage variants, such as FilterBar variants or AnalyticalTable variants.\n */\nconst VariantManagement = forwardRef((props: VariantManagementPropTypes, ref: Ref<HTMLDivElement>) => {\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const {\n    variantItems,\n    titleText = i18nBundle.getText(VARIANTS),\n    className,\n    style,\n    tooltip,\n    placement,\n    level,\n    onSelect,\n    closeOnItemSelect,\n    disabled\n  } = props;\n\n  const classes = useStyles();\n  const popoverRef = useRef<Ui5ResponsivePopoverDomRef>(null);\n\n  const [selectedKey, setSelectedKey] = useState(props.selectedKey ?? variantItems?.[0]?.key ?? null);\n\n  useEffect(() => {\n    if (props.selectedKey) {\n      setSelectedKey(props.selectedKey);\n    }\n  }, [props.selectedKey, setSelectedKey]);\n\n  const handleCancelButtonClick = useCallback(() => {\n    popoverRef.current.close();\n  }, [popoverRef]);\n\n  const handleOpenVariantManagement = useCallback(\n    (e) => {\n      popoverRef.current.showAt(e.target);\n    },\n    [popoverRef]\n  );\n\n  const text = i18nBundle.getText(CANCEL);\n\n  const footerButtons = useMemo(() => {\n    return (\n      <Button className={classes.footer} onClick={handleCancelButtonClick} design={ButtonDesign.Emphasized}>\n        {text}\n      </Button>\n    );\n  }, [classes.footer, handleCancelButtonClick, text]);\n\n  const getItemByKey = (key) => {\n    return variantItems?.find((item) => item.key === key);\n  };\n\n  const selectedItem = getItemByKey(selectedKey) || variantItems[0];\n\n  const variantManagementClasses = StyleClassHelper.of(classes.container);\n\n  if (disabled) {\n    variantManagementClasses.put(classes.disabled);\n  }\n\n  if (className) {\n    variantManagementClasses.put(className);\n  }\n\n  const handleVariantItemSelect = useCallback(\n    (event) => {\n      const newSelectedKey = event.detail.item.dataset.key;\n      setSelectedKey(newSelectedKey);\n      onSelect(\n        enrichEventWithDetails(event, {\n          ...event.details,\n          selectedItem: getItemByKey(newSelectedKey) || variantItems[0]\n        })\n      );\n      if (closeOnItemSelect) {\n        handleCancelButtonClick();\n      }\n    },\n    [handleCancelButtonClick, closeOnItemSelect, selectedKey, variantItems, setSelectedKey]\n  );\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onSelect']);\n\n  if (!variantItems || variantItems.length < 1) {\n    return null;\n  }\n\n  return (\n    <div className={variantManagementClasses.valueOf()} style={style} title={tooltip} {...passThroughProps} ref={ref}>\n      <Title level={level} className={classes.title}>\n        {selectedItem.label}\n      </Title>\n      <Button\n        onClick={handleOpenVariantManagement}\n        design={ButtonDesign.Transparent}\n        icon=\"navigation-down-arrow\"\n        disabled={disabled}\n      />\n      {createPortal(\n        <ResponsivePopover\n          ref={popoverRef}\n          headerText={titleText}\n          placementType={placement}\n          footer={footerButtons}\n          onAfterClose={stopPropagation}\n        >\n          <List onItemClick={handleVariantItemSelect} mode={ListMode.SingleSelect}>\n            {variantItems.map((item) => (\n              <StandardListItem\n                style={{ width: '300px' }}\n                data-key={item.key}\n                type={ListItemType.Active}\n                key={item.key}\n                selected={selectedKey === item.key}\n              >\n                {item.label}\n              </StandardListItem>\n            ))}\n          </List>\n        </ResponsivePopover>,\n        document.body\n      )}\n    </div>\n  );\n});\n\nVariantManagement.defaultProps = {\n  onSelect: () => {},\n  closeOnItemSelect: true,\n  placement: PopoverPlacementType.Bottom,\n  level: TitleLevel.H4,\n  disabled: false,\n  variantItems: []\n};\nVariantManagement.displayName = 'VariantManagement';\n\nexport { VariantManagement };\n"]},"metadata":{},"sourceType":"module"}