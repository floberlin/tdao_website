{"ast":null,"code":"import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes = /*#__PURE__*/new Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction useRect(nodeRef) {\n  var _React$useState = React.useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useReducer = React.useReducer(rectReducer, null),\n      rect = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var initialRectSet = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true;\n\n      var _rect = element.getBoundingClientRect();\n\n      dispatch({\n        rect: _rect\n      });\n    }\n  }, [element]);\n  React.useEffect(function () {\n    if (!element) {\n      return;\n    }\n\n    var observer = observeRect(element, function (rect) {\n      dispatch({\n        rect: rect\n      });\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element]);\n  return rect;\n}\n\nfunction rectReducer(state, action) {\n  var rect = action.rect;\n\n  if (!state || state.height !== rect.height || state.width !== rect.width) {\n    return rect;\n  }\n\n  return state;\n}\n\nvar defaultEstimateSize = function defaultEstimateSize() {\n  return 50;\n};\n\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\n\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n  var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n  return el[key];\n};\n\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.start - range.overscan, 0);\n  var end = Math.min(range.end + range.overscan, range.size - 1);\n  var arr = [];\n\n  for (var i = start; i <= end; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nfunction useVirtual(_ref) {\n  var _ref3, _measurements;\n\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 0 : _ref$size,\n      _ref$estimateSize = _ref.estimateSize,\n      estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n      _ref$overscan = _ref.overscan,\n      overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n      _ref$paddingStart = _ref.paddingStart,\n      paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n      _ref$paddingEnd = _ref.paddingEnd,\n      paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n      parentRef = _ref.parentRef,\n      horizontal = _ref.horizontal,\n      scrollToFn = _ref.scrollToFn,\n      useObserver = _ref.useObserver,\n      onScrollElement = _ref.onScrollElement,\n      scrollOffsetFn = _ref.scrollOffsetFn,\n      _ref$keyExtractor = _ref.keyExtractor,\n      keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n      _ref$measureSize = _ref.measureSize,\n      measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n      _ref$rangeExtractor = _ref.rangeExtractor,\n      rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n  var sizeKey = horizontal ? 'width' : 'height';\n  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n  var latestRef = React.useRef({\n    scrollOffset: 0\n  });\n  var useMeasureParent = useObserver || useRect;\n\n  var _ref2 = useMeasureParent(parentRef) || (_ref3 = {}, _ref3[sizeKey] = 0, _ref3),\n      outerSize = _ref2[sizeKey];\n\n  var defaultScrollToFn = React.useCallback(function (offset) {\n    if (parentRef.current) {\n      parentRef.current[scrollKey] = offset;\n    }\n  }, [parentRef, scrollKey]);\n  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n  scrollToFn = React.useCallback(function (offset) {\n    resolvedScrollToFn(offset, defaultScrollToFn);\n  }, [defaultScrollToFn, resolvedScrollToFn]);\n\n  var _React$useState = React.useState({}),\n      measuredCache = _React$useState[0],\n      setMeasuredCache = _React$useState[1];\n\n  var measure = React.useCallback(function () {\n    return setMeasuredCache({});\n  }, []);\n  var measurements = React.useMemo(function () {\n    var measurements = [];\n\n    for (var i = 0; i < size; i++) {\n      var measuredSize = measuredCache[keyExtractor(i)];\n      var start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n\n      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n\n      var end = start + _size;\n      measurements[i] = {\n        index: i,\n        start: start,\n        size: _size,\n        end: end\n      };\n    }\n\n    return measurements;\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || 0) + paddingEnd;\n  latestRef.current.measurements = measurements;\n  latestRef.current.outerSize = outerSize;\n  latestRef.current.totalSize = totalSize;\n\n  var _React$useState2 = React.useState({\n    start: 0,\n    end: 0\n  }),\n      range = _React$useState2[0],\n      setRange = _React$useState2[1];\n\n  var element = onScrollElement ? onScrollElement.current : parentRef.current;\n  var scrollOffsetFnRef = React.useRef(scrollOffsetFn);\n  scrollOffsetFnRef.current = scrollOffsetFn;\n  var rangeTimeoutIdRef = React.useRef(null);\n  var cancelAsyncRange = React.useCallback(function () {\n    if (rangeTimeoutIdRef.current !== null) {\n      clearTimeout(rangeTimeoutIdRef.current);\n      rangeTimeoutIdRef.current = null;\n    }\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    rangeTimeoutIdRef.current = setTimeout(function () {\n      setRange(function (prevRange) {\n        return calculateRange(latestRef.current, prevRange);\n      });\n    });\n    return function () {\n      return cancelAsyncRange();\n    };\n  }, [measurements, outerSize, cancelAsyncRange]);\n  useIsomorphicLayoutEffect(function () {\n    if (!element) {\n      setRange({\n        start: 0,\n        end: 0\n      });\n      latestRef.current.scrollOffset = 0;\n      return;\n    }\n\n    var onScroll = function onScroll(event) {\n      var scrollOffset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n      latestRef.current.scrollOffset = scrollOffset;\n      cancelAsyncRange();\n      setRange(function (prevRange) {\n        return calculateRange(latestRef.current, prevRange);\n      });\n    }; // Determine initially visible range\n\n\n    onScroll();\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      element.removeEventListener('scroll', onScroll);\n    };\n  }, [element, scrollKey, cancelAsyncRange]);\n  var measureSizeRef = React.useRef(measureSize);\n  measureSizeRef.current = measureSize;\n  var virtualItems = React.useMemo(function () {\n    var indexes = rangeExtractor({\n      start: range.start,\n      end: range.end,\n      overscan: overscan,\n      size: measurements.length\n    });\n    var virtualItems = [];\n\n    var _loop = function _loop(k, len) {\n      var i = indexes[k];\n      var measurement = measurements[i];\n\n      var item = _extends(_extends({}, measurement), {}, {\n        measureRef: function measureRef(el) {\n          if (el) {\n            var measuredSize = measureSizeRef.current(el, horizontal);\n\n            if (measuredSize !== item.size) {\n              var scrollOffset = latestRef.current.scrollOffset;\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size));\n              }\n\n              setMeasuredCache(function (old) {\n                var _extends2;\n\n                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[keyExtractor(i)] = measuredSize, _extends2));\n              });\n            }\n          }\n        }\n      });\n\n      virtualItems.push(item);\n    };\n\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      _loop(k);\n    }\n\n    return virtualItems;\n  }, [defaultScrollToFn, horizontal, keyExtractor, measurements, overscan, range.end, range.start, rangeExtractor]);\n  var mountedRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (mountedRef.current) {\n      if (estimateSize) setMeasuredCache({});\n    }\n\n    mountedRef.current = true;\n  }, [estimateSize]);\n  var scrollToOffset = React.useCallback(function (toOffset, _temp) {\n    var _ref4 = _temp === void 0 ? {} : _temp,\n        _ref4$align = _ref4.align,\n        align = _ref4$align === void 0 ? 'start' : _ref4$align;\n\n    var _latestRef$current = latestRef.current,\n        scrollOffset = _latestRef$current.scrollOffset,\n        outerSize = _latestRef$current.outerSize;\n\n    if (align === 'auto') {\n      if (toOffset <= scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= scrollOffset + outerSize) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    if (align === 'start') {\n      scrollToFn(toOffset);\n    } else if (align === 'end') {\n      scrollToFn(toOffset - outerSize);\n    } else if (align === 'center') {\n      scrollToFn(toOffset - outerSize / 2);\n    }\n  }, [scrollToFn]);\n  var tryScrollToIndex = React.useCallback(function (index, _temp2) {\n    var _ref5 = _temp2 === void 0 ? {} : _temp2,\n        _ref5$align = _ref5.align,\n        align = _ref5$align === void 0 ? 'auto' : _ref5$align,\n        rest = _objectWithoutPropertiesLoose(_ref5, [\"align\"]);\n\n    var _latestRef$current2 = latestRef.current,\n        measurements = _latestRef$current2.measurements,\n        scrollOffset = _latestRef$current2.scrollOffset,\n        outerSize = _latestRef$current2.outerSize;\n    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n\n    if (!measurement) {\n      return;\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= scrollOffset + outerSize) {\n        align = 'end';\n      } else if (measurement.start <= scrollOffset) {\n        align = 'start';\n      } else {\n        return;\n      }\n    }\n\n    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n    scrollToOffset(toOffset, _extends({\n      align: align\n    }, rest));\n  }, [scrollToOffset, size]);\n  var scrollToIndex = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // We do a double request here because of\n    // dynamic sizes which can cause offset shift\n    // and end up in the wrong spot. Unfortunately,\n    // we can't know about those dynamic sizes until\n    // we try and render them. So double down!\n\n\n    tryScrollToIndex.apply(void 0, args);\n    requestAnimationFrame(function () {\n      tryScrollToIndex.apply(void 0, args);\n    });\n  }, [tryScrollToIndex]);\n  return {\n    virtualItems: virtualItems,\n    totalSize: totalSize,\n    scrollToOffset: scrollToOffset,\n    scrollToIndex: scrollToIndex,\n    measure: measure\n  };\n}\n\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref6, prevRange) {\n  var measurements = _ref6.measurements,\n      outerSize = _ref6.outerSize,\n      scrollOffset = _ref6.scrollOffset;\n  var size = measurements.length - 1;\n\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n\n  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n  var end = start;\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++;\n  }\n\n  if (prevRange.start !== start || prevRange.end !== end) {\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  return prevRange;\n}\n\nexport { defaultRangeExtractor, useVirtual };","map":{"version":3,"sources":["../node_modules/@reach/observe-rect/dist/observe-rect.esm.js","../src/useIsomorphicLayoutEffect.js","../src/useRect.js","../src/index.js"],"names":["props","rectChanged","b","observedNodes","run","changedStates","newRect","node","state","rafId","window","observeRect","cb","observe","wasEmpty","rect","hasRectChanged","callbacks","unobserve","index","cancelAnimationFrame","React","element","setElement","nodeRef","dispatch","initialRectSet","useIsomorphicLayoutEffect","observer","action","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","key","horizontal","el","defaultRangeExtractor","start","Math","range","end","arr","i","size","estimateSize","overscan","paddingStart","paddingEnd","parentRef","scrollToFn","useObserver","onScrollElement","scrollOffsetFn","keyExtractor","measureSize","rangeExtractor","sizeKey","scrollKey","latestRef","scrollOffset","useMeasureParent","outerSize","defaultScrollToFn","resolvedScrollToFn","measuredCache","setMeasuredCache","measure","measurements","measuredSize","totalSize","setRange","scrollOffsetFnRef","rangeTimeoutIdRef","cancelAsyncRange","clearTimeout","setTimeout","calculateRange","onScroll","capture","passive","measureSizeRef","virtualItems","indexes","length","k","len","measurement","item","measureRef","mountedRef","scrollToOffset","align","toOffset","tryScrollToIndex","rest","scrollToIndex","args","requestAnimationFrame","findNearestBinarySearch","low","middle","currentValue","getCurrentValue","high","getOffset","prevRange"],"mappings":"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","sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\n\nimport observeRect from '@reach/observe-rect'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(nodeRef) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, null)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect();\n      dispatch({ rect });\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect });\n    });\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (!state || state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n\n","import React from 'react'\n\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  onScrollElement,\n  scrollOffsetFn,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n  })\n  const useMeasureParent = useObserver || useRect\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef) || {\n    [sizeKey]: 0,\n  }\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const resolvedScrollToFn = scrollToFn || defaultScrollToFn\n\n  scrollToFn = React.useCallback(\n    offset => {\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [defaultScrollToFn, resolvedScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const measurements = React.useMemo(() => {\n    const measurements = []\n    for (let i = 0; i < size; i++) {\n      const measuredSize = measuredCache[keyExtractor(i)]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || 0) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.outerSize = outerSize\n  latestRef.current.totalSize = totalSize\n\n  const [range, setRange] = React.useState({ start: 0, end: 0 })\n\n  const element = onScrollElement ? onScrollElement.current : parentRef.current\n\n  const scrollOffsetFnRef = React.useRef(scrollOffsetFn)\n  scrollOffsetFnRef.current = scrollOffsetFn\n\n  const rangeTimeoutIdRef = React.useRef(null)\n\n  const cancelAsyncRange = React.useCallback(() => {\n    if (rangeTimeoutIdRef.current !== null) {\n      clearTimeout(rangeTimeoutIdRef.current)\n      rangeTimeoutIdRef.current = null\n    }\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    rangeTimeoutIdRef.current = setTimeout(() => {\n      setRange(prevRange => calculateRange(latestRef.current, prevRange))\n    })\n    return () => cancelAsyncRange()\n  }, [measurements, outerSize, cancelAsyncRange])\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setRange({ start: 0, end: 0 })\n      latestRef.current.scrollOffset = 0\n\n      return\n    }\n\n    const onScroll = event => {\n      const scrollOffset = scrollOffsetFnRef.current\n        ? scrollOffsetFnRef.current(event)\n        : element[scrollKey]\n\n      latestRef.current.scrollOffset = scrollOffset\n\n      cancelAsyncRange()\n      setRange(prevRange => calculateRange(latestRef.current, prevRange))\n    }\n\n    // Determine initially visible range\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey, cancelAsyncRange])\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const indexes = rangeExtractor({\n      start: range.start,\n      end: range.end,\n      overscan,\n      size: measurements.length,\n    })\n\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size))\n              }\n\n              setMeasuredCache(old => ({\n                ...old,\n                [keyExtractor(i)]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [\n    defaultScrollToFn,\n    horizontal,\n    keyExtractor,\n    measurements,\n    overscan,\n    range.end,\n    range.start,\n    rangeExtractor,\n  ])\n\n  const mountedRef = React.useRef()\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      if (estimateSize) setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}) => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset)\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest })\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }, prevRange) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  if (prevRange.start !== start || prevRange.end !== end) {\n    return { start, end }\n  }\n\n  return prevRange\n}\n"]},"metadata":{},"sourceType":"module"}