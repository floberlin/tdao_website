{"ast":null,"code":"/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport BarcodeFormat from '../BarcodeFormat'; // import UPCEANReader from './UPCEANReader';\n\nimport AbstractUPCEANReader from './AbstractUPCEANReader';\nimport Result from '../Result';\nimport ResultPoint from '../ResultPoint';\nimport ResultMetadataType from '../ResultMetadataType';\nimport NotFoundException from '../NotFoundException';\n/**\n * @see UPCEANExtension2Support\n */\n\nvar UPCEANExtension5Support = function () {\n  function UPCEANExtension5Support() {\n    this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n    this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n    this.decodeRowStringBuffer = '';\n  }\n\n  UPCEANExtension5Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n    var result = this.decodeRowStringBuffer;\n    var end = this.decodeMiddle(row, extensionStartRange, result);\n    var resultString = result.toString();\n    var extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n    var resultPoints = [new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber), new ResultPoint(end, rowNumber)];\n    var extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat.UPC_EAN_EXTENSION, new Date().getTime());\n\n    if (extensionData != null) {\n      extensionResult.putAllMetadata(extensionData);\n    }\n\n    return extensionResult;\n  };\n\n  UPCEANExtension5Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var e_1, _a;\n\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var lgPatternFound = 0;\n\n    for (var x = 0; x < 5 && rowOffset < end; x++) {\n      var bestMatch = AbstractUPCEANReader.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n\n      try {\n        for (var counters_1 = (e_1 = void 0, __values(counters)), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n          var counter = counters_1_1.value;\n          rowOffset += counter;\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (bestMatch >= 10) {\n        lgPatternFound |= 1 << 4 - x;\n      }\n\n      if (x !== 4) {\n        // Read off separator if not last\n        rowOffset = row.getNextSet(rowOffset);\n        rowOffset = row.getNextUnset(rowOffset);\n      }\n    }\n\n    if (resultString.length !== 5) {\n      throw new NotFoundException();\n    }\n\n    var checkDigit = this.determineCheckDigit(lgPatternFound);\n\n    if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n      throw new NotFoundException();\n    }\n\n    return rowOffset;\n  };\n\n  UPCEANExtension5Support.extensionChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n    return sum % 10;\n  };\n\n  UPCEANExtension5Support.prototype.determineCheckDigit = function (lgPatternFound) {\n    for (var d = 0; d < 10; d++) {\n      if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n        return d;\n      }\n    }\n\n    throw new NotFoundException();\n  };\n\n  UPCEANExtension5Support.parseExtensionString = function (raw) {\n    if (raw.length !== 5) {\n      return null;\n    }\n\n    var value = UPCEANExtension5Support.parseExtension5String(raw);\n\n    if (value == null) {\n      return null;\n    }\n\n    return new Map([[ResultMetadataType.SUGGESTED_PRICE, value]]);\n  };\n\n  UPCEANExtension5Support.parseExtension5String = function (raw) {\n    var currency;\n\n    switch (raw.charAt(0)) {\n      case '0':\n        currency = 'Â£';\n        break;\n\n      case '5':\n        currency = '$';\n        break;\n\n      case '9':\n        // Reference: http://www.jollytech.com\n        switch (raw) {\n          case '90000':\n            // No suggested retail price\n            return null;\n\n          case '99991':\n            // Complementary\n            return '0.00';\n\n          case '99990':\n            return 'Used';\n        } // Otherwise... unknown currency?\n\n\n        currency = '';\n        break;\n\n      default:\n        currency = '';\n        break;\n    }\n\n    var rawAmount = parseInt(raw.substring(1));\n    var unitsString = (rawAmount / 100).toString();\n    var hundredths = rawAmount % 100;\n    var hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n\n    return currency + unitsString + '.' + hundredthsString;\n  };\n\n  return UPCEANExtension5Support;\n}();\n\nexport default UPCEANExtension5Support;","map":{"version":3,"sources":["../../../../src/core/oned/UPCEANExtension5Support.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport BarcodeFormat from '../BarcodeFormat';\n// import UPCEANReader from './UPCEANReader';\nimport AbstractUPCEANReader from './AbstractUPCEANReader';\nimport Result from '../Result';\nimport ResultPoint from '../ResultPoint';\nimport ResultMetadataType from '../ResultMetadataType';\nimport NotFoundException from '../NotFoundException';\n/**\n * @see UPCEANExtension2Support\n */\nvar UPCEANExtension5Support = /** @class */ (function () {\n    function UPCEANExtension5Support() {\n        this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n        this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n        this.decodeRowStringBuffer = '';\n    }\n    UPCEANExtension5Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n        var result = this.decodeRowStringBuffer;\n        var end = this.decodeMiddle(row, extensionStartRange, result);\n        var resultString = result.toString();\n        var extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n        var resultPoints = [\n            new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber),\n            new ResultPoint(end, rowNumber)\n        ];\n        var extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat.UPC_EAN_EXTENSION, new Date().getTime());\n        if (extensionData != null) {\n            extensionResult.putAllMetadata(extensionData);\n        }\n        return extensionResult;\n    };\n    UPCEANExtension5Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n        var e_1, _a;\n        var counters = this.decodeMiddleCounters;\n        counters[0] = 0;\n        counters[1] = 0;\n        counters[2] = 0;\n        counters[3] = 0;\n        var end = row.getSize();\n        var rowOffset = startRange[1];\n        var lgPatternFound = 0;\n        for (var x = 0; x < 5 && rowOffset < end; x++) {\n            var bestMatch = AbstractUPCEANReader.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader.L_AND_G_PATTERNS);\n            resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n            try {\n                for (var counters_1 = (e_1 = void 0, __values(counters)), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n                    var counter = counters_1_1.value;\n                    rowOffset += counter;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (bestMatch >= 10) {\n                lgPatternFound |= 1 << (4 - x);\n            }\n            if (x !== 4) {\n                // Read off separator if not last\n                rowOffset = row.getNextSet(rowOffset);\n                rowOffset = row.getNextUnset(rowOffset);\n            }\n        }\n        if (resultString.length !== 5) {\n            throw new NotFoundException();\n        }\n        var checkDigit = this.determineCheckDigit(lgPatternFound);\n        if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n            throw new NotFoundException();\n        }\n        return rowOffset;\n    };\n    UPCEANExtension5Support.extensionChecksum = function (s) {\n        var length = s.length;\n        var sum = 0;\n        for (var i = length - 2; i >= 0; i -= 2) {\n            sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n        }\n        sum *= 3;\n        for (var i = length - 1; i >= 0; i -= 2) {\n            sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n        }\n        sum *= 3;\n        return sum % 10;\n    };\n    UPCEANExtension5Support.prototype.determineCheckDigit = function (lgPatternFound) {\n        for (var d = 0; d < 10; d++) {\n            if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n                return d;\n            }\n        }\n        throw new NotFoundException();\n    };\n    UPCEANExtension5Support.parseExtensionString = function (raw) {\n        if (raw.length !== 5) {\n            return null;\n        }\n        var value = UPCEANExtension5Support.parseExtension5String(raw);\n        if (value == null) {\n            return null;\n        }\n        return new Map([[ResultMetadataType.SUGGESTED_PRICE, value]]);\n    };\n    UPCEANExtension5Support.parseExtension5String = function (raw) {\n        var currency;\n        switch (raw.charAt(0)) {\n            case '0':\n                currency = 'Â£';\n                break;\n            case '5':\n                currency = '$';\n                break;\n            case '9':\n                // Reference: http://www.jollytech.com\n                switch (raw) {\n                    case '90000':\n                        // No suggested retail price\n                        return null;\n                    case '99991':\n                        // Complementary\n                        return '0.00';\n                    case '99990':\n                        return 'Used';\n                }\n                // Otherwise... unknown currency?\n                currency = '';\n                break;\n            default:\n                currency = '';\n                break;\n        }\n        var rawAmount = parseInt(raw.substring(1));\n        var unitsString = (rawAmount / 100).toString();\n        var hundredths = rawAmount % 100;\n        var hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n        return currency + unitsString + '.' + hundredthsString;\n    };\n    return UPCEANExtension5Support;\n}());\nexport default UPCEANExtension5Support;\n//# sourceMappingURL=UPCEANExtension5Support.js.map"]},"metadata":{},"sourceType":"module"}