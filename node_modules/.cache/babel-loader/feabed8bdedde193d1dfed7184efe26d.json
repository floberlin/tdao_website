{"ast":null,"code":"// Generated file - do not change manually!\n\n/**\n * Defines the semantic color\n */\nvar SemanticColor;\n\n(function (SemanticColor) {\n  SemanticColor[\"Critical\"] = \"Critical\";\n  SemanticColor[\"Default\"] = \"Default\";\n  SemanticColor[\"Negative\"] = \"Negative\";\n  SemanticColor[\"Neutral\"] = \"Neutral\";\n  SemanticColor[\"Positive\"] = \"Positive\";\n})(SemanticColor || (SemanticColor = {}));\n\nexport { SemanticColor };","map":{"version":3,"sources":["../src/enums/SemanticColor.ts"],"names":["SemanticColor"],"mappings":"AAAA;;AAEA;AACA;AACA;IACYA,a;;WAAAA,a,EAAAA;AAAAA,EAAAA,aAAAA,CAAAA,UAAAA,CAAAA,GAAAA,UAAAA;AAAAA,EAAAA,aAAAA,CAAAA,SAAAA,CAAAA,GAAAA,SAAAA;AAAAA,EAAAA,aAAAA,CAAAA,UAAAA,CAAAA,GAAAA,UAAAA;AAAAA,EAAAA,aAAAA,CAAAA,SAAAA,CAAAA,GAAAA,SAAAA;AAAAA,EAAAA,aAAAA,CAAAA,UAAAA,CAAAA,GAAAA,UAAAA;GAAAA,aAAAA,KAAAA,aAAAA,GAAAA,EAAAA,C","sourcesContent":["// Generated file - do not change manually!\n\n/**\n * Defines the semantic color\n */\nexport enum SemanticColor {\n  /**\n   * Critical color\n   */\n  Critical = 'Critical',\n\n  /**\n   * Default color (brand color)\n   */\n  Default = 'Default',\n\n  /**\n   * Negative color\n   */\n  Negative = 'Negative',\n\n  /**\n   * Neutral color.\n   */\n  Neutral = 'Neutral',\n\n  /**\n   * Positive color\n   */\n  Positive = 'Positive'\n}\n"]},"metadata":{},"sourceType":"module"}