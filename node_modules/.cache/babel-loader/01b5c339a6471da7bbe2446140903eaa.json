{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _AvatarSize$XS, _AvatarSize$S, _AvatarSize$M, _AvatarSize$L, _AvatarSize$XL, _offsets;\n\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { isEnter, isSpace } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL, AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL, AVATAR_GROUP_ARIA_LABEL_GROUP, AVATAR_GROUP_MOVE } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\"; // Styles\n\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\nvar OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nvar AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = \".\".concat(OVERFLOW_BTN_CLASS); // based on RTL/LTR a margin-left/right is set respectfully\n\nvar offsets = (_offsets = {}, _defineProperty(_offsets, AvatarSize.XS, (_AvatarSize$XS = {}, _defineProperty(_AvatarSize$XS, AvatarGroupType.Individual, \"0.0625rem\"), _defineProperty(_AvatarSize$XS, AvatarGroupType.Group, \"-0.75rem\"), _AvatarSize$XS)), _defineProperty(_offsets, AvatarSize.S, (_AvatarSize$S = {}, _defineProperty(_AvatarSize$S, AvatarGroupType.Individual, \"0.125rem\"), _defineProperty(_AvatarSize$S, AvatarGroupType.Group, \"-1.25rem\"), _AvatarSize$S)), _defineProperty(_offsets, AvatarSize.M, (_AvatarSize$M = {}, _defineProperty(_AvatarSize$M, AvatarGroupType.Individual, \"0.125rem\"), _defineProperty(_AvatarSize$M, AvatarGroupType.Group, \"-1.625rem\"), _AvatarSize$M)), _defineProperty(_offsets, AvatarSize.L, (_AvatarSize$L = {}, _defineProperty(_AvatarSize$L, AvatarGroupType.Individual, \"0.125rem\"), _defineProperty(_AvatarSize$L, AvatarGroupType.Group, \" -2rem\"), _AvatarSize$L)), _defineProperty(_offsets, AvatarSize.XL, (_AvatarSize$XL = {}, _defineProperty(_AvatarSize$XL, AvatarGroupType.Individual, \"0.25rem\"), _defineProperty(_AvatarSize$XL, AvatarGroupType.Group, \"-2.75rem\"), _AvatarSize$XL)), _offsets);\n/**\n * @public\n */\n\nvar metadata = {\n  tag: \"ui5-avatar-group\",\n  managedSlots: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */\n  {\n    /**\n    \t * Defines the mode of the <code>AvatarGroup</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>Group</code></li>\n     * <li><code>Individual</code></li>\n     * </ul>\n     * @type {AvatarGroupType}\n     * @defaultValue \"Group\"\n     * @public\n     */\n    type: {\n      type: String,\n      defaultValue: AvatarGroupType.Group\n    },\n\n    /**\n     * Defines the aria-haspopup value of the component on:\n     * <br><br>\n     * <ul>\n     * <li> the whole container when <code>type</code> property is <code>Group</code></li>\n     * <li> the default \"More\" overflow button when <code>type</code> is <code>Individual</code></li>\n     * </ul>\n     * <br><br>\n     * @type String\n     * @since 1.0.0-rc.15\n     * @protected\n     */\n    ariaHaspopup: {\n      type: String\n    },\n\n    /**\n     * @private\n     */\n    _overflowButtonText: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */\n  {\n    /**\n     * Defines the items of the component. Use the <code>ui5-avatar</code> component as an item.\n     * <br><br>\n     * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n     * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n     * as the built-in overflow action has \"Circle\" shape.\n     * @type {sap.ui.webcomponents.main.IAvatar[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement,\n      propertyName: \"items\"\n    },\n\n    /**\n     * Defines the overflow button of the component.\n     * <b>Note:</b> We recommend using the <code>ui5-button</code> component.\n     * <br><br>\n     * <b>Note:</b> If this slot is not used, the component will\n     * display the built-in overflow button.\n     * @type {HTMLElement}\n     * @slot overflowButton\n     * @public\n     * @since 1.0.0-rc.13\n     */\n    overflowButton: {\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */\n  {\n    /**\n    * Fired when the component is activated either with a\n    * click/tap or by using the Enter or Space key.\n    * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n    * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n    * @event\n    * @public\n    * @since 1.0.0-rc.11\n    */\n    click: {\n      detail: {\n        targetRef: {\n          type: HTMLElement\n        },\n        overflowButtonClicked: {\n          type: Boolean\n        }\n      }\n    },\n\n    /**\n    * Fired when the count of visible <code>ui5-avatar</code> elements in the\n    * component has changed\n    * @event\n    * @public\n    * @since 1.0.0-rc.13\n    */\n    overflow: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n * - <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * - <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\n\nvar AvatarGroup = /*#__PURE__*/function (_UI5Element) {\n  _inherits(AvatarGroup, _UI5Element);\n\n  var _super = _createSuper(AvatarGroup);\n\n  function AvatarGroup() {\n    var _this;\n\n    _classCallCheck(this, AvatarGroup);\n\n    _this = _super.call(this);\n    _this._itemNavigation = new ItemNavigation(_assertThisInitialized(_this), {\n      getItemsCallback: function getItemsCallback() {\n        return _this._isGroup ? [] : _this.items.slice(0, _this._hiddenStartIndex);\n      }\n    });\n    _this._colorIndex = 0;\n    _this._hiddenItems = 0;\n    _this._onResizeHandler = _this._onResize.bind(_assertThisInitialized(_this));\n    _this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n    return _this;\n  }\n\n  _createClass(AvatarGroup, [{\n    key: \"hiddenItems\",\n    get:\n    /**\n     * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n     * @readonly\n     * @type { Array }\n     * @defaultValue []\n     * @public\n     */\n    function get() {\n      return this.items.slice(this._hiddenStartIndex);\n    }\n    /**\n     * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n     * @readonly\n     * @type { Array }\n     * @defaultValue []\n     * @public\n     */\n\n  }, {\n    key: \"colorScheme\",\n    get: function get() {\n      return this.items.map(function (avatar) {\n        return avatar._effectiveBackgroundColor;\n      });\n    }\n  }, {\n    key: \"_customOverflowButton\",\n    get: function get() {\n      return this.overflowButton.length ? this.overflowButton[0] : undefined;\n    }\n  }, {\n    key: \"_ariaLabelText\",\n    get: function get() {\n      var hiddenItemsCount = this.hiddenItems.length;\n      var typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL; // avatar type label\n\n      var text = this.i18nBundle.getText(typeLabelKey); // add displayed-hidden avatars label\n\n      text += \" \".concat(this.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, [this._itemsCount - hiddenItemsCount], [hiddenItemsCount]));\n\n      if (this._isGroup) {\n        // the container role is \"button\", add the message for complete list activation\n        text += \" \".concat(this.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL));\n      } else {\n        // the container role is \"group\", add the \"how to navigate\" message\n        text += \" \".concat(this.i18nBundle.getText(AVATAR_GROUP_MOVE));\n      }\n\n      return text;\n    }\n  }, {\n    key: \"_overflowButtonAriaLabelText\",\n    get: function get() {\n      return this._isGroup ? undefined : this.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n    }\n  }, {\n    key: \"_containerAriaHasPopup\",\n    get: function get() {\n      return this._isGroup ? this._getAriaHasPopup() : undefined;\n    }\n  }, {\n    key: \"_overflowButtonAccInfo\",\n    get: function get() {\n      return {\n        ariaHaspopup: this._isGroup ? undefined : this._getAriaHasPopup()\n      };\n    }\n  }, {\n    key: \"_role\",\n    get: function get() {\n      return this._isGroup ? \"button\" : \"group\";\n    }\n  }, {\n    key: \"_hiddenStartIndex\",\n    get: function get() {\n      return this._itemsCount - this._hiddenItems;\n    }\n  }, {\n    key: \"_overflowBtnHidden\",\n    get: function get() {\n      return this._hiddenItems === 0;\n    }\n  }, {\n    key: \"_isGroup\",\n    get: function get() {\n      return this.type === AvatarGroupType.Group;\n    }\n  }, {\n    key: \"_itemsCount\",\n    get: function get() {\n      return this.items.length;\n    }\n  }, {\n    key: \"_groupTabIndex\",\n    get: function get() {\n      return this._isGroup ? \"0\" : \"-1\";\n    }\n  }, {\n    key: \"_overflowButton\",\n    get: function get() {\n      return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n    }\n    /**\n     * Return the effective overflow button width\n     * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n     *\n     * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n     * 2) In case of \"Individual\" group type width is directly taken from button element\n     * @private\n     */\n\n  }, {\n    key: \"_overflowButtonEffectiveWidth\",\n    get: function get() {\n      var button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton; // if in \"Group\" mode overflow button size is equal to the offset from second item\n\n      if (this._isGroup) {\n        var item = this.items[1]; // in some cases when second avatar is overflowed the offset of the button is the right one\n\n        if (!item || item.hidden) {\n          item = button;\n        }\n\n        return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n      }\n\n      return button.offsetWidth;\n    }\n  }, {\n    key: \"firstAvatarSize\",\n    get: function get() {\n      return this.items[0].size;\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return {\n        overflowButton: {\n          \"ui5-avatar-group-overflow-btn\": true,\n          \"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n          \"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n          \"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n          \"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n          \"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\"\n        }\n      };\n    }\n  }, {\n    key: \"onAfterRendering\",\n    value: function onAfterRendering() {\n      this._overflowItems();\n    }\n  }, {\n    key: \"onBeforeRendering\",\n    value: function onBeforeRendering() {\n      if (this._customOverflowButton) {\n        this._customOverflowButton.nonInteractive = this._isGroup;\n      }\n\n      this._prepareAvatars();\n    }\n  }, {\n    key: \"onEnterDOM\",\n    value: function onEnterDOM() {\n      ResizeHandler.register(this, this._onResizeHandler);\n    }\n  }, {\n    key: \"onExitDOM\",\n    value: function onExitDOM() {\n      ResizeHandler.deregister(this, this._onResizeHandler);\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      this._overflowItems();\n    }\n  }, {\n    key: \"_onkeydown\",\n    value: function _onkeydown(event) {\n      // when type is \"Individual\" the ui5-avatar and ui5-button both\n      // fire \"click\" event when SPACE or ENTER are pressed and\n      // AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n      if (this._isGroup) {\n        if (isEnter(event)) {\n          this._fireGroupEvent(event.target);\n        } else if (isSpace(event)) {\n          // prevent scrolling\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"_onkeyup\",\n    value: function _onkeyup(event) {\n      if (!event.shiftKey && isSpace(event) && this._isGroup) {\n        this._fireGroupEvent(event.target);\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_fireGroupEvent\",\n    value: function _fireGroupEvent(targetRef) {\n      var isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n\n      this.fireEvent(\"click\", {\n        targetRef: targetRef,\n        overflowButtonClicked: isOverflowButtonClicked\n      });\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      // no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n      var isButton = event.target.hasAttribute(\"ui5-button\");\n      event.stopPropagation();\n\n      if (this._isGroup || isButton) {\n        this._fireGroupEvent(event.target);\n      }\n    }\n  }, {\n    key: \"_onUI5Click\",\n    value: function _onUI5Click(event) {\n      // when noConflict=true only ui5-avatar will fire ui5-click event\n      var isAvatar = event.target.hasAttribute(\"ui5-avatar\");\n      event.stopPropagation();\n\n      if (isAvatar) {\n        this._fireGroupEvent(event.target);\n      }\n    }\n    /**\n     * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n     * Set the margins (offsets) based on RTL/LTR.\n     * @private\n     */\n\n  }, {\n    key: \"_prepareAvatars\",\n    value: function _prepareAvatars() {\n      var _this2 = this;\n\n      var RTL = this.effectiveDir === \"rtl\";\n      this._colorIndex = 0;\n      this.items.forEach(function (avatar, index) {\n        var colorIndex = _this2._getNextBackgroundColor();\n\n        avatar.interactive = !_this2._isGroup;\n\n        if (!avatar.getAttribute(\"_color-scheme\")) {\n          // AvatarGroup respects colors set to ui5-avatar\n          avatar.setAttribute(\"_color-scheme\", AvatarColorScheme[\"Accent\".concat(colorIndex)]);\n        } // last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\n\n        if (index !== _this2._itemsCount - 1 || _this2._customOverflowButton) {\n          // based on RTL margin left or right is set to avatars\n          avatar.style[\"margin-\".concat(RTL ? \"left\" : \"right\")] = offsets[avatar._effectiveSize][_this2.type];\n        }\n      });\n    }\n  }, {\n    key: \"_onfocusin\",\n    value: function _onfocusin(event) {\n      var target = event.target;\n\n      this._itemNavigation.setCurrentItem(target);\n    }\n    /**\n     * Returns the total width to item excluding the item width\n     * RTL/LTR aware\n     * @private\n     * @param {HTMLElement} item\n     */\n\n  }, {\n    key: \"_getWidthToItem\",\n    value: function _getWidthToItem(item) {\n      var isRTL = this.effectiveDir === \"rtl\";\n\n      if (isRTL) {\n        // in RTL the total width is equal to difference of the parent container width and\n        // how much is the item offset to the left minus its offsetWidth\n        return item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n      } // in LTR the width is equal to item.offsetLeft\n\n\n      return item.offsetLeft;\n    }\n    /**\n     * Overflows items that were not able to fit the container\n     * @private\n     */\n\n  }, {\n    key: \"_overflowItems\",\n    value: function _overflowItems() {\n      if (this.items.length < 2) {\n        // no need to overflow avatars\n        return;\n      }\n\n      var hiddenItems = 0;\n\n      for (var index = 0; index < this._itemsCount; index++) {\n        var item = this.items[index]; // show item to determine if it will fit the new container size\n\n        item.hidden = false; // container width to current item + item width (avatar)\n        // used to determine whether the following items will fit the container or not\n\n        var totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n        if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n          totalWidth += this._overflowButtonEffectiveWidth;\n        }\n\n        if (totalWidth > this.offsetWidth) {\n          hiddenItems = this._itemsCount - index;\n          break;\n        }\n      } // hide the items that did not fit the container size\n\n\n      this._setHiddenItems(hiddenItems);\n    }\n  }, {\n    key: \"_getNextBackgroundColor\",\n    value: function _getNextBackgroundColor() {\n      // counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n      if (++this._colorIndex > 10) {\n        this._colorIndex = 1;\n      }\n\n      return this._colorIndex;\n    }\n  }, {\n    key: \"_setHiddenItems\",\n    value: function _setHiddenItems(hiddenItems) {\n      var _this3 = this;\n\n      var shouldFireEvent = this._hiddenItems !== hiddenItems;\n      this._hiddenItems = hiddenItems;\n      this.items.forEach(function (item, index) {\n        item.hidden = index >= _this3._hiddenStartIndex;\n      });\n      this._overflowButtonText = \"+\".concat(hiddenItems > 99 ? 99 : hiddenItems);\n\n      if (shouldFireEvent) {\n        this.fireEvent(\"overflow\");\n      }\n    }\n  }, {\n    key: \"_getAriaHasPopup\",\n    value: function _getAriaHasPopup() {\n      if (this.ariaHaspopup === \"\") {\n        return;\n      }\n\n      return this.ariaHaspopup;\n    }\n  }], [{\n    key: \"metadata\",\n    get: function get() {\n      return metadata;\n    }\n  }, {\n    key: \"render\",\n    get: function get() {\n      return litRender;\n    }\n  }, {\n    key: \"template\",\n    get: function get() {\n      return AvatarGroupTemplate;\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return AvatarGroupCss;\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [Button];\n    }\n  }, {\n    key: \"onDefine\",\n    value: function () {\n      var _onDefine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchI18nBundle(\"@ui5/webcomponents\");\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onDefine() {\n        return _onDefine.apply(this, arguments);\n      }\n\n      return onDefine;\n    }()\n  }]);\n\n  return AvatarGroup;\n}(UI5Element);\n\nAvatarGroup.define();\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/AvatarGroup.js"],"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","fetchI18nBundle","getI18nBundle","isEnter","isSpace","AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL","AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL","AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL","AVATAR_GROUP_ARIA_LABEL_GROUP","AVATAR_GROUP_MOVE","AvatarGroupTemplate","AvatarGroupCss","Button","AvatarSize","AvatarGroupType","AvatarColorScheme","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","XS","Individual","Group","S","M","L","XL","metadata","tag","managedSlots","properties","type","String","defaultValue","ariaHaspopup","_overflowButtonText","noAttribute","slots","HTMLElement","propertyName","overflowButton","events","click","detail","targetRef","overflowButtonClicked","Boolean","overflow","AvatarGroup","_itemNavigation","getItemsCallback","_isGroup","items","slice","_hiddenStartIndex","_colorIndex","_hiddenItems","_onResizeHandler","_onResize","bind","i18nBundle","map","avatar","_effectiveBackgroundColor","length","undefined","hiddenItemsCount","hiddenItems","typeLabelKey","text","getText","_itemsCount","_getAriaHasPopup","shadowRoot","querySelector","button","_customOverflowButton","_overflowButton","item","hidden","effectiveDir","_getWidthToItem","offsetLeft","offsetWidth","size","firstAvatarSize","_overflowItems","nonInteractive","_prepareAvatars","register","deregister","event","_fireGroupEvent","target","preventDefault","shiftKey","isOverflowButtonClicked","classList","contains","fireEvent","isButton","hasAttribute","stopPropagation","isAvatar","RTL","forEach","index","colorIndex","_getNextBackgroundColor","interactive","getAttribute","setAttribute","style","_effectiveSize","setCurrentItem","isRTL","offsetParent","totalWidth","_overflowButtonEffectiveWidth","_setHiddenItems","shouldFireEvent","define"],"mappings":";;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,4CAA/C;AAEA,SACCC,OADD,EAECC,OAFD,QAGO,sCAHP;AAKA,SACCC,mCADD,EAECC,qCAFD,EAGCC,kCAHD,EAICC,6BAJD,EAKCC,iBALD,QAMO,mCANP,C,CAQA;;AACA,OAAOC,mBAAP,MAAgC,kDAAhC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,IAAMC,kBAAkB,GAAG,+BAA3B;AACA,IAAMC,kCAAkC,cAAOD,kBAAP,CAAxC,C,CAEA;;AACA,IAAME,OAAO,6CACXL,UAAU,CAACM,EADA,wDAEVL,eAAe,CAACM,UAFN,EAEmB,WAFnB,mCAGVN,eAAe,CAACO,KAHN,EAGc,UAHd,+CAKXR,UAAU,CAACS,CALA,sDAMVR,eAAe,CAACM,UANN,EAMmB,UANnB,kCAOVN,eAAe,CAACO,KAPN,EAOc,UAPd,8CASXR,UAAU,CAACU,CATA,sDAUVT,eAAe,CAACM,UAVN,EAUmB,UAVnB,kCAWVN,eAAe,CAACO,KAXN,EAWc,WAXd,8CAaXR,UAAU,CAACW,CAbA,sDAcVV,eAAe,CAACM,UAdN,EAcmB,UAdnB,kCAeVN,eAAe,CAACO,KAfN,EAec,QAfd,8CAiBXR,UAAU,CAACY,EAjBA,wDAkBVX,eAAe,CAACM,UAlBN,EAkBmB,SAlBnB,mCAmBVN,eAAe,CAACO,KAnBN,EAmBc,UAnBd,8BAAb;AAuBA;AACA;AACA;;AACA,IAAMK,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,kBADW;AAEhBC,EAAAA,YAAY,EAAE,IAFE;AAGhBC,EAAAA,UAAU;AAAE;AAA+D;AAE1E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLA,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,YAAY,EAAElB,eAAe,CAACO;AAFzB,KAdoE;;AAmB1E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEY,IAAAA,YAAY,EAAE;AACbH,MAAAA,IAAI,EAAEC;AADO,KA/B4D;;AAmC1E;AACF;AACA;AACEG,IAAAA,mBAAmB,EAAE;AACpBJ,MAAAA,IAAI,EAAEC,MADc;AAEpBI,MAAAA,WAAW,EAAE;AAFO;AAtCqD,GAH3D;AA8ChBC,EAAAA,KAAK;AAAE;AAA8D;AACpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVN,MAAAA,IAAI,EAAEO,WADI;AAEVC,MAAAA,YAAY,EAAE;AAFJ,KAXyD;;AAepE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGC,IAAAA,cAAc,EAAE;AAChBT,MAAAA,IAAI,EAAEO;AADU;AA1BmD,GA9CrD;AA4EhBG,EAAAA,MAAM;AAAE;AAA8D;AACrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,KAAK,EAAE;AACNC,MAAAA,MAAM,EAAE;AACPC,QAAAA,SAAS,EAAE;AAAEb,UAAAA,IAAI,EAAEO;AAAR,SADJ;AAEPO,QAAAA,qBAAqB,EAAE;AAAEd,UAAAA,IAAI,EAAEe;AAAR;AAFhB;AADF,KAV8D;;AAgBrE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AAvB2D;AA5EtD,CAAjB;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\n\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\n\nimport {\n\tAVATAR_GROUP_DISPLAYED_HIDDEN_LABEL,\n\tAVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL,\n\tAVATAR_GROUP_ARIA_LABEL_INDIVIDUAL,\n\tAVATAR_GROUP_ARIA_LABEL_GROUP,\n\tAVATAR_GROUP_MOVE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.75rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.625rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.75rem\",\n\t},\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-avatar-group\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */  {\n\n\t\t/**\n\t \t * Defines the mode of the <code>AvatarGroup</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Group</code></li>\n\t\t * <li><code>Individual</code></li>\n\t\t * </ul>\n\t\t * @type {AvatarGroupType}\n\t\t * @defaultValue \"Group\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: AvatarGroupType.Group,\n\t\t},\n\n\t\t/**\n\t\t * Defines the aria-haspopup value of the component on:\n\t\t * <br><br>\n\t\t * <ul>\n\t\t * <li> the whole container when <code>type</code> property is <code>Group</code></li>\n\t\t * <li> the default \"More\" overflow button when <code>type</code> is <code>Individual</code></li>\n\t\t * </ul>\n\t\t * <br><br>\n\t\t * @type String\n\t\t * @since 1.0.0-rc.15\n\t\t * @protected\n\t\t */\n\t\tariaHaspopup: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_overflowButtonText: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t * Defines the items of the component. Use the <code>ui5-avatar</code> component as an item.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n\t\t * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n\t\t * as the built-in overflow action has \"Circle\" shape.\n\t\t * @type {sap.ui.webcomponents.main.IAvatar[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t},\n\t\t/**\n\t\t * Defines the overflow button of the component.\n\t\t * <b>Note:</b> We recommend using the <code>ui5-button</code> component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If this slot is not used, the component will\n\t\t * display the built-in overflow button.\n\t\t * @type {HTMLElement}\n\t\t * @slot overflowButton\n\t\t * @public\n\t\t * @since 1.0.0-rc.13\n\t\t */\n\t\t overflowButton: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t* Fired when the component is activated either with a\n\t\t* click/tap or by using the Enter or Space key.\n\t\t* @param {HTMLElement} targetRef The DOM ref of the clicked item.\n\t\t* @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.11\n\t\t*/\n\t\tclick: {\n\t\t\tdetail: {\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t\toverflowButtonClicked: { type: Boolean },\n\t\t\t},\n\t\t},\n\t\t/**\n\t\t* Fired when the count of visible <code>ui5-avatar</code> elements in the\n\t\t* component has changed\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.13\n\t\t*/\n\t\toverflow: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n * - <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * - <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\n\t\tthis._colorIndex = 0;\n\t\tthis._hiddenItems = 0;\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn AvatarGroupTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn AvatarGroupCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\t/**\n\t * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget hiddenItems() {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget colorScheme() {\n\t\treturn this.items.map(avatar => avatar._effectiveBackgroundColor);\n\t}\n\n\tget _customOverflowButton() {\n\t\treturn this.overflowButton.length ? this.overflowButton[0] : undefined;\n\t}\n\n\tget _ariaLabelText() {\n\t\tconst hiddenItemsCount = this.hiddenItems.length;\n\t\tconst typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n\n\t\t// avatar type label\n\t\tlet text = this.i18nBundle.getText(typeLabelKey);\n\n\t\t// add displayed-hidden avatars label\n\t\ttext += ` ${this.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, [this._itemsCount - hiddenItemsCount], [hiddenItemsCount])}`;\n\n\t\tif (this._isGroup) {\n\t\t\t// the container role is \"button\", add the message for complete list activation\n\t\t\ttext += ` ${this.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n\t\t} else {\n\t\t\t// the container role is \"group\", add the \"how to navigate\" message\n\t\t\ttext += ` ${this.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n\t\t}\n\n\t\treturn text;\n\t}\n\n\tget _overflowButtonAriaLabelText() {\n\t\treturn this._isGroup ? undefined : this.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n\t}\n\n\tget _containerAriaHasPopup() {\n\t\treturn this._isGroup ? this._getAriaHasPopup() : undefined;\n\t}\n\n\tget _overflowButtonAccInfo() {\n\t\treturn {\n\t\t\tariaHaspopup: this._isGroup ? undefined : this._getAriaHasPopup(),\n\t\t};\n\t}\n\n\tget _role() {\n\t\treturn this._isGroup ? \"button\" : \"group\";\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\tconst button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\t\tif (this._isGroup) {\n\t\t\tlet item = this.items[1];\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = button;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n\t\t}\n\n\t\treturn button.offsetWidth;\n\t}\n\n\tget firstAvatarSize() {\n\t\treturn this.items[0].size;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\toverflowButton: {\n\t\t\t\t\"ui5-avatar-group-overflow-btn\": true,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\",\n\t\t\t},\n\t\t};\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this._customOverflowButton) {\n\t\t\tthis._customOverflowButton.nonInteractive = this._isGroup;\n\t\t}\n\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(event) {\n\t\t// when type is \"Individual\" the ui5-avatar and ui5-button both\n\t\t// fire \"click\" event when SPACE or ENTER are pressed and\n\t\t// AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n\t\tif (this._isGroup) {\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis._fireGroupEvent(event.target);\n\t\t\t} else if (isSpace(event)) {\n\t\t\t\t// prevent scrolling\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (!event.shiftKey && isSpace(event) && this._isGroup) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n\n\t\tthis.fireEvent(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onClick(event) {\n\t\t// no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n\t\tconst isButton = event.target.hasAttribute(\"ui5-button\");\n\t\tevent.stopPropagation();\n\n\t\tif (this._isGroup || isButton) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_onUI5Click(event) {\n\t\t// when noConflict=true only ui5-avatar will fire ui5-click event\n\t\tconst isAvatar = event.target.hasAttribute(\"ui5-avatar\");\n\t\tevent.stopPropagation();\n\n\t\tif (isAvatar) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tconst RTL = this.effectiveDir === \"rtl\";\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"_color-scheme\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\t// based on RTL margin left or right is set to avatars\n\t\t\t\tavatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(event) {\n\t\tconst target = event.target;\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param {HTMLElement} item\n\t */\n\t_getWidthToItem(item) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\n\t\tif (isRTL) {\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\t\t\treturn item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\t// in LTR the width is equal to item.offsetLeft\n\t\treturn item.offsetLeft;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems) {\n\t\tconst shouldFireEvent = this._hiddenItems !== hiddenItems;\n\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\n\t\tif (shouldFireEvent) {\n\t\t\tthis.fireEvent(\"overflow\");\n\t\t}\n\t}\n\n\t_getAriaHasPopup() {\n\t\tif (this.ariaHaspopup === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.ariaHaspopup;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\n"]},"metadata":{},"sourceType":"module"}