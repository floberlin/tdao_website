{"ast":null,"code":"import Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport getTodayUTCTimestamp from \"@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js\";\nimport DateComponentBase from \"./DateComponentBase.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  properties:\n  /** @lends  sap.ui.webcomponents.main.CalendarPart.prototype */\n  {\n    /**\n     * The timestamp of the currently focused date. Set this property to move the component's focus to a certain date.\n     * <b>Node:</b> Timestamp is 10-digit Integer representing the seconds (not milliseconds) since the Unix Epoch.\n     * @type {Integer}\n     * @protected\n     */\n    timestamp: {\n      type: Integer\n    }\n  }\n};\n/**\n * @class\n *\n * Abstract base class for Calendar, DayPicker, MonthPicker and YearPicker that adds support for:\n *  - common properties (timestamp, selectedDates): declarations and methods that operate on them\n *  - other common code\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CalendarPart\n * @extends DateComponentBase\n * @public\n */\n\nclass CalendarPart extends DateComponentBase {\n  static get metadata() {\n    return metadata;\n  }\n\n  get _minTimestamp() {\n    return this._minDate.valueOf() / 1000;\n  }\n\n  get _maxTimestamp() {\n    return this._maxDate.valueOf() / 1000;\n  }\n  /**\n   * Returns the effective timestamp to be used by the respective calendar part\n   * @protected\n   */\n\n\n  get _timestamp() {\n    let timestamp = this.timestamp !== undefined ? this.timestamp : getTodayUTCTimestamp(this._primaryCalendarType);\n\n    if (timestamp < this._minTimestamp || timestamp > this._maxTimestamp) {\n      timestamp = this._minTimestamp;\n    }\n\n    return timestamp;\n  }\n\n  get _localDate() {\n    return new Date(this._timestamp * 1000);\n  }\n  /**\n   * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic\n   * @protected\n   */\n\n\n  get _calendarDate() {\n    return CalendarDate.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);\n  }\n  /**\n   * Change a timestamp and enforce limits\n   *\n   * @param timestamp\n   * @protected\n   */\n\n\n  _safelySetTimestamp(timestamp) {\n    const min = this._minDate.valueOf() / 1000;\n    const max = this._maxDate.valueOf() / 1000;\n\n    if (timestamp < min) {\n      timestamp = min;\n    }\n\n    if (timestamp > max) {\n      timestamp = max;\n    }\n\n    this.timestamp = timestamp;\n  }\n  /**\n   * Modify a timestamp by a certain amount of days/months/years and enforce limits\n   * @param amount\n   * @param unit\n   * @protected\n   */\n\n\n  _safelyModifyTimestampBy(amount, unit) {\n    const newDate = modifyDateBy(this._calendarDate, amount, unit);\n\n    this._safelySetTimestamp(newDate.valueOf() / 1000);\n  }\n\n  _getTimestampFromDom(domNode) {\n    const oMonthDomRef = domNode.getAttribute(\"data-sap-timestamp\");\n    return parseInt(oMonthDomRef);\n  }\n\n}\n\nexport default CalendarPart;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/CalendarPart.js"],"names":["Integer","CalendarDate","modifyDateBy","getTodayUTCTimestamp","DateComponentBase","metadata","properties","timestamp","type","CalendarPart","_minTimestamp","_minDate","valueOf","_maxTimestamp","_maxDate","_timestamp","undefined","_primaryCalendarType","_localDate","Date","_calendarDate","fromTimestamp","getTime","_safelySetTimestamp","min","max","_safelyModifyTimestampBy","amount","unit","newDate","_getTimestampFromDom","domNode","oMonthDomRef","getAttribute","parseInt"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,+CAApB;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAOC,oBAAP,MAAiC,oEAAjC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,UAAU;AAAE;AAAgE;AAC3E;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE;AACVC,MAAAA,IAAI,EAAER;AADI;AAPgE;AAD5D,CAAjB;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMS,YAAN,SAA2BL,iBAA3B,CAA6C;AACzB,aAARC,QAAQ,GAAG;AACrB,WAAOA,QAAP;AACA;;AAEgB,MAAbK,aAAa,GAAG;AACnB,WAAO,KAAKC,QAAL,CAAcC,OAAd,KAA0B,IAAjC;AACA;;AAEgB,MAAbC,aAAa,GAAG;AACnB,WAAO,KAAKC,QAAL,CAAcF,OAAd,KAA0B,IAAjC;AACA;AAED;AACD;AACA;AACA;;;AACe,MAAVG,UAAU,GAAG;AAChB,QAAIR,SAAS,GAAG,KAAKA,SAAL,KAAmBS,SAAnB,GAA+B,KAAKT,SAApC,GAAgDJ,oBAAoB,CAAC,KAAKc,oBAAN,CAApF;;AACA,QAAIV,SAAS,GAAG,KAAKG,aAAjB,IAAkCH,SAAS,GAAG,KAAKM,aAAvD,EAAsE;AACrEN,MAAAA,SAAS,GAAG,KAAKG,aAAjB;AACA;;AACD,WAAOH,SAAP;AACA;;AAEa,MAAVW,UAAU,GAAG;AAChB,WAAO,IAAIC,IAAJ,CAAS,KAAKJ,UAAL,GAAkB,IAA3B,CAAP;AACA;AAED;AACD;AACA;AACA;;;AACkB,MAAbK,aAAa,GAAG;AACnB,WAAOnB,YAAY,CAACoB,aAAb,CAA2B,KAAKH,UAAL,CAAgBI,OAAhB,EAA3B,EAAsD,KAAKL,oBAA3D,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCM,EAAAA,mBAAmB,CAAChB,SAAD,EAAY;AAC9B,UAAMiB,GAAG,GAAG,KAAKb,QAAL,CAAcC,OAAd,KAA0B,IAAtC;AACA,UAAMa,GAAG,GAAG,KAAKX,QAAL,CAAcF,OAAd,KAA0B,IAAtC;;AAEA,QAAIL,SAAS,GAAGiB,GAAhB,EAAqB;AACpBjB,MAAAA,SAAS,GAAGiB,GAAZ;AACA;;AACD,QAAIjB,SAAS,GAAGkB,GAAhB,EAAqB;AACpBlB,MAAAA,SAAS,GAAGkB,GAAZ;AACA;;AAED,SAAKlB,SAAL,GAAiBA,SAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCmB,EAAAA,wBAAwB,CAACC,MAAD,EAASC,IAAT,EAAe;AACtC,UAAMC,OAAO,GAAG3B,YAAY,CAAC,KAAKkB,aAAN,EAAqBO,MAArB,EAA6BC,IAA7B,CAA5B;;AACA,SAAKL,mBAAL,CAAyBM,OAAO,CAACjB,OAAR,KAAoB,IAA7C;AACA;;AAEDkB,EAAAA,oBAAoB,CAACC,OAAD,EAAU;AAC7B,UAAMC,YAAY,GAAGD,OAAO,CAACE,YAAR,CAAqB,oBAArB,CAArB;AACA,WAAOC,QAAQ,CAACF,YAAD,CAAf;AACA;;AAvE2C;;AA0E7C,eAAevB,YAAf","sourcesContent":["import Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport getTodayUTCTimestamp from \"@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js\";\nimport DateComponentBase from \"./DateComponentBase.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\tproperties: /** @lends  sap.ui.webcomponents.main.CalendarPart.prototype */ {\n\t\t/**\n\t\t * The timestamp of the currently focused date. Set this property to move the component's focus to a certain date.\n\t\t * <b>Node:</b> Timestamp is 10-digit Integer representing the seconds (not milliseconds) since the Unix Epoch.\n\t\t * @type {Integer}\n\t\t * @protected\n\t\t */\n\t\ttimestamp: {\n\t\t\ttype: Integer,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * Abstract base class for Calendar, DayPicker, MonthPicker and YearPicker that adds support for:\n *  - common properties (timestamp, selectedDates): declarations and methods that operate on them\n *  - other common code\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CalendarPart\n * @extends DateComponentBase\n * @public\n */\nclass CalendarPart extends DateComponentBase {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tget _minTimestamp() {\n\t\treturn this._minDate.valueOf() / 1000;\n\t}\n\n\tget _maxTimestamp() {\n\t\treturn this._maxDate.valueOf() / 1000;\n\t}\n\n\t/**\n\t * Returns the effective timestamp to be used by the respective calendar part\n\t * @protected\n\t */\n\tget _timestamp() {\n\t\tlet timestamp = this.timestamp !== undefined ? this.timestamp : getTodayUTCTimestamp(this._primaryCalendarType);\n\t\tif (timestamp < this._minTimestamp || timestamp > this._maxTimestamp) {\n\t\t\ttimestamp = this._minTimestamp;\n\t\t}\n\t\treturn timestamp;\n\t}\n\n\tget _localDate() {\n\t\treturn new Date(this._timestamp * 1000);\n\t}\n\n\t/**\n\t * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic\n\t * @protected\n\t */\n\tget _calendarDate() {\n\t\treturn CalendarDate.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);\n\t}\n\n\t/**\n\t * Change a timestamp and enforce limits\n\t *\n\t * @param timestamp\n\t * @protected\n\t */\n\t_safelySetTimestamp(timestamp) {\n\t\tconst min = this._minDate.valueOf() / 1000;\n\t\tconst max = this._maxDate.valueOf() / 1000;\n\n\t\tif (timestamp < min) {\n\t\t\ttimestamp = min;\n\t\t}\n\t\tif (timestamp > max) {\n\t\t\ttimestamp = max;\n\t\t}\n\n\t\tthis.timestamp = timestamp;\n\t}\n\n\t/**\n\t * Modify a timestamp by a certain amount of days/months/years and enforce limits\n\t * @param amount\n\t * @param unit\n\t * @protected\n\t */\n\t_safelyModifyTimestampBy(amount, unit) {\n\t\tconst newDate = modifyDateBy(this._calendarDate, amount, unit);\n\t\tthis._safelySetTimestamp(newDate.valueOf() / 1000);\n\t}\n\n\t_getTimestampFromDom(domNode) {\n\t\tconst oMonthDomRef = domNode.getAttribute(\"data-sap-timestamp\");\n\t\treturn parseInt(oMonthDomRef);\n\t}\n}\n\nexport default CalendarPart;\n"]},"metadata":{},"sourceType":"module"}