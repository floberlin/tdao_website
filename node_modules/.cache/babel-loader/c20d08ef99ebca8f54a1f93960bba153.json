{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\n\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport { isShow, isPageUp, isPageDown, isPageUpShift, isPageDownShift, isPageUpShiftCtrl, isPageDownShiftCtrl } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/time-entry-request.js\";\nimport Icon from \"./Icon.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport TimePickerTemplate from \"./generated/templates/TimePickerTemplate.lit.js\";\nimport TimePickerPopoverTemplate from \"./generated/templates/TimePickerPopoverTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Button from \"./Button.js\";\nimport TimeSelection from \"./TimeSelection.js\";\nimport { TIMEPICKER_SUBMIT_BUTTON, TIMEPICKER_CANCEL_BUTTON } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport TimePickerCss from \"./generated/themes/TimePicker.css.js\";\nimport TimePickerPopoverCss from \"./generated/themes/TimePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  languageAware: true,\n  managedSlots: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */\n  {\n    /**\n     * Defines a formatted time value.\n     *\n     * @type {string}\n     * @defaultvalue undefined\n     * @public\n     */\n    value: {\n      type: String,\n      defaultValue: undefined\n    },\n\n    /**\n     * Defines the value state of the <code>ui5-time-picker</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Determines whether the <code>ui5-time-picker</code> is displayed as disabled.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Determines whether the <code>ui5-time-picker</code> is displayed as readonly.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * @private\n     */\n    _isPickerOpen: {\n      type: Boolean,\n      noAttribute: true\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */\n  {\n    /**\n     * Defines the value state message that will be displayed as pop up under the <code>ui5-time-picker</code>.\n     * <br><br>\n     *\n     * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n     * <br>\n     * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n     * when the <code>ui5-time-picker</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n     * @type {HTMLElement}\n     * @since 1.0.0-rc.8\n     * @slot\n     * @public\n     */\n    valueStateMessage: {\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */\n  {\n    /**\n     * Fired when the input operation has finished by clicking the \"OK\" button or\n     * when the text in the input field has changed and the focus leaves the input field.\n     *\n     * @event\n     * @public\n    */\n    change: {},\n\n    /**\n     * Fired when the value of the <code>ui5-time-picker</code> is changed at each key stroke.\n     *\n     * @event\n     * @public\n    */\n    input: {}\n  }\n};\n/**\n * @class\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TimePickerBase\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.6\n */\n\nclass TimePickerBase extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get styles() {\n    return TimePickerCss;\n  }\n\n  static get staticAreaTemplate() {\n    return TimePickerPopoverTemplate;\n  }\n\n  static get template() {\n    return TimePickerTemplate;\n  }\n\n  static get dependencies() {\n    return [Icon, ResponsivePopover, TimeSelection, Input, Button];\n  }\n\n  static async onDefine() {\n    [TimePickerBase.i18nBundle] = await Promise.all([getI18nBundle(\"@ui5/webcomponents\"), fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript())]);\n  }\n\n  static get staticAreaStyles() {\n    return [ResponsivePopoverCommonCss, TimePickerPopoverCss];\n  }\n\n  constructor() {\n    super();\n  }\n  /**\n   * @abstract\n   * @protected\n   */\n\n\n  get _placeholder() {\n    return undefined;\n  }\n  /**\n   * @abstract\n   * @protected\n   */\n\n\n  get _formatPattern() {\n    return undefined;\n  }\n\n  get _effectiveValue() {\n    return this.value;\n  }\n\n  get _timeSelectionValue() {\n    return this.tempValue;\n  }\n\n  onTimeSelectionChange(event) {\n    this.tempValue = event.detail.value; // every time the user changes the sliders -> update tempValue\n  }\n\n  submitPickers() {\n    this._updateValueAndFireEvents(this.tempValue, true, [\"change\", \"value-changed\"]);\n\n    this.closePicker();\n  }\n\n  onResponsivePopoverAfterClose() {\n    this._isPickerOpen = false;\n  }\n\n  async _handleInputClick() {\n    if (this._isPickerOpen) {\n      return;\n    }\n\n    const inputField = await this._getInputField();\n\n    if (inputField) {\n      inputField.select();\n    }\n  }\n\n  _updateValueAndFireEvents(value, normalizeValue, events) {\n    if (value === this.value) {\n      return;\n    }\n\n    const valid = this.isValid(value);\n\n    if (valid && normalizeValue) {\n      value = this.normalizeValue(value); // transform valid values (in any format) to the correct format\n    }\n\n    this.value = \"\"; // Do not remove! DurationPicker use case -> value is 05:10, user tries 05:12, after normalization value is changed back to 05:10 so no invalidation happens, but the input still shows 05:12. Thus we enforce invalidation with the \"\"\n\n    this.value = value;\n    this.tempValue = value; // if the picker is open, sync it\n\n    this._updateValueState(); // Change the value state to Error/None, but only if needed\n\n\n    events.forEach(event => {\n      this.fireEvent(event, {\n        value,\n        valid\n      });\n    });\n  }\n\n  _updateValueState() {\n    const isValid = this.isValid(this.value);\n\n    if (!isValid) {\n      // If not valid - always set Error regardless of the current value state\n      this.valueState = ValueState.Error;\n    } else if (isValid && this.valueState === ValueState.Error) {\n      // However if valid, change only Error (but not the others) to None\n      this.valueState = ValueState.None;\n    }\n  }\n\n  async _handleInputChange(event) {\n    this._updateValueAndFireEvents(event.target.value, true, [\"change\", \"value-changed\"]);\n  }\n\n  async _handleInputLiveChange(event) {\n    this._updateValueAndFireEvents(event.target.value, false, [\"input\"]);\n  }\n  /**\n   * Closes the picker\n   * @public\n   */\n\n\n  async closePicker() {\n    const responsivePopover = await this._getPopover();\n    responsivePopover.close();\n    this._isPickerOpen = false;\n  }\n  /**\n   * Opens the picker.\n   * @async\n   * @public\n   * @returns {Promise} Resolves when the picker is open\n   */\n\n\n  async openPicker() {\n    this.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(new Date());\n    const responsivePopover = await this._getPopover();\n    responsivePopover.showAt(this);\n    this._isPickerOpen = true;\n  }\n\n  togglePicker() {\n    if (this.isOpen()) {\n      this.closePicker();\n    } else if (this._canOpenPicker()) {\n      this.openPicker();\n    }\n  }\n  /**\n   * Checks if the picker is open\n   * @public\n   * @returns {boolean}\n   */\n\n\n  isOpen() {\n    return !!this._isPickerOpen;\n  }\n\n  _canOpenPicker() {\n    return !this.disabled && !this.readonly;\n  }\n\n  async _getPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(\"[ui5-responsive-popover]\");\n  }\n\n  _getInput() {\n    return this.shadowRoot.querySelector(\"[ui5-input]\");\n  }\n\n  _getInputField() {\n    const input = this._getInput();\n\n    return input && input.getInputDOMRef();\n  }\n\n  _onkeydown(e) {\n    if (isShow(e)) {\n      e.preventDefault();\n      this.togglePicker();\n    }\n\n    if (this.isOpen()) {\n      return;\n    }\n\n    if (isPageUpShiftCtrl(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(1, \"second\");\n    } else if (isPageUpShift(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(1, \"minute\");\n    } else if (isPageUp(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(1, \"hour\");\n    } else if (isPageDownShiftCtrl(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(-1, \"second\");\n    } else if (isPageDownShift(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(-1, \"minute\");\n    } else if (isPageDown(e)) {\n      e.preventDefault();\n\n      this._modifyValueBy(-1, \"hour\");\n    }\n  }\n\n  get _isPattern() {\n    return this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n  }\n\n  getFormat() {\n    let dateFormat;\n\n    if (this._isPattern) {\n      dateFormat = DateFormat.getInstance({\n        pattern: this._formatPattern\n      });\n    } else {\n      dateFormat = DateFormat.getInstance({\n        style: this._formatPattern\n      });\n    }\n\n    return dateFormat;\n  }\n  /**\n   * Formats a Java Script date object into a string representing a locale date and time\n   * according to the <code>formatPattern</code> property of the TimePicker instance\n   * @param {object} date A Java Script date object to be formatted as string\n   * @public\n   * @returns {string}\n   */\n\n\n  formatValue(date) {\n    return this.getFormat().format(date);\n  }\n  /**\n   * Checks if a value is valid against the current <code>formatPattern</code> value.\n   *\n   * <br><br>\n   * <b>Note:</b> an empty string is considered as valid value.\n   * @param {string} value The value to be tested against the current date format\n   * @public\n   * @returns {boolean}\n   */\n\n\n  isValid(value) {\n    return value === \"\" || this.getFormat().parse(value);\n  }\n\n  normalizeValue(value) {\n    if (value === \"\") {\n      return value;\n    }\n\n    return this.getFormat().format(this.getFormat().parse(value));\n  }\n\n  _modifyValueBy(amount, unit) {\n    const date = this.getFormat().parse(this._effectiveValue);\n\n    if (!date) {\n      return;\n    }\n\n    if (unit === \"hour\") {\n      date.setHours(date.getHours() + amount);\n    } else if (unit === \"minute\") {\n      date.setMinutes(date.getMinutes() + amount);\n    } else if (unit === \"second\") {\n      date.setSeconds(date.getSeconds() + amount);\n    }\n\n    const newValue = this.formatValue(date);\n\n    this._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n  }\n\n  _handleWheel(e) {\n    e.preventDefault();\n  }\n\n  get submitButtonLabel() {\n    return TimePickerBase.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n  }\n\n  get cancelButtonLabel() {\n    return TimePickerBase.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n  }\n  /**\n   * @protected\n   */\n\n\n  get openIconName() {\n    return \"time-entry-request\";\n  }\n\n}\n\nexport default TimePickerBase;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/TimePickerBase.js"],"names":["UI5Element","litRender","getI18nBundle","getLocale","ValueState","DateFormat","fetchCldr","isShow","isPageUp","isPageDown","isPageUpShift","isPageDownShift","isPageUpShiftCtrl","isPageDownShiftCtrl","Icon","ResponsivePopover","TimePickerTemplate","TimePickerPopoverTemplate","Input","Button","TimeSelection","TIMEPICKER_SUBMIT_BUTTON","TIMEPICKER_CANCEL_BUTTON","TimePickerCss","TimePickerPopoverCss","ResponsivePopoverCommonCss","metadata","languageAware","managedSlots","properties","value","type","String","defaultValue","undefined","valueState","None","disabled","Boolean","readonly","_isPickerOpen","noAttribute","slots","valueStateMessage","HTMLElement","events","change","input","TimePickerBase","render","styles","staticAreaTemplate","template","dependencies","onDefine","i18nBundle","Promise","all","getLanguage","getRegion","getScript","staticAreaStyles","constructor","_placeholder","_formatPattern","_effectiveValue","_timeSelectionValue","tempValue","onTimeSelectionChange","event","detail","submitPickers","_updateValueAndFireEvents","closePicker","onResponsivePopoverAfterClose","_handleInputClick","inputField","_getInputField","select","normalizeValue","valid","isValid","_updateValueState","forEach","fireEvent","Error","_handleInputChange","target","_handleInputLiveChange","responsivePopover","_getPopover","close","openPicker","getFormat","format","Date","showAt","togglePicker","isOpen","_canOpenPicker","staticAreaItem","getStaticAreaItemDomRef","querySelector","_getInput","shadowRoot","getInputDOMRef","_onkeydown","e","preventDefault","_modifyValueBy","_isPattern","dateFormat","getInstance","pattern","style","formatValue","date","parse","amount","unit","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","newValue","_handleWheel","submitButtonLabel","getText","cancelButtonLabel","openIconName"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // default calendar for bundling\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport {\n\tisShow,\n\tisPageUp,\n\tisPageDown,\n\tisPageUpShift,\n\tisPageDownShift,\n\tisPageUpShiftCtrl,\n\tisPageDownShiftCtrl,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/time-entry-request.js\";\nimport Icon from \"./Icon.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport TimePickerTemplate from \"./generated/templates/TimePickerTemplate.lit.js\";\nimport TimePickerPopoverTemplate from \"./generated/templates/TimePickerPopoverTemplate.lit.js\";\nimport Input from \"./Input.js\";\nimport Button from \"./Button.js\";\nimport TimeSelection from \"./TimeSelection.js\";\n\nimport {\n\tTIMEPICKER_SUBMIT_BUTTON,\n\tTIMEPICKER_CANCEL_BUTTON,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport TimePickerCss from \"./generated/themes/TimePicker.css.js\";\nimport TimePickerPopoverCss from \"./generated/themes/TimePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\tlanguageAware: true,\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */ {\n\t\t/**\n\t\t * Defines a formatted time value.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue undefined\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the <code>ui5-time-picker</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the <code>ui5-time-picker</code> is displayed as disabled.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the <code>ui5-time-picker</code> is displayed as readonly.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_isPickerOpen: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */ {\n\t\t/**\n\t\t * Defines the value state message that will be displayed as pop up under the <code>ui5-time-picker</code>.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n\t\t * <br>\n\t\t * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n\t\t * when the <code>ui5-time-picker</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n\t\t * @type {HTMLElement}\n\t\t * @since 1.0.0-rc.8\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tvalueStateMessage: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.TimePickerBase.prototype */ {\n\t\t/**\n\t\t * Fired when the input operation has finished by clicking the \"OK\" button or\n\t\t * when the text in the input field has changed and the focus leaves the input field.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t*/\n\t\tchange: {},\n\t\t/**\n\t\t * Fired when the value of the <code>ui5-time-picker</code> is changed at each key stroke.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t*/\n\t\tinput: {},\n\t},\n};\n\n/**\n * @class\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TimePickerBase\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.6\n */\nclass TimePickerBase extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn TimePickerCss;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn TimePickerPopoverTemplate;\n\t}\n\n\tstatic get template() {\n\t\treturn TimePickerTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tIcon,\n\t\t\tResponsivePopover,\n\t\t\tTimeSelection,\n\t\t\tInput,\n\t\t\tButton,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\t[TimePickerBase.i18nBundle] = await Promise.all([\n\t\t\tgetI18nBundle(\"@ui5/webcomponents\"),\n\t\t\tfetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),\n\t\t]);\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [ResponsivePopoverCommonCss, TimePickerPopoverCss];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @abstract\n\t * @protected\n\t */\n\tget _placeholder() {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @abstract\n\t * @protected\n\t */\n\tget _formatPattern() {\n\t\treturn undefined;\n\t}\n\n\tget _effectiveValue() {\n\t\treturn this.value;\n\t}\n\n\tget _timeSelectionValue() {\n\t\treturn this.tempValue;\n\t}\n\n\tonTimeSelectionChange(event) {\n\t\tthis.tempValue = event.detail.value; // every time the user changes the sliders -> update tempValue\n\t}\n\n\tsubmitPickers() {\n\t\tthis._updateValueAndFireEvents(this.tempValue, true, [\"change\", \"value-changed\"]);\n\t\tthis.closePicker();\n\t}\n\n\tonResponsivePopoverAfterClose() {\n\t\tthis._isPickerOpen = false;\n\t}\n\n\tasync _handleInputClick() {\n\t\tif (this._isPickerOpen) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst inputField = await this._getInputField();\n\n\t\tif (inputField) {\n\t\t\tinputField.select();\n\t\t}\n\t}\n\n\t_updateValueAndFireEvents(value, normalizeValue, events) {\n\t\tif (value === this.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst valid = this.isValid(value);\n\t\tif (valid && normalizeValue) {\n\t\t\tvalue = this.normalizeValue(value); // transform valid values (in any format) to the correct format\n\t\t}\n\n\t\tthis.value = \"\"; // Do not remove! DurationPicker use case -> value is 05:10, user tries 05:12, after normalization value is changed back to 05:10 so no invalidation happens, but the input still shows 05:12. Thus we enforce invalidation with the \"\"\n\t\tthis.value = value;\n\t\tthis.tempValue = value; // if the picker is open, sync it\n\t\tthis._updateValueState(); // Change the value state to Error/None, but only if needed\n\t\tevents.forEach(event => {\n\t\t\tthis.fireEvent(event, { value, valid });\n\t\t});\n\t}\n\n\t_updateValueState() {\n\t\tconst isValid = this.isValid(this.value);\n\t\tif (!isValid) { // If not valid - always set Error regardless of the current value state\n\t\t\tthis.valueState = ValueState.Error;\n\t\t} else if (isValid && this.valueState === ValueState.Error) { // However if valid, change only Error (but not the others) to None\n\t\t\tthis.valueState = ValueState.None;\n\t\t}\n\t}\n\n\tasync _handleInputChange(event) {\n\t\tthis._updateValueAndFireEvents(event.target.value, true, [\"change\", \"value-changed\"]);\n\t}\n\n\tasync _handleInputLiveChange(event) {\n\t\tthis._updateValueAndFireEvents(event.target.value, false, [\"input\"]);\n\t}\n\n\t/**\n\t * Closes the picker\n\t * @public\n\t */\n\tasync closePicker() {\n\t\tconst responsivePopover = await this._getPopover();\n\t\tresponsivePopover.close();\n\t\tthis._isPickerOpen = false;\n\t}\n\n\t/**\n\t * Opens the picker.\n\t * @async\n\t * @public\n\t * @returns {Promise} Resolves when the picker is open\n\t */\n\tasync openPicker() {\n\t\tthis.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(new Date());\n\t\tconst responsivePopover = await this._getPopover();\n\t\tresponsivePopover.showAt(this);\n\t\tthis._isPickerOpen = true;\n\t}\n\n\ttogglePicker() {\n\t\tif (this.isOpen()) {\n\t\t\tthis.closePicker();\n\t\t} else if (this._canOpenPicker()) {\n\t\t\tthis.openPicker();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the picker is open\n\t * @public\n\t * @returns {boolean}\n\t */\n\tisOpen() {\n\t\treturn !!this._isPickerOpen;\n\t}\n\n\t_canOpenPicker() {\n\t\treturn !this.disabled && !this.readonly;\n\t}\n\n\tasync _getPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"[ui5-responsive-popover]\");\n\t}\n\n\t_getInput() {\n\t\treturn this.shadowRoot.querySelector(\"[ui5-input]\");\n\t}\n\n\t_getInputField() {\n\t\tconst input = this._getInput();\n\t\treturn input && input.getInputDOMRef();\n\t}\n\n\t_onkeydown(e) {\n\t\tif (isShow(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis.togglePicker();\n\t\t}\n\n\t\tif (this.isOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isPageUpShiftCtrl(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"second\");\n\t\t} else if (isPageUpShift(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"minute\");\n\t\t} else if (isPageUp(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(1, \"hour\");\n\t\t} else if (isPageDownShiftCtrl(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"second\");\n\t\t} else if (isPageDownShift(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"minute\");\n\t\t} else if (isPageDown(e)) {\n\t\t\te.preventDefault();\n\t\t\tthis._modifyValueBy(-1, \"hour\");\n\t\t}\n\t}\n\n\tget _isPattern() {\n\t\treturn this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n\t}\n\n\tgetFormat() {\n\t\tlet dateFormat;\n\t\tif (this._isPattern) {\n\t\t\tdateFormat = DateFormat.getInstance({\n\t\t\t\tpattern: this._formatPattern,\n\t\t\t});\n\t\t} else {\n\t\t\tdateFormat = DateFormat.getInstance({\n\t\t\t\tstyle: this._formatPattern,\n\t\t\t});\n\t\t}\n\n\t\treturn dateFormat;\n\t}\n\n\t/**\n\t * Formats a Java Script date object into a string representing a locale date and time\n\t * according to the <code>formatPattern</code> property of the TimePicker instance\n\t * @param {object} date A Java Script date object to be formatted as string\n\t * @public\n\t * @returns {string}\n\t */\n\tformatValue(date) {\n\t\treturn this.getFormat().format(date);\n\t}\n\n\t/**\n\t * Checks if a value is valid against the current <code>formatPattern</code> value.\n\t *\n\t * <br><br>\n\t * <b>Note:</b> an empty string is considered as valid value.\n\t * @param {string} value The value to be tested against the current date format\n\t * @public\n\t * @returns {boolean}\n\t */\n\tisValid(value) {\n\t\treturn value === \"\" || this.getFormat().parse(value);\n\t}\n\n\tnormalizeValue(value) {\n\t\tif (value === \"\") {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn this.getFormat().format(this.getFormat().parse(value));\n\t}\n\n\t_modifyValueBy(amount, unit) {\n\t\tconst date = this.getFormat().parse(this._effectiveValue);\n\t\tif (!date) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (unit === \"hour\") {\n\t\t\tdate.setHours(date.getHours() + amount);\n\t\t} else if (unit === \"minute\") {\n\t\t\tdate.setMinutes(date.getMinutes() + amount);\n\t\t} else if (unit === \"second\") {\n\t\t\tdate.setSeconds(date.getSeconds() + amount);\n\t\t}\n\n\t\tconst newValue = this.formatValue(date);\n\t\tthis._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n\t}\n\n\t_handleWheel(e) {\n\t\te.preventDefault();\n\t}\n\n\tget submitButtonLabel() {\n\t\treturn TimePickerBase.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n\t}\n\n\tget cancelButtonLabel() {\n\t\treturn TimePickerBase.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tget openIconName() {\n\t\treturn \"time-entry-request\";\n\t}\n}\n\nexport default TimePickerBase;\n"]},"metadata":{},"sourceType":"module"}