{"ast":null,"code":"import _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar RadioButtonGroup = /*#__PURE__*/function () {\n  function RadioButtonGroup() {\n    _classCallCheck(this, RadioButtonGroup);\n  }\n\n  _createClass(RadioButtonGroup, null, [{\n    key: \"hasGroup\",\n    value: function hasGroup(groupName) {\n      return this.groups.has(groupName);\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupName) {\n      return this.groups.get(groupName);\n    }\n  }, {\n    key: \"getCheckedRadioFromGroup\",\n    value: function getCheckedRadioFromGroup(groupName) {\n      return this.checkedRadios.get(groupName);\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(groupName) {\n      this.checkedRadios.delete(groupName);\n      return this.groups.delete(groupName);\n    }\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(radioBtn, groupName) {\n      if (this.hasGroup(groupName)) {\n        this.enforceSingleSelection(radioBtn, groupName);\n        this.getGroup(groupName).push(radioBtn);\n      } else {\n        this.createGroup(radioBtn, groupName);\n      }\n\n      this.updateTabOrder(groupName);\n    }\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(radioBtn, groupName) {\n      if (!this.hasGroup(groupName)) {\n        return;\n      }\n\n      var group = this.getGroup(groupName);\n      var checkedRadio = this.getCheckedRadioFromGroup(groupName); // Remove the radio button from the given group\n\n      group.forEach(function (_radioBtn, idx, arr) {\n        if (radioBtn._id === _radioBtn._id) {\n          return arr.splice(idx, 1);\n        }\n      });\n\n      if (checkedRadio === radioBtn) {\n        this.checkedRadios.set(groupName, null);\n      } // Remove the group if it is empty\n\n\n      if (!group.length) {\n        this.removeGroup(groupName);\n      }\n\n      this.updateTabOrder(groupName);\n    }\n  }, {\n    key: \"createGroup\",\n    value: function createGroup(radioBtn, groupName) {\n      if (radioBtn.checked) {\n        this.checkedRadios.set(groupName, radioBtn);\n      }\n\n      this.groups.set(groupName, [radioBtn]);\n    }\n  }, {\n    key: \"selectNextItem\",\n    value: function selectNextItem(item, groupName) {\n      var group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n      if (groupLength <= 1) {\n        return;\n      }\n\n      var nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n      this.updateSelectionInGroup(nextItemToSelect, groupName);\n    }\n  }, {\n    key: \"updateTabOrder\",\n    value: function updateTabOrder(groupName) {\n      if (!this.hasGroup(groupName)) {\n        return;\n      }\n\n      var group = this.getGroup(groupName);\n      var hasCheckedRadio = group.some(function (radioBtn) {\n        return radioBtn.checked;\n      });\n      group.filter(function (radioBtn) {\n        return !radioBtn.disabled;\n      }).forEach(function (radioBtn, idx) {\n        if (hasCheckedRadio) {\n          radioBtn._tabIndex = radioBtn.checked ? \"0\" : \"-1\";\n        } else {\n          radioBtn._tabIndex = idx === 0 ? \"0\" : \"-1\";\n        }\n      });\n    }\n  }, {\n    key: \"selectPreviousItem\",\n    value: function selectPreviousItem(item, groupName) {\n      var group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n      if (groupLength <= 1) {\n        return;\n      }\n\n      var previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n      this.updateSelectionInGroup(previousItemToSelect, groupName);\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(item, groupName) {\n      this.updateSelectionInGroup(item, groupName);\n      this.updateTabOrder(groupName);\n    }\n  }, {\n    key: \"updateSelectionInGroup\",\n    value: function updateSelectionInGroup(radioBtnToSelect, groupName) {\n      var checkedRadio = this.getCheckedRadioFromGroup(groupName);\n\n      this._deselectRadio(checkedRadio);\n\n      this._selectRadio(radioBtnToSelect);\n\n      this.checkedRadios.set(groupName, radioBtnToSelect);\n    }\n  }, {\n    key: \"_deselectRadio\",\n    value: function _deselectRadio(radioBtn) {\n      if (radioBtn) {\n        radioBtn.checked = false;\n      }\n    }\n  }, {\n    key: \"_selectRadio\",\n    value: function _selectRadio(radioBtn) {\n      if (radioBtn) {\n        radioBtn.focus();\n        radioBtn.checked = true;\n        radioBtn._checked = true;\n        radioBtn.fireEvent(\"change\");\n      }\n    }\n  }, {\n    key: \"_nextSelectable\",\n    value: function _nextSelectable(pos, group) {\n      var groupLength = group.length;\n      var nextRadioToSelect = null;\n\n      if (pos === groupLength - 1) {\n        if (group[0].disabled || group[0].readonly) {\n          return this._nextSelectable(1, group);\n        }\n\n        nextRadioToSelect = group[0];\n      } else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n        return this._nextSelectable(pos + 1, group);\n      } else {\n        nextRadioToSelect = group[pos + 1];\n      }\n\n      return nextRadioToSelect;\n    }\n  }, {\n    key: \"_previousSelectable\",\n    value: function _previousSelectable(pos, group) {\n      var groupLength = group.length;\n      var previousRadioToSelect = null;\n\n      if (pos === 0) {\n        if (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n          return this._previousSelectable(groupLength - 1, group);\n        }\n\n        previousRadioToSelect = group[groupLength - 1];\n      } else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n        return this._previousSelectable(pos - 1, group);\n      } else {\n        previousRadioToSelect = group[pos - 1];\n      }\n\n      return previousRadioToSelect;\n    }\n  }, {\n    key: \"enforceSingleSelection\",\n    value: function enforceSingleSelection(radioBtn, groupName) {\n      var checkedRadio = this.getCheckedRadioFromGroup(groupName);\n\n      if (radioBtn.checked) {\n        if (!checkedRadio) {\n          this.checkedRadios.set(groupName, radioBtn);\n        } else if (radioBtn !== checkedRadio) {\n          this._deselectRadio(checkedRadio);\n\n          this.checkedRadios.set(groupName, radioBtn);\n        }\n      } else if (radioBtn === checkedRadio) {\n        this.checkedRadios.set(groupName, null);\n      }\n\n      this.updateTabOrder(groupName);\n    }\n  }, {\n    key: \"groups\",\n    get: function get() {\n      if (!this._groups) {\n        this._groups = new Map();\n      }\n\n      return this._groups;\n    }\n  }, {\n    key: \"checkedRadios\",\n    get: function get() {\n      if (!this._checkedRadios) {\n        this._checkedRadios = new Map();\n      }\n\n      return this._checkedRadios;\n    }\n  }]);\n\n  return RadioButtonGroup;\n}();\n\nexport default RadioButtonGroup;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/RadioButtonGroup.js"],"names":["RadioButtonGroup","groupName","groups","has","get","checkedRadios","delete","radioBtn","hasGroup","enforceSingleSelection","getGroup","push","createGroup","updateTabOrder","group","checkedRadio","getCheckedRadioFromGroup","forEach","_radioBtn","idx","arr","_id","splice","set","length","removeGroup","checked","item","groupLength","currentItemPosition","indexOf","nextItemToSelect","_nextSelectable","updateSelectionInGroup","hasCheckedRadio","some","filter","disabled","_tabIndex","previousItemToSelect","_previousSelectable","radioBtnToSelect","_deselectRadio","_selectRadio","focus","_checked","fireEvent","pos","nextRadioToSelect","readonly","previousRadioToSelect","_groups","Map","_checkedRadios"],"mappings":"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","sourcesContent":["class RadioButtonGroup {\n\tstatic hasGroup(groupName) {\n\t\treturn this.groups.has(groupName);\n\t}\n\n\tstatic getGroup(groupName) {\n\t\treturn this.groups.get(groupName);\n\t}\n\n\tstatic getCheckedRadioFromGroup(groupName) {\n\t\treturn this.checkedRadios.get(groupName);\n\t}\n\n\tstatic removeGroup(groupName) {\n\t\tthis.checkedRadios.delete(groupName);\n\t\treturn this.groups.delete(groupName);\n\t}\n\n\tstatic addToGroup(radioBtn, groupName) {\n\t\tif (this.hasGroup(groupName)) {\n\t\t\tthis.enforceSingleSelection(radioBtn, groupName);\n\t\t\tthis.getGroup(groupName).push(radioBtn);\n\t\t} else {\n\t\t\tthis.createGroup(radioBtn, groupName);\n\t\t}\n\n\t\tthis.updateTabOrder(groupName);\n\t}\n\n\tstatic removeFromGroup(radioBtn, groupName) {\n\t\tif (!this.hasGroup(groupName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this.getGroup(groupName);\n\t\tconst checkedRadio = this.getCheckedRadioFromGroup(groupName);\n\n\t\t// Remove the radio button from the given group\n\t\tgroup.forEach((_radioBtn, idx, arr) => {\n\t\t\tif (radioBtn._id === _radioBtn._id) {\n\t\t\t\treturn arr.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tif (checkedRadio === radioBtn) {\n\t\t\tthis.checkedRadios.set(groupName, null);\n\t\t}\n\n\t\t// Remove the group if it is empty\n\t\tif (!group.length) {\n\t\t\tthis.removeGroup(groupName);\n\t\t}\n\n\t\tthis.updateTabOrder(groupName);\n\t}\n\n\tstatic createGroup(radioBtn, groupName) {\n\t\tif (radioBtn.checked) {\n\t\t\tthis.checkedRadios.set(groupName, radioBtn);\n\t\t}\n\n\t\tthis.groups.set(groupName, [radioBtn]);\n\t}\n\n\tstatic selectNextItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(nextItemToSelect, groupName);\n\t}\n\n\tstatic updateTabOrder(groupName) {\n\t\tif (!this.hasGroup(groupName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this.getGroup(groupName);\n\t\tconst hasCheckedRadio = group.some(radioBtn => radioBtn.checked);\n\n\t\tgroup.filter(radioBtn => !radioBtn.disabled).forEach((radioBtn, idx) => {\n\t\t\tif (hasCheckedRadio) {\n\t\t\t\tradioBtn._tabIndex = radioBtn.checked ? \"0\" : \"-1\";\n\t\t\t} else {\n\t\t\t\tradioBtn._tabIndex = idx === 0 ? \"0\" : \"-1\";\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic selectPreviousItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(previousItemToSelect, groupName);\n\t}\n\n\tstatic selectItem(item, groupName) {\n\t\tthis.updateSelectionInGroup(item, groupName);\n\t\tthis.updateTabOrder(groupName);\n\t}\n\n\tstatic updateSelectionInGroup(radioBtnToSelect, groupName) {\n\t\tconst checkedRadio = this.getCheckedRadioFromGroup(groupName);\n\n\t\tthis._deselectRadio(checkedRadio);\n\t\tthis._selectRadio(radioBtnToSelect);\n\t\tthis.checkedRadios.set(groupName, radioBtnToSelect);\n\t}\n\n\tstatic _deselectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.checked = false;\n\t\t}\n\t}\n\n\tstatic _selectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.focus();\n\t\t\tradioBtn.checked = true;\n\t\t\tradioBtn._checked = true;\n\t\t\tradioBtn.fireEvent(\"change\");\n\t\t}\n\t}\n\n\tstatic _nextSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet nextRadioToSelect = null;\n\n\t\tif (pos === groupLength - 1) {\n\t\t\tif (group[0].disabled || group[0].readonly) {\n\t\t\t\treturn this._nextSelectable(1, group);\n\t\t\t}\n\t\t\tnextRadioToSelect = group[0];\n\t\t} else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n\t\t\treturn this._nextSelectable(pos + 1, group);\n\t\t} else {\n\t\t\tnextRadioToSelect = group[pos + 1];\n\t\t}\n\n\t\treturn nextRadioToSelect;\n\t}\n\n\tstatic _previousSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet previousRadioToSelect = null;\n\t\tif (pos === 0) {\n\t\t\tif (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n\t\t\t\treturn this._previousSelectable(groupLength - 1, group);\n\t\t\t}\n\t\t\tpreviousRadioToSelect = group[groupLength - 1];\n\t\t} else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n\t\t\treturn this._previousSelectable(pos - 1, group);\n\t\t} else {\n\t\t\tpreviousRadioToSelect = group[pos - 1];\n\t\t}\n\n\t\treturn previousRadioToSelect;\n\t}\n\n\tstatic enforceSingleSelection(radioBtn, groupName) {\n\t\tconst checkedRadio = this.getCheckedRadioFromGroup(groupName);\n\n\t\tif (radioBtn.checked) {\n\t\t\tif (!checkedRadio) {\n\t\t\t\tthis.checkedRadios.set(groupName, radioBtn);\n\t\t\t} else if (radioBtn !== checkedRadio) {\n\t\t\t\tthis._deselectRadio(checkedRadio);\n\t\t\t\tthis.checkedRadios.set(groupName, radioBtn);\n\t\t\t}\n\t\t} else if (radioBtn === checkedRadio) {\n\t\t\tthis.checkedRadios.set(groupName, null);\n\t\t}\n\n\t\tthis.updateTabOrder(groupName);\n\t}\n\n\tstatic get groups() {\n\t\tif (!this._groups) {\n\t\t\tthis._groups = new Map();\n\t\t}\n\t\treturn this._groups;\n\t}\n\n\tstatic get checkedRadios() {\n\t\tif (!this._checkedRadios) {\n\t\t\tthis._checkedRadios = new Map();\n\t\t}\n\t\treturn this._checkedRadios;\n\t}\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}