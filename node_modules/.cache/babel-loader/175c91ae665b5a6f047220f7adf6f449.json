{"ast":null,"code":"import isNodeTabbable from \"./isNodeTabbable.js\";\n\nconst getTabbableElements = node => {\n  return getTabbables(node.children);\n};\n\nconst getLastTabbableElement = node => {\n  const tabbables = getTabbables(node.children);\n  return tabbables.length ? tabbables[tabbables.length - 1] : null;\n};\n\nconst getTabbables = (nodes, tabbables) => {\n  const tabbablesNodes = tabbables || [];\n\n  if (!nodes) {\n    return tabbablesNodes;\n  }\n\n  Array.from(nodes).forEach(currentNode => {\n    if (currentNode.nodeType === Node.TEXT_NODE || currentNode.nodeType === Node.COMMENT_NODE || currentNode.hasAttribute(\"data-sap-no-tab-ref\")) {\n      return;\n    }\n\n    if (currentNode.shadowRoot) {\n      // get the root node of the ShadowDom (1st none style tag)\n      const children = currentNode.shadowRoot.children;\n      currentNode = Array.from(children).find(node => node.tagName !== \"STYLE\");\n    }\n\n    if (isNodeTabbable(currentNode)) {\n      tabbablesNodes.push(currentNode);\n    }\n\n    if (currentNode.tagName === \"SLOT\") {\n      getTabbables(currentNode.assignedNodes(), tabbablesNodes);\n    } else {\n      getTabbables(currentNode.children, tabbablesNodes);\n    }\n  });\n  return tabbablesNodes;\n};\n\nexport { getTabbableElements, getLastTabbableElement };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/util/TabbableElements.js"],"names":["isNodeTabbable","getTabbableElements","node","getTabbables","children","getLastTabbableElement","tabbables","length","nodes","tabbablesNodes","Array","from","forEach","currentNode","nodeType","Node","TEXT_NODE","COMMENT_NODE","hasAttribute","shadowRoot","find","tagName","push","assignedNodes"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;;AAEA,MAAMC,mBAAmB,GAAGC,IAAI,IAAI;AACnC,SAAOC,YAAY,CAACD,IAAI,CAACE,QAAN,CAAnB;AACA,CAFD;;AAIA,MAAMC,sBAAsB,GAAGH,IAAI,IAAI;AACtC,QAAMI,SAAS,GAAGH,YAAY,CAACD,IAAI,CAACE,QAAN,CAA9B;AACA,SAAOE,SAAS,CAACC,MAAV,GAAmBD,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAA5B,GAAqD,IAA5D;AACA,CAHD;;AAKA,MAAMJ,YAAY,GAAG,CAACK,KAAD,EAAQF,SAAR,KAAsB;AAC1C,QAAMG,cAAc,GAAGH,SAAS,IAAI,EAApC;;AAEA,MAAI,CAACE,KAAL,EAAY;AACX,WAAOC,cAAP;AACA;;AAEDC,EAAAA,KAAK,CAACC,IAAN,CAAWH,KAAX,EAAkBI,OAAlB,CAA0BC,WAAW,IAAI;AACxC,QAAIA,WAAW,CAACC,QAAZ,KAAyBC,IAAI,CAACC,SAA9B,IAA2CH,WAAW,CAACC,QAAZ,KAAyBC,IAAI,CAACE,YAAzE,IAAyFJ,WAAW,CAACK,YAAZ,CAAyB,qBAAzB,CAA7F,EAA8I;AAC7I;AACA;;AAED,QAAIL,WAAW,CAACM,UAAhB,EAA4B;AAC3B;AACA,YAAMf,QAAQ,GAAGS,WAAW,CAACM,UAAZ,CAAuBf,QAAxC;AACAS,MAAAA,WAAW,GAAGH,KAAK,CAACC,IAAN,CAAWP,QAAX,EAAqBgB,IAArB,CAA0BlB,IAAI,IAAIA,IAAI,CAACmB,OAAL,KAAiB,OAAnD,CAAd;AACA;;AAED,QAAIrB,cAAc,CAACa,WAAD,CAAlB,EAAiC;AAChCJ,MAAAA,cAAc,CAACa,IAAf,CAAoBT,WAApB;AACA;;AAED,QAAIA,WAAW,CAACQ,OAAZ,KAAwB,MAA5B,EAAoC;AACnClB,MAAAA,YAAY,CAACU,WAAW,CAACU,aAAZ,EAAD,EAA8Bd,cAA9B,CAAZ;AACA,KAFD,MAEO;AACNN,MAAAA,YAAY,CAACU,WAAW,CAACT,QAAb,EAAuBK,cAAvB,CAAZ;AACA;AACD,GApBD;AAsBA,SAAOA,cAAP;AACA,CA9BD;;AAgCA,SACCR,mBADD,EAECI,sBAFD","sourcesContent":["import isNodeTabbable from \"./isNodeTabbable.js\";\n\nconst getTabbableElements = node => {\n\treturn getTabbables(node.children);\n};\n\nconst getLastTabbableElement = node => {\n\tconst tabbables = getTabbables(node.children);\n\treturn tabbables.length ? tabbables[tabbables.length - 1] : null;\n};\n\nconst getTabbables = (nodes, tabbables) => {\n\tconst tabbablesNodes = tabbables || [];\n\n\tif (!nodes) {\n\t\treturn tabbablesNodes;\n\t}\n\n\tArray.from(nodes).forEach(currentNode => {\n\t\tif (currentNode.nodeType === Node.TEXT_NODE || currentNode.nodeType === Node.COMMENT_NODE || currentNode.hasAttribute(\"data-sap-no-tab-ref\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentNode.shadowRoot) {\n\t\t\t// get the root node of the ShadowDom (1st none style tag)\n\t\t\tconst children = currentNode.shadowRoot.children;\n\t\t\tcurrentNode = Array.from(children).find(node => node.tagName !== \"STYLE\");\n\t\t}\n\n\t\tif (isNodeTabbable(currentNode)) {\n\t\t\ttabbablesNodes.push(currentNode);\n\t\t}\n\n\t\tif (currentNode.tagName === \"SLOT\") {\n\t\t\tgetTabbables(currentNode.assignedNodes(), tabbablesNodes);\n\t\t} else {\n\t\t\tgetTabbables(currentNode.children, tabbablesNodes);\n\t\t}\n\t});\n\n\treturn tabbablesNodes;\n};\n\nexport {\n\tgetTabbableElements,\n\tgetLastTabbableElement,\n};\n"]},"metadata":{},"sourceType":"module"}