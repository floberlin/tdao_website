{"ast":null,"code":"import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\nlet updateInterval = null;\nconst intervalTimeout = 300;\nconst openedRegistry = [];\n\nconst repositionPopovers = event => {\n  openedRegistry.forEach(popover => {\n    popover.instance.reposition();\n  });\n};\n\nconst attachGlobalScrollHandler = () => {\n  document.body.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachGlobalScrollHandler = () => {\n  document.body.removeEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst runUpdateInterval = () => {\n  updateInterval = setInterval(() => {\n    repositionPopovers();\n  }, intervalTimeout);\n};\n\nconst stopUpdateInterval = () => {\n  clearInterval(updateInterval);\n};\n\nconst attachGlobalClickHandler = () => {\n  document.addEventListener(\"mousedown\", clickHandler);\n};\n\nconst detachGlobalClickHandler = () => {\n  document.removeEventListener(\"mousedown\", clickHandler);\n};\n\nconst clickHandler = event => {\n  const openedPopups = getOpenedPopups();\n  const isTopPopupPopover = openedPopups[openedPopups.length - 1].instance.showAt;\n\n  if (openedPopups.length === 0 || !isTopPopupPopover) {\n    return;\n  } // loop all open popovers\n\n\n  for (let i = openedPopups.length - 1; i !== -1; i--) {\n    const popup = openedPopups[i].instance; // if popup is modal, opener is clicked, popup is dialog skip closing\n\n    if (popup.isModal || popup.isOpenerClicked(event)) {\n      return;\n    }\n\n    if (isClickInRect(event, popup.getBoundingClientRect())) {\n      break;\n    }\n\n    popup.close();\n  }\n};\n\nconst attachScrollHandler = popover => {\n  popover && popover.shadowRoot.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachScrollHandler = popover => {\n  popover && popover.shadowRoot.removeEventListener(\"scroll\", repositionPopovers);\n};\n\nconst addOpenedPopover = instance => {\n  const parentPopovers = getParentPopoversIfNested(instance);\n  addOpenedPopup(instance, parentPopovers);\n  openedRegistry.push({\n    instance,\n    parentPopovers\n  });\n  attachScrollHandler(instance);\n\n  if (openedRegistry.length === 1) {\n    attachGlobalScrollHandler();\n    attachGlobalClickHandler();\n    runUpdateInterval();\n  }\n};\n\nconst removeOpenedPopover = instance => {\n  const popoversToClose = [instance];\n\n  for (let i = 0; i < openedRegistry.length; i++) {\n    const indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n\n    if (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n      popoversToClose.push(openedRegistry[i].instance);\n    }\n  }\n\n  for (let i = popoversToClose.length - 1; i >= 0; i--) {\n    for (let j = 0; j < openedRegistry.length; j++) {\n      let indexOfItemToRemove;\n\n      if (popoversToClose[i] === openedRegistry[j].instance) {\n        indexOfItemToRemove = j;\n      }\n\n      if (indexOfItemToRemove >= 0) {\n        removeOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n        detachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n        const itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n        itemToClose[0].instance.close(false, true);\n      }\n    }\n  }\n\n  if (!openedRegistry.length) {\n    detachGlobalScrollHandler();\n    detachGlobalClickHandler();\n    stopUpdateInterval();\n  }\n};\n\nconst getRegistry = () => {\n  return openedRegistry;\n};\n\nconst getParentPopoversIfNested = instance => {\n  let currentElement = instance.parentNode;\n  const parentPopovers = [];\n\n  while (currentElement.parentNode) {\n    for (let i = 0; i < openedRegistry.length; i++) {\n      if (currentElement && currentElement === openedRegistry[i].instance) {\n        parentPopovers.push(currentElement);\n      }\n    }\n\n    currentElement = currentElement.parentNode;\n  }\n\n  return parentPopovers;\n};\n\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/popup-utils/PopoverRegistry.js"],"names":["isClickInRect","getOpenedPopups","addOpenedPopup","removeOpenedPopup","updateInterval","intervalTimeout","openedRegistry","repositionPopovers","event","forEach","popover","instance","reposition","attachGlobalScrollHandler","document","body","addEventListener","detachGlobalScrollHandler","removeEventListener","runUpdateInterval","setInterval","stopUpdateInterval","clearInterval","attachGlobalClickHandler","clickHandler","detachGlobalClickHandler","openedPopups","isTopPopupPopover","length","showAt","i","popup","isModal","isOpenerClicked","getBoundingClientRect","close","attachScrollHandler","shadowRoot","detachScrollHandler","addOpenedPopover","parentPopovers","getParentPopoversIfNested","push","removeOpenedPopover","popoversToClose","indexOfCurrentInstance","indexOf","j","indexOfItemToRemove","itemToClose","splice","getRegistry","currentElement","parentNode"],"mappings":"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","sourcesContent":["import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\n\nlet updateInterval = null;\nconst intervalTimeout = 300;\nconst openedRegistry = [];\n\nconst repositionPopovers = event => {\n\topenedRegistry.forEach(popover => {\n\t\tpopover.instance.reposition();\n\t});\n};\n\nconst attachGlobalScrollHandler = () => {\n\tdocument.body.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachGlobalScrollHandler = () => {\n\tdocument.body.removeEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst runUpdateInterval = () => {\n\tupdateInterval = setInterval(() => {\n\t\trepositionPopovers();\n\t}, intervalTimeout);\n};\n\nconst stopUpdateInterval = () => {\n\tclearInterval(updateInterval);\n};\n\nconst attachGlobalClickHandler = () => {\n\tdocument.addEventListener(\"mousedown\", clickHandler);\n};\n\nconst detachGlobalClickHandler = () => {\n\tdocument.removeEventListener(\"mousedown\", clickHandler);\n};\n\nconst clickHandler = event => {\n\tconst openedPopups = getOpenedPopups();\n\tconst isTopPopupPopover = openedPopups[openedPopups.length - 1].instance.showAt;\n\n\tif (openedPopups.length === 0 || !isTopPopupPopover) {\n\t\treturn;\n\t}\n\n\t// loop all open popovers\n\tfor (let i = (openedPopups.length - 1); i !== -1; i--) {\n\t\tconst popup = openedPopups[i].instance;\n\n\t\t// if popup is modal, opener is clicked, popup is dialog skip closing\n\t\tif (popup.isModal || popup.isOpenerClicked(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isClickInRect(event, popup.getBoundingClientRect())) {\n\t\t\tbreak;\n\t\t}\n\n\t\tpopup.close();\n\t}\n};\n\nconst attachScrollHandler = popover => {\n\tpopover && popover.shadowRoot.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachScrollHandler = popover => {\n\tpopover && popover.shadowRoot.removeEventListener(\"scroll\", repositionPopovers);\n};\n\nconst addOpenedPopover = instance => {\n\tconst parentPopovers = getParentPopoversIfNested(instance);\n\n\taddOpenedPopup(instance, parentPopovers);\n\topenedRegistry.push({\n\t\tinstance,\n\t\tparentPopovers,\n\t});\n\n\tattachScrollHandler(instance);\n\n\tif (openedRegistry.length === 1) {\n\t\tattachGlobalScrollHandler();\n\t\tattachGlobalClickHandler();\n\t\trunUpdateInterval();\n\t}\n};\n\nconst removeOpenedPopover = instance => {\n\tconst popoversToClose = [instance];\n\n\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\tconst indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n\t\tif (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n\t\t\tpopoversToClose.push(openedRegistry[i].instance);\n\t\t}\n\t}\n\n\tfor (let i = popoversToClose.length - 1; i >= 0; i--) {\n\t\tfor (let j = 0; j < openedRegistry.length; j++) {\n\t\t\tlet indexOfItemToRemove;\n\t\t\tif (popoversToClose[i] === openedRegistry[j].instance) {\n\t\t\t\tindexOfItemToRemove = j;\n\t\t\t}\n\n\t\t\tif (indexOfItemToRemove >= 0) {\n\t\t\t\tremoveOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tdetachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tconst itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n\t\t\t\titemToClose[0].instance.close(false, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!openedRegistry.length) {\n\t\tdetachGlobalScrollHandler();\n\t\tdetachGlobalClickHandler();\n\t\tstopUpdateInterval();\n\t}\n};\n\nconst getRegistry = () => {\n\treturn openedRegistry;\n};\n\nconst getParentPopoversIfNested = instance => {\n\tlet currentElement = instance.parentNode;\n\tconst parentPopovers = [];\n\n\twhile (currentElement.parentNode) {\n\t\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\t\tif (currentElement && currentElement === openedRegistry[i].instance) {\n\t\t\t\tparentPopovers.push(currentElement);\n\t\t\t}\n\t\t}\n\n\t\tcurrentElement = currentElement.parentNode;\n\t}\n\n\treturn parentPopovers;\n};\n\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };\n"]},"metadata":{},"sourceType":"module"}