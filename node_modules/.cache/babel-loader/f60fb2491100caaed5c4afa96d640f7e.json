{"ast":null,"code":"import { Priority } from '@ui5/webcomponents-react/dist/Priority';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents-fiori/dist/NotificationListItem.js';\n/**\n * The `NotificationListItem` is a type of list item, meant to display notifications.\n * The component has a rich set of various properties that allows the user to set `avatar`, `titleText`, descriptive `content` and `footnotes` to fully describe a notification.\n * The user can:\n *\n * *   display a `Close` button\n * *   can control whether the `titleText` and `description` should wrap or truncate and display a `ShowMore` button to switch between less and more information\n * *   add custom actions by using the `NotificationAction` component\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/NotificationListItem\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar NotificationListItem = withWebComponent('ui5-li-notification', ['wrappingType', 'busyDelay', 'priority', 'titleText'], ['busy', 'read', 'showClose', 'selected'], ['avatar', 'footnotes', 'actions'], ['close']);\nNotificationListItem.displayName = 'NotificationListItem';\nNotificationListItem.defaultProps = {\n  busyDelay: 1000,\n  priority: Priority.None\n};\nexport { NotificationListItem };","map":{"version":3,"sources":["../src/webComponents/NotificationListItem/index.tsx"],"names":["NotificationListItem","withWebComponent","busyDelay","priority","Priority","None"],"mappings":";;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMA,oBAAoB,GAAGC,gBAAgB,CAAA,qBAAA,EAE3C,CAAA,cAAA,EAAA,WAAA,EAAA,UAAA,EAF2C,WAE3C,CAF2C,EAG3C,CAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAH2C,UAG3C,CAH2C,EAI3C,CAAA,QAAA,EAAA,WAAA,EAJ2C,SAI3C,CAJ2C,EAK3C,CAL2C,OAK3C,CAL2C,C;AAQ7CD,oBAAoB,CAApBA,WAAAA,GAAAA,sBAAAA;AAEAA,oBAAoB,CAApBA,YAAAA,GAAoC;AAClCE,EAAAA,SAAS,EADyB,IAAA;AAElCC,EAAAA,QAAQ,EAAEC,QAAQ,CAACC;AAFe,CAApCL","sourcesContent":["import { Priority } from '@ui5/webcomponents-react/dist/Priority';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/NotificationListItem.js';\n\ninterface NotificationListItemAttributes {\n  /**\n   * Defines if the `titleText` and `description` should wrap, they truncate by default.\n   *\n   * **Note:** by default the `titleText` and `decription`, and a `ShowMore/Less` button would be displayed.\n   */\n  wrappingType?: WrappingType | keyof typeof WrappingType;\n  /**\n   * Defines if a busy indicator would be displayed over the item.\n   */\n  busy?: boolean;\n  /**\n   * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n   */\n  busyDelay?: number;\n  /**\n   * Defines the `priority` of the item. Available options are:\n   *\n   * *   `None`\n   * *   `Low`\n   * *   `Medium`\n   * *   `High`\n   */\n  priority?: Priority | keyof typeof Priority;\n  /**\n   * Defines if the `notification` is new or has been already read.\n   *\n   * **Note:** if set to `false` the `titleText` has bold font, if set to true - it has a normal font.\n   */\n  read?: boolean;\n  /**\n   * Defines if the `close` button would be displayed.\n   */\n  showClose?: boolean;\n  /**\n   * Defines the `titleText` of the item.\n   */\n  titleText?: string;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface NotificationListItemDomRef extends NotificationListItemAttributes, Ui5DomRef {}\n\nexport interface NotificationListItemPropTypes extends NotificationListItemAttributes, CommonProps {\n  /**\n   * Defines the avatar, displayed in the `NotificationListItem`.\n   *\n   * **Note:** Consider using the `Avatar` to display icons, initials or images.\n   * **Note:**In order to be complaint with the UX guidlines and for best experience, we recommend using avatars with 2rem X 2rem in size (32px X 32px). In case you are using the `Avatar` you can set its `size` property to `XS` to get the required size - `<Avatar size=\"XS\"></Avatar>`.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  avatar?: ReactNode;\n  /**\n   * Defines the content of the `NotificationListItem`, usually a description of the notification.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the elements, displayed in the footer of the of the component.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  footnotes?: ReactNode | ReactNode[];\n  /**\n   * Defines the actions, displayed in the top-right area.\n   *\n   * **Note:** use the `NotificationAction` component.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  actions?: ReactNode | ReactNode[];\n  /**\n   * Fired when the `Close` button is pressed.\n   */\n  onClose?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * The `NotificationListItem` is a type of list item, meant to display notifications.\n * The component has a rich set of various properties that allows the user to set `avatar`, `titleText`, descriptive `content` and `footnotes` to fully describe a notification.\n * The user can:\n *\n * *   display a `Close` button\n * *   can control whether the `titleText` and `description` should wrap or truncate and display a `ShowMore` button to switch between less and more information\n * *   add custom actions by using the `NotificationAction` component\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/NotificationListItem\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst NotificationListItem = withWebComponent<NotificationListItemPropTypes, NotificationListItemDomRef>(\n  'ui5-li-notification',\n  ['wrappingType', 'busyDelay', 'priority', 'titleText'],\n  ['busy', 'read', 'showClose', 'selected'],\n  ['avatar', 'footnotes', 'actions'],\n  ['close']\n);\n\nNotificationListItem.displayName = 'NotificationListItem';\n\nNotificationListItem.defaultProps = {\n  busyDelay: 1000,\n  priority: Priority.None\n};\n\nexport { NotificationListItem };\n"]},"metadata":{},"sourceType":"module"}