{"ast":null,"code":"/**\n * Base class for all data types.\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.types.DataType\n * @public\n */\nclass DataType {\n  static isValid(value) {}\n\n  static attributeToProperty(attributeValue) {\n    return attributeValue;\n  }\n\n  static propertyToAttribute(propertyValue) {\n    return `${propertyValue}`;\n  }\n\n  static valuesAreEqual(value1, value2) {\n    return value1 === value2;\n  }\n\n  static generateTypeAccessors(types) {\n    Object.keys(types).forEach(type => {\n      Object.defineProperty(this, type, {\n        get() {\n          return types[type];\n        }\n\n      });\n    });\n  }\n\n}\n\nexport default DataType;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/types/DataType.js"],"names":["DataType","isValid","value","attributeToProperty","attributeValue","propertyToAttribute","propertyValue","valuesAreEqual","value1","value2","generateTypeAccessors","types","Object","keys","forEach","type","defineProperty","get"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAN,CAAe;AACA,SAAPC,OAAO,CAACC,KAAD,EAAQ,CACrB;;AAEyB,SAAnBC,mBAAmB,CAACC,cAAD,EAAiB;AAC1C,WAAOA,cAAP;AACA;;AAEyB,SAAnBC,mBAAmB,CAACC,aAAD,EAAgB;AACzC,WAAQ,GAAEA,aAAc,EAAxB;AACA;;AAEoB,SAAdC,cAAc,CAACC,MAAD,EAASC,MAAT,EAAiB;AACrC,WAAOD,MAAM,KAAKC,MAAlB;AACA;;AAE2B,SAArBC,qBAAqB,CAACC,KAAD,EAAQ;AACnCC,IAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2BC,IAAI,IAAI;AAClCH,MAAAA,MAAM,CAACI,cAAP,CAAsB,IAAtB,EAA4BD,IAA5B,EAAkC;AACjCE,QAAAA,GAAG,GAAG;AACL,iBAAON,KAAK,CAACI,IAAD,CAAZ;AACA;;AAHgC,OAAlC;AAKA,KAND;AAOA;;AAxBa;;AA2Bf,eAAef,QAAf","sourcesContent":["/**\n * Base class for all data types.\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.types.DataType\n * @public\n */\nclass DataType {\n\tstatic isValid(value) {\n\t}\n\n\tstatic attributeToProperty(attributeValue) {\n\t\treturn attributeValue;\n\t}\n\n\tstatic propertyToAttribute(propertyValue) {\n\t\treturn `${propertyValue}`;\n\t}\n\n\tstatic valuesAreEqual(value1, value2) {\n\t\treturn value1 === value2;\n\t}\n\n\tstatic generateTypeAccessors(types) {\n\t\tObject.keys(types).forEach(type => {\n\t\t\tObject.defineProperty(this, type, {\n\t\t\t\tget() {\n\t\t\t\t\treturn types[type];\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default DataType;\n"]},"metadata":{},"sourceType":"module"}