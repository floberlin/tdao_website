{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar decode$1 = require('../decode.js');\n\nvar token = require('../token.js');\n\nvar byteUtils = require('../byte-utils.js');\n\nvar common = require('../common.js');\n\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n\n  done() {\n    return this.pos >= this.data.length;\n  }\n\n  ch() {\n    return this.data[this.pos];\n  }\n\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n\n  skipWhitespace() {\n    let c = this.ch();\n\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${common.decodeErrPrefix} unexpected end of input at position ${this.pos}`);\n    }\n\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}, expected to find '${String.fromCharCode(...str)}'`);\n      }\n    }\n  }\n\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n\n    if (this.ch() === 48) {\n      this.pos++;\n\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new token.Token(token.Type.uint, 0, this.pos - startPos);\n      }\n    }\n\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}`);\n    }\n\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}`);\n      }\n\n      float = true;\n      this.pos++;\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n    }\n\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n    }\n\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n\n    if (float) {\n      return new token.Token(token.Type.float, num, this.pos - startPos);\n    }\n\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, num, this.pos - startPos);\n    }\n\n    return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}; this shouldn't happen`);\n    }\n\n    this.pos++;\n\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new token.Token(token.Type.string, str, l);\n      }\n    }\n\n    const startPos = this.pos;\n    const chars = [];\n\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${common.decodeErrPrefix} unexpected end of unicode escape sequence at position ${this.pos}`);\n      }\n\n      let u4 = 0;\n\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${common.decodeErrPrefix} unexpected unicode escape character at position ${this.pos}`);\n        }\n\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n\n      return u4;\n    };\n\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${common.decodeErrPrefix} unexpected unicode sequence at position ${this.pos}`);\n      }\n\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 128) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = this.data[this.pos + 1];\n\n          if ((secondByte & 192) === 128) {\n            tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n\n            if (tempCodePoint > 127) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = this.data[this.pos + 1];\n          thirdByte = this.data[this.pos + 2];\n\n          if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n            tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n\n            if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = this.data[this.pos + 1];\n          thirdByte = this.data[this.pos + 2];\n          fourthByte = this.data[this.pos + 3];\n\n          if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n            tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n\n            if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n\n      switch (ch) {\n        case 92:\n          this.pos++;\n\n          if (this.done()) {\n            throw new Error(`${common.decodeErrPrefix} unexpected string termination at position ${this.pos}`);\n          }\n\n          ch1 = this.ch();\n          this.pos++;\n\n          switch (ch1) {\n            case 34:\n            case 39:\n            case 92:\n            case 47:\n              chars.push(ch1);\n              break;\n\n            case 98:\n              chars.push(8);\n              break;\n\n            case 116:\n              chars.push(9);\n              break;\n\n            case 110:\n              chars.push(10);\n              break;\n\n            case 102:\n              chars.push(12);\n              break;\n\n            case 114:\n              chars.push(13);\n              break;\n\n            case 117:\n              chars.push(readu4());\n              break;\n\n            default:\n              throw new Error(`${common.decodeErrPrefix} unexpected string escape character at position ${this.pos}`);\n          }\n\n          break;\n\n        case 34:\n          this.pos++;\n          return new token.Token(token.Type.string, byteUtils.decodeCodePointsArray(chars), this.pos - startPos);\n\n        default:\n          if (ch < 32) {\n            throw new Error(`${common.decodeErrPrefix} invalid control character at position ${this.pos}`);\n          } else if (ch < 128) {\n            chars.push(ch);\n            this.pos++;\n          } else {\n            readUtf8Char();\n          }\n\n      }\n    }\n\n    throw new Error(`${common.decodeErrPrefix} unexpected end of string at position ${this.pos}`);\n  }\n\n  parseValue() {\n    switch (this.ch()) {\n      case 123:\n        this.modeStack.push('obj-start');\n        this.pos++;\n        return new token.Token(token.Type.map, Infinity, 1);\n\n      case 91:\n        this.modeStack.push('array-start');\n        this.pos++;\n        return new token.Token(token.Type.array, Infinity, 1);\n\n      case 34:\n        {\n          return this.parseString();\n        }\n\n      case 110:\n        this.expect([110, 117, 108, 108]);\n        return new token.Token(token.Type.null, null, 4);\n\n      case 102:\n        this.expect([102, 97, 108, 115, 101]);\n        return new token.Token(token.Type.false, false, 5);\n\n      case 116:\n        this.expect([116, 114, 117, 101]);\n        return new token.Token(token.Type.true, true, 4);\n\n      case 45:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        return this.parseNumber();\n\n      default:\n        throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}`);\n    }\n  }\n\n  next() {\n    this.skipWhitespace();\n\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop();\n        return this.parseValue();\n\n      case 'array-value':\n        {\n          this.modeStack.pop();\n\n          if (this.ch() === 93) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n\n          if (this.ch() !== 44) {\n            throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`);\n          }\n\n          this.pos++;\n          this.modeStack.push('array-value');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n\n      case 'array-start':\n        {\n          this.modeStack.pop();\n\n          if (this.ch() === 93) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n\n          this.modeStack.push('array-value');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n\n      case 'obj-key':\n        if (this.ch() === 125) {\n          this.modeStack.pop();\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n\n        if (this.ch() !== 44) {\n          throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`);\n        }\n\n        this.pos++;\n        this.skipWhitespace();\n\n      case 'obj-start':\n        {\n          this.modeStack.pop();\n\n          if (this.ch() === 125) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n\n          const token$1 = this.parseString();\n          this.skipWhitespace();\n\n          if (this.ch() !== 58) {\n            throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`);\n          }\n\n          this.pos++;\n          this.modeStack.push('obj-value');\n          return token$1;\n        }\n\n      case 'obj-value':\n        {\n          this.modeStack.pop();\n          this.modeStack.push('obj-key');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n\n      default:\n        throw new Error(`${common.decodeErrPrefix} unexpected parse state at position ${this.pos}; this shouldn't happen`);\n    }\n  }\n\n}\n\nfunction decode(data, options) {\n  options = Object.assign({\n    tokenizer: new Tokenizer(data, options)\n  }, options);\n  return decode$1.decode(data, options);\n}\n\nexports.Tokenizer = Tokenizer;\nexports.decode = decode;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/cborg/cjs/lib/json/decode.js"],"names":["Object","defineProperty","exports","value","decode$1","require","token","byteUtils","common","Tokenizer","constructor","data","options","pos","modeStack","lastToken","done","length","ch","currentMode","skipWhitespace","c","expect","str","Error","decodeErrPrefix","i","String","fromCharCode","parseNumber","startPos","negative","float","swallow","chars","includes","Token","Type","uint","numStr","apply","subarray","num","parseFloat","allowBigInt","Number","isSafeInteger","negint","BigInt","parseString","l","string","readu4","u4","readUtf8Char","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","ch1","decodeCodePointsArray","parseValue","map","Infinity","array","null","false","true","next","pop","break","undefined","token$1","decode","assign","tokenizer"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,cAAD,CAApB;;AAEA,MAAMI,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAO,GAAG,EAAjB,EAAqB;AAC9B,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKE,SAAL,GAAiB,CAAC,OAAD,CAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AACDC,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKH,GAAL,IAAY,KAAKF,IAAL,CAAUM,MAA7B;AACD;;AACDC,EAAAA,EAAE,GAAG;AACH,WAAO,KAAKP,IAAL,CAAU,KAAKE,GAAf,CAAP;AACD;;AACDM,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKL,SAAL,CAAe,KAAKA,SAAL,CAAeG,MAAf,GAAwB,CAAvC,CAAP;AACD;;AACDG,EAAAA,cAAc,GAAG;AACf,QAAIC,CAAC,GAAG,KAAKH,EAAL,EAAR;;AACA,WAAOG,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,CAAlB,IAAuBA,CAAC,KAAK,EAA7B,IAAmCA,CAAC,KAAK,EAAhD,EAAoD;AAClDA,MAAAA,CAAC,GAAG,KAAKV,IAAL,CAAU,EAAE,KAAKE,GAAjB,CAAJ;AACD;AACF;;AACDS,EAAAA,MAAM,CAACC,GAAD,EAAM;AACV,QAAI,KAAKZ,IAAL,CAAUM,MAAV,GAAmB,KAAKJ,GAAxB,GAA8BU,GAAG,CAACN,MAAtC,EAA8C;AAC5C,YAAM,IAAIO,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,wCAAwC,KAAKZ,GAAK,EAAxF,CAAN;AACD;;AACD,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACN,MAAxB,EAAgCS,CAAC,EAAjC,EAAqC;AACnC,UAAI,KAAKf,IAAL,CAAU,KAAKE,GAAL,EAAV,MAA0BU,GAAG,CAACG,CAAD,CAAjC,EAAsC;AACpC,cAAM,IAAIF,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,iCAAiC,KAAKZ,GAAK,uBAAuBc,MAAM,CAACC,YAAP,CAAoB,GAAGL,GAAvB,CAA6B,GAArI,CAAN;AACD;AACF;AACF;;AACDM,EAAAA,WAAW,GAAG;AACZ,UAAMC,QAAQ,GAAG,KAAKjB,GAAtB;AACA,QAAIkB,QAAQ,GAAG,KAAf;AACA,QAAIC,KAAK,GAAG,KAAZ;;AACA,UAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,aAAO,CAAC,KAAKlB,IAAL,EAAR,EAAqB;AACnB,cAAME,EAAE,GAAG,KAAKA,EAAL,EAAX;;AACA,YAAIgB,KAAK,CAACC,QAAN,CAAejB,EAAf,CAAJ,EAAwB;AACtB,eAAKL,GAAL;AACD,SAFD,MAEO;AACL;AACD;AACF;AACF,KATD;;AAUA,QAAI,KAAKK,EAAL,OAAc,EAAlB,EAAsB;AACpBa,MAAAA,QAAQ,GAAG,IAAX;AACA,WAAKlB,GAAL;AACD;;AACD,QAAI,KAAKK,EAAL,OAAc,EAAlB,EAAsB;AACpB,WAAKL,GAAL;;AACA,UAAI,KAAKK,EAAL,OAAc,EAAlB,EAAsB;AACpB,aAAKL,GAAL;AACAmB,QAAAA,KAAK,GAAG,IAAR;AACD,OAHD,MAGO;AACL,eAAO,IAAI1B,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWC,IAA3B,EAAiC,CAAjC,EAAoC,KAAKzB,GAAL,GAAWiB,QAA/C,CAAP;AACD;AACF;;AACDG,IAAAA,OAAO,CAAC,CACN,EADM,EAEN,EAFM,EAGN,EAHM,EAIN,EAJM,EAKN,EALM,EAMN,EANM,EAON,EAPM,EAQN,EARM,EASN,EATM,EAUN,EAVM,CAAD,CAAP;;AAYA,QAAIF,QAAQ,IAAI,KAAKlB,GAAL,KAAaiB,QAAQ,GAAG,CAAxC,EAA2C;AACzC,YAAM,IAAIN,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,iCAAiC,KAAKZ,GAAK,EAAjF,CAAN;AACD;;AACD,QAAI,CAAC,KAAKG,IAAL,EAAD,IAAgB,KAAKE,EAAL,OAAc,EAAlC,EAAsC;AACpC,UAAIc,KAAJ,EAAW;AACT,cAAM,IAAIR,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,iCAAiC,KAAKZ,GAAK,EAAjF,CAAN;AACD;;AACDmB,MAAAA,KAAK,GAAG,IAAR;AACA,WAAKnB,GAAL;AACAoB,MAAAA,OAAO,CAAC,CACN,EADM,EAEN,EAFM,EAGN,EAHM,EAIN,EAJM,EAKN,EALM,EAMN,EANM,EAON,EAPM,EAQN,EARM,EASN,EATM,EAUN,EAVM,CAAD,CAAP;AAYD;;AACD,QAAI,CAAC,KAAKjB,IAAL,EAAD,KAAiB,KAAKE,EAAL,OAAc,GAAd,IAAqB,KAAKA,EAAL,OAAc,EAApD,CAAJ,EAA6D;AAC3Dc,MAAAA,KAAK,GAAG,IAAR;AACA,WAAKnB,GAAL;;AACA,UAAI,CAAC,KAAKG,IAAL,EAAD,KAAiB,KAAKE,EAAL,OAAc,EAAd,IAAoB,KAAKA,EAAL,OAAc,EAAnD,CAAJ,EAA4D;AAC1D,aAAKL,GAAL;AACD;;AACDoB,MAAAA,OAAO,CAAC,CACN,EADM,EAEN,EAFM,EAGN,EAHM,EAIN,EAJM,EAKN,EALM,EAMN,EANM,EAON,EAPM,EAQN,EARM,EASN,EATM,EAUN,EAVM,CAAD,CAAP;AAYD;;AACD,UAAMM,MAAM,GAAGZ,MAAM,CAACC,YAAP,CAAoBY,KAApB,CAA0B,IAA1B,EAAgC,KAAK7B,IAAL,CAAU8B,QAAV,CAAmBX,QAAnB,EAA6B,KAAKjB,GAAlC,CAAhC,CAAf;AACA,UAAM6B,GAAG,GAAGC,UAAU,CAACJ,MAAD,CAAtB;;AACA,QAAIP,KAAJ,EAAW;AACT,aAAO,IAAI1B,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWL,KAA3B,EAAkCU,GAAlC,EAAuC,KAAK7B,GAAL,GAAWiB,QAAlD,CAAP;AACD;;AACD,QAAI,KAAKlB,OAAL,CAAagC,WAAb,KAA6B,IAA7B,IAAqCC,MAAM,CAACC,aAAP,CAAqBJ,GAArB,CAAzC,EAAoE;AAClE,aAAO,IAAIpC,KAAK,CAAC8B,KAAV,CAAgBM,GAAG,IAAI,CAAP,GAAWpC,KAAK,CAAC+B,IAAN,CAAWC,IAAtB,GAA6BhC,KAAK,CAAC+B,IAAN,CAAWU,MAAxD,EAAgEL,GAAhE,EAAqE,KAAK7B,GAAL,GAAWiB,QAAhF,CAAP;AACD;;AACD,WAAO,IAAIxB,KAAK,CAAC8B,KAAV,CAAgBM,GAAG,IAAI,CAAP,GAAWpC,KAAK,CAAC+B,IAAN,CAAWC,IAAtB,GAA6BhC,KAAK,CAAC+B,IAAN,CAAWU,MAAxD,EAAgEC,MAAM,CAACT,MAAD,CAAtE,EAAgF,KAAK1B,GAAL,GAAWiB,QAA3F,CAAP;AACD;;AACDmB,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAK/B,EAAL,OAAc,EAAlB,EAAsB;AACpB,YAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,qCAAqC,KAAKZ,GAAK,yBAArF,CAAN;AACD;;AACD,SAAKA,GAAL;;AACA,SAAK,IAAIa,CAAC,GAAG,KAAKb,GAAb,EAAkBqC,CAAC,GAAG,CAA3B,EAA8BxB,CAAC,GAAG,KAAKf,IAAL,CAAUM,MAAd,IAAwBiC,CAAC,GAAG,KAA1D,EAAiExB,CAAC,IAAIwB,CAAC,EAAvE,EAA2E;AACzE,YAAMhC,EAAE,GAAG,KAAKP,IAAL,CAAUe,CAAV,CAAX;;AACA,UAAIR,EAAE,KAAK,EAAP,IAAaA,EAAE,GAAG,EAAlB,IAAwBA,EAAE,IAAI,GAAlC,EAAuC;AACrC;AACD;;AACD,UAAIA,EAAE,KAAK,EAAX,EAAe;AACb,cAAMK,GAAG,GAAGI,MAAM,CAACC,YAAP,CAAoBY,KAApB,CAA0B,IAA1B,EAAgC,KAAK7B,IAAL,CAAU8B,QAAV,CAAmB,KAAK5B,GAAxB,EAA6Ba,CAA7B,CAAhC,CAAZ;AACA,aAAKb,GAAL,GAAWa,CAAC,GAAG,CAAf;AACA,eAAO,IAAIpB,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWc,MAA3B,EAAmC5B,GAAnC,EAAwC2B,CAAxC,CAAP;AACD;AACF;;AACD,UAAMpB,QAAQ,GAAG,KAAKjB,GAAtB;AACA,UAAMqB,KAAK,GAAG,EAAd;;AACA,UAAMkB,MAAM,GAAG,MAAM;AACnB,UAAI,KAAKvC,GAAL,GAAW,CAAX,IAAgB,KAAKF,IAAL,CAAUM,MAA9B,EAAsC;AACpC,cAAM,IAAIO,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,0DAA0D,KAAKZ,GAAK,EAA1G,CAAN;AACD;;AACD,UAAIwC,EAAE,GAAG,CAAT;;AACA,WAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIR,EAAE,GAAG,KAAKA,EAAL,EAAT;;AACA,YAAIA,EAAE,IAAI,EAAN,IAAYA,EAAE,IAAI,EAAtB,EAA0B;AACxBA,UAAAA,EAAE,IAAI,EAAN;AACD,SAFD,MAEO,IAAIA,EAAE,IAAI,EAAN,IAAYA,EAAE,IAAI,GAAtB,EAA2B;AAChCA,UAAAA,EAAE,GAAGA,EAAE,GAAG,EAAL,GAAU,EAAf;AACD,SAFM,MAEA,IAAIA,EAAE,IAAI,EAAN,IAAYA,EAAE,IAAI,EAAtB,EAA0B;AAC/BA,UAAAA,EAAE,GAAGA,EAAE,GAAG,EAAL,GAAU,EAAf;AACD,SAFM,MAEA;AACL,gBAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,oDAAoD,KAAKZ,GAAK,EAApG,CAAN;AACD;;AACDwC,QAAAA,EAAE,GAAGA,EAAE,GAAG,EAAL,GAAUnC,EAAf;AACA,aAAKL,GAAL;AACD;;AACD,aAAOwC,EAAP;AACD,KApBD;;AAqBA,UAAMC,YAAY,GAAG,MAAM;AACzB,YAAMC,SAAS,GAAG,KAAKrC,EAAL,EAAlB;AACA,UAAIsC,SAAS,GAAG,IAAhB;AACA,UAAIC,gBAAgB,GAAGF,SAAS,GAAG,GAAZ,GAAkB,CAAlB,GAAsBA,SAAS,GAAG,GAAZ,GAAkB,CAAlB,GAAsBA,SAAS,GAAG,GAAZ,GAAkB,CAAlB,GAAsB,CAAzF;;AACA,UAAI,KAAK1C,GAAL,GAAW4C,gBAAX,GAA8B,KAAK9C,IAAL,CAAUM,MAA5C,EAAoD;AAClD,cAAM,IAAIO,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,4CAA4C,KAAKZ,GAAK,EAA5F,CAAN;AACD;;AACD,UAAI6C,UAAJ,EAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,aAAvC;;AACA,cAAQJ,gBAAR;AACA,aAAK,CAAL;AACE,cAAIF,SAAS,GAAG,GAAhB,EAAqB;AACnBC,YAAAA,SAAS,GAAGD,SAAZ;AACD;;AACD;;AACF,aAAK,CAAL;AACEG,UAAAA,UAAU,GAAG,KAAK/C,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAb;;AACA,cAAI,CAAC6C,UAAU,GAAG,GAAd,MAAuB,GAA3B,EAAgC;AAC9BG,YAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,EAAb,KAAoB,CAApB,GAAwBG,UAAU,GAAG,EAArD;;AACA,gBAAIG,aAAa,GAAG,GAApB,EAAyB;AACvBL,cAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AACD;;AACF,aAAK,CAAL;AACEH,UAAAA,UAAU,GAAG,KAAK/C,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAb;AACA8C,UAAAA,SAAS,GAAG,KAAKhD,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAZ;;AACA,cAAI,CAAC6C,UAAU,GAAG,GAAd,MAAuB,GAAvB,IAA8B,CAACC,SAAS,GAAG,GAAb,MAAsB,GAAxD,EAA6D;AAC3DE,YAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,EAAb,KAAoB,EAApB,GAAyB,CAACG,UAAU,GAAG,EAAd,KAAqB,CAA9C,GAAkDC,SAAS,GAAG,EAA9E;;AACA,gBAAIE,aAAa,GAAG,IAAhB,KAAyBA,aAAa,GAAG,KAAhB,IAAyBA,aAAa,GAAG,KAAlE,CAAJ,EAA8E;AAC5EL,cAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AACD;;AACF,aAAK,CAAL;AACEH,UAAAA,UAAU,GAAG,KAAK/C,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAb;AACA8C,UAAAA,SAAS,GAAG,KAAKhD,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAZ;AACA+C,UAAAA,UAAU,GAAG,KAAKjD,IAAL,CAAU,KAAKE,GAAL,GAAW,CAArB,CAAb;;AACA,cAAI,CAAC6C,UAAU,GAAG,GAAd,MAAuB,GAAvB,IAA8B,CAACC,SAAS,GAAG,GAAb,MAAsB,GAApD,IAA2D,CAACC,UAAU,GAAG,GAAd,MAAuB,GAAtF,EAA2F;AACzFC,YAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,EAAb,KAAoB,EAApB,GAAyB,CAACG,UAAU,GAAG,EAAd,KAAqB,EAA9C,GAAmD,CAACC,SAAS,GAAG,EAAb,KAAoB,CAAvE,GAA2EC,UAAU,GAAG,EAAxG;;AACA,gBAAIC,aAAa,GAAG,KAAhB,IAAyBA,aAAa,GAAG,OAA7C,EAAsD;AACpDL,cAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AAlCH;;AAoCA,UAAIL,SAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,gBAAgB,GAAG,CAAnB;AACD,OAHD,MAGO,IAAID,SAAS,GAAG,KAAhB,EAAuB;AAC5BA,QAAAA,SAAS,IAAI,KAAb;AACAtB,QAAAA,KAAK,CAAC4B,IAAN,CAAWN,SAAS,KAAK,EAAd,GAAmB,IAAnB,GAA0B,KAArC;AACAA,QAAAA,SAAS,GAAG,QAAQA,SAAS,GAAG,IAAhC;AACD;;AACDtB,MAAAA,KAAK,CAAC4B,IAAN,CAAWN,SAAX;AACA,WAAK3C,GAAL,IAAY4C,gBAAZ;AACD,KAtDD;;AAuDA,WAAO,CAAC,KAAKzC,IAAL,EAAR,EAAqB;AACnB,YAAME,EAAE,GAAG,KAAKA,EAAL,EAAX;AACA,UAAI6C,GAAJ;;AACA,cAAQ7C,EAAR;AACA,aAAK,EAAL;AACE,eAAKL,GAAL;;AACA,cAAI,KAAKG,IAAL,EAAJ,EAAiB;AACf,kBAAM,IAAIQ,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,8CAA8C,KAAKZ,GAAK,EAA9F,CAAN;AACD;;AACDkD,UAAAA,GAAG,GAAG,KAAK7C,EAAL,EAAN;AACA,eAAKL,GAAL;;AACA,kBAAQkD,GAAR;AACA,iBAAK,EAAL;AACA,iBAAK,EAAL;AACA,iBAAK,EAAL;AACA,iBAAK,EAAL;AACE7B,cAAAA,KAAK,CAAC4B,IAAN,CAAWC,GAAX;AACA;;AACF,iBAAK,EAAL;AACE7B,cAAAA,KAAK,CAAC4B,IAAN,CAAW,CAAX;AACA;;AACF,iBAAK,GAAL;AACE5B,cAAAA,KAAK,CAAC4B,IAAN,CAAW,CAAX;AACA;;AACF,iBAAK,GAAL;AACE5B,cAAAA,KAAK,CAAC4B,IAAN,CAAW,EAAX;AACA;;AACF,iBAAK,GAAL;AACE5B,cAAAA,KAAK,CAAC4B,IAAN,CAAW,EAAX;AACA;;AACF,iBAAK,GAAL;AACE5B,cAAAA,KAAK,CAAC4B,IAAN,CAAW,EAAX;AACA;;AACF,iBAAK,GAAL;AACE5B,cAAAA,KAAK,CAAC4B,IAAN,CAAWV,MAAM,EAAjB;AACA;;AACF;AACE,oBAAM,IAAI5B,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,mDAAmD,KAAKZ,GAAK,EAAnG,CAAN;AA1BF;;AA4BA;;AACF,aAAK,EAAL;AACE,eAAKA,GAAL;AACA,iBAAO,IAAIP,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWc,MAA3B,EAAmC5C,SAAS,CAACyD,qBAAV,CAAgC9B,KAAhC,CAAnC,EAA2E,KAAKrB,GAAL,GAAWiB,QAAtF,CAAP;;AACF;AACE,cAAIZ,EAAE,GAAG,EAAT,EAAa;AACX,kBAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,0CAA0C,KAAKZ,GAAK,EAA1F,CAAN;AACD,WAFD,MAEO,IAAIK,EAAE,GAAG,GAAT,EAAc;AACnBgB,YAAAA,KAAK,CAAC4B,IAAN,CAAW5C,EAAX;AACA,iBAAKL,GAAL;AACD,WAHM,MAGA;AACLyC,YAAAA,YAAY;AACb;;AAhDH;AAkDD;;AACD,UAAM,IAAI9B,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,yCAAyC,KAAKZ,GAAK,EAAzF,CAAN;AACD;;AACDoD,EAAAA,UAAU,GAAG;AACX,YAAQ,KAAK/C,EAAL,EAAR;AACA,WAAK,GAAL;AACE,aAAKJ,SAAL,CAAegD,IAAf,CAAoB,WAApB;AACA,aAAKjD,GAAL;AACA,eAAO,IAAIP,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAW6B,GAA3B,EAAgCC,QAAhC,EAA0C,CAA1C,CAAP;;AACF,WAAK,EAAL;AACE,aAAKrD,SAAL,CAAegD,IAAf,CAAoB,aAApB;AACA,aAAKjD,GAAL;AACA,eAAO,IAAIP,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAW+B,KAA3B,EAAkCD,QAAlC,EAA4C,CAA5C,CAAP;;AACF,WAAK,EAAL;AAAS;AACL,iBAAO,KAAKlB,WAAL,EAAP;AACD;;AACH,WAAK,GAAL;AACE,aAAK3B,MAAL,CAAY,CACV,GADU,EAEV,GAFU,EAGV,GAHU,EAIV,GAJU,CAAZ;AAMA,eAAO,IAAIhB,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWgC,IAA3B,EAAiC,IAAjC,EAAuC,CAAvC,CAAP;;AACF,WAAK,GAAL;AACE,aAAK/C,MAAL,CAAY,CACV,GADU,EAEV,EAFU,EAGV,GAHU,EAIV,GAJU,EAKV,GALU,CAAZ;AAOA,eAAO,IAAIhB,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWiC,KAA3B,EAAkC,KAAlC,EAAyC,CAAzC,CAAP;;AACF,WAAK,GAAL;AACE,aAAKhD,MAAL,CAAY,CACV,GADU,EAEV,GAFU,EAGV,GAHU,EAIV,GAJU,CAAZ;AAMA,eAAO,IAAIhB,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWkC,IAA3B,EAAiC,IAAjC,EAAuC,CAAvC,CAAP;;AACF,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACA,WAAK,EAAL;AACE,eAAO,KAAK1C,WAAL,EAAP;;AACF;AACE,cAAM,IAAIL,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,qCAAqC,KAAKZ,GAAK,EAArF,CAAN;AAlDF;AAoDD;;AACD2D,EAAAA,IAAI,GAAG;AACL,SAAKpD,cAAL;;AACA,YAAQ,KAAKD,WAAL,EAAR;AACA,WAAK,OAAL;AACE,aAAKL,SAAL,CAAe2D,GAAf;AACA,eAAO,KAAKR,UAAL,EAAP;;AACF,WAAK,aAAL;AAAoB;AAChB,eAAKnD,SAAL,CAAe2D,GAAf;;AACA,cAAI,KAAKvD,EAAL,OAAc,EAAlB,EAAsB;AACpB,iBAAKL,GAAL;AACA,iBAAKO,cAAL;AACA,mBAAO,IAAId,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWqC,KAA3B,EAAkCC,SAAlC,EAA6C,CAA7C,CAAP;AACD;;AACD,cAAI,KAAKzD,EAAL,OAAc,EAAlB,EAAsB;AACpB,kBAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,qCAAqC,KAAKZ,GAAK,8CAA8Cc,MAAM,CAACC,YAAP,CAAoB,KAAKV,EAAL,EAApB,CAAgC,GAAnK,CAAN;AACD;;AACD,eAAKL,GAAL;AACA,eAAKC,SAAL,CAAegD,IAAf,CAAoB,aAApB;AACA,eAAK1C,cAAL;AACA,iBAAO,KAAK6C,UAAL,EAAP;AACD;;AACH,WAAK,aAAL;AAAoB;AAChB,eAAKnD,SAAL,CAAe2D,GAAf;;AACA,cAAI,KAAKvD,EAAL,OAAc,EAAlB,EAAsB;AACpB,iBAAKL,GAAL;AACA,iBAAKO,cAAL;AACA,mBAAO,IAAId,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWqC,KAA3B,EAAkCC,SAAlC,EAA6C,CAA7C,CAAP;AACD;;AACD,eAAK7D,SAAL,CAAegD,IAAf,CAAoB,aAApB;AACA,eAAK1C,cAAL;AACA,iBAAO,KAAK6C,UAAL,EAAP;AACD;;AACH,WAAK,SAAL;AACE,YAAI,KAAK/C,EAAL,OAAc,GAAlB,EAAuB;AACrB,eAAKJ,SAAL,CAAe2D,GAAf;AACA,eAAK5D,GAAL;AACA,eAAKO,cAAL;AACA,iBAAO,IAAId,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWqC,KAA3B,EAAkCC,SAAlC,EAA6C,CAA7C,CAAP;AACD;;AACD,YAAI,KAAKzD,EAAL,OAAc,EAAlB,EAAsB;AACpB,gBAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,qCAAqC,KAAKZ,GAAK,+CAA+Cc,MAAM,CAACC,YAAP,CAAoB,KAAKV,EAAL,EAApB,CAAgC,GAApK,CAAN;AACD;;AACD,aAAKL,GAAL;AACA,aAAKO,cAAL;;AACF,WAAK,WAAL;AAAkB;AACd,eAAKN,SAAL,CAAe2D,GAAf;;AACA,cAAI,KAAKvD,EAAL,OAAc,GAAlB,EAAuB;AACrB,iBAAKL,GAAL;AACA,iBAAKO,cAAL;AACA,mBAAO,IAAId,KAAK,CAAC8B,KAAV,CAAgB9B,KAAK,CAAC+B,IAAN,CAAWqC,KAA3B,EAAkCC,SAAlC,EAA6C,CAA7C,CAAP;AACD;;AACD,gBAAMC,OAAO,GAAG,KAAK3B,WAAL,EAAhB;AACA,eAAK7B,cAAL;;AACA,cAAI,KAAKF,EAAL,OAAc,EAAlB,EAAsB;AACpB,kBAAM,IAAIM,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,qCAAqC,KAAKZ,GAAK,sDAAsDc,MAAM,CAACC,YAAP,CAAoB,KAAKV,EAAL,EAApB,CAAgC,GAA3K,CAAN;AACD;;AACD,eAAKL,GAAL;AACA,eAAKC,SAAL,CAAegD,IAAf,CAAoB,WAApB;AACA,iBAAOc,OAAP;AACD;;AACH,WAAK,WAAL;AAAkB;AACd,eAAK9D,SAAL,CAAe2D,GAAf;AACA,eAAK3D,SAAL,CAAegD,IAAf,CAAoB,SAApB;AACA,eAAK1C,cAAL;AACA,iBAAO,KAAK6C,UAAL,EAAP;AACD;;AACH;AACE,cAAM,IAAIzC,KAAJ,CAAW,GAAGhB,MAAM,CAACiB,eAAiB,uCAAuC,KAAKZ,GAAK,yBAAvF,CAAN;AAjEF;AAmED;;AA5Ya;;AA8YhB,SAASgE,MAAT,CAAgBlE,IAAhB,EAAsBC,OAAtB,EAA+B;AAC7BA,EAAAA,OAAO,GAAGZ,MAAM,CAAC8E,MAAP,CAAc;AAAEC,IAAAA,SAAS,EAAE,IAAItE,SAAJ,CAAcE,IAAd,EAAoBC,OAApB;AAAb,GAAd,EAA2DA,OAA3D,CAAV;AACA,SAAOR,QAAQ,CAACyE,MAAT,CAAgBlE,IAAhB,EAAsBC,OAAtB,CAAP;AACD;;AAEDV,OAAO,CAACO,SAAR,GAAoBA,SAApB;AACAP,OAAO,CAAC2E,MAAR,GAAiBA,MAAjB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decode$1 = require('../decode.js');\nvar token = require('../token.js');\nvar byteUtils = require('../byte-utils.js');\nvar common = require('../common.js');\n\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new token.Token(token.Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new token.Token(token.Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, num, this.pos - startPos);\n    }\n    return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new token.Token(token.Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ common.decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ common.decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new token.Token(token.Type.string, byteUtils.decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ common.decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ common.decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new token.Token(token.Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new token.Token(token.Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new token.Token(token.Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new token.Token(token.Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new token.Token(token.Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new token.Token(token.Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        const token$1 = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token$1;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ common.decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return decode$1.decode(data, options);\n}\n\nexports.Tokenizer = Tokenizer;\nexports.decode = decode;\n"]},"metadata":{},"sourceType":"script"}