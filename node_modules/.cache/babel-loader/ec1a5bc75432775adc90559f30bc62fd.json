{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/Select';\n/**\n * The `Select` component is used to create a drop-down list. The items inside the `Select` define the available options by using the `Option` component.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Select\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar Select = withWebComponent('ui5-select', ['accessibleName', 'accessibleNameRef', 'name', 'valueState'], ['disabled', 'required'], ['valueStateMessage'], ['change']);\nSelect.displayName = 'Select';\nSelect.defaultProps = {\n  disabled: false,\n  required: false,\n  valueState: ValueState.None\n};\nexport { Select };","map":{"version":3,"sources":["../src/webComponents/Select/index.tsx"],"names":["Select","withWebComponent","disabled","required","valueState","ValueState","None"],"mappings":";;;AAuEA;AACA;AACA;AACA;AACA;;IACMA,MAAM,GAAGC,gBAAgB,CAAA,YAAA,EAE7B,CAAA,gBAAA,EAAA,mBAAA,EAAA,MAAA,EAF6B,YAE7B,CAF6B,EAG7B,CAAA,UAAA,EAH6B,UAG7B,CAH6B,EAI7B,CAJ6B,mBAI7B,CAJ6B,EAK7B,CAL6B,QAK7B,CAL6B,C;AAQ/BD,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AAEAA,MAAM,CAANA,YAAAA,GAAsB;AACpBE,EAAAA,QAAQ,EADY,KAAA;AAEpBC,EAAAA,QAAQ,EAFY,KAAA;AAGpBC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AAHH,CAAtBN","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Select';\n\nexport interface SelectPropTypes extends Omit<CommonProps, 'onChange'> {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the select.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines whether the component is in disabled state.\n   *\n   * **Note:** A disabled component is noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the name with which the component will be submitted in an HTML form. The value of the component will be the value of the currently selected `Option`.\n   *\n   * **Important:** For the `name` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the `Select` so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines whether the component is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the value state of the component.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the component options.\n   *\n   * **Note:** Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.\n   *\n   * **Note:** Use the `Option` component to define the desired options.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the value state message that will be displayed as pop up under the component.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the component is in `Information`, `Warning` or `Error` value state.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  valueStateMessage?: ReactNode | ReactNode[];\n  /**\n   * Fired when the selected option changes.\n   */\n  onChange?: (event: Ui5CustomEvent<HTMLSelectElement, { selectedOption: ReactNode }>) => void;\n}\n\n/**\n * The `Select` component is used to create a drop-down list. The items inside the `Select` define the available options by using the `Option` component.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Select\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Select = withWebComponent<SelectPropTypes>(\n  'ui5-select',\n  ['accessibleName', 'accessibleNameRef', 'name', 'valueState'],\n  ['disabled', 'required'],\n  ['valueStateMessage'],\n  ['change']\n);\n\nSelect.displayName = 'Select';\n\nSelect.defaultProps = {\n  disabled: false,\n  required: false,\n  valueState: ValueState.None\n};\n\nexport { Select };\n"]},"metadata":{},"sourceType":"module"}