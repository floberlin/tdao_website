{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport '@ui5/webcomponents-icons/dist/hint';\nimport '@ui5/webcomponents-icons/dist/status-critical';\nimport '@ui5/webcomponents-icons/dist/status-negative';\nimport '@ui5/webcomponents-icons/dist/status-positive';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nvar createInvertedValueStateStyles = function createInvertedValueStateStyles(baseColor) {\n  return {\n    background: ThemingParameters[\"\".concat(baseColor, \"_Background\")],\n    color: ThemingParameters[\"\".concat(baseColor, \"_TextColor\")],\n    '& [ui5-icon]': {\n      color: ThemingParameters[\"\".concat(baseColor, \"_TextColor\")]\n    },\n    '&$active:hover': {\n      background: ThemingParameters[\"\".concat(baseColor, \"_Hover_Background\")],\n      color: ThemingParameters[\"\".concat(baseColor, \"_Hover_TextColor\")],\n      '& [ui5-icon]': {\n        color: ThemingParameters[\"\".concat(baseColor, \"_Hover_TextColor\")]\n      }\n    },\n    '&$active:active': {\n      background: ThemingParameters[\"\".concat(baseColor, \"_Active_Background\")],\n      color: ThemingParameters[\"\".concat(baseColor, \"_Active_TextColor\")],\n      '& [ui5-icon]': {\n        color: ThemingParameters[\"\".concat(baseColor, \"_Active_TextColor\")]\n      }\n    }\n  };\n};\n\nvar createInvertedIndicationStyles = function createInvertedIndicationStyles(baseColor) {\n  return {\n    color: ThemingParameters[\"\".concat(baseColor, \"_TextColor\")],\n    backgroundColor: ThemingParameters[\"\".concat(baseColor)],\n    '& [ui5-icon]': {\n      color: ThemingParameters[\"\".concat(baseColor, \"_TextColor\")]\n    },\n    '&$active:hover': {\n      background: ThemingParameters[\"\".concat(baseColor, \"_Hover_Background\")]\n    },\n    '&$active:active': {\n      background: ThemingParameters[\"\".concat(baseColor, \"_Active_Background\")]\n    }\n  };\n};\n\nvar styles = {\n  objectStatus: {\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    position: 'relative',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    width: 'fit-content'\n  },\n  icon: {\n    width: '1rem',\n    textAlign: 'center',\n    display: 'inline-block',\n    height: '1rem',\n    lineHeight: '1rem',\n    verticalAlign: 'top',\n    paddingRight: '0.25rem',\n    '&:only-child': {\n      paddingRight: 0\n    }\n  },\n  text: {\n    lineHeight: '1rem',\n    display: 'inline-block',\n    height: 'inherit',\n    verticalAlign: 'top'\n  },\n  success: {\n    color: ThemingParameters.sapPositiveTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapPositiveElementColor\n    }\n  },\n  warning: {\n    color: ThemingParameters.sapCriticalTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapCriticalElementColor\n    }\n  },\n  error: {\n    color: ThemingParameters.sapNegativeTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapNegativeElementColor\n    }\n  },\n  information: {\n    color: ThemingParameters.sapInformativeTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapInformativeElementColor\n    }\n  },\n  none: {\n    color: ThemingParameters.sapNeutralTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapNeutralElementColor\n    }\n  },\n  indication01: {\n    color: ThemingParameters.sapIndicationColor_1,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_1\n    }\n  },\n  indication02: {\n    color: ThemingParameters.sapIndicationColor_2,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_2\n    }\n  },\n  indication03: {\n    color: ThemingParameters.sapIndicationColor_3,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_3\n    }\n  },\n  indication04: {\n    color: ThemingParameters.sapIndicationColor_4,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_4\n    }\n  },\n  indication05: {\n    color: ThemingParameters.sapIndicationColor_5,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_5\n    }\n  },\n  indication06: {\n    color: ThemingParameters.sapIndicationColor_6,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_6\n    }\n  },\n  indication07: {\n    color: ThemingParameters.sapIndicationColor_7,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_7\n    }\n  },\n  indication08: {\n    color: ThemingParameters.sapIndicationColor_8,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_8\n    }\n  },\n  active: {\n    '&:hover, &:active': {\n      cursor: 'pointer',\n      '&:not($inverted) $text, $icon:only-child': {\n        textDecoration: 'underline'\n      }\n    }\n  },\n  inverted: {\n    height: 'auto',\n    minHeight: '1rem',\n    minWidth: '1.25rem',\n    padding: '0.0625rem 0.25rem',\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    fontFamily: ThemingParameters.sapFontBoldFamily,\n    fontSize: ThemingParameters.sapFontSmallSize,\n    '& [ui5-icon]': {\n      paddingTop: '0.125rem',\n      width: ThemingParameters.sapFontSmallSize,\n      height: ThemingParameters.sapFontSmallSize\n    },\n    '&$error': createInvertedValueStateStyles('sapButton_Negative'),\n    '&$warning': createInvertedValueStateStyles('sapButton_Critical'),\n    '&$success': createInvertedValueStateStyles('sapButton_Success'),\n    '&$information': createInvertedValueStateStyles('sapButton_Information'),\n    '&$none': createInvertedValueStateStyles('sapButton_Neutral'),\n    '&$indication01': createInvertedIndicationStyles('sapIndicationColor_1'),\n    '&$indication02': createInvertedIndicationStyles('sapIndicationColor_2'),\n    '&$indication03': createInvertedIndicationStyles('sapIndicationColor_3'),\n    '&$indication04': createInvertedIndicationStyles('sapIndicationColor_4'),\n    '&$indication05': createInvertedIndicationStyles('sapIndicationColor_5'),\n    '&$indication06': createInvertedIndicationStyles('sapIndicationColor_6'),\n    '&$indication07': createInvertedIndicationStyles('sapIndicationColor_7'),\n    '&$indication08': createInvertedIndicationStyles('sapIndicationColor_8')\n  }\n};\nvar styles$1 = styles;\n\nvar getDefaultIcon = function getDefaultIcon(state) {\n  switch (state) {\n    case ValueState.Error:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"status-negative\"\n      });\n\n    case ValueState.Success:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"status-positive\"\n      });\n\n    case ValueState.Warning:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"status-critical\"\n      });\n\n    case ValueState.Information:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"hint\"\n      });\n\n    default:\n      return null;\n  }\n};\n\nvar useStyles = createUseStyles(styles$1, {\n  name: 'ObjectStatus'\n});\n/**\n * Status information that can be either text with a value state, or an icon.\n */\n\nvar ObjectStatus = /*#__PURE__*/forwardRef(function (props, ref) {\n  var state = props.state,\n      showDefaultIcon = props.showDefaultIcon,\n      children = props.children,\n      icon = props.icon,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      active = props.active,\n      inverted = props.inverted,\n      onClick = props.onClick;\n\n  var iconToRender = function () {\n    if (icon) {\n      return icon;\n    }\n\n    if (showDefaultIcon) {\n      return getDefaultIcon(state);\n    }\n\n    return null;\n  }();\n\n  var classes = useStyles();\n  var objStatusClasses = StyleClassHelper.of(classes.objectStatus, classes[\"\".concat(state).toLowerCase()]);\n\n  if (active) {\n    objStatusClasses.put(classes.active);\n  }\n\n  if (inverted) {\n    objStatusClasses.put(classes.inverted);\n  }\n\n  if (className) {\n    objStatusClasses.put(className);\n  }\n\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: objStatusClasses.valueOf(),\n    style: style,\n    title: tooltip,\n    onClick: active ? onClick : undefined\n  }, passThroughProps), iconToRender && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.icon\n  }, iconToRender), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.text\n  }, children));\n});\nObjectStatus.displayName = 'ObjectStatus';\nObjectStatus.defaultProps = {\n  state: ValueState.None\n};\nexport { ObjectStatus };","map":{"version":3,"sources":["../src/components/ObjectStatus/ObjectStatus.jss.ts","../src/components/ObjectStatus/index.tsx"],"names":["createInvertedValueStateStyles","background","ThemingParameters","color","createInvertedIndicationStyles","backgroundColor","styles","objectStatus","fontFamily","fontSize","fontWeight","position","display","verticalAlign","width","icon","textAlign","height","lineHeight","paddingRight","text","success","sapPositiveElementColor","warning","sapCriticalElementColor","error","sapNegativeElementColor","information","sapInformativeElementColor","none","sapNeutralElementColor","indication01","sapIndicationColor_1","indication02","sapIndicationColor_2","indication03","sapIndicationColor_3","indication04","sapIndicationColor_4","indication05","sapIndicationColor_5","indication06","sapIndicationColor_6","indication07","sapIndicationColor_7","indication08","sapIndicationColor_8","active","cursor","textDecoration","inverted","minHeight","minWidth","padding","borderRadius","paddingTop","sapFontSmallSize","getDefaultIcon","ValueState","useStyles","createUseStyles","name","ObjectStatus","forwardRef","state","showDefaultIcon","children","className","style","tooltip","onClick","props","iconToRender","classes","objStatusClasses","StyleClassHelper","passThroughProps","usePassThroughHtmlProps","undefined","None"],"mappings":"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","sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nconst createInvertedValueStateStyles = (baseColor: string) => ({\n  background: ThemingParameters[`${baseColor}_Background`],\n  color: ThemingParameters[`${baseColor}_TextColor`],\n  '& [ui5-icon]': {\n    color: ThemingParameters[`${baseColor}_TextColor`]\n  },\n  '&$active:hover': {\n    background: ThemingParameters[`${baseColor}_Hover_Background`],\n    color: ThemingParameters[`${baseColor}_Hover_TextColor`],\n    '& [ui5-icon]': {\n      color: ThemingParameters[`${baseColor}_Hover_TextColor`]\n    }\n  },\n  '&$active:active': {\n    background: ThemingParameters[`${baseColor}_Active_Background`],\n    color: ThemingParameters[`${baseColor}_Active_TextColor`],\n    '& [ui5-icon]': {\n      color: ThemingParameters[`${baseColor}_Active_TextColor`]\n    }\n  }\n});\n\nconst createInvertedIndicationStyles = (baseColor: string) => ({\n  color: ThemingParameters[`${baseColor}_TextColor`],\n  backgroundColor: ThemingParameters[`${baseColor}`],\n  '& [ui5-icon]': {\n    color: ThemingParameters[`${baseColor}_TextColor`]\n  },\n  '&$active:hover': {\n    background: ThemingParameters[`${baseColor}_Hover_Background`]\n  },\n  '&$active:active': {\n    background: ThemingParameters[`${baseColor}_Active_Background`]\n  }\n});\n\nconst styles = {\n  objectStatus: {\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    position: 'relative',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    width: 'fit-content'\n  },\n\n  icon: {\n    width: '1rem',\n    textAlign: 'center',\n    display: 'inline-block',\n    height: '1rem',\n    lineHeight: '1rem',\n    verticalAlign: 'top',\n    paddingRight: '0.25rem',\n\n    '&:only-child': {\n      paddingRight: 0\n    }\n  },\n\n  text: {\n    lineHeight: '1rem',\n    display: 'inline-block',\n    height: 'inherit',\n    verticalAlign: 'top'\n  },\n\n  success: {\n    color: ThemingParameters.sapPositiveTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapPositiveElementColor\n    }\n  },\n  warning: {\n    color: ThemingParameters.sapCriticalTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapCriticalElementColor\n    }\n  },\n  error: {\n    color: ThemingParameters.sapNegativeTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapNegativeElementColor\n    }\n  },\n  information: {\n    color: ThemingParameters.sapInformativeTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapInformativeElementColor\n    }\n  },\n  none: {\n    color: ThemingParameters.sapNeutralTextColor,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapNeutralElementColor\n    }\n  },\n  indication01: {\n    color: ThemingParameters.sapIndicationColor_1,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_1\n    }\n  },\n  indication02: {\n    color: ThemingParameters.sapIndicationColor_2,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_2\n    }\n  },\n  indication03: {\n    color: ThemingParameters.sapIndicationColor_3,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_3\n    }\n  },\n  indication04: {\n    color: ThemingParameters.sapIndicationColor_4,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_4\n    }\n  },\n  indication05: {\n    color: ThemingParameters.sapIndicationColor_5,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_5\n    }\n  },\n  indication06: {\n    color: ThemingParameters.sapIndicationColor_6,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_6\n    }\n  },\n  indication07: {\n    color: ThemingParameters.sapIndicationColor_7,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_7\n    }\n  },\n  indication08: {\n    color: ThemingParameters.sapIndicationColor_8,\n    '& [ui5-icon]': {\n      color: ThemingParameters.sapIndicationColor_8\n    }\n  },\n\n  active: {\n    '&:hover, &:active': {\n      cursor: 'pointer',\n      '&:not($inverted) $text, $icon:only-child': {\n        textDecoration: 'underline'\n      }\n    }\n  },\n\n  inverted: {\n    height: 'auto',\n    minHeight: '1rem',\n    minWidth: '1.25rem',\n    padding: '0.0625rem 0.25rem',\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    fontFamily: ThemingParameters.sapFontBoldFamily,\n    fontSize: ThemingParameters.sapFontSmallSize,\n    '& [ui5-icon]': {\n      paddingTop: '0.125rem',\n      width: ThemingParameters.sapFontSmallSize,\n      height: ThemingParameters.sapFontSmallSize\n    },\n    '&$error': createInvertedValueStateStyles('sapButton_Negative'),\n    '&$warning': createInvertedValueStateStyles('sapButton_Critical'),\n    '&$success': createInvertedValueStateStyles('sapButton_Success'),\n    '&$information': createInvertedValueStateStyles('sapButton_Information'),\n    '&$none': createInvertedValueStateStyles('sapButton_Neutral'),\n    '&$indication01': createInvertedIndicationStyles('sapIndicationColor_1'),\n    '&$indication02': createInvertedIndicationStyles('sapIndicationColor_2'),\n    '&$indication03': createInvertedIndicationStyles('sapIndicationColor_3'),\n    '&$indication04': createInvertedIndicationStyles('sapIndicationColor_4'),\n    '&$indication05': createInvertedIndicationStyles('sapIndicationColor_5'),\n    '&$indication06': createInvertedIndicationStyles('sapIndicationColor_6'),\n    '&$indication07': createInvertedIndicationStyles('sapIndicationColor_7'),\n    '&$indication08': createInvertedIndicationStyles('sapIndicationColor_8')\n  }\n};\n\nexport default styles;\n","import '@ui5/webcomponents-icons/dist/hint';\nimport '@ui5/webcomponents-icons/dist/status-critical';\nimport '@ui5/webcomponents-icons/dist/status-negative';\nimport '@ui5/webcomponents-icons/dist/status-positive';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { IndicationColor } from '@ui5/webcomponents-react/dist/IndicationColor';\nimport React, { forwardRef, MouseEventHandler, ReactNode, Ref } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport styles from './ObjectStatus.jss';\n\nexport interface ObjectStatusPropTypes extends CommonProps {\n  /**\n   * Indicates if the ObjectStatus text and icon can be clicked/tapped by the user.\n   *\n   * **Note:** If you set this property to true, you have to also set the `children` or `icon` prop.\n   *\n   * @since 0.16.6\n   */\n  active?: boolean;\n\n  /**\n   * Defines the icon in front of the `ObjectStatus` text.<br />\n   * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use `Icon` in order to preserve the intended design.\n   */\n  icon?: ReactNode;\n\n  /**\n   * Determines whether the background color reflects the set state instead of the text\n   *\n   * @since 0.16.6\n   */\n  inverted?: boolean;\n\n  /**\n   * Defines the text of the `ObjectStatus`.<br />\n   * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: string | number | ReactNode;\n\n  /**\n   * Defines the value state of the <code>ObjectStatus</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> <li><code>Success</code></li> <li><code>Information</code></li> </ul>\n   *\n   * Since version 0.17.0 the state property also accepts values from enum `IndicationColor`.\n   */\n  state?: ValueState | IndicationColor;\n\n  /**\n   * Defines whether the default icon for each `ValueState` should be displayed.<br />\n   * __Note:__ If the `icon` prop was set, `showDefaultIcon` has no effect.\n   */\n  showDefaultIcon?: boolean;\n\n  /**\n   * Fires when the user clicks/taps on active text.\n   *\n   * @since 0.16.6\n   */\n  onClick?: MouseEventHandler<HTMLDivElement>;\n}\n\nconst getDefaultIcon = (state) => {\n  switch (state) {\n    case ValueState.Error:\n      return <Icon name=\"status-negative\" />;\n    case ValueState.Success:\n      return <Icon name=\"status-positive\" />;\n    case ValueState.Warning:\n      return <Icon name=\"status-critical\" />;\n    case ValueState.Information:\n      return <Icon name=\"hint\" />;\n    default:\n      return null;\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'ObjectStatus' });\n\n/**\n * Status information that can be either text with a value state, or an icon.\n */\nconst ObjectStatus = forwardRef((props: ObjectStatusPropTypes, ref: Ref<HTMLDivElement>) => {\n  const { state, showDefaultIcon, children, icon, className, style, tooltip, active, inverted, onClick } = props;\n\n  const iconToRender = (() => {\n    if (icon) {\n      return icon;\n    }\n    if (showDefaultIcon) {\n      return getDefaultIcon(state);\n    }\n    return null;\n  })();\n\n  const classes = useStyles();\n  const objStatusClasses = StyleClassHelper.of(classes.objectStatus, classes[`${state as string}`.toLowerCase()]);\n\n  if (active) {\n    objStatusClasses.put(classes.active);\n  }\n\n  if (inverted) {\n    objStatusClasses.put(classes.inverted);\n  }\n\n  if (className) {\n    objStatusClasses.put(className);\n  }\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div\n      ref={ref}\n      className={objStatusClasses.valueOf()}\n      style={style}\n      title={tooltip}\n      onClick={active ? onClick : undefined}\n      {...passThroughProps}\n    >\n      {iconToRender && <span className={classes.icon}>{iconToRender}</span>}\n      {children && <span className={classes.text}>{children}</span>}\n    </div>\n  );\n});\n\nObjectStatus.displayName = 'ObjectStatus';\n\nObjectStatus.defaultProps = {\n  state: ValueState.None\n};\n\nexport { ObjectStatus };\n"]},"metadata":{},"sourceType":"module"}