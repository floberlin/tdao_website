{"ast":null,"code":"import getEffectiveLinksHrefs from \"./getEffectiveLinksHrefs.js\";\nimport createLinkInHead from \"../util/createLinkInHead.js\";\nimport { shouldUseLinks, shouldPreloadLinks } from \"../CSP.js\";\nconst preloaded = new Set();\n\nconst preloadLinks = ElementClass => {\n  if (!shouldUseLinks() || !shouldPreloadLinks()) {\n    return;\n  }\n\n  const linksHrefs = getEffectiveLinksHrefs(ElementClass, false) || [];\n  const staticAreaLinksHrefs = getEffectiveLinksHrefs(ElementClass, true) || [];\n  [...linksHrefs, ...staticAreaLinksHrefs].forEach(href => {\n    if (!preloaded.has(href)) {\n      createLinkInHead(href, {\n        rel: \"preload\",\n        as: \"style\"\n      });\n      preloaded.add(href);\n    }\n  });\n};\n\nexport default preloadLinks;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/theming/preloadLinks.js"],"names":["getEffectiveLinksHrefs","createLinkInHead","shouldUseLinks","shouldPreloadLinks","preloaded","Set","preloadLinks","ElementClass","linksHrefs","staticAreaLinksHrefs","forEach","href","has","rel","as","add"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,6BAAnC;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,WAAnD;AAEA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,MAAMC,YAAY,GAAGC,YAAY,IAAI;AACpC,MAAI,CAACL,cAAc,EAAf,IAAqB,CAACC,kBAAkB,EAA5C,EAAgD;AAC/C;AACA;;AAED,QAAMK,UAAU,GAAGR,sBAAsB,CAACO,YAAD,EAAe,KAAf,CAAtB,IAA+C,EAAlE;AACA,QAAME,oBAAoB,GAAGT,sBAAsB,CAACO,YAAD,EAAe,IAAf,CAAtB,IAA8C,EAA3E;AAEA,GAAC,GAAGC,UAAJ,EAAgB,GAAGC,oBAAnB,EAAyCC,OAAzC,CAAiDC,IAAI,IAAI;AACxD,QAAI,CAACP,SAAS,CAACQ,GAAV,CAAcD,IAAd,CAAL,EAA0B;AACzBV,MAAAA,gBAAgB,CAACU,IAAD,EAAO;AAAEE,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OAAP,CAAhB;AACAV,MAAAA,SAAS,CAACW,GAAV,CAAcJ,IAAd;AACA;AACD,GALD;AAMA,CAdD;;AAgBA,eAAeL,YAAf","sourcesContent":["import getEffectiveLinksHrefs from \"./getEffectiveLinksHrefs.js\";\nimport createLinkInHead from \"../util/createLinkInHead.js\";\nimport { shouldUseLinks, shouldPreloadLinks } from \"../CSP.js\";\n\nconst preloaded = new Set();\n\nconst preloadLinks = ElementClass => {\n\tif (!shouldUseLinks() || !shouldPreloadLinks()) {\n\t\treturn;\n\t}\n\n\tconst linksHrefs = getEffectiveLinksHrefs(ElementClass, false) || [];\n\tconst staticAreaLinksHrefs = getEffectiveLinksHrefs(ElementClass, true) || [];\n\n\t[...linksHrefs, ...staticAreaLinksHrefs].forEach(href => {\n\t\tif (!preloaded.has(href)) {\n\t\t\tcreateLinkInHead(href, { rel: \"preload\", as: \"style\" });\n\t\t\tpreloaded.add(href);\n\t\t}\n\t});\n};\n\nexport default preloadLinks;\n"]},"metadata":{},"sourceType":"module"}