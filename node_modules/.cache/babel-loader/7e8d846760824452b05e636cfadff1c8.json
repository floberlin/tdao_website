{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { CustomListItem } from '@ui5/webcomponents-react/dist/CustomListItem';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { Label } from '@ui5/webcomponents-react/dist/Label';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { MessageViewContext } from '@ui5/webcomponents-react/dist/MessageViewContext';\nimport { ValueState as ValueState$1 } from '@ui5/webcomponents-react/dist/ValueState';\nimport React, { forwardRef, useContext } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nvar ValueState;\n\n(function (ValueState) {\n  ValueState[\"Error\"] = \"Error\";\n  ValueState[\"None\"] = \"None\";\n  ValueState[\"Success\"] = \"Success\";\n  ValueState[\"Warning\"] = \"Warning\";\n  ValueState[\"Information\"] = \"Information\";\n})(ValueState || (ValueState = {}));\n\nvar getIconNameForType = function getIconNameForType(type) {\n  switch (type) {\n    case ValueState.Error:\n    case 'Error':\n      return 'error';\n\n    case ValueState.Success:\n    case 'Success':\n      return 'sys-enter-2';\n\n    case ValueState.Warning:\n    case 'Warning':\n      return 'alert';\n\n    default:\n      return 'information';\n  }\n};\n\nvar _excluded = [\"titleText\", \"subtitleText\", \"counter\", \"type\", \"children\", \"className\"];\nvar useStyles = createUseStyles({\n  listItem: {\n    height: CssSizeVariables.sapWcrMessageViewListItemHeightSingle\n  },\n  message: {\n    padding: '0.25rem 0',\n    width: '100%',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    paddingRight: '1rem',\n    boxSizing: 'border-box'\n  },\n  withSubtitle: {\n    height: CssSizeVariables.sapWcrMessageViewListItemHeightByLine\n  },\n  withChildren: {\n    paddingRight: '0rem'\n  },\n  iconContainer: {\n    width: '3rem',\n    minWidth: '3rem',\n    height: '2.25rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    width: '1rem',\n    height: '1rem'\n  },\n  title: {\n    fontFamily: ThemingParameters.sapFontHeaderFamily,\n    fontSize: ThemingParameters.sapFontHeader6Size,\n    color: ThemingParameters.sapGroup_TitleTextColor,\n    maxWidth: '100%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    flex: '1 1 auto',\n    '& + $subtitle': {\n      marginTop: '0.25rem',\n      cursor: 'inherit'\n    }\n  },\n  subtitle: {},\n  counter: {\n    color: ThemingParameters.sapContent_MarkerTextColor,\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    paddingLeft: '1rem',\n    flex: 'none'\n  },\n  navigation: {\n    height: '0.875rem',\n    width: '0.875rem',\n    padding: '0 0.9375rem',\n    flexShrink: 0\n  },\n  typeError: {\n    '& $icon': {\n      color: ThemingParameters.sapNegativeElementColor\n    }\n  },\n  typeSuccess: {\n    '& $icon': {\n      color: ThemingParameters.sapPositiveElementColor\n    }\n  },\n  typeWarning: {\n    ' & $icon': {\n      color: ThemingParameters.sapCriticalElementColor\n    }\n  },\n  typeInformation: {\n    '& $icon': {\n      // color: ThemingParameters.sapInformativeElementColor\n      color: ThemingParameters.sapNeutralElementColor\n    }\n  },\n  typeNone: {\n    '& $icon': {\n      color: ThemingParameters.sapNeutralElementColor\n    }\n  }\n}, {\n  name: 'MessageItem'\n});\nvar MessageItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var titleText = props.titleText,\n      subtitleText = props.subtitleText,\n      counter = props.counter,\n      type = props.type,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(MessageViewContext),\n      selectMessage = _useContext.selectMessage;\n\n  var classes = useStyles();\n  var listItemClasses = clsx(classes.listItem, Reflect.get(classes, \"type\".concat(type)), className, subtitleText && classes.withSubtitle);\n  var messageClasses = clsx(classes.message, children && classes.withChildren);\n\n  var handleListItemClick = function handleListItemClick(e) {\n    if (children) {\n      selectMessage(props);\n\n      if (typeof rest.onClick === 'function') {\n        rest.onClick(e);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CustomListItem, _extends({\n    onClick: handleListItemClick,\n    \"data-title\": titleText,\n    \"data-type\": type,\n    type: children ? ListItemType.Active : ListItemType.Inactive\n  }, rest, {\n    className: listItemClasses,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(FlexBox, {\n    alignItems: FlexBoxAlignItems.Center,\n    className: messageClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: getIconNameForType(type),\n    className: classes.icon\n  })), /*#__PURE__*/React.createElement(FlexBox, {\n    direction: FlexBoxDirection.Column,\n    style: {\n      flex: 'auto',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  }, titleText && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title\n  }, titleText), subtitleText && /*#__PURE__*/React.createElement(Label, {\n    className: classes.subtitle\n  }, subtitleText)), counter != null && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.counter\n  }, counter), children && /*#__PURE__*/React.createElement(Icon, {\n    className: classes.navigation,\n    name: \"slim-arrow-right\"\n  })));\n});\nMessageItem.displayName = 'MessageItem';\nMessageItem.defaultProps = {\n  type: ValueState$1.None\n};\nexport { MessageItem };","map":{"version":3,"sources":["../src/enums/ValueState.ts","../src/components/MessageView/utils.ts","../src/components/MessageView/MessageItem.tsx"],"names":["ValueState","getIconNameForType","useStyles","createUseStyles","listItem","height","CssSizeVariables","sapWcrMessageViewListItemHeightSingle","message","padding","width","maxWidth","overflow","paddingRight","boxSizing","withSubtitle","sapWcrMessageViewListItemHeightByLine","withChildren","iconContainer","minWidth","display","alignItems","justifyContent","icon","title","fontFamily","ThemingParameters","fontSize","color","whiteSpace","textOverflow","flex","marginTop","cursor","subtitle","counter","paddingLeft","navigation","flexShrink","typeError","sapNegativeElementColor","typeSuccess","sapPositiveElementColor","typeWarning","sapCriticalElementColor","typeInformation","sapNeutralElementColor","typeNone","name","MessageItem","forwardRef","titleText","subtitleText","type","children","className","rest","props","selectMessage","useContext","classes","listItemClasses","clsx","Reflect","messageClasses","handleListItemClick","ListItemType","Inactive","ref","FlexBoxAlignItems","FlexBoxDirection","None"],"mappings":"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","sourcesContent":["export enum ValueState {\n  Error = 'Error',\n  None = 'None',\n  Success = 'Success',\n  Warning = 'Warning',\n  Information = 'Information'\n}\n","import { ValueState } from '../../enums/ValueState';\n\nexport const getIconNameForType = (type: ValueState | keyof typeof ValueState): string => {\n  switch (type) {\n    case ValueState.Error:\n    case 'Error':\n      return 'error';\n    case ValueState.Success:\n    case 'Success':\n      return 'sys-enter-2';\n    case ValueState.Warning:\n    case 'Warning':\n      return 'alert';\n    default:\n      return 'information';\n  }\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { CustomListItem } from '@ui5/webcomponents-react/dist/CustomListItem';\nimport { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { Label } from '@ui5/webcomponents-react/dist/Label';\nimport { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { MessageViewContext } from '@ui5/webcomponents-react/dist/MessageViewContext';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport React, { forwardRef, ReactNode, Ref, useContext } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { getIconNameForType } from './utils';\nimport clsx from 'clsx';\n\nexport interface MessageItemPropTypes extends CommonProps {\n  /**\n   * Specifies the title of the message\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use text or `Link` in order to preserve the intended design.\n   */\n  titleText: ReactNode;\n\n  /**\n   * Specifies the subtitle of the message\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  subtitleText?: ReactNode;\n\n  /**\n   * Defines the number of messages for a given message.\n   */\n  counter?: number;\n\n  /**\n   * Specifies the type of the message\n   */\n  type: ValueState | keyof typeof ValueState;\n\n  /**\n   * Name of a message group the current item belongs to.\n   */\n  groupName?: string;\n\n  /**\n   * Specifies detailed description of the message\n   */\n  children: ReactNode | ReactNode[];\n}\n\nconst useStyles = createUseStyles(\n  {\n    listItem: {\n      height: CssSizeVariables.sapWcrMessageViewListItemHeightSingle\n    },\n    message: {\n      padding: '0.25rem 0',\n      width: '100%',\n      maxWidth: '100%',\n      overflow: 'hidden',\n      paddingRight: '1rem',\n      boxSizing: 'border-box'\n    },\n    withSubtitle: {\n      height: CssSizeVariables.sapWcrMessageViewListItemHeightByLine\n    },\n    withChildren: {\n      paddingRight: '0rem'\n    },\n    iconContainer: {\n      width: '3rem',\n      minWidth: '3rem',\n      height: '2.25rem',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    icon: {\n      width: '1rem',\n      height: '1rem'\n    },\n    title: {\n      fontFamily: ThemingParameters.sapFontHeaderFamily,\n      fontSize: ThemingParameters.sapFontHeader6Size,\n      color: ThemingParameters.sapGroup_TitleTextColor,\n      maxWidth: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      flex: '1 1 auto',\n      '& + $subtitle': {\n        marginTop: '0.25rem',\n        cursor: 'inherit'\n      }\n    },\n    subtitle: {},\n    counter: {\n      color: ThemingParameters.sapContent_MarkerTextColor,\n      fontFamily: ThemingParameters.sapFontFamily,\n      fontSize: ThemingParameters.sapFontSize,\n      paddingLeft: '1rem',\n      flex: 'none'\n    },\n    navigation: {\n      height: '0.875rem',\n      width: '0.875rem',\n      padding: '0 0.9375rem',\n      flexShrink: 0\n    },\n    typeError: {\n      '& $icon': {\n        color: ThemingParameters.sapNegativeElementColor\n      }\n    },\n    typeSuccess: {\n      '& $icon': {\n        color: ThemingParameters.sapPositiveElementColor\n      }\n    },\n    typeWarning: {\n      ' & $icon': {\n        color: ThemingParameters.sapCriticalElementColor\n      }\n    },\n    typeInformation: {\n      '& $icon': {\n        // color: ThemingParameters.sapInformativeElementColor\n        color: ThemingParameters.sapNeutralElementColor\n      }\n    },\n    typeNone: {\n      '& $icon': {\n        color: ThemingParameters.sapNeutralElementColor\n      }\n    }\n  },\n  { name: 'MessageItem' }\n);\n\nconst MessageItem = forwardRef((props: MessageItemPropTypes, ref: Ref<Ui5DomRef>) => {\n  const { titleText, subtitleText, counter, type, children, className, ...rest } = props;\n\n  const { selectMessage } = useContext(MessageViewContext);\n\n  const classes = useStyles();\n\n  const listItemClasses = clsx(\n    classes.listItem,\n    Reflect.get(classes, `type${type}`),\n    className,\n    subtitleText && classes.withSubtitle\n  );\n\n  const messageClasses = clsx(classes.message, children && classes.withChildren);\n\n  const handleListItemClick = (e) => {\n    if (children) {\n      selectMessage(props);\n      if (typeof rest.onClick === 'function') {\n        rest.onClick(e);\n      }\n    }\n  };\n  return (\n    <CustomListItem\n      onClick={handleListItemClick}\n      data-title={titleText}\n      data-type={type}\n      type={children ? ListItemType.Active : ListItemType.Inactive}\n      {...rest}\n      className={listItemClasses}\n      ref={ref}\n    >\n      <FlexBox alignItems={FlexBoxAlignItems.Center} className={messageClasses}>\n        <div className={classes.iconContainer}>\n          <Icon name={getIconNameForType(type as ValueState)} className={classes.icon} />\n        </div>\n        <FlexBox\n          direction={FlexBoxDirection.Column}\n          style={{ flex: 'auto', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n        >\n          {titleText && <span className={classes.title}>{titleText}</span>}\n          {subtitleText && <Label className={classes.subtitle}>{subtitleText}</Label>}\n        </FlexBox>\n        {counter != null && <span className={classes.counter}>{counter}</span>}\n        {children && <Icon className={classes.navigation} name=\"slim-arrow-right\" />}\n      </FlexBox>\n    </CustomListItem>\n  );\n});\n\nMessageItem.displayName = 'MessageItem';\n\nMessageItem.defaultProps = {\n  type: ValueState.None\n};\n\nexport { MessageItem };\n"]},"metadata":{},"sourceType":"module"}