{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ProgressIndicatorTemplate from \"./generated/templates/ProgressIndicatorTemplate.lit.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport ProgressIndicatorCss from \"./generated/themes/ProgressIndicator.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-progress-indicator\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */\n  {\n    /**\n     * Defines whether component is in disabled state.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the component value is shown.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    hideValue: {\n      type: Boolean\n    },\n\n    /**\n     * Specifies the numerical value in percent for the length of the component.\n     *\n     * <b>Note:</b>\n     * If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n     * @type {Integer}\n     * @defaultvalue 0\n     * @public\n     */\n    value: {\n      type: Integer,\n      defaultValue: 0\n    },\n\n    /**\n     * Defines the value state of the component.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */\n  {//\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */\n  {//\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * Shows the progress of a process in a graphical way. To indicate the progress,\n * the inside of the component is filled with a color.\n *\n * <h3>Responsive Behavior</h3>\n * You can change the size of the Progress Indicator by changing its <code>width</code> or <code>height</code> CSS properties.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/ProgressIndicator.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ProgressIndicator\n * @extends UI5Element\n * @tagname ui5-progress-indicator\n * @public\n * @since 1.0.0-rc.8\n */\n\nclass ProgressIndicator extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get styles() {\n    return ProgressIndicatorCss;\n  }\n\n  static get template() {\n    return ProgressIndicatorTemplate;\n  }\n\n  constructor() {\n    super();\n    this._previousValue = 0;\n    this._transitionDuration = 0;\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  onBeforeRendering() {\n    this._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;\n    this._previousValue = this.validatedValue;\n  }\n\n  valueStateTextMappings() {\n    const i18nBundle = this.i18nBundle;\n    return {\n      \"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": i18nBundle.getText(VALUE_STATE_WARNING),\n      \"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n      \"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION)\n    };\n  }\n\n  valueStateIconMappings() {\n    return {\n      \"Error\": \"status-negative\",\n      \"Warning\": \"status-critical\",\n      \"Success\": \"status-positive\",\n      \"Information\": \"hint\"\n    };\n  }\n\n  get styles() {\n    return {\n      bar: {\n        \"width\": `${this.validatedValue}%`,\n        \"transition-duration\": this.shouldAnimate ? `${this._transitionDuration}ms` : \"none\"\n      }\n    };\n  }\n\n  get classes() {\n    return {\n      root: {\n        \"ui5-progress-indicator-max-value\": this.validatedValue === 100,\n        \"ui5-progress-indicator-min-value\": this.validatedValue === 0\n      }\n    };\n  }\n\n  get validatedValue() {\n    if (this.value < 0) {\n      return 0;\n    }\n\n    if (this.value > 100) {\n      return 100;\n    }\n\n    return this.value;\n  }\n\n  get showValueInRemainingBar() {\n    return this.value <= 50;\n  }\n\n  get shouldAnimate() {\n    return getAnimationMode() !== AnimationMode.None;\n  }\n\n  get valueStateText() {\n    const percentValue = `${this.validatedValue}%`;\n    const valueText = this.valueStateTextMappings()[this.valueState];\n    return valueText ? `${percentValue} ${valueText}` : percentValue;\n  }\n\n  get showIcon() {\n    return this.valueState !== ValueState.None;\n  }\n\n  get valueStateIcon() {\n    return this.valueStateIconMappings()[this.valueState];\n  }\n\n  get _ariaDisabled() {\n    return this.disabled || undefined;\n  }\n\n  static async onDefine() {\n    await fetchI18nBundle(\"@ui5/webcomponents\");\n  }\n\n}\n\nProgressIndicator.define();\nexport default ProgressIndicator;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/ProgressIndicator.js"],"names":["UI5Element","litRender","AnimationMode","ValueState","Integer","getAnimationMode","fetchI18nBundle","getI18nBundle","ProgressIndicatorTemplate","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","ProgressIndicatorCss","metadata","tag","properties","disabled","type","Boolean","hideValue","value","defaultValue","valueState","None","slots","events","ProgressIndicator","render","styles","template","constructor","_previousValue","_transitionDuration","i18nBundle","onBeforeRendering","Math","abs","validatedValue","valueStateTextMappings","getText","valueStateIconMappings","bar","shouldAnimate","classes","root","showValueInRemainingBar","valueStateText","percentValue","valueText","showIcon","valueStateIcon","_ariaDisabled","undefined","onDefine","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ProgressIndicatorTemplate from \"./generated/templates/ProgressIndicatorTemplate.lit.js\";\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport ProgressIndicatorCss from \"./generated/themes/ProgressIndicator.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-progress-indicator\",\n\tproperties: /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */ {\n\t\t/**\n\t\t * Defines whether component is in disabled state.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\t/**\n\t\t * Defines whether the component value is shown.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\thideValue: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\t/**\n\t\t * Specifies the numerical value in percent for the length of the component.\n\t\t *\n\t\t * <b>Note:</b>\n\t\t * If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n\t\t * @type {Integer}\n\t\t * @defaultvalue 0\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 0,\n\t\t},\n\t\t/**\n\t\t * Defines the value state of the component.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */ {\n\t\t//\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.ProgressIndicator.prototype */ {\n\t\t//\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * Shows the progress of a process in a graphical way. To indicate the progress,\n * the inside of the component is filled with a color.\n *\n * <h3>Responsive Behavior</h3>\n * You can change the size of the Progress Indicator by changing its <code>width</code> or <code>height</code> CSS properties.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/ProgressIndicator.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ProgressIndicator\n * @extends UI5Element\n * @tagname ui5-progress-indicator\n * @public\n * @since 1.0.0-rc.8\n */\nclass ProgressIndicator extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn ProgressIndicatorCss;\n\t}\n\n\tstatic get template() {\n\t\treturn ProgressIndicatorTemplate;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._previousValue = 0;\n\t\tthis._transitionDuration = 0;\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;\n\t\tthis._previousValue = this.validatedValue;\n\t}\n\n\tvalueStateTextMappings() {\n\t\tconst i18nBundle = this.i18nBundle;\n\n\t\treturn {\n\t\t\t\"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t\t\"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t\"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t};\n\t}\n\n\tvalueStateIconMappings() {\n\t\treturn {\n\t\t\t\"Error\": \"status-negative\",\n\t\t\t\"Warning\": \"status-critical\",\n\t\t\t\"Success\": \"status-positive\",\n\t\t\t\"Information\": \"hint\",\n\t\t};\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tbar: {\n\t\t\t\t\"width\": `${this.validatedValue}%`,\n\t\t\t\t\"transition-duration\": this.shouldAnimate ? `${this._transitionDuration}ms` : \"none\",\n\t\t\t},\n\t\t};\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"ui5-progress-indicator-max-value\": this.validatedValue === 100,\n\t\t\t\t\"ui5-progress-indicator-min-value\": this.validatedValue === 0,\n\t\t\t},\n\t\t};\n\t}\n\n\tget validatedValue() {\n\t\tif (this.value < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this.value > 100) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn this.value;\n\t}\n\n\tget showValueInRemainingBar() {\n\t\treturn this.value <= 50;\n\t}\n\n\tget shouldAnimate() {\n\t\treturn getAnimationMode() !== AnimationMode.None;\n\t}\n\n\tget valueStateText() {\n\t\tconst percentValue = `${this.validatedValue}%`;\n\t\tconst valueText = this.valueStateTextMappings()[this.valueState];\n\n\t\treturn valueText ? `${percentValue} ${valueText}` : percentValue;\n\t}\n\n\tget showIcon() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateIcon() {\n\t\treturn this.valueStateIconMappings()[this.valueState];\n\t}\n\n\tget _ariaDisabled() {\n\t\treturn this.disabled || undefined;\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nProgressIndicator.define();\n\nexport default ProgressIndicator;\n"]},"metadata":{},"sourceType":"module"}