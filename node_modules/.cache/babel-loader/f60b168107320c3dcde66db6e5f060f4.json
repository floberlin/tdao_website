{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport { createUseStyles } from 'react-jss';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react/dist/FlexBoxJustifyContent';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport React, { forwardRef } from 'react';\nvar styles = {\n  flexBox: {\n    display: 'flex'\n  },\n  fitContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  flexBoxDisplayInline: {\n    display: 'inline-flex'\n  },\n  justifyContentStart: {\n    justifyContent: 'flex-start'\n  },\n  justifyContentEnd: {\n    justifyContent: 'flex-end'\n  },\n  justifyContentCenter: {\n    justifyContent: 'center'\n  },\n  justifyContentSpaceAround: {\n    justifyContent: 'space-around'\n  },\n  justifyContentSpaceBetween: {\n    justifyContent: 'space-between'\n  },\n  flexBoxDirectionColumn: {\n    flexDirection: 'column'\n  },\n  flexBoxDirectionColumnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  flexBoxDirectionRow: {\n    flexDirection: 'row'\n  },\n  flexBoxDirectionRowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  alignItemsStart: {\n    alignItems: 'flex-start'\n  },\n  alignItemsEnd: {\n    alignItems: 'flex-end'\n  },\n  alignItemsCenter: {\n    alignItems: 'center'\n  },\n  alignItemsStretch: {\n    alignItems: 'stretch'\n  },\n  alignItemsBaseline: {\n    alignItems: 'baseline'\n  },\n  flexWrapNoWrap: {\n    flexWrap: 'nowrap'\n  },\n  flexWrapWrap: {\n    flexWrap: 'wrap'\n  },\n  flexWrapWrapReverse: {\n    flexWrap: 'wrap-reverse'\n  }\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'FlexBox'\n});\n/**\n * The `FlexBox` builds the container for a flexible box layout by leveraging the CSS flexbox layout.\n */\n\nvar FlexBox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      justifyContent = props.justifyContent,\n      direction = props.direction,\n      alignItems = props.alignItems,\n      displayInline = props.displayInline,\n      wrap = props.wrap,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      fitContainer = props.fitContainer,\n      slot = props.slot;\n  var classes = useStyles();\n  var flexBoxClasses = StyleClassHelper.of(classes.flexBox); // direction\n\n  flexBoxClasses.put(classes[\"flexBoxDirection\".concat(direction)]); // justify content\n\n  flexBoxClasses.put(classes[\"justifyContent\".concat(justifyContent)]); // align items\n\n  flexBoxClasses.put(classes[\"alignItems\".concat(alignItems)]); // wrapping\n\n  flexBoxClasses.put(classes[\"flexWrap\".concat(wrap)]);\n\n  if (displayInline) {\n    flexBoxClasses.put(classes.flexBoxDisplayInline);\n  }\n\n  if (fitContainer) {\n    flexBoxClasses.put(classes.fitContainer);\n  }\n\n  if (className) {\n    flexBoxClasses.put(className);\n  }\n\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: flexBoxClasses.valueOf(),\n    style: style,\n    title: tooltip,\n    slot: slot\n  }, passThroughProps), children);\n});\nFlexBox.defaultProps = {\n  alignItems: FlexBoxAlignItems.Stretch,\n  direction: FlexBoxDirection.Row,\n  displayInline: false,\n  fitContainer: false,\n  justifyContent: FlexBoxJustifyContent.Start,\n  wrap: FlexBoxWrap.NoWrap\n};\nFlexBox.displayName = 'FlexBox';\nexport { FlexBox };","map":{"version":3,"sources":["../src/components/FlexBox/FlexBox.jss.ts","../src/components/FlexBox/index.tsx"],"names":["styles","flexBox","display","fitContainer","width","height","flexBoxDisplayInline","justifyContentStart","justifyContent","justifyContentEnd","justifyContentCenter","justifyContentSpaceAround","justifyContentSpaceBetween","flexBoxDirectionColumn","flexDirection","flexBoxDirectionColumnReverse","flexBoxDirectionRow","flexBoxDirectionRowReverse","alignItemsStart","alignItems","alignItemsEnd","alignItemsCenter","alignItemsStretch","alignItemsBaseline","flexWrapNoWrap","flexWrap","flexWrapWrap","flexWrapWrapReverse","useStyles","createUseStyles","name","FlexBox","forwardRef","children","direction","displayInline","wrap","style","className","tooltip","slot","props","classes","flexBoxClasses","StyleClassHelper","passThroughProps","usePassThroughHtmlProps","FlexBoxAlignItems","FlexBoxDirection","FlexBoxJustifyContent","FlexBoxWrap","NoWrap"],"mappings":"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","sourcesContent":["export const styles = {\n  flexBox: {\n    display: 'flex'\n  },\n  fitContainer: { width: '100%', height: '100%' },\n  flexBoxDisplayInline: {\n    display: 'inline-flex'\n  },\n  justifyContentStart: {\n    justifyContent: 'flex-start'\n  },\n  justifyContentEnd: {\n    justifyContent: 'flex-end'\n  },\n  justifyContentCenter: {\n    justifyContent: 'center'\n  },\n  justifyContentSpaceAround: {\n    justifyContent: 'space-around'\n  },\n  justifyContentSpaceBetween: {\n    justifyContent: 'space-between'\n  },\n  flexBoxDirectionColumn: {\n    flexDirection: 'column'\n  },\n  flexBoxDirectionColumnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  flexBoxDirectionRow: {\n    flexDirection: 'row'\n  },\n  flexBoxDirectionRowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  alignItemsStart: {\n    alignItems: 'flex-start'\n  },\n  alignItemsEnd: {\n    alignItems: 'flex-end'\n  },\n  alignItemsCenter: {\n    alignItems: 'center'\n  },\n  alignItemsStretch: {\n    alignItems: 'stretch'\n  },\n  alignItemsBaseline: {\n    alignItems: 'baseline'\n  },\n  flexWrapNoWrap: {\n    flexWrap: 'nowrap'\n  },\n  flexWrapWrap: {\n    flexWrap: 'wrap'\n  },\n  flexWrapWrapReverse: {\n    flexWrap: 'wrap-reverse'\n  }\n};\n","import { createUseStyles } from 'react-jss';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react/dist/FlexBoxJustifyContent';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport React, { forwardRef, ReactNode, ReactNodeArray, Ref } from 'react';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { styles } from './FlexBox.jss';\n\nconst useStyles = createUseStyles(styles, { name: 'FlexBox' });\n\nexport interface FlexBoxPropTypes extends CommonProps {\n  /**\n   * Controls the alignment of items on the Cross Axis.<br />\n   * <b>Note:</b> Corresponds to `align-items`.\n   */\n  alignItems?: FlexBoxAlignItems;\n  /**\n   * Controls how the items are placed in the `FlexBox`.<br />\n   * <b>Note:</b> Corresponds to `flex-direction`.\n   */\n  direction?: FlexBoxDirection;\n  /**\n   * Determines whether the `FlexBox` is in `flex` or `inline-flex` mode.\n   */\n  displayInline?: boolean;\n  /**\n   * Determines whether the `FlexBox` will be sized to completely fill its container.\n   */\n  fitContainer?: boolean;\n  /**\n   * Defines how the browser distributes space between and around items along the main-axis.<br />\n   * <b>Note:</b> Corresponds to `justify-content`.\n   */\n  justifyContent?: FlexBoxJustifyContent;\n  /**\n   * Determines whether the `FlexBox` should wrap, when there is not enough space to display all items in one line.<br />\n   * <b>Note:</b> Corresponds to `flex-wrap`.\n   */\n  wrap?: FlexBoxWrap;\n  /**\n   * Content of the `FlexBox`.\n   */\n  children: ReactNode | ReactNodeArray;\n}\n\n/**\n * The `FlexBox` builds the container for a flexible box layout by leveraging the CSS flexbox layout.\n */\nconst FlexBox = forwardRef((props: FlexBoxPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    children,\n    justifyContent,\n    direction,\n    alignItems,\n    displayInline,\n    wrap,\n    style,\n    className,\n    tooltip,\n    fitContainer,\n    slot\n  } = props;\n\n  const classes = useStyles();\n  const flexBoxClasses = StyleClassHelper.of(classes.flexBox);\n  // direction\n  flexBoxClasses.put(classes[`flexBoxDirection${direction}`]);\n  // justify content\n  flexBoxClasses.put(classes[`justifyContent${justifyContent}`]);\n  // align items\n  flexBoxClasses.put(classes[`alignItems${alignItems}`]);\n  // wrapping\n  flexBoxClasses.put(classes[`flexWrap${wrap}`]);\n\n  if (displayInline) {\n    flexBoxClasses.put(classes.flexBoxDisplayInline);\n  }\n\n  if (fitContainer) {\n    flexBoxClasses.put(classes.fitContainer);\n  }\n\n  if (className) {\n    flexBoxClasses.put(className);\n  }\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div ref={ref} className={flexBoxClasses.valueOf()} style={style} title={tooltip} slot={slot} {...passThroughProps}>\n      {children}\n    </div>\n  );\n});\n\nFlexBox.defaultProps = {\n  alignItems: FlexBoxAlignItems.Stretch,\n  direction: FlexBoxDirection.Row,\n  displayInline: false,\n  fitContainer: false,\n  justifyContent: FlexBoxJustifyContent.Start,\n  wrap: FlexBoxWrap.NoWrap\n};\nFlexBox.displayName = 'FlexBox';\n\nexport { FlexBox };\n"]},"metadata":{},"sourceType":"module"}