{"ast":null,"code":"import IllegalStateException from '../../../../IllegalStateException';\nimport GeneralAppIdDecoder from './GeneralAppIdDecoder';\nimport AI01AndOtherAIs from './AI01AndOtherAIs';\nimport AnyAIDecoder from './AnyAIDecoder';\nimport AI013103decoder from './AI013103decoder';\nimport AI01320xDecoder from './AI01320xDecoder';\nimport AI01392xDecoder from './AI01392xDecoder';\nimport AI01393xDecoder from './AI01393xDecoder';\nimport AI013x0x1xDecoder from './AI013x0x1xDecoder';\nexport function createDecoder(information) {\n  try {\n    if (information.get(1)) {\n      return new AI01AndOtherAIs(information);\n    }\n\n    if (!information.get(2)) {\n      return new AnyAIDecoder(information);\n    }\n\n    var fourBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 4);\n\n    switch (fourBitEncodationMethod) {\n      case 4:\n        return new AI013103decoder(information);\n\n      case 5:\n        return new AI01320xDecoder(information);\n    }\n\n    var fiveBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 5);\n\n    switch (fiveBitEncodationMethod) {\n      case 12:\n        return new AI01392xDecoder(information);\n\n      case 13:\n        return new AI01393xDecoder(information);\n    }\n\n    var sevenBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 7);\n\n    switch (sevenBitEncodationMethod) {\n      case 56:\n        return new AI013x0x1xDecoder(information, '310', '11');\n\n      case 57:\n        return new AI013x0x1xDecoder(information, '320', '11');\n\n      case 58:\n        return new AI013x0x1xDecoder(information, '310', '13');\n\n      case 59:\n        return new AI013x0x1xDecoder(information, '320', '13');\n\n      case 60:\n        return new AI013x0x1xDecoder(information, '310', '15');\n\n      case 61:\n        return new AI013x0x1xDecoder(information, '320', '15');\n\n      case 62:\n        return new AI013x0x1xDecoder(information, '310', '17');\n\n      case 63:\n        return new AI013x0x1xDecoder(information, '320', '17');\n    }\n  } catch (e) {\n    console.log(e);\n    throw new IllegalStateException('unknown decoder: ' + information);\n  }\n}","map":{"version":3,"sources":["../../../../../../../src/core/oned/rss/expanded/decoders/AbstractExpandedDecoderComplement.ts"],"names":[],"mappings":"AAAA,OAAO,qBAAP,MAAkC,mCAAlC;AAEA,OAAO,mBAAP,MAAgC,uBAAhC;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,OAAO,YAAP,MAAyB,gBAAzB;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,OAAO,iBAAP,MAA8B,qBAA9B;AAIA,OAAM,SAAU,aAAV,CAAwB,WAAxB,EAA6C;AACjD,MAAI;AACF,QAAI,WAAW,CAAC,GAAZ,CAAgB,CAAhB,CAAJ,EAAwB;AACtB,aAAO,IAAI,eAAJ,CAAoB,WAApB,CAAP;AAED;;AACD,QAAI,CAAC,WAAW,CAAC,GAAZ,CAAgB,CAAhB,CAAL,EAAyB;AACvB,aAAO,IAAI,YAAJ,CAAiB,WAAjB,CAAP;AACD;;AAED,QAAI,uBAAuB,GAAG,mBAAmB,CAAC,+BAApB,CAAoD,WAApD,EAAiE,CAAjE,EAAoE,CAApE,CAA9B;;AAEA,YAAQ,uBAAR;AACE,WAAK,CAAL;AAAQ,eAAO,IAAI,eAAJ,CAAoB,WAApB,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,IAAI,eAAJ,CAAoB,WAApB,CAAP;AAFV;;AAKA,QAAI,uBAAuB,GAAG,mBAAmB,CAAC,+BAApB,CAAoD,WAApD,EAAiE,CAAjE,EAAoE,CAApE,CAA9B;;AACA,YAAQ,uBAAR;AACE,WAAK,EAAL;AAAS,eAAO,IAAI,eAAJ,CAAoB,WAApB,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,eAAJ,CAAoB,WAApB,CAAP;AAFX;;AAKA,QAAI,wBAAwB,GAAG,mBAAmB,CAAC,+BAApB,CAAoD,WAApD,EAAiE,CAAjE,EAAoE,CAApE,CAA/B;;AACA,YAAQ,wBAAR;AACE,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;;AACT,WAAK,EAAL;AAAS,eAAO,IAAI,iBAAJ,CAAsB,WAAtB,EAAmC,KAAnC,EAA0C,IAA1C,CAAP;AARX;AAUD,GAjCD,CAiCE,OAAO,CAAP,EAAU;AACV,IAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACA,UAAM,IAAI,qBAAJ,CAA0B,sBAAsB,WAAhD,CAAN;AACD;AAGF","sourceRoot":"","sourcesContent":["import IllegalStateException from '../../../../IllegalStateException';\nimport GeneralAppIdDecoder from './GeneralAppIdDecoder';\nimport AI01AndOtherAIs from './AI01AndOtherAIs';\nimport AnyAIDecoder from './AnyAIDecoder';\nimport AI013103decoder from './AI013103decoder';\nimport AI01320xDecoder from './AI01320xDecoder';\nimport AI01392xDecoder from './AI01392xDecoder';\nimport AI01393xDecoder from './AI01393xDecoder';\nimport AI013x0x1xDecoder from './AI013x0x1xDecoder';\nexport function createDecoder(information) {\n    try {\n        if (information.get(1)) {\n            return new AI01AndOtherAIs(information);\n        }\n        if (!information.get(2)) {\n            return new AnyAIDecoder(information);\n        }\n        var fourBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 4);\n        switch (fourBitEncodationMethod) {\n            case 4: return new AI013103decoder(information);\n            case 5: return new AI01320xDecoder(information);\n        }\n        var fiveBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 5);\n        switch (fiveBitEncodationMethod) {\n            case 12: return new AI01392xDecoder(information);\n            case 13: return new AI01393xDecoder(information);\n        }\n        var sevenBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 7);\n        switch (sevenBitEncodationMethod) {\n            case 56: return new AI013x0x1xDecoder(information, '310', '11');\n            case 57: return new AI013x0x1xDecoder(information, '320', '11');\n            case 58: return new AI013x0x1xDecoder(information, '310', '13');\n            case 59: return new AI013x0x1xDecoder(information, '320', '13');\n            case 60: return new AI013x0x1xDecoder(information, '310', '15');\n            case 61: return new AI013x0x1xDecoder(information, '320', '15');\n            case 62: return new AI013x0x1xDecoder(information, '310', '17');\n            case 63: return new AI013x0x1xDecoder(information, '320', '17');\n        }\n    }\n    catch (e) {\n        console.log(e);\n        throw new IllegalStateException('unknown decoder: ' + information);\n    }\n}\n//# sourceMappingURL=AbstractExpandedDecoderComplement.js.map"]},"metadata":{},"sourceType":"module"}