{"ast":null,"code":"/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/*namespace com.google.zxing.oned {*/\n\n\nimport BarcodeFormat from '../BarcodeFormat';\nimport Result from '../Result';\nimport NotFoundException from '../NotFoundException';\nimport EAN13Reader from './EAN13Reader';\nimport UPCEANReader from './UPCEANReader';\n/**\n * Encapsulates functionality and implementation that is common to all families\n * of one-dimensional barcodes.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author sam2332 (Sam Rudloff)\n *\n * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCAReader.java\n *\n * @experimental\n */\n\nvar UPCAReader = function (_super) {\n  __extends(UPCAReader, _super);\n\n  function UPCAReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ean13Reader = new EAN13Reader();\n    return _this;\n  } // @Override\n\n\n  UPCAReader.prototype.getBarcodeFormat = function () {\n    return BarcodeFormat.UPC_A;\n  }; // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n  // @Override\n\n\n  UPCAReader.prototype.decode = function (image, hints) {\n    return this.maybeReturnResult(this.ean13Reader.decode(image));\n  }; // @Override\n\n\n  UPCAReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    return this.maybeReturnResult(this.ean13Reader.decodeRow(rowNumber, row, hints));\n  }; // @Override\n\n\n  UPCAReader.prototype.decodeMiddle = function (row, startRange, resultString) {\n    return this.ean13Reader.decodeMiddle(row, startRange, resultString);\n  };\n\n  UPCAReader.prototype.maybeReturnResult = function (result) {\n    var text = result.getText();\n\n    if (text.charAt(0) === '0') {\n      var upcaResult = new Result(text.substring(1), null, null, result.getResultPoints(), BarcodeFormat.UPC_A);\n\n      if (result.getResultMetadata() != null) {\n        upcaResult.putAllMetadata(result.getResultMetadata());\n      }\n\n      return upcaResult;\n    } else {\n      throw new NotFoundException();\n    }\n  };\n\n  UPCAReader.prototype.reset = function () {\n    this.ean13Reader.reset();\n  };\n\n  return UPCAReader;\n}(UPCEANReader);\n\nexport default UPCAReader;","map":{"version":3,"sources":["../../../../src/core/oned/UPCAReader.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;AAEH;;;AAEA,OAAO,aAAP,MAA0B,kBAA1B;AAMA,OAAO,MAAP,MAAmB,WAAnB;AAGA,OAAO,iBAAP,MAA8B,sBAA9B;AAEA,OAAO,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP,MAAyB,gBAAzB;AAGA;;;;;;;;;;;AAWG;;AACH,IAAA,UAAA,GAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAxC,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEmB,IAAA,KAAA,CAAA,WAAA,GAAc,IAAI,WAAJ,EAAd;;AAuClB,GAzCD,CAIE;;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,YAAA;AACE,WAAO,aAAa,CAAC,KAArB;AACD,GAFM,CALT,CASE;AACA;;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAAmC,KAAnC,EAAmE;AACjE,WAAO,KAAK,iBAAL,CAAuB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,CAAvB,CAAP;AACD,GAFM,CAXT,CAeE;;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,SAAjB,EAAoC,GAApC,EAAmD,KAAnD,EAAmF;AACjF,WAAO,KAAK,iBAAL,CAAuB,KAAK,WAAL,CAAiB,SAAjB,CAA2B,SAA3B,EAAsC,GAAtC,EAA2C,KAA3C,CAAvB,CAAP;AACD,GAFM,CAhBT,CAoBE;;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,GAApB,EAAmC,UAAnC,EAA2D,YAA3D,EAA+E;AAC7E,WAAO,KAAK,WAAL,CAAiB,YAAjB,CAA8B,GAA9B,EAAmC,UAAnC,EAA+C,YAA/C,CAAP;AACD,GAFM;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,UAAyB,MAAzB,EAAuC;AACrC,QAAI,IAAI,GAAG,MAAM,CAAC,OAAP,EAAX;;AACA,QAAI,IAAI,CAAC,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1B,UAAI,UAAU,GAAG,IAAI,MAAJ,CAAW,IAAI,CAAC,SAAL,CAAe,CAAf,CAAX,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,MAAM,CAAC,eAAP,EAA1C,EAAoE,aAAa,CAAC,KAAlF,CAAjB;;AACA,UAAI,MAAM,CAAC,iBAAP,MAA8B,IAAlC,EAAwC;AACtC,QAAA,UAAU,CAAC,cAAX,CAA0B,MAAM,CAAC,iBAAP,EAA1B;AACD;;AACD,aAAO,UAAP;AACD,KAND,MAMO;AACL,YAAM,IAAI,iBAAJ,EAAN;AACD;AACF,GAXM;;AAaA,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,SAAK,WAAL,CAAiB,KAAjB;AACD,GAFM;;AAGT,SAAA,UAAA;AAAC,CAzCD,CAAwC,YAAxC,CAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/*namespace com.google.zxing.oned {*/\nimport BarcodeFormat from '../BarcodeFormat';\nimport Result from '../Result';\nimport NotFoundException from '../NotFoundException';\nimport EAN13Reader from './EAN13Reader';\nimport UPCEANReader from './UPCEANReader';\n/**\n * Encapsulates functionality and implementation that is common to all families\n * of one-dimensional barcodes.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author sam2332 (Sam Rudloff)\n *\n * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCAReader.java\n *\n * @experimental\n */\nvar UPCAReader = /** @class */ (function (_super) {\n    __extends(UPCAReader, _super);\n    function UPCAReader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ean13Reader = new EAN13Reader();\n        return _this;\n    }\n    // @Override\n    UPCAReader.prototype.getBarcodeFormat = function () {\n        return BarcodeFormat.UPC_A;\n    };\n    // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n    // @Override\n    UPCAReader.prototype.decode = function (image, hints) {\n        return this.maybeReturnResult(this.ean13Reader.decode(image));\n    };\n    // @Override\n    UPCAReader.prototype.decodeRow = function (rowNumber, row, hints) {\n        return this.maybeReturnResult(this.ean13Reader.decodeRow(rowNumber, row, hints));\n    };\n    // @Override\n    UPCAReader.prototype.decodeMiddle = function (row, startRange, resultString) {\n        return this.ean13Reader.decodeMiddle(row, startRange, resultString);\n    };\n    UPCAReader.prototype.maybeReturnResult = function (result) {\n        var text = result.getText();\n        if (text.charAt(0) === '0') {\n            var upcaResult = new Result(text.substring(1), null, null, result.getResultPoints(), BarcodeFormat.UPC_A);\n            if (result.getResultMetadata() != null) {\n                upcaResult.putAllMetadata(result.getResultMetadata());\n            }\n            return upcaResult;\n        }\n        else {\n            throw new NotFoundException();\n        }\n    };\n    UPCAReader.prototype.reset = function () {\n        this.ean13Reader.reset();\n    };\n    return UPCAReader;\n}(UPCEANReader));\nexport default UPCAReader;\n//# sourceMappingURL=UPCAReader.js.map"]},"metadata":{},"sourceType":"module"}