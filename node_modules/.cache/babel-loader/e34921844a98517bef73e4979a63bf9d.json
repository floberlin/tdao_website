{"ast":null,"code":"import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents-fiori/dist/ShellBar';\n/**\n * The `ShellBar` is meant to serve as an application header and includes numerous built-in features, such as: logo, profile image/icon, title, search field, notifications and so on.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ShellBar\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar ShellBar = withWebComponent('ui5-shellbar', ['notificationsCount', 'primaryTitle', 'secondaryTitle'], ['showCoPilot', 'showNotifications', 'showProductSwitch'], ['logo', 'menuItems', 'profile', 'searchField', 'startButton'], ['co-pilot-click', 'logo-click', 'menu-item-click', 'notifications-click', 'product-switch-click', 'profile-click']);\nShellBar.displayName = 'ShellBar';\nShellBar.defaultProps = {\n  showCoPilot: false,\n  showNotifications: false,\n  showProductSwitch: false\n};\nexport { ShellBar };","map":{"version":3,"sources":["../src/webComponents/ShellBar/index.tsx"],"names":["ShellBar","withWebComponent","showCoPilot","showNotifications","showProductSwitch"],"mappings":";;AA2GA;AACA;AACA;AACA;AACA;;IACMA,QAAQ,GAAGC,gBAAgB,CAAA,cAAA,EAE/B,CAAA,oBAAA,EAAA,cAAA,EAF+B,gBAE/B,CAF+B,EAG/B,CAAA,aAAA,EAAA,mBAAA,EAH+B,mBAG/B,CAH+B,EAI/B,CAAA,MAAA,EAAA,WAAA,EAAA,SAAA,EAAA,aAAA,EAJ+B,aAI/B,CAJ+B,EAK/B,CAAA,gBAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,qBAAA,EAAA,sBAAA,EAL+B,eAK/B,CAL+B,C;AAQjCD,QAAQ,CAARA,WAAAA,GAAAA,UAAAA;AAEAA,QAAQ,CAARA,YAAAA,GAAwB;AACtBE,EAAAA,WAAW,EADW,KAAA;AAEtBC,EAAAA,iBAAiB,EAFK,KAAA;AAGtBC,EAAAA,iBAAiB,EAAE;AAHG,CAAxBJ","sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5ShellBarDomRef } from '@ui5/webcomponents-react/interfaces/Ui5ShellBarDomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/ShellBar';\n\nexport interface ShellBarPropTypes extends CommonProps {\n  /**\n   * Defines the `notificationsCount`, displayed in the notification icon top-right corner.\n   */\n  notificationsCount?: string;\n  /**\n   * Defines the `primaryTitle`.\n   *\n   * **Note:** The `primaryTitle` would be hidden on S screen size (less than approx. 700px).\n   */\n  primaryTitle?: string;\n  /**\n   * Defines the `secondaryTitle`.\n   *\n   * **Note:** The `secondaryTitle` would be hidden on S and M screen sizes (less than approx. 1300px).\n   */\n  secondaryTitle?: string;\n  /**\n   * Defines, if the product CoPilot icon would be displayed.\n   * **Note:** By default the co-pilot is displayed as static SVG. If you need an animated co-pilot, you can import the `\"@ui5/webcomponents-fiori/dist/features/CoPilotAnimation.js\"` module as add-on feature.\n   */\n  showCoPilot?: boolean;\n  /**\n   * Defines, if the notification icon would be displayed.\n   */\n  showNotifications?: boolean;\n  /**\n   * Defines, if the product switch icon would be displayed.\n   */\n  showProductSwitch?: boolean;\n  /**\n   * Defines the `ShellBar` aditional items.\n   *\n   * **Note:** You can use the  `ShellBarItem`.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the logo of the `ShellBar`. For example, you can use `Avatar` or `img` elements as logo.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  logo?: ReactNode;\n  /**\n   * Defines the items displayed in menu after a click on the primary title.\n   *\n   * **Note:** You can use the  `StandardListItem` and its ancestors.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  menuItems?: ReactNode | ReactNode[];\n  /**\n   * You can pass `Avatar` to set the profile image/icon. If no profile slot is set - profile will be excluded from actions. Note: We recommend not using the `size` attribute of `Avatar` because it should have specific size by design in the context of `ShellBar` profile.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  profile?: ReactNode;\n  /**\n   * Defines the `Input`, that will be used as a search field.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  searchField?: ReactNode;\n  /**\n   * Defines a `Button` in the bar that will be placed in the beginning. We encourage this slot to be used for a back or home button. It gets overstyled to match ShellBar's styling.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  startButton?: ReactNode;\n  /**\n   * Fired, when the co pilot is activated.\n   */\n  onCoPilotClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode }>) => void;\n  /**\n   * Fired, when the logo is activated.\n   */\n  onLogoClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode }>) => void;\n  /**\n   * Fired, when a menu item is activated **Note:** You can prevent closing of oveflow popover by calling `event.preventDefault()`.\n   */\n  onMenuItemClick?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired, when the notification icon is activated.\n   */\n  onNotificationsClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode }>) => void;\n  /**\n   * Fired, when the product switch icon is activated. **Note:** You can prevent closing of oveflow popover by calling `event.preventDefault()`.\n   */\n  onProductSwitchClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode }>) => void;\n  /**\n   * Fired, when the profile slot is present.\n   */\n  onProfileClick?: (event: Ui5CustomEvent<HTMLElement, { targetRef: ReactNode }>) => void;\n}\n\n/**\n * The `ShellBar` is meant to serve as an application header and includes numerous built-in features, such as: logo, profile image/icon, title, search field, notifications and so on.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ShellBar\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst ShellBar = withWebComponent<ShellBarPropTypes, Ui5ShellBarDomRef>(\n  'ui5-shellbar',\n  ['notificationsCount', 'primaryTitle', 'secondaryTitle'],\n  ['showCoPilot', 'showNotifications', 'showProductSwitch'],\n  ['logo', 'menuItems', 'profile', 'searchField', 'startButton'],\n  ['co-pilot-click', 'logo-click', 'menu-item-click', 'notifications-click', 'product-switch-click', 'profile-click']\n);\n\nShellBar.displayName = 'ShellBar';\n\nShellBar.defaultProps = {\n  showCoPilot: false,\n  showNotifications: false,\n  showProductSwitch: false\n};\n\nexport { ShellBar };\n"]},"metadata":{},"sourceType":"module"}