{"ast":null,"code":"import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\nconst eventProvider = getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\n\nconst attachCustomCSSChange = listener => {\n  eventProvider.attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst detachCustomCSSChange = listener => {\n  eventProvider.detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst fireCustomCSSChange = tag => {\n  return eventProvider.fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\n\nconst customCSSFor = getSharedResource(\"CustomStyle.customCSSFor\", {}); // Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\n\nlet skipRerender;\nattachCustomCSSChange(tag => {\n  if (!skipRerender) {\n    reRenderAllUI5Elements({\n      tag\n    });\n  }\n});\n\nconst addCustomCSS = (tag, css) => {\n  if (!customCSSFor[tag]) {\n    customCSSFor[tag] = [];\n  }\n\n  customCSSFor[tag].push(css);\n  skipRerender = true;\n\n  try {\n    // The event is fired and the attached event listeners are all called synchronously\n    // The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n    // of CustomStyle.js which is firing the `CustomCSSChange` event.\n    fireCustomCSSChange(tag);\n  } finally {\n    skipRerender = false;\n  }\n\n  return reRenderAllUI5Elements({\n    tag\n  });\n};\n\nconst getCustomCSS = tag => {\n  return customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\n\nexport { addCustomCSS, getCustomCSS, attachCustomCSSChange, detachCustomCSSChange };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js"],"names":["reRenderAllUI5Elements","getSharedResource","EventProvider","eventProvider","CUSTOM_CSS_CHANGE","attachCustomCSSChange","listener","attachEvent","detachCustomCSSChange","detachEvent","fireCustomCSSChange","tag","fireEvent","customCSSFor","skipRerender","addCustomCSS","css","push","getCustomCSS","join"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,cAAvC;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,MAAMC,aAAa,GAAGF,iBAAiB,CAAC,2BAAD,EAA8B,IAAIC,aAAJ,EAA9B,CAAvC;AACA,MAAME,iBAAiB,GAAG,iBAA1B;;AAEA,MAAMC,qBAAqB,GAAGC,QAAQ,IAAI;AACzCH,EAAAA,aAAa,CAACI,WAAd,CAA0BH,iBAA1B,EAA6CE,QAA7C;AACA,CAFD;;AAIA,MAAME,qBAAqB,GAAGF,QAAQ,IAAI;AACzCH,EAAAA,aAAa,CAACM,WAAd,CAA0BL,iBAA1B,EAA6CE,QAA7C;AACA,CAFD;;AAIA,MAAMI,mBAAmB,GAAGC,GAAG,IAAI;AAClC,SAAOR,aAAa,CAACS,SAAd,CAAwBR,iBAAxB,EAA2CO,GAA3C,CAAP;AACA,CAFD;;AAIA,MAAME,YAAY,GAAGZ,iBAAiB,CAAC,0BAAD,EAA6B,EAA7B,CAAtC,C,CAEA;AACA;AACA;;AACA,IAAIa,YAAJ;AACAT,qBAAqB,CAACM,GAAG,IAAI;AAC5B,MAAI,CAACG,YAAL,EAAmB;AAClBd,IAAAA,sBAAsB,CAAC;AAAEW,MAAAA;AAAF,KAAD,CAAtB;AACA;AACD,CAJoB,CAArB;;AAMA,MAAMI,YAAY,GAAG,CAACJ,GAAD,EAAMK,GAAN,KAAc;AAClC,MAAI,CAACH,YAAY,CAACF,GAAD,CAAjB,EAAwB;AACvBE,IAAAA,YAAY,CAACF,GAAD,CAAZ,GAAoB,EAApB;AACA;;AACDE,EAAAA,YAAY,CAACF,GAAD,CAAZ,CAAkBM,IAAlB,CAAuBD,GAAvB;AAEAF,EAAAA,YAAY,GAAG,IAAf;;AACA,MAAI;AACH;AACA;AACA;AACAJ,IAAAA,mBAAmB,CAACC,GAAD,CAAnB;AACA,GALD,SAKU;AACTG,IAAAA,YAAY,GAAG,KAAf;AACA;;AAED,SAAOd,sBAAsB,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAA7B;AACA,CAjBD;;AAmBA,MAAMO,YAAY,GAAGP,GAAG,IAAI;AAC3B,SAAOE,YAAY,CAACF,GAAD,CAAZ,GAAoBE,YAAY,CAACF,GAAD,CAAZ,CAAkBQ,IAAlB,CAAuB,EAAvB,CAApB,GAAiD,EAAxD;AACA,CAFD;;AAIA,SACCJ,YADD,EAECG,YAFD,EAGCb,qBAHD,EAICG,qBAJD","sourcesContent":["import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\n\nconst eventProvider = getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\n\nconst attachCustomCSSChange = listener => {\n\teventProvider.attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst detachCustomCSSChange = listener => {\n\teventProvider.detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst fireCustomCSSChange = tag => {\n\treturn eventProvider.fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\n\nconst customCSSFor = getSharedResource(\"CustomStyle.customCSSFor\", {});\n\n// Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\nlet skipRerender;\nattachCustomCSSChange(tag => {\n\tif (!skipRerender) {\n\t\treRenderAllUI5Elements({ tag });\n\t}\n});\n\nconst addCustomCSS = (tag, css) => {\n\tif (!customCSSFor[tag]) {\n\t\tcustomCSSFor[tag] = [];\n\t}\n\tcustomCSSFor[tag].push(css);\n\n\tskipRerender = true;\n\ttry {\n\t\t// The event is fired and the attached event listeners are all called synchronously\n\t\t// The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n\t\t// of CustomStyle.js which is firing the `CustomCSSChange` event.\n\t\tfireCustomCSSChange(tag);\n\t} finally {\n\t\tskipRerender = false;\n\t}\n\n\treturn reRenderAllUI5Elements({ tag });\n};\n\nconst getCustomCSS = tag => {\n\treturn customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\n\nexport {\n\taddCustomCSS,\n\tgetCustomCSS,\n\tattachCustomCSSChange,\n\tdetachCustomCSSChange,\n};\n"]},"metadata":{},"sourceType":"module"}