{"ast":null,"code":"import _toConsumableArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { SEGMENTEDBUTTON_ARIA_DESCRIPTION, SEGMENTEDBUTTON_ARIA_DESCRIBEDBY } from \"./generated/i18n/i18n-defaults.js\";\nimport SegmentedButtonItem from \"./SegmentedButtonItem.js\"; // Template\n\nimport SegmentedButtonTemplate from \"./generated/templates/SegmentedButtonTemplate.lit.js\"; // Styles\n\nimport SegmentedButtonCss from \"./generated/themes/SegmentedButton.css.js\";\n/**\n * @public\n */\n\nvar metadata = {\n  tag: \"ui5-segmented-button\",\n  altTag: \"ui5-segmentedbutton\",\n  languageAware: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */\n  {},\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */\n  {\n    /**\n     * Defines the items of <code>ui5-segmented-button</code>.\n     * <br><br>\n     * <b>Note:</b> Multiple items are allowed.\n     * <br><br>\n     * <b>Note:</b> Use the <code>ui5-segmented-button-item</code> for the intended design.\n     * @type {sap.ui.webcomponents.main.IButton[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      propertyName: \"items\",\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */\n  {\n    /**\n     * Fired when the selected item changes.\n     *\n     * @event sap.ui.webcomponents.main.SegmentedButton#selection-change\n     * @param {HTMLElement} selectedItem the pressed item.\n     * @public\n     */\n    \"selection-change\": {\n      detail: {\n        selectedItem: {\n          type: HTMLElement\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-segmented-button</code> shows a group of items. When the user clicks or taps\n * one of the items, it stays in a pressed state. It automatically resizes the items\n * to fit proportionally within the component. When no width is set, the component uses the available width.\n * <br><br>\n * <b>Note:</b> There can be just one selected <code>item</code> at a time.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/SegmentedButton\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.SegmentedButton\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-segmented-button\n * @since 1.0.0-rc.6\n * @appenddocs SegmentedButtonItem\n * @public\n */\n\nvar SegmentedButton = /*#__PURE__*/function (_UI5Element) {\n  _inherits(SegmentedButton, _UI5Element);\n\n  var _super = _createSuper(SegmentedButton);\n\n  function SegmentedButton() {\n    var _this;\n\n    _classCallCheck(this, SegmentedButton);\n\n    _this = _super.call(this);\n    _this._itemNavigation = new ItemNavigation(_assertThisInitialized(_this), {\n      getItemsCallback: function getItemsCallback() {\n        return _this.getSlottedNodes(\"items\");\n      }\n    });\n    _this.absoluteWidthSet = false; // set to true whenever we set absolute width to the component\n\n    _this.percentageWidthSet = false; //  set to true whenever we set 100% width to the component\n\n    _this.hasPreviouslyFocusedItem = false;\n    _this._handleResizeBound = _this._doLayout.bind(_assertThisInitialized(_this));\n    _this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n    return _this;\n  }\n\n  _createClass(SegmentedButton, [{\n    key: \"onEnterDOM\",\n    value: function onEnterDOM() {\n      ResizeHandler.register(this.parentNode, this._handleResizeBound);\n    }\n  }, {\n    key: \"onExitDOM\",\n    value: function onExitDOM() {\n      if (this.parentNode) {\n        ResizeHandler.deregister(this.parentNode, this._handleResizeBound);\n      }\n    }\n  }, {\n    key: \"onBeforeRendering\",\n    value: function onBeforeRendering() {\n      var items = this.getSlottedNodes(\"items\");\n      items.forEach(function (item, index, arr) {\n        item.posInSet = index + 1;\n        item.sizeOfSet = arr.length;\n      });\n      this.normalizeSelection();\n    }\n  }, {\n    key: \"onAfterRendering\",\n    value: function () {\n      var _onAfterRendering = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._doLayout();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onAfterRendering() {\n        return _onAfterRendering.apply(this, arguments);\n      }\n\n      return onAfterRendering;\n    }()\n  }, {\n    key: \"prepareToMeasureItems\",\n    value: function prepareToMeasureItems() {\n      this.style.width = \"\";\n      this.items.forEach(function (item) {\n        item.style.width = \"\";\n      });\n    }\n  }, {\n    key: \"measureItemsWidth\",\n    value: function () {\n      var _measureItemsWidth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return renderFinished();\n\n              case 2:\n                this.prepareToMeasureItems();\n                this.widths = this.items.map(function (item) {\n                  // +1 is added because for width 100.44px the offsetWidth property returns 100px and not 101px\n                  var width = item.offsetWidth + 1;\n\n                  if (isIE()) {\n                    // in IE we are adding 1 one px beacause the width of the border on an item in the middle is not calculated and if the\n                    // longest item is in the middle, it truncates\n                    width += 1;\n                  }\n\n                  return width;\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function measureItemsWidth() {\n        return _measureItemsWidth.apply(this, arguments);\n      }\n\n      return measureItemsWidth;\n    }()\n  }, {\n    key: \"normalizeSelection\",\n    value: function normalizeSelection() {\n      this._selectedItem = this.items.filter(function (item) {\n        return item.pressed;\n      }).pop();\n\n      if (this._selectedItem) {\n        this.items.forEach(function (item) {\n          item.pressed = false;\n        });\n        this._selectedItem.pressed = true;\n      }\n    }\n  }, {\n    key: \"_selectItem\",\n    value: function _selectItem(event) {\n      if (event.target.disabled || event.target === this.getDomRef()) {\n        return;\n      }\n\n      if (event.target !== this._selectedItem) {\n        if (this._selectedItem) {\n          this._selectedItem.pressed = false;\n        }\n\n        this._selectedItem = event.target;\n        this.fireEvent(\"selection-change\", {\n          selectedItem: this._selectedItem\n        });\n      }\n\n      this._selectedItem.pressed = true;\n\n      this._itemNavigation.setCurrentItem(this._selectedItem);\n\n      return this;\n    }\n  }, {\n    key: \"_onclick\",\n    value: function _onclick(event) {\n      this._selectItem(event);\n    }\n  }, {\n    key: \"_onkeydown\",\n    value: function _onkeydown(event) {\n      if (isEnter(event)) {\n        this._selectItem(event);\n      } else if (isSpace(event)) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_onkeyup\",\n    value: function _onkeyup(event) {\n      if (isSpace(event)) {\n        this._selectItem(event);\n      }\n    }\n  }, {\n    key: \"_onfocusin\",\n    value: function _onfocusin(event) {\n      // If the component was previously focused,\n      // update the ItemNavigation to sync butons` tabindex values\n      if (this.hasPreviouslyFocusedItem) {\n        this._itemNavigation.setCurrentItem(event.target);\n\n        return;\n      } // If the component is focused for the first time\n      // focus the selected item if such present\n\n\n      if (this.selectedItem) {\n        this.selectedItem.focus();\n\n        this._itemNavigation.setCurrentItem(this._selectedItem);\n\n        this.hasPreviouslyFocusedItem = true;\n      }\n    }\n  }, {\n    key: \"_doLayout\",\n    value: function () {\n      var _doLayout2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var itemsHaveWidth, parentWidth;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                itemsHaveWidth = this.widths && this.widths.some(function (item) {\n                  return item.offsetWidth > 2;\n                }); // 2 are the pixel's added for rounding & IE\n\n                if (itemsHaveWidth) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _context3.next = 4;\n                return this.measureItemsWidth();\n\n              case 4:\n                parentWidth = this.parentNode ? this.parentNode.offsetWidth : 0;\n\n                if (!this.style.width || this.percentageWidthSet) {\n                  this.style.width = \"\".concat(Math.max.apply(Math, _toConsumableArray(this.widths)) * this.items.length, \"px\");\n                  this.absoluteWidthSet = true;\n                }\n\n                this.items.forEach(function (item) {\n                  item.style.width = \"100%\";\n                });\n\n                if (parentWidth <= this.offsetWidth && this.absoluteWidthSet) {\n                  this.style.width = \"100%\";\n                  this.percentageWidthSet = true;\n                }\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _doLayout() {\n        return _doLayout2.apply(this, arguments);\n      }\n\n      return _doLayout;\n    }()\n    /**\n     * Currently selected item.\n     *\n     * @readonly\n     * @type { ui5-segmented-button-item }\n     * @public\n     */\n\n  }, {\n    key: \"selectedItem\",\n    get: function get() {\n      return this._selectedItem;\n    }\n  }, {\n    key: \"ariaDescribedBy\",\n    get: function get() {\n      return this.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIBEDBY);\n    }\n  }, {\n    key: \"ariaDescription\",\n    get: function get() {\n      return this.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIPTION);\n    }\n  }], [{\n    key: \"metadata\",\n    get: function get() {\n      return metadata;\n    }\n  }, {\n    key: \"render\",\n    get: function get() {\n      return litRender;\n    }\n  }, {\n    key: \"template\",\n    get: function get() {\n      return SegmentedButtonTemplate;\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return SegmentedButtonCss;\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [SegmentedButtonItem];\n    }\n  }, {\n    key: \"onDefine\",\n    value: function () {\n      var _onDefine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetchI18nBundle(\"@ui5/webcomponents\");\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function onDefine() {\n        return _onDefine.apply(this, arguments);\n      }\n\n      return onDefine;\n    }()\n  }]);\n\n  return SegmentedButton;\n}(UI5Element);\n\nSegmentedButton.define();\nexport default SegmentedButton;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/SegmentedButton.js"],"names":["UI5Element","ItemNavigation","litRender","fetchI18nBundle","getI18nBundle","ResizeHandler","renderFinished","isIE","isSpace","isEnter","SEGMENTEDBUTTON_ARIA_DESCRIPTION","SEGMENTEDBUTTON_ARIA_DESCRIBEDBY","SegmentedButtonItem","SegmentedButtonTemplate","SegmentedButtonCss","metadata","tag","altTag","languageAware","properties","managedSlots","slots","propertyName","type","HTMLElement","events","detail","selectedItem","SegmentedButton","_itemNavigation","getItemsCallback","getSlottedNodes","absoluteWidthSet","percentageWidthSet","hasPreviouslyFocusedItem","_handleResizeBound","_doLayout","bind","i18nBundle","register","parentNode","deregister","items","forEach","item","index","arr","posInSet","sizeOfSet","length","normalizeSelection","style","width","prepareToMeasureItems","widths","map","offsetWidth","_selectedItem","filter","pressed","pop","event","target","disabled","getDomRef","fireEvent","setCurrentItem","_selectItem","preventDefault","focus","itemsHaveWidth","some","measureItemsWidth","parentWidth","Math","max","getText","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { SEGMENTEDBUTTON_ARIA_DESCRIPTION, SEGMENTEDBUTTON_ARIA_DESCRIBEDBY } from \"./generated/i18n/i18n-defaults.js\";\nimport SegmentedButtonItem from \"./SegmentedButtonItem.js\";\n\n// Template\nimport SegmentedButtonTemplate from \"./generated/templates/SegmentedButtonTemplate.lit.js\";\n\n// Styles\nimport SegmentedButtonCss from \"./generated/themes/SegmentedButton.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-segmented-button\",\n\taltTag: \"ui5-segmentedbutton\",\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */  {},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */ {\n\n\t\t/**\n\t\t * Defines the items of <code>ui5-segmented-button</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Multiple items are allowed.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use the <code>ui5-segmented-button-item</code> for the intended design.\n\t\t * @type {sap.ui.webcomponents.main.IButton[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"items\",\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.SegmentedButton.prototype */ {\n\n\t\t/**\n\t\t * Fired when the selected item changes.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.SegmentedButton#selection-change\n\t\t * @param {HTMLElement} selectedItem the pressed item.\n\t\t * @public\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedItem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-segmented-button</code> shows a group of items. When the user clicks or taps\n * one of the items, it stays in a pressed state. It automatically resizes the items\n * to fit proportionally within the component. When no width is set, the component uses the available width.\n * <br><br>\n * <b>Note:</b> There can be just one selected <code>item</code> at a time.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/SegmentedButton\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.SegmentedButton\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-segmented-button\n * @since 1.0.0-rc.6\n * @appenddocs SegmentedButtonItem\n * @public\n */\nclass SegmentedButton extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn SegmentedButtonTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn SegmentedButtonCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [SegmentedButtonItem];\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => this.getSlottedNodes(\"items\"),\n\t\t});\n\n\t\tthis.absoluteWidthSet = false; // set to true whenever we set absolute width to the component\n\t\tthis.percentageWidthSet = false; //  set to true whenever we set 100% width to the component\n\t\tthis.hasPreviouslyFocusedItem = false;\n\n\t\tthis._handleResizeBound = this._doLayout.bind(this);\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this.parentNode, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tif (this.parentNode) {\n\t\t\tResizeHandler.deregister(this.parentNode, this._handleResizeBound);\n\t\t}\n\t}\n\n\tonBeforeRendering() {\n\t\tconst items = this.getSlottedNodes(\"items\");\n\n\t\titems.forEach((item, index, arr) => {\n\t\t\titem.posInSet = index + 1;\n\t\t\titem.sizeOfSet = arr.length;\n\t\t});\n\n\t\tthis.normalizeSelection();\n\t}\n\n\tasync onAfterRendering() {\n\t\tawait this._doLayout();\n\t}\n\n\tprepareToMeasureItems() {\n\t\tthis.style.width = \"\";\n\t\tthis.items.forEach(item => {\n\t\t\titem.style.width = \"\";\n\t\t});\n\t}\n\n\tasync measureItemsWidth() {\n\t\tawait renderFinished();\n\t\tthis.prepareToMeasureItems();\n\n\t\tthis.widths = this.items.map(item => {\n\t\t\t// +1 is added because for width 100.44px the offsetWidth property returns 100px and not 101px\n\t\t\tlet width = item.offsetWidth + 1;\n\n\t\t\tif (isIE()) {\n\t\t\t\t// in IE we are adding 1 one px beacause the width of the border on an item in the middle is not calculated and if the\n\t\t\t\t// longest item is in the middle, it truncates\n\t\t\t\twidth += 1;\n\t\t\t}\n\n\t\t\treturn width;\n\t\t});\n\t}\n\n\tnormalizeSelection() {\n\t\tthis._selectedItem = this.items.filter(item => item.pressed).pop();\n\n\t\tif (this._selectedItem) {\n\t\t\tthis.items.forEach(item => {\n\t\t\t\titem.pressed = false;\n\t\t\t});\n\t\t\tthis._selectedItem.pressed = true;\n\t\t}\n\t}\n\n\t_selectItem(event) {\n\t\tif (event.target.disabled || event.target === this.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.target !== this._selectedItem) {\n\t\t\tif (this._selectedItem) {\n\t\t\t\tthis._selectedItem.pressed = false;\n\t\t\t}\n\t\t\tthis._selectedItem = event.target;\n\t\t\tthis.fireEvent(\"selection-change\", {\n\t\t\t\tselectedItem: this._selectedItem,\n\t\t\t});\n\t\t}\n\n\t\tthis._selectedItem.pressed = true;\n\t\tthis._itemNavigation.setCurrentItem(this._selectedItem);\n\n\t\treturn this;\n\t}\n\n\t_onclick(event) {\n\t\tthis._selectItem(event);\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isEnter(event)) {\n\t\t\tthis._selectItem(event);\n\t\t} else if (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event)) {\n\t\t\tthis._selectItem(event);\n\t\t}\n\t}\n\n\t_onfocusin(event) {\n\t\t// If the component was previously focused,\n\t\t// update the ItemNavigation to sync butons` tabindex values\n\t\tif (this.hasPreviouslyFocusedItem) {\n\t\t\tthis._itemNavigation.setCurrentItem(event.target);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the component is focused for the first time\n\t\t// focus the selected item if such present\n\t\tif (this.selectedItem) {\n\t\t\tthis.selectedItem.focus();\n\t\t\tthis._itemNavigation.setCurrentItem(this._selectedItem);\n\t\t\tthis.hasPreviouslyFocusedItem = true;\n\t\t}\n\t}\n\n\tasync _doLayout() {\n\t\tconst itemsHaveWidth = this.widths && this.widths.some(item => item.offsetWidth > 2); // 2 are the pixel's added for rounding & IE\n\t\tif (!itemsHaveWidth) {\n\t\t\tawait this.measureItemsWidth();\n\t\t}\n\n\t\tconst parentWidth = this.parentNode ? this.parentNode.offsetWidth : 0;\n\n\t\tif (!this.style.width || this.percentageWidthSet) {\n\t\t\tthis.style.width = `${Math.max(...this.widths) * this.items.length}px`;\n\t\t\tthis.absoluteWidthSet = true;\n\t\t}\n\n\t\tthis.items.forEach(item => {\n\t\t\titem.style.width = \"100%\";\n\t\t});\n\n\t\tif (parentWidth <= this.offsetWidth && this.absoluteWidthSet) {\n\t\t\tthis.style.width = \"100%\";\n\t\t\tthis.percentageWidthSet = true;\n\t\t}\n\t}\n\n\t/**\n\t * Currently selected item.\n\t *\n\t * @readonly\n\t * @type { ui5-segmented-button-item }\n\t * @public\n\t */\n\tget selectedItem() {\n\t\treturn this._selectedItem;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn this.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIBEDBY);\n\t}\n\n\tget ariaDescription() {\n\t\treturn this.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIPTION);\n\t}\n}\n\nSegmentedButton.define();\n\nexport default SegmentedButton;\n"]},"metadata":{},"sourceType":"module"}