{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { supportsTouch } from '@ui5/webcomponents-base/dist/Device.js';\nexport { isDesktop, isIE, isPhone, isSafari, isTablet, supportsTouch } from '@ui5/webcomponents-base/dist/Device.js';\nimport EventProviderWC from '@ui5/webcomponents-base/dist/EventProvider.js';\nvar EventProvider = new EventProviderWC(); // private helpers\n\nvar activeRangeSet;\n\nvar matchLegacyBySize = function matchLegacyBySize(from, to, unit, width) {\n  var a = from < 0 || from <= width;\n  var b = to < 0 || width <= to;\n  return a && b;\n};\n\nvar getQuery = function getQuery(from, to) {\n  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'px';\n  var q = 'all';\n\n  if (from > 0) {\n    q = \"\".concat(q, \" and (min-width:\").concat(from).concat(unit, \")\");\n  }\n\n  if (to > 0) {\n    q = \"\".concat(q, \" and (max-width:\").concat(to).concat(unit, \")\");\n  }\n\n  return q;\n};\n\nvar getRangeInfo = function getRangeInfo(iRangeIdx) {\n  var q = activeRangeSet.queries[iRangeIdx];\n  var info = {\n    from: q.from,\n    unit: activeRangeSet.unit,\n    name: activeRangeSet.names[iRangeIdx]\n  };\n\n  if (q.to >= 0) {\n    info.to = q.to;\n  }\n\n  return info;\n};\n\nvar matches = function matches(from, to, unit) {\n  var q = getQuery(from, to, unit);\n  var mm = window.matchMedia(q); // FF returns null when running within an iframe with display:none\n\n  return mm && mm.matches;\n};\n\nvar checkQueries = function checkQueries(infoOnly) {\n  var matcher = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : matches;\n  var aQueries = activeRangeSet.queries;\n  var info = null;\n\n  for (var i = 0, len = aQueries.length; i < len; i++) {\n    var q = aQueries[i];\n\n    if ((q !== activeRangeSet.currentquery || infoOnly) && matcher(q.from, q.to, activeRangeSet.unit)) {\n      if (!infoOnly) {\n        activeRangeSet.currentquery = q;\n      }\n\n      info = getRangeInfo(i);\n    }\n  }\n\n  return info;\n};\n\nvar handleChange = function handleChange() {\n  if (activeRangeSet.timer) {\n    clearTimeout(activeRangeSet.timer);\n    activeRangeSet.timer = null;\n  }\n\n  activeRangeSet.timer = window.setTimeout(function () {\n    var mParams = checkQueries(false);\n\n    if (mParams) {\n      EventProvider.fireEvent(\"media\", mParams);\n    }\n  }, 0);\n};\n\nvar DEFAULT_RANGE_SET = 'StdExt';\n\nvar initRangeSet = function initRangeSet() {\n  if (activeRangeSet) {\n    return;\n  }\n\n  var oConfig = {\n    points: [600, 1024, 1440],\n    unit: 'px',\n    name: DEFAULT_RANGE_SET,\n    names: ['Phone', 'Tablet', 'Desktop', 'LargeDesktop']\n  };\n  oConfig.queries = [];\n  oConfig.timer = null;\n  oConfig.currentquery = null;\n\n  oConfig.listener = function () {\n    return handleChange();\n  };\n\n  var rangeBorders = oConfig.points;\n\n  for (var i = 0, len = rangeBorders.length; i <= len; i++) {\n    var from = i === 0 ? 0 : rangeBorders[i - 1];\n    var to = i === rangeBorders.length ? -1 : rangeBorders[i] - 1;\n    var query = getQuery(from, to, oConfig.unit);\n    var media = window.matchMedia(query);\n    media.addEventListener('change', oConfig.listener);\n    oConfig.queries.push({\n      query: query,\n      from: from,\n      to: to,\n      media: media\n    });\n  }\n\n  activeRangeSet = oConfig;\n  oConfig.listener();\n}; // public API\n\n\nvar getCurrentRange = function getCurrentRange(width) {\n  if (!activeRangeSet) {\n    initRangeSet();\n  }\n\n  return checkQueries(true, isNaN(width) ? undefined : function (from, to, unit) {\n    return matchLegacyBySize(from, to, unit, width);\n  });\n};\n\nvar attachMediaHandler = function attachMediaHandler(func) {\n  if (!activeRangeSet) {\n    initRangeSet();\n  }\n\n  EventProvider.attachEvent(\"media\", func);\n};\n\nvar detachMediaHandler = function detachMediaHandler(func) {\n  EventProvider.detachEvent(\"media\", func);\n};\n\nvar getActualWindowSize = function getActualWindowSize() {\n  return [window.innerWidth, window.innerHeight];\n};\n\nvar iResizeTimeout;\nvar bOrientationChange = false;\nvar bResize = false;\nvar iOrientationTimeout;\nvar iClearFlagTimeout;\n\nvar _getActualWindowSize = getActualWindowSize(),\n    _getActualWindowSize2 = _slicedToArray(_getActualWindowSize, 2),\n    iWindowWidthOld = _getActualWindowSize2[0],\n    iWindowHeightOld = _getActualWindowSize2[1];\n\nvar rInputTagRegex = /INPUT|TEXTAREA|SELECT/;\nvar internalWindowSize = {\n  height: 0,\n  width: 0\n};\nvar internalOrientation = {\n  landscape: false,\n  portrait: false\n}; // PRIVATE API\n\nvar isLandscape = function isLandscape() {\n  return !!window.matchMedia('(orientation: landscape)').matches;\n};\n\nvar setResizeInfo = function setResizeInfo() {\n  internalWindowSize.width = getActualWindowSize()[0];\n  internalWindowSize.height = getActualWindowSize()[1];\n};\n\nvar setOrientationInfo = function setOrientationInfo() {\n  internalOrientation.landscape = isLandscape();\n  internalOrientation.portrait = !internalOrientation.landscape;\n};\n\nvar clearFlags = function clearFlags() {\n  bOrientationChange = false;\n  bResize = false;\n  iClearFlagTimeout = null;\n};\n\nvar eventListenersInitialized = false;\n\nvar initEventListeners = function initEventListeners() {\n  // Add handler for orientationchange and resize after initialization of Device API\n  if (supportsTouch()) {\n    // logic for mobile devices which support orientationchange (like ios, android)\n    window.addEventListener('resize', handleMobileOrientationResizeChange, false);\n    window.addEventListener('orientationchange', handleMobileOrientationResizeChange, false);\n  } else {\n    // desktop browsers and windows phone/tablet which not support orientationchange\n    window.addEventListener('resize', handleResizeEvent, false);\n  }\n\n  setResizeInfo();\n  setOrientationInfo();\n  eventListenersInitialized = true;\n}; // orientation change\n\n\nvar handleOrientationChange = function handleOrientationChange() {\n  setOrientationInfo();\n  EventProvider.fireEvent('orientation', {\n    landscape: internalOrientation.landscape,\n    portrait: internalOrientation.portrait\n  });\n};\n\nvar handleMobileTimeout = function handleMobileTimeout() {\n  // with ios split view, the browser fires only resize event and no orientationchange\n  // when changing the size of a split view\n  // therefore the following if needs to be adapted with additional check of iPad with version greater or equal 9\n  // (splitview was introduced with iOS 9)\n  if (bResize && bOrientationChange) {\n    handleOrientationChange();\n    handleResizeChange();\n    bOrientationChange = false;\n    bResize = false;\n\n    if (iClearFlagTimeout) {\n      window.clearTimeout(iClearFlagTimeout);\n      iClearFlagTimeout = null;\n    }\n  }\n\n  iOrientationTimeout = null;\n};\n\nvar handleMobileOrientationResizeChange = function handleMobileOrientationResizeChange(evt) {\n  if (evt.type === 'resize') {\n    if (rInputTagRegex.test(document.activeElement.tagName) && !bOrientationChange) {\n      return;\n    }\n\n    var _getActualWindowSize3 = getActualWindowSize(),\n        _getActualWindowSize4 = _slicedToArray(_getActualWindowSize3, 2),\n        iWindowWidthNew = _getActualWindowSize4[0],\n        iWindowHeightNew = _getActualWindowSize4[1];\n\n    new Date().getTime(); // skip multiple resize events by only one orientationchange\n\n    if (iWindowHeightNew === iWindowHeightOld && iWindowWidthNew === iWindowWidthOld) {\n      return;\n    }\n\n    bResize = true; // on mobile devices opening the keyboard on some devices leads to a resize event\n    // in this case only the height changes, not the width\n\n    if (iWindowHeightOld !== iWindowHeightNew && iWindowWidthOld === iWindowWidthNew) {\n      handleResizeChange();\n    } else {\n      iWindowWidthOld = iWindowWidthNew;\n    }\n\n    iWindowHeightOld = iWindowHeightNew;\n\n    if (iClearFlagTimeout) {\n      window.clearTimeout(iClearFlagTimeout);\n      iClearFlagTimeout = null;\n    } // Some Android build-in browser fires a resize event after the viewport is applied.\n    // This resize event has to be dismissed otherwise when the next orientationchange event happens,\n    // a UI5 resize event will be fired with the wrong window size.\n\n\n    iClearFlagTimeout = window.setTimeout(clearFlags, 1200);\n  } else if (evt.type === 'orientationchange') {\n    bOrientationChange = true;\n  }\n\n  if (iOrientationTimeout) {\n    clearTimeout(iOrientationTimeout);\n    iOrientationTimeout = null;\n  }\n\n  iOrientationTimeout = window.setTimeout(handleMobileTimeout, 50);\n}; // RESIZE ONLY WITHOUT ORIENTATION CHANGE\n\n\nvar handleResizeChange = function handleResizeChange() {\n  setResizeInfo();\n  EventProvider.fireEvent('resize', {\n    height: internalWindowSize.height,\n    width: internalWindowSize.width\n  });\n};\n\nvar handleResizeTimeout = function handleResizeTimeout() {\n  handleResizeChange();\n  iResizeTimeout = null;\n};\n\nvar handleResizeEvent = function handleResizeEvent() {\n  var wasL = internalOrientation.landscape;\n  var isL = isLandscape();\n\n  if (wasL !== isL) {\n    handleOrientationChange();\n  } // throttle resize events because most browsers throw one or more resize events per pixel\n  // for every resize event inside the period from 150ms (starting from the first resize event),\n  // we only fire one resize event after this period\n\n\n  if (!iResizeTimeout) {\n    iResizeTimeout = window.setTimeout(handleResizeTimeout, 150);\n  }\n}; // re-export everything from the web components device\n\n\nvar attachResizeHandler = function attachResizeHandler(fnFunction) {\n  if (!eventListenersInitialized) {\n    initEventListeners();\n  }\n\n  EventProvider.attachEvent('resize', fnFunction);\n};\n\nvar detachResizeHandler = function detachResizeHandler(fnFunction) {\n  EventProvider.detachEvent('resize', fnFunction);\n}; // orientation change events\n\n\nvar getOrientation = function getOrientation() {\n  return internalOrientation;\n};\n\nvar attachOrientationChangeHandler = function attachOrientationChangeHandler(fnFunction) {\n  if (!eventListenersInitialized) {\n    initEventListeners();\n  }\n\n  EventProvider.attachEvent('orientation', fnFunction);\n};\n\nvar detachOrientationChangeHandler = function detachOrientationChangeHandler(fnFunction) {\n  EventProvider.detachEvent('orientation', fnFunction);\n};\n\nexport { attachMediaHandler, attachOrientationChangeHandler, attachResizeHandler, detachMediaHandler, detachOrientationChangeHandler, detachResizeHandler, getCurrentRange, getOrientation };","map":{"version":3,"sources":["../src/Device/EventProvider.ts","../src/Device/Media.ts","../src/Device/index.ts"],"names":["EventProvider","matchLegacyBySize","a","from","b","to","width","getQuery","unit","q","getRangeInfo","activeRangeSet","info","name","matches","mm","window","checkQueries","matcher","aQueries","i","len","handleChange","clearTimeout","mParams","DEFAULT_RANGE_SET","initRangeSet","oConfig","points","names","rangeBorders","query","media","getCurrentRange","isNaN","attachMediaHandler","detachMediaHandler","getActualWindowSize","bOrientationChange","bResize","iWindowWidthOld","iWindowHeightOld","rInputTagRegex","internalWindowSize","height","internalOrientation","landscape","portrait","isLandscape","setResizeInfo","setOrientationInfo","clearFlags","iClearFlagTimeout","eventListenersInitialized","initEventListeners","supportsTouch","handleOrientationChange","handleMobileTimeout","handleResizeChange","iOrientationTimeout","handleMobileOrientationResizeChange","evt","document","iWindowWidthNew","iWindowHeightNew","handleResizeTimeout","iResizeTimeout","handleResizeEvent","wasL","isL","attachResizeHandler","detachResizeHandler","getOrientation","attachOrientationChangeHandler","detachOrientationChangeHandler"],"mappings":"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","sourcesContent":["import EventProviderWC from '@ui5/webcomponents-base/dist/EventProvider.js';\n\nexport const EventProvider = new EventProviderWC();\n","import { EventProvider } from './EventProvider';\n\ninterface Query {\n  media?: MediaQueryList;\n  query: string;\n  from: number;\n  to: number;\n}\n\ninterface RangeInfo {\n  from: number;\n  to?: number;\n  name: 'Phone' | 'Tablet' | 'Desktop' | 'LargeDesktop';\n  unit: string;\n}\n\ninterface RangeSet {\n  points: number[];\n  unit: string;\n  name: string;\n  names: RangeInfo['name'][];\n\n  queries?: Query[];\n  timer?: number;\n  currentquery?: Query;\n  listener?: () => void;\n}\n\n// private helpers\nlet activeRangeSet: RangeSet;\n\nconst matchLegacyBySize = (from, to, unit, width) => {\n  const a = from < 0 || from <= width;\n  const b = to < 0 || width <= to;\n  return a && b;\n};\n\nconst getQuery = (from: number, to: number, unit = 'px') => {\n  let q = 'all';\n  if (from > 0) {\n    q = `${q} and (min-width:${from}${unit})`;\n  }\n  if (to > 0) {\n    q = `${q} and (max-width:${to}${unit})`;\n  }\n  return q;\n};\n\nconst getRangeInfo = (iRangeIdx: number): RangeInfo => {\n  const q = activeRangeSet.queries[iRangeIdx];\n  const info: RangeInfo = { from: q.from, unit: activeRangeSet.unit, name: activeRangeSet.names[iRangeIdx] };\n  if (q.to >= 0) {\n    info.to = q.to;\n  }\n  return info;\n};\n\nconst matches = (from: number, to: number, unit: string) => {\n  const q = getQuery(from, to, unit);\n  const mm = window.matchMedia(q); // FF returns null when running within an iframe with display:none\n  return mm && mm.matches;\n};\n\nconst checkQueries = (infoOnly, matcher = matches): RangeInfo => {\n  const aQueries = activeRangeSet.queries;\n  let info = null;\n  for (let i = 0, len = aQueries.length; i < len; i++) {\n    const q = aQueries[i];\n    if ((q !== activeRangeSet.currentquery || infoOnly) && matcher(q.from, q.to, activeRangeSet.unit)) {\n      if (!infoOnly) {\n        activeRangeSet.currentquery = q;\n      }\n      info = getRangeInfo(i);\n    }\n  }\n\n  return info;\n};\n\nconst handleChange = (): void => {\n  if (activeRangeSet.timer) {\n    clearTimeout(activeRangeSet.timer);\n    activeRangeSet.timer = null;\n  }\n\n  activeRangeSet.timer = window.setTimeout(() => {\n    const mParams = checkQueries(false);\n    if (mParams) {\n      EventProvider.fireEvent(`media`, mParams);\n    }\n  }, 0);\n};\n\nconst DEFAULT_RANGE_SET = 'StdExt';\n\nconst initRangeSet = (): void => {\n  if (activeRangeSet) {\n    return;\n  }\n\n  const oConfig: RangeSet = {\n    points: [600, 1024, 1440],\n    unit: 'px',\n    name: DEFAULT_RANGE_SET,\n    names: ['Phone', 'Tablet', 'Desktop', 'LargeDesktop']\n  };\n\n  oConfig.queries = [];\n  oConfig.timer = null;\n  oConfig.currentquery = null;\n  oConfig.listener = () => handleChange();\n\n  const rangeBorders = oConfig.points;\n  for (let i = 0, len = rangeBorders.length; i <= len; i++) {\n    const from = i === 0 ? 0 : rangeBorders[i - 1];\n    const to = i === rangeBorders.length ? -1 : rangeBorders[i] - 1;\n    const query = getQuery(from, to, oConfig.unit);\n    const media = window.matchMedia(query);\n    media.addEventListener('change', oConfig.listener);\n    oConfig.queries.push({\n      query,\n      from,\n      to,\n      media\n    });\n  }\n\n  activeRangeSet = oConfig;\n\n  oConfig.listener();\n};\n\n// public API\n\nexport const getCurrentRange = (width?: number): RangeInfo => {\n  if (!activeRangeSet) {\n    initRangeSet();\n  }\n\n  return checkQueries(true, isNaN(width) ? undefined : (from, to, unit) => matchLegacyBySize(from, to, unit, width));\n};\n\nexport const attachMediaHandler = (func: (rangeInfo: RangeInfo) => void): void => {\n  if (!activeRangeSet) {\n    initRangeSet();\n  }\n  EventProvider.attachEvent(`media`, func);\n};\n\nexport const detachMediaHandler = (func: (rangeInfo: RangeInfo) => void): void => {\n  EventProvider.detachEvent(`media`, func);\n};\n","import '@ui5/webcomponents-react-base/types/UI5Device.d.ts';\nimport { supportsTouch } from '@ui5/webcomponents-base/dist/Device.js';\nimport { EventProvider } from './EventProvider';\n\nconst getActualWindowSize = (): [width: number, height: number] => {\n  return [window.innerWidth, window.innerHeight];\n};\n\nlet iResizeTimeout;\nlet bOrientationChange = false;\nlet bResize = false;\nlet iOrientationTimeout;\nlet iClearFlagTimeout;\nlet [iWindowWidthOld, iWindowHeightOld] = getActualWindowSize();\nlet bKeyboardOpen = false;\nlet iLastResizeTime;\nconst rInputTagRegex = /INPUT|TEXTAREA|SELECT/;\n\ninterface IOrientation {\n  landscape: boolean;\n  portrait: boolean;\n}\n\ninterface IWindowSize {\n  height: number;\n  width: number;\n}\n\nconst internalWindowSize: IWindowSize = {\n  height: 0,\n  width: 0\n};\n\nconst internalOrientation: IOrientation = {\n  landscape: false,\n  portrait: false\n};\n\n// PRIVATE API\n\nconst isLandscape = () => {\n  return !!window.matchMedia('(orientation: landscape)').matches;\n};\n\nconst setResizeInfo = () => {\n  internalWindowSize.width = getActualWindowSize()[0];\n  internalWindowSize.height = getActualWindowSize()[1];\n};\n\nconst setOrientationInfo = () => {\n  internalOrientation.landscape = isLandscape();\n  internalOrientation.portrait = !internalOrientation.landscape;\n};\n\nconst clearFlags = () => {\n  bOrientationChange = false;\n  bResize = false;\n  iClearFlagTimeout = null;\n};\n\nlet eventListenersInitialized = false;\nconst initEventListeners = () => {\n  // Add handler for orientationchange and resize after initialization of Device API\n  if (supportsTouch()) {\n    // logic for mobile devices which support orientationchange (like ios, android)\n    window.addEventListener('resize', handleMobileOrientationResizeChange, false);\n    window.addEventListener('orientationchange', handleMobileOrientationResizeChange, false);\n  } else {\n    // desktop browsers and windows phone/tablet which not support orientationchange\n    window.addEventListener('resize', handleResizeEvent, false);\n  }\n  setResizeInfo();\n  setOrientationInfo();\n  eventListenersInitialized = true;\n};\n\n// orientation change\nconst handleOrientationChange = () => {\n  setOrientationInfo();\n  EventProvider.fireEvent('orientation', {\n    landscape: internalOrientation.landscape,\n    portrait: internalOrientation.portrait\n  });\n};\n\nconst handleMobileTimeout = () => {\n  // with ios split view, the browser fires only resize event and no orientationchange\n  // when changing the size of a split view\n  // therefore the following if needs to be adapted with additional check of iPad with version greater or equal 9\n  // (splitview was introduced with iOS 9)\n  if (bResize && bOrientationChange) {\n    handleOrientationChange();\n    handleResizeChange();\n    bOrientationChange = false;\n    bResize = false;\n    if (iClearFlagTimeout) {\n      window.clearTimeout(iClearFlagTimeout);\n      iClearFlagTimeout = null;\n    }\n  }\n  iOrientationTimeout = null;\n};\n\nconst handleMobileOrientationResizeChange = (evt) => {\n  if (evt.type === 'resize') {\n    if (rInputTagRegex.test(document.activeElement.tagName) && !bOrientationChange) {\n      return;\n    }\n\n    const [iWindowWidthNew, iWindowHeightNew] = getActualWindowSize();\n    const iTime = new Date().getTime();\n    // skip multiple resize events by only one orientationchange\n    if (iWindowHeightNew === iWindowHeightOld && iWindowWidthNew === iWindowWidthOld) {\n      return;\n    }\n    bResize = true;\n    // on mobile devices opening the keyboard on some devices leads to a resize event\n    // in this case only the height changes, not the width\n    if (iWindowHeightOld !== iWindowHeightNew && iWindowWidthOld === iWindowWidthNew) {\n      // Asus Transformer tablet fires two resize events when orientation changes while keyboard is open.\n      // Between these two events, only the height changes. The check of if keyboard is open has to be skipped because\n      // it may be judged as keyboard closed but the keyboard is still\n      // open which will affect the orientation detection\n      if (!iLastResizeTime || iTime - iLastResizeTime > 300) {\n        bKeyboardOpen = iWindowHeightNew < iWindowHeightOld;\n      }\n      handleResizeChange();\n    } else {\n      iWindowWidthOld = iWindowWidthNew;\n    }\n    iLastResizeTime = iTime;\n    iWindowHeightOld = iWindowHeightNew;\n\n    if (iClearFlagTimeout) {\n      window.clearTimeout(iClearFlagTimeout);\n      iClearFlagTimeout = null;\n    }\n    // Some Android build-in browser fires a resize event after the viewport is applied.\n    // This resize event has to be dismissed otherwise when the next orientationchange event happens,\n    // a UI5 resize event will be fired with the wrong window size.\n    iClearFlagTimeout = window.setTimeout(clearFlags, 1200);\n  } else if (evt.type === 'orientationchange') {\n    bOrientationChange = true;\n  }\n\n  if (iOrientationTimeout) {\n    clearTimeout(iOrientationTimeout);\n    iOrientationTimeout = null;\n  }\n  iOrientationTimeout = window.setTimeout(handleMobileTimeout, 50);\n};\n\n// RESIZE ONLY WITHOUT ORIENTATION CHANGE\nconst handleResizeChange = () => {\n  setResizeInfo();\n  EventProvider.fireEvent('resize', {\n    height: internalWindowSize.height,\n    width: internalWindowSize.width\n  });\n};\n\nconst handleResizeTimeout = () => {\n  handleResizeChange();\n  iResizeTimeout = null;\n};\n\nconst handleResizeEvent = () => {\n  const wasL = internalOrientation.landscape;\n  const isL = isLandscape();\n  if (wasL !== isL) {\n    handleOrientationChange();\n  }\n  // throttle resize events because most browsers throw one or more resize events per pixel\n  // for every resize event inside the period from 150ms (starting from the first resize event),\n  // we only fire one resize event after this period\n  if (!iResizeTimeout) {\n    iResizeTimeout = window.setTimeout(handleResizeTimeout, 150);\n  }\n};\n\n// re-export everything from the web components device\nexport { isIE, isSafari, isDesktop, isTablet, isPhone, supportsTouch } from '@ui5/webcomponents-base/dist/Device.js';\n// export all media methods\nexport { attachMediaHandler, detachMediaHandler, getCurrentRange } from './Media';\n\n// resize events\nexport const attachResizeHandler = (fnFunction: (windowSize: IWindowSize) => void): void => {\n  if (!eventListenersInitialized) {\n    initEventListeners();\n  }\n  EventProvider.attachEvent('resize', fnFunction);\n};\n\nexport const detachResizeHandler = (fnFunction: (windowSize: IWindowSize) => void) => {\n  EventProvider.detachEvent('resize', fnFunction);\n};\n\n// orientation change events\nexport const getOrientation = (): IOrientation => {\n  return internalOrientation;\n};\n\nexport const attachOrientationChangeHandler = (fnFunction: (orientation: IOrientation) => void): void => {\n  if (!eventListenersInitialized) {\n    initEventListeners();\n  }\n  EventProvider.attachEvent('orientation', fnFunction);\n};\n\nexport const detachOrientationChangeHandler = (fnFunction: (orientation: IOrientation) => void) => {\n  EventProvider.detachEvent('orientation', fnFunction);\n};\n"]},"metadata":{},"sourceType":"module"}