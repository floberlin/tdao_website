{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\n\nvar _ResponsiveGridLayout;\n\nvar ResponsiveGridLayoutStyles = (_ResponsiveGridLayout = {\n  container: {\n    display: 'grid'\n  }\n}, _defineProperty(_ResponsiveGridLayout, \"@media (max-width: 599px)\", {\n  container: {\n    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-s), minmax(0, 1fr))',\n    '& > *': {\n      gridColumn: 'span var(--_ui5wcr-rgl-column-span-s)'\n    }\n  }\n}), _defineProperty(_ResponsiveGridLayout, \"@media (min-width: 600px) and (max-width: 1023px)\", {\n  container: {\n    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-m), minmax(0, 1fr))',\n    '& > *': {\n      gridColumn: 'span var(--_ui5wcr-rgl-column-span-m)'\n    }\n  }\n}), _defineProperty(_ResponsiveGridLayout, \"@media (min-width: 1024px) and (max-width: 1439px)\", {\n  container: {\n    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-l), minmax(0, 1fr))',\n    '& > *': {\n      gridColumn: 'span var(--_ui5wcr-rgl-column-span-l)'\n    }\n  }\n}), _defineProperty(_ResponsiveGridLayout, \"@media (min-width: 1440px)\", {\n  container: {\n    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-xl), minmax(0, 1fr))',\n    '& > *': {\n      gridColumn: 'span var(--_ui5wcr-rgl-column-span-xl)'\n    }\n  }\n}), _ResponsiveGridLayout);\nvar useStyles = createUseStyles(ResponsiveGridLayoutStyles, {\n  name: 'ResponsiveGridLayout'\n});\n/**\n * The Responsive Grid Layout positions UI elements in a multi column flow layout.\n * They can be configured to display a variable number of columns depending on available screen size.\n * With these controls, it is possible to achieve flexible layouts and line breaks for large, medium,\n * and small-sized screens, such as desktop, tablet, and mobile.\n *\n * @since 0.16.4\n */\n\nvar ResponsiveGridLayout = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      columnGap = props.columnGap,\n      rowGap = props.rowGap,\n      columnsS = props.columnsS,\n      columnsM = props.columnsM,\n      columnsL = props.columnsL,\n      columnsXL = props.columnsXL,\n      columnSpanS = props.columnSpanS,\n      columnSpanM = props.columnSpanM,\n      columnSpanL = props.columnSpanL,\n      columnSpanXL = props.columnSpanXL,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      title = props.title;\n  var classes = useStyles();\n  var finalClassNames = StyleClassHelper.of(classes.container).putIfPresent(className);\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: finalClassNames.className,\n    title: tooltip !== null && tooltip !== void 0 ? tooltip : title,\n    style: _objectSpread({\n      gridRowGap: rowGap,\n      gridColumnGap: columnGap,\n      '--_ui5wcr-rgl-columns-s': columnsS,\n      '--_ui5wcr-rgl-columns-m': columnsM,\n      '--_ui5wcr-rgl-columns-l': columnsL,\n      '--_ui5wcr-rgl-columns-xl': columnsXL,\n      '--_ui5wcr-rgl-column-span-s': columnSpanS,\n      '--_ui5wcr-rgl-column-span-m': columnSpanM,\n      '--_ui5wcr-rgl-column-span-l': columnSpanL,\n      '--_ui5wcr-rgl-column-span-xl': columnSpanXL\n    }, style)\n  }, passThroughProps), children);\n});\nResponsiveGridLayout.displayName = 'ResponsiveGridLayout';\nResponsiveGridLayout.defaultProps = {\n  columnGap: '0.5rem',\n  rowGap: '0.5rem',\n  columnsS: 4,\n  columnsM: 8,\n  columnsL: 12,\n  columnsXL: 16,\n  columnSpanS: 1,\n  columnSpanM: 1,\n  columnSpanL: 1,\n  columnSpanXL: 1\n};\nexport { ResponsiveGridLayout };","map":{"version":3,"sources":["../src/components/ResponsiveGridLayout/ResponsiveGridLayout.jss.ts","../src/components/ResponsiveGridLayout/index.tsx"],"names":["ResponsiveGridLayoutStyles","container","display","gridTemplateColumns","gridColumn","useStyles","createUseStyles","name","ResponsiveGridLayout","forwardRef","children","columnGap","rowGap","columnsS","columnsM","columnsL","columnsXL","columnSpanS","columnSpanM","columnSpanL","columnSpanXL","style","className","tooltip","title","props","classes","finalClassNames","StyleClassHelper","passThroughProps","usePassThroughHtmlProps","gridRowGap","gridColumnGap"],"mappings":"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","sourcesContent":["export const ResponsiveGridLayoutStyles = {\n  container: {\n    display: 'grid'\n  },\n  [`@media (max-width: 599px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-s), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-s)'\n      }\n    }\n  },\n  [`@media (min-width: 600px) and (max-width: 1023px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-m), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-m)'\n      }\n    }\n  },\n  [`@media (min-width: 1024px) and (max-width: 1439px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-l), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-l)'\n      }\n    }\n  },\n  [`@media (min-width: 1440px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-xl), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-xl)'\n      }\n    }\n  }\n};\n","import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/dist/StyleClassHelper';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport React, { CSSProperties, forwardRef, ReactNode, ReactNodeArray, Ref } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ResponsiveGridLayoutStyles } from './ResponsiveGridLayout.jss';\n\nexport interface ResponsiveGridLayoutPropTypes extends CommonProps {\n  /**\n   * Number of columns to show on small screens (`max-width: 599px`)\n   */\n  columnsS?: number;\n\n  /**\n   * Number of columns to show on medium screens (`width >= 600px and width <=1023px`)\n   */\n  columnsM?: number;\n\n  /**\n   * Number of columns to show on large screens (`width >= 1024px and width <=1439px`)\n   */\n  columnsL?: number;\n\n  /**\n   * Number of columns to show on extra large screens (`min-width: 1440px`)\n   */\n  columnsXL?: number;\n\n  /**\n   * Defines how many columns a single child should cover on small screens.\n   */\n  columnSpanS?: number;\n  /**\n   * Defines how many columns a single child should cover on medium screens.\n   */\n  columnSpanM?: number;\n  /**\n   * Defines how many columns a single child should cover on large screens.\n   */\n  columnSpanL?: number;\n  /**\n   * Defines how many columns a single child should cover on extra large.\n   */\n  columnSpanXL?: number;\n  /**\n   * Gap between two columns of the grid\n   */\n  columnGap?: '0.5rem' | '1rem';\n\n  /**\n   * Gap between two rows of the grid\n   */\n  rowGap?: '0.5rem' | '1rem';\n\n  /**\n   * Child elements to be placed inside of the grid. In case you want to control the column span of each child independently,\n   * you can add an element style using the [gridColumn shorthand](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column).\n   *\n   * Example: If you want one child to span across 4 columns, you can add this element style to the child element:\n   * `style={{ gridColumn: 'span 4' }}`\n   */\n  children: ReactNode | ReactNodeArray;\n}\n\nconst useStyles = createUseStyles(ResponsiveGridLayoutStyles, { name: 'ResponsiveGridLayout' });\n\n/**\n * The Responsive Grid Layout positions UI elements in a multi column flow layout.\n * They can be configured to display a variable number of columns depending on available screen size.\n * With these controls, it is possible to achieve flexible layouts and line breaks for large, medium,\n * and small-sized screens, such as desktop, tablet, and mobile.\n *\n * @since 0.16.4\n */\nconst ResponsiveGridLayout = forwardRef((props: ResponsiveGridLayoutPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    children,\n    columnGap,\n    rowGap,\n    columnsS,\n    columnsM,\n    columnsL,\n    columnsXL,\n    columnSpanS,\n    columnSpanM,\n    columnSpanL,\n    columnSpanXL,\n    style,\n    className,\n    tooltip,\n    title\n  } = props;\n  const classes = useStyles();\n  const finalClassNames = StyleClassHelper.of(classes.container).putIfPresent(className);\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div\n      ref={ref}\n      className={finalClassNames.className}\n      title={tooltip ?? title}\n      style={\n        {\n          gridRowGap: rowGap,\n          gridColumnGap: columnGap,\n          '--_ui5wcr-rgl-columns-s': columnsS,\n          '--_ui5wcr-rgl-columns-m': columnsM,\n          '--_ui5wcr-rgl-columns-l': columnsL,\n          '--_ui5wcr-rgl-columns-xl': columnsXL,\n          '--_ui5wcr-rgl-column-span-s': columnSpanS,\n          '--_ui5wcr-rgl-column-span-m': columnSpanM,\n          '--_ui5wcr-rgl-column-span-l': columnSpanL,\n          '--_ui5wcr-rgl-column-span-xl': columnSpanXL,\n          ...style\n        } as CSSProperties\n      }\n      {...passThroughProps}\n    >\n      {children}\n    </div>\n  );\n});\n\nResponsiveGridLayout.displayName = 'ResponsiveGridLayout';\n\nResponsiveGridLayout.defaultProps = {\n  columnGap: '0.5rem',\n  rowGap: '0.5rem',\n  columnsS: 4,\n  columnsM: 8,\n  columnsL: 12,\n  columnsXL: 16,\n  columnSpanS: 1,\n  columnSpanM: 1,\n  columnSpanL: 1,\n  columnSpanXL: 1\n};\n\nexport { ResponsiveGridLayout };\n"]},"metadata":{},"sourceType":"module"}