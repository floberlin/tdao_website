{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { createUseStyles } from 'react-jss';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react/dist/FlexBoxJustifyContent';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nvar styles = {\n  flexBox: {\n    display: 'flex'\n  },\n  fitContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  flexBoxDisplayInline: {\n    display: 'inline-flex'\n  },\n  justifyContentStart: {\n    justifyContent: 'flex-start'\n  },\n  justifyContentEnd: {\n    justifyContent: 'flex-end'\n  },\n  justifyContentCenter: {\n    justifyContent: 'center'\n  },\n  justifyContentSpaceAround: {\n    justifyContent: 'space-around'\n  },\n  justifyContentSpaceBetween: {\n    justifyContent: 'space-between'\n  },\n  flexBoxDirectionColumn: {\n    flexDirection: 'column'\n  },\n  flexBoxDirectionColumnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  flexBoxDirectionRow: {\n    flexDirection: 'row'\n  },\n  flexBoxDirectionRowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  alignItemsStart: {\n    alignItems: 'flex-start'\n  },\n  alignItemsEnd: {\n    alignItems: 'flex-end'\n  },\n  alignItemsCenter: {\n    alignItems: 'center'\n  },\n  alignItemsStretch: {\n    alignItems: 'stretch'\n  },\n  alignItemsBaseline: {\n    alignItems: 'baseline'\n  },\n  flexWrapNoWrap: {\n    flexWrap: 'nowrap'\n  },\n  flexWrapWrap: {\n    flexWrap: 'wrap'\n  },\n  flexWrapWrapReverse: {\n    flexWrap: 'wrap-reverse'\n  }\n};\nvar _excluded = [\"children\", \"justifyContent\", \"direction\", \"alignItems\", \"displayInline\", \"wrap\", \"style\", \"className\", \"tooltip\", \"fitContainer\", \"slot\", \"as\"];\nvar useStyles = createUseStyles(styles, {\n  name: 'FlexBox'\n});\n/**\n * The `FlexBox` builds the container for a flexible box layout by leveraging the CSS flexbox layout.\n */\n\nvar FlexBox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      justifyContent = props.justifyContent,\n      direction = props.direction,\n      alignItems = props.alignItems,\n      displayInline = props.displayInline,\n      wrap = props.wrap,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      fitContainer = props.fitContainer,\n      slot = props.slot,\n      as = props.as,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var classes = useStyles();\n  var flexBoxClasses = clsx(classes.flexBox, classes[\"flexBoxDirection\".concat(direction)], classes[\"justifyContent\".concat(justifyContent)], classes[\"alignItems\".concat(alignItems)], classes[\"flexWrap\".concat(wrap)], displayInline && classes.flexBoxDisplayInline, fitContainer && classes.fitContainer, className);\n  var CustomTag = as;\n  return /*#__PURE__*/React.createElement(CustomTag, _extends({\n    ref: ref,\n    className: flexBoxClasses,\n    style: style,\n    title: tooltip,\n    slot: slot\n  }, rest), children);\n});\nFlexBox.defaultProps = {\n  as: 'div',\n  alignItems: FlexBoxAlignItems.Stretch,\n  direction: FlexBoxDirection.Row,\n  displayInline: false,\n  fitContainer: false,\n  justifyContent: FlexBoxJustifyContent.Start,\n  wrap: FlexBoxWrap.NoWrap\n};\nFlexBox.displayName = 'FlexBox';\nexport { FlexBox };","map":{"version":3,"sources":["../src/components/FlexBox/FlexBox.jss.ts","../src/components/FlexBox/index.tsx"],"names":["styles","flexBox","display","fitContainer","width","height","flexBoxDisplayInline","justifyContentStart","justifyContent","justifyContentEnd","justifyContentCenter","justifyContentSpaceAround","justifyContentSpaceBetween","flexBoxDirectionColumn","flexDirection","flexBoxDirectionColumnReverse","flexBoxDirectionRow","flexBoxDirectionRowReverse","alignItemsStart","alignItems","alignItemsEnd","alignItemsCenter","alignItemsStretch","alignItemsBaseline","flexWrapNoWrap","flexWrap","flexWrapWrap","flexWrapWrapReverse","useStyles","createUseStyles","name","FlexBox","forwardRef","children","direction","displayInline","wrap","style","className","tooltip","slot","as","rest","props","classes","flexBoxClasses","clsx","CustomTag","FlexBoxAlignItems","FlexBoxDirection","FlexBoxJustifyContent","FlexBoxWrap","NoWrap"],"mappings":"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","sourcesContent":["export const styles = {\n  flexBox: {\n    display: 'flex'\n  },\n  fitContainer: { width: '100%', height: '100%' },\n  flexBoxDisplayInline: {\n    display: 'inline-flex'\n  },\n  justifyContentStart: {\n    justifyContent: 'flex-start'\n  },\n  justifyContentEnd: {\n    justifyContent: 'flex-end'\n  },\n  justifyContentCenter: {\n    justifyContent: 'center'\n  },\n  justifyContentSpaceAround: {\n    justifyContent: 'space-around'\n  },\n  justifyContentSpaceBetween: {\n    justifyContent: 'space-between'\n  },\n  flexBoxDirectionColumn: {\n    flexDirection: 'column'\n  },\n  flexBoxDirectionColumnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  flexBoxDirectionRow: {\n    flexDirection: 'row'\n  },\n  flexBoxDirectionRowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  alignItemsStart: {\n    alignItems: 'flex-start'\n  },\n  alignItemsEnd: {\n    alignItems: 'flex-end'\n  },\n  alignItemsCenter: {\n    alignItems: 'center'\n  },\n  alignItemsStretch: {\n    alignItems: 'stretch'\n  },\n  alignItemsBaseline: {\n    alignItems: 'baseline'\n  },\n  flexWrapNoWrap: {\n    flexWrap: 'nowrap'\n  },\n  flexWrapWrap: {\n    flexWrap: 'wrap'\n  },\n  flexWrapWrapReverse: {\n    flexWrap: 'wrap-reverse'\n  }\n};\n","import { createUseStyles } from 'react-jss';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react/dist/FlexBoxJustifyContent';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/dist/FlexBoxWrap';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { styles } from './FlexBox.jss';\nimport clsx from 'clsx';\n\nconst useStyles = createUseStyles(styles, { name: 'FlexBox' });\n\nexport interface FlexBoxPropTypes extends CommonProps {\n  /**\n   * Controls the alignment of items on the Cross Axis.<br />\n   * <b>Note:</b> Corresponds to `align-items`.\n   */\n  alignItems?: FlexBoxAlignItems | keyof typeof FlexBoxAlignItems;\n  /**\n   * Controls how the items are placed in the `FlexBox`.<br />\n   * <b>Note:</b> Corresponds to `flex-direction`.\n   */\n  direction?: FlexBoxDirection | keyof typeof FlexBoxDirection;\n  /**\n   * Determines whether the `FlexBox` is in `flex` or `inline-flex` mode.\n   */\n  displayInline?: boolean;\n  /**\n   * Determines whether the `FlexBox` will be sized to completely fill its container.\n   */\n  fitContainer?: boolean;\n  /**\n   * Defines how the browser distributes space between and around items along the main-axis.<br />\n   * <b>Note:</b> Corresponds to `justify-content`.\n   */\n  justifyContent?: FlexBoxJustifyContent | keyof typeof FlexBoxJustifyContent;\n  /**\n   * Determines whether the `FlexBox` should wrap, when there is not enough space to display all items in one line.<br />\n   * <b>Note:</b> Corresponds to `flex-wrap`.\n   */\n  wrap?: FlexBoxWrap | keyof typeof FlexBoxWrap;\n  /**\n   * Content of the `FlexBox`.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Sets the components outer HTML tag.\n   *\n   * __Note:__ For TypeScript the types of `ref` are bound to the default tag name, if you change it you are responsible to set the respective types yourself.\n   */\n  as?: keyof HTMLElementTagNameMap;\n}\n\n/**\n * The `FlexBox` builds the container for a flexible box layout by leveraging the CSS flexbox layout.\n */\nconst FlexBox = forwardRef((props: FlexBoxPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    children,\n    justifyContent,\n    direction,\n    alignItems,\n    displayInline,\n    wrap,\n    style,\n    className,\n    tooltip,\n    fitContainer,\n    slot,\n    as,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const flexBoxClasses = clsx(\n    classes.flexBox,\n    classes[`flexBoxDirection${direction}`],\n    classes[`justifyContent${justifyContent}`],\n    classes[`alignItems${alignItems}`],\n    classes[`flexWrap${wrap}`],\n    displayInline && classes.flexBoxDisplayInline,\n    fitContainer && classes.fitContainer,\n    className\n  );\n\n  const CustomTag = as as React.ElementType;\n  return (\n    <CustomTag ref={ref} className={flexBoxClasses} style={style} title={tooltip} slot={slot} {...rest}>\n      {children}\n    </CustomTag>\n  );\n});\n\nFlexBox.defaultProps = {\n  as: 'div',\n  alignItems: FlexBoxAlignItems.Stretch,\n  direction: FlexBoxDirection.Row,\n  displayInline: false,\n  fitContainer: false,\n  justifyContent: FlexBoxJustifyContent.Start,\n  wrap: FlexBoxWrap.NoWrap\n};\nFlexBox.displayName = 'FlexBox';\n\nexport { FlexBox };\n"]},"metadata":{},"sourceType":"module"}