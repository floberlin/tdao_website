{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport SideContentPosition from \"./types/SideContentPosition.js\";\nimport SideContentVisibility from \"./types/SideContentVisibility.js\";\nimport SideContentFallDown from \"./types/SideContentFallDown.js\";\nimport DynamicSideContentTemplate from \"./generated/templates/DynamicSideContentTemplate.lit.js\"; // Styles\n\nimport DynamicSideContentCss from \"./generated/themes/DynamicSideContent.css.js\"; // Texts\n\nimport { DSC_SIDE_ARIA_LABEL } from \"./generated/i18n/i18n-defaults.js\"; // Breakpoint-related constants\n\nconst S_M_BREAKPOINT = 720,\n      // Breakpoint between S and M screen sizes\nM_L_BREAKPOINT = 1024,\n      // Breakpoint between M and L screen sizes\nL_XL_BREAKPOINT = 1440,\n      // Breakpoint between L and XL screen sizes\nMINIMUM_WIDTH_BREAKPOINT = 960; // Minimum width of the control where main and side contents are side by side\n\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-dynamic-side-content\",\n  managedSlots: true,\n  properties:\n  /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */\n  {\n    /**\n     * Defines the visibility of the main content.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    hideMainContent: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the visibility of the side content.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    hideSideContent: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the side content is positioned before the main content (left side\n     * in LTR mode), or after the the main content (right side in LTR mode).\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>Start</code></li>\n     * <li><code>End</code></li>\n     * </ul>\n     *\n     * @type {SideContentPosition}\n     * @defaultvalue \"End\"\n     * @public\n     *\n     */\n    sideContentPosition: {\n      type: SideContentPosition,\n      defaultValue: SideContentPosition.End\n    },\n\n    /**\n     * Defines on which breakpoints the side content is visible.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>AlwaysShow</code></li>\n     * <li><code>ShowAboveL</code></li>\n     * <li><code>ShowAboveM</code></li>\n     * <li><code>ShowAboveS</code></li>\n     * <li><code>NeverShow</code></li>\n     * </ul>\n     *\n     * @type {SideContentVisibility}\n     * @defaultvalue \"ShowAboveS\"\n     * @public\n     *\n     */\n    sideContentVisibility: {\n      type: SideContentVisibility,\n      defaultValue: SideContentVisibility.ShowAboveS\n    },\n\n    /**\n     * Defines on which breakpoints the side content falls down below the main content.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>BelowXL</code></li>\n     * <li><code>BelowL</code></li>\n     * <li><code>BelowM</code></li>\n     * <li><code>OnMinimumWidth</code></li>\n     * </ul>\n     *\n     * @type {SideContentFallDown}\n     * @defaultvalue \"OnMinimumWidth\"\n     * @public\n     *\n     */\n    sideContentFallDown: {\n      type: SideContentFallDown,\n      defaultValue: SideContentFallDown.OnMinimumWidth\n    },\n\n    /**\n     * Defines whether the component is in equal split mode. In this mode, the side and\n     * the main content take 50:50 percent of the container on all screen sizes\n     * except for phone, where the main and side contents are switching visibility\n     * using the toggle method.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    equalSplit: {\n      type: Boolean\n    },\n\n    /**\n    \t * @private\n     */\n    _mcSpan: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n\n    /**\n    \t * @private\n     */\n    _scSpan: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n\n    /**\n    \t * @private\n     */\n    _toggled: {\n      type: Boolean,\n      noAttribute: true\n    },\n\n    /**\n    \t * @private\n     */\n    _currentBreakpoint: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */\n  {\n    /**\n     * Defines the main content.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the side content.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"sideContent\": {\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */\n  {\n    /**\n     * Fires when the current breakpoint has been changed.\n     * @event sap.ui.webcomponents.fiori.DynamicSideContent#layout-change\n     * @param {String} currentBreakpoint the current breakpoint.\n     * @param {String} previousBreakpoint the breakpoint that was active before change to current breakpoint.\n     * @param {Boolean} mainContentVisible visibility of the main content.\n     * @param {Boolean} sideContentVisible visibility of the side content.\n     * @public\n     */\n    \"layout-change\": {\n      details: {\n        currentBreakpoint: {\n          type: String\n        },\n        previousBreakpoint: {\n          type: String\n        },\n        mainContentVisible: {\n          type: Boolean\n        },\n        sideContentVisible: {\n          type: Boolean\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The DynamicSideContent (<code>ui5-dynamic-side-content</code>) is a layout component that allows additional content\n * to be displayed in a way that flexibly adapts to different screen sizes. The side\n * content appears in a container next to or directly below the main content\n * (it doesn't overlay). When the side content is triggered, the main content becomes\n * narrower (if appearing side-by-side). The side content contains a separate scrollbar\n * when appearing next to the main content.\n *\n *\n * <h3>Usage</h3>\n *\n * <i>When to use?</i>\n *\n * Use this component if you want to display relevant information that is not critical\n * for users to complete a task. Users should have access to all the key functions and\n * critical information in the app even if they do not see the side content. This is\n * important because on smaller screen sizes it may be difficult to display the side\n * content in a way that is easily accessible for the user.\n *\n * <i>When not to use?</i>\n *\n * Don't use it if you want to display navigation or critical information that prevents\n * users from completing a task when they have no access to the side content.\n *\n *\n * <h3>Responsive Behavior</h3>\n *\n * Screen width > 1440px\n *\n * <ul><li>Main vs. side content ratio is 75 vs. 25 percent (with a minimum of 320px\n * each).</li>\n * <li>If the application defines a trigger, the side content can be hidden.</li></ul>\n *\n * Screen width <= 1440px and > 1024px\n *\n * <ul><li>Main vs. side content ratio is 66.666 vs. 33.333 percent (with a minimum of\n * 320px each). If the side content width falls below 320 px, it automatically slides\n * under the main content, unless the app development team specifies that it should\n * disappear.</li></ul>\n *\n * Screen width <= 1024px and > 720px\n *\n * <ul><li>The side content ratio is fixed to 340px, and the main content takes the rest\n * of the width. Only if the <code>sideContentFallDown</code> is set to <code>OnMinimumWidth</code>\n * and screen width is <= 960px and > 720px the side content falls below the main content.</li></ul>\n *\n * Screen width <= 720px (for example on a mobile device)\n *\n * <ul><li>In this case, the side content automatically disappears from the screen (unless\n * specified to stay under the content by setting of <code>sideContentVisibility</code>\n * property to <code>AlwaysShow</code>) and can be triggered from a pre-set trigger\n * (specified within the app). When the side content is triggered, it replaces the main\n * content. We recommend that you always place the trigger for the side content in the\n * same location, such as in the app footer.</li></ul>\n *\n * A special case allows switching the comparison mode between the main and side content.\n * In this case, the screen is split into 50:50 percent for main vs. side content. The\n * responsive behavior of the equal split is the same as in the standard view - the\n * side content disappears on screen widths of less than 720 px and can only be\n * viewed by triggering it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents-fiori/dist/DynamicSideContent\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.DynamicSideContent\n * @extends UI5Element\n * @tagname ui5-dynamic-side-content\n * @public\n * @since 1.1.0\n */\n\nclass DynamicSideContent extends UI5Element {\n  constructor() {\n    super();\n    this._handleResizeBound = this.handleResize.bind(this);\n  }\n\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return DynamicSideContentCss;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return DynamicSideContentTemplate;\n  }\n\n  static async onDefine() {\n    DynamicSideContent.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n  }\n\n  onAfterRendering() {\n    this._resizeContents();\n  }\n\n  onEnterDOM() {\n    ResizeHandler.register(this, this._handleResizeBound);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._handleResizeBound);\n  }\n  /**\n   * Toggles visibility of main and side contents on S screen size (mobile device).\n   * @type {String}\n   * @public\n   */\n\n\n  toggleContents() {\n    if (this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow) {\n      this._toggled = !this._toggled;\n    }\n  }\n\n  get classes() {\n    const gridPrefix = \"ui5-dsc-span\",\n          mcSpan = this._toggled ? this._scSpan : this._mcSpan,\n          scSpan = this._toggled ? this._mcSpan : this._scSpan,\n          classes = {\n      main: {\n        \"ui5-dsc-main\": true\n      },\n      side: {\n        \"ui5-dsc-side\": true\n      }\n    };\n    classes.main[`${gridPrefix}-${mcSpan}`] = true;\n    classes.side[`${gridPrefix}-${scSpan}`] = true;\n    return classes;\n  }\n\n  get styles() {\n    const isToggled = this.breakpoint === this.sizeS && this._toggled,\n          mcSpan = isToggled ? this._scSpan : this._mcSpan,\n          scSpan = isToggled ? this._mcSpan : this._scSpan,\n          contentHeight = this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow ? \"100%\" : \"auto\";\n    return {\n      root: {\n        \"flex-wrap\": this._mcSpan === \"12\" ? \"wrap\" : \"nowrap\"\n      },\n      main: {\n        \"height\": mcSpan === this.span12 ? contentHeight : \"100%\",\n        \"order\": this.sideContentPosition === SideContentPosition.Start ? 2 : 1\n      },\n      side: {\n        \"height\": scSpan === this.span12 ? contentHeight : \"100%\",\n        \"order\": this.sideContentPosition === SideContentPosition.Start ? 1 : 2\n      }\n    };\n  }\n\n  get accInfo() {\n    return {\n      \"label\": DynamicSideContent.i18nBundle.getText(DSC_SIDE_ARIA_LABEL)\n    };\n  }\n\n  get sizeS() {\n    return \"S\";\n  }\n\n  get sizeM() {\n    return \"M\";\n  }\n\n  get sizeL() {\n    return \"L\";\n  }\n\n  get sizeXL() {\n    return \"XL\";\n  }\n\n  get span0() {\n    return \"0\";\n  }\n\n  get span3() {\n    return \"3\";\n  }\n\n  get span4() {\n    return \"4\";\n  }\n\n  get span6() {\n    return \"6\";\n  }\n\n  get span8() {\n    return \"8\";\n  }\n\n  get span9() {\n    return \"9\";\n  }\n\n  get span12() {\n    return \"12\";\n  }\n\n  get spanFixed() {\n    return \"fixed\";\n  }\n\n  get containerWidth() {\n    return this.parentElement.clientWidth;\n  }\n\n  get breakpoint() {\n    let size;\n\n    if (this.containerWidth <= S_M_BREAKPOINT) {\n      size = this.sizeS;\n    } else if (this.containerWidth > S_M_BREAKPOINT && this.containerWidth <= M_L_BREAKPOINT) {\n      size = this.sizeM;\n    } else if (this.containerWidth > M_L_BREAKPOINT && this.containerWidth <= L_XL_BREAKPOINT) {\n      size = this.sizeL;\n    } else {\n      size = this.sizeXL;\n    }\n\n    return size;\n  }\n\n  handleResize() {\n    this._resizeContents();\n  }\n\n  _resizeContents() {\n    let mainSize, sideSize, sideVisible; // initial set contents sizes\n\n    switch (this.breakpoint) {\n      case this.sizeS:\n        mainSize = this.span12;\n        sideSize = this.span12;\n        break;\n\n      case this.sizeM:\n        if (this.sideContentFallDown === SideContentFallDown.BelowXL || this.sideContentFallDown === SideContentFallDown.BelowL || this.containerWidth <= MINIMUM_WIDTH_BREAKPOINT && this.sideContentFallDown === SideContentFallDown.OnMinimumWidth) {\n          mainSize = this.span12;\n          sideSize = this.span12;\n        } else {\n          mainSize = this.equalSplit ? this.span6 : this.spanFixed;\n          sideSize = this.equalSplit ? this.span6 : this.spanFixed;\n        }\n\n        sideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS || this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n        break;\n\n      case this.sizeL:\n        if (this.sideContentFallDown === SideContentFallDown.BelowXL) {\n          mainSize = this.span12;\n          sideSize = this.span12;\n        } else {\n          mainSize = this.equalSplit ? this.span6 : this.span8;\n          sideSize = this.equalSplit ? this.span6 : this.span4;\n        }\n\n        sideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS || this.sideContentVisibility === SideContentVisibility.ShowAboveM || this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n        break;\n\n      case this.sizeXL:\n        mainSize = this.equalSplit ? this.span6 : this.span9;\n        sideSize = this.equalSplit ? this.span6 : this.span3;\n        sideVisible = this.sideContentVisibility !== SideContentVisibility.NeverShow;\n    }\n\n    if (this.sideContentVisibility === SideContentVisibility.AlwaysShow) {\n      sideVisible = true;\n    } // modify sizes of the contents depending on hideMainContent and hideSideContent properties\n\n\n    if (this.hideSideContent) {\n      mainSize = this.hideMainContent ? this.span0 : this.span12;\n      sideSize = this.span0;\n      sideVisible = false;\n    }\n\n    if (this.hideMainContent) {\n      mainSize = this.span0;\n      sideSize = this.hideSideContent ? this.span0 : this.span12;\n      sideVisible = true;\n    } // set final sizes of the contents\n\n\n    if (!sideVisible) {\n      mainSize = this.span12;\n      sideSize = this.span0;\n    } // fire \"layout-change\" event\n\n\n    if (this._currentBreakpoint !== this.breakpoint) {\n      const eventParams = {\n        currentBreakpoint: this.breakpoint,\n        previousBreakpoint: this._currentBreakpoint,\n        mainContentVisible: mainSize !== this.span0,\n        sideContentVisible: sideSize !== this.span0\n      };\n      this.fireEvent(\"layout-change\", eventParams);\n      this._currentBreakpoint = this.breakpoint;\n    } // update contents sizes\n\n\n    this._setSpanSizes(mainSize, sideSize);\n  }\n\n  _setSpanSizes(mainSize, sideSize) {\n    this._mcSpan = mainSize;\n    this._scSpan = sideSize;\n\n    if (this.breakpoint !== this.sizeS) {\n      this._toggled = false;\n    }\n  }\n\n}\n\nDynamicSideContent.define();\nexport default DynamicSideContent;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-fiori/dist/DynamicSideContent.js"],"names":["UI5Element","getI18nBundle","litRender","ResizeHandler","SideContentPosition","SideContentVisibility","SideContentFallDown","DynamicSideContentTemplate","DynamicSideContentCss","DSC_SIDE_ARIA_LABEL","S_M_BREAKPOINT","M_L_BREAKPOINT","L_XL_BREAKPOINT","MINIMUM_WIDTH_BREAKPOINT","metadata","tag","managedSlots","properties","hideMainContent","type","Boolean","hideSideContent","sideContentPosition","defaultValue","End","sideContentVisibility","ShowAboveS","sideContentFallDown","OnMinimumWidth","equalSplit","_mcSpan","String","noAttribute","_scSpan","_toggled","_currentBreakpoint","slots","HTMLElement","events","details","currentBreakpoint","previousBreakpoint","mainContentVisible","sideContentVisible","DynamicSideContent","constructor","_handleResizeBound","handleResize","bind","styles","render","template","onDefine","i18nBundle","onAfterRendering","_resizeContents","onEnterDOM","register","onExitDOM","deregister","toggleContents","breakpoint","sizeS","AlwaysShow","classes","gridPrefix","mcSpan","scSpan","main","side","isToggled","contentHeight","root","span12","Start","accInfo","getText","sizeM","sizeL","sizeXL","span0","span3","span4","span6","span8","span9","spanFixed","containerWidth","parentElement","clientWidth","size","mainSize","sideSize","sideVisible","BelowXL","BelowL","ShowAboveM","NeverShow","eventParams","fireEvent","_setSpanSizes","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport SideContentPosition from \"./types/SideContentPosition.js\";\nimport SideContentVisibility from \"./types/SideContentVisibility.js\";\nimport SideContentFallDown from \"./types/SideContentFallDown.js\";\nimport DynamicSideContentTemplate from \"./generated/templates/DynamicSideContentTemplate.lit.js\";\n\n// Styles\nimport DynamicSideContentCss from \"./generated/themes/DynamicSideContent.css.js\";\n\n// Texts\nimport {\n\tDSC_SIDE_ARIA_LABEL,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Breakpoint-related constants\nconst S_M_BREAKPOINT = 720,\t// Breakpoint between S and M screen sizes\n\tM_L_BREAKPOINT = 1024, // Breakpoint between M and L screen sizes\n\tL_XL_BREAKPOINT = 1440, // Breakpoint between L and XL screen sizes\n\tMINIMUM_WIDTH_BREAKPOINT = 960; // Minimum width of the control where main and side contents are side by side\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-dynamic-side-content\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Defines the visibility of the main content.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\t hideMainContent: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the visibility of the side content.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\thideSideContent: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the side content is positioned before the main content (left side\n\t\t * in LTR mode), or after the the main content (right side in LTR mode).\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Start</code></li>\n\t\t * <li><code>End</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {SideContentPosition}\n\t\t * @defaultvalue \"End\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\t sideContentPosition: {\n\t\t\ttype: SideContentPosition,\n\t\t\tdefaultValue: SideContentPosition.End,\n\t\t},\n\n\t\t/**\n\t\t * Defines on which breakpoints the side content is visible.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>AlwaysShow</code></li>\n\t\t * <li><code>ShowAboveL</code></li>\n\t\t * <li><code>ShowAboveM</code></li>\n\t\t * <li><code>ShowAboveS</code></li>\n\t\t * <li><code>NeverShow</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {SideContentVisibility}\n\t\t * @defaultvalue \"ShowAboveS\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\tsideContentVisibility: {\n\t\t\ttype: SideContentVisibility,\n\t\t\tdefaultValue: SideContentVisibility.ShowAboveS,\n\t\t},\n\n\t\t/**\n\t\t * Defines on which breakpoints the side content falls down below the main content.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>BelowXL</code></li>\n\t\t * <li><code>BelowL</code></li>\n\t\t * <li><code>BelowM</code></li>\n\t\t * <li><code>OnMinimumWidth</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {SideContentFallDown}\n\t\t * @defaultvalue \"OnMinimumWidth\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\tsideContentFallDown: {\n\t\t\ttype: SideContentFallDown,\n\t\t\tdefaultValue: SideContentFallDown.OnMinimumWidth,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is in equal split mode. In this mode, the side and\n\t\t * the main content take 50:50 percent of the container on all screen sizes\n\t\t * except for phone, where the main and side contents are switching visibility\n\t\t * using the toggle method.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\tequalSplit: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t_mcSpan: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _scSpan: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _toggled: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _currentBreakpoint: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tslots: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Defines the main content.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the side content.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t \"sideContent\": {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t},\n\tevents: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Fires when the current breakpoint has been changed.\n\t\t * @event sap.ui.webcomponents.fiori.DynamicSideContent#layout-change\n\t\t * @param {String} currentBreakpoint the current breakpoint.\n\t\t * @param {String} previousBreakpoint the breakpoint that was active before change to current breakpoint.\n\t\t * @param {Boolean} mainContentVisible visibility of the main content.\n\t\t * @param {Boolean} sideContentVisible visibility of the side content.\n\t\t * @public\n\t\t */\n\t\t\"layout-change\": {\n\t\t\tdetails: {\n\t\t\t\tcurrentBreakpoint: {\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t\tpreviousBreakpoint: {\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t\tmainContentVisible: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t},\n\t\t\t\tsideContentVisible: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The DynamicSideContent (<code>ui5-dynamic-side-content</code>) is a layout component that allows additional content\n * to be displayed in a way that flexibly adapts to different screen sizes. The side\n * content appears in a container next to or directly below the main content\n * (it doesn't overlay). When the side content is triggered, the main content becomes\n * narrower (if appearing side-by-side). The side content contains a separate scrollbar\n * when appearing next to the main content.\n *\n *\n * <h3>Usage</h3>\n *\n * <i>When to use?</i>\n *\n * Use this component if you want to display relevant information that is not critical\n * for users to complete a task. Users should have access to all the key functions and\n * critical information in the app even if they do not see the side content. This is\n * important because on smaller screen sizes it may be difficult to display the side\n * content in a way that is easily accessible for the user.\n *\n * <i>When not to use?</i>\n *\n * Don't use it if you want to display navigation or critical information that prevents\n * users from completing a task when they have no access to the side content.\n *\n *\n * <h3>Responsive Behavior</h3>\n *\n * Screen width > 1440px\n *\n * <ul><li>Main vs. side content ratio is 75 vs. 25 percent (with a minimum of 320px\n * each).</li>\n * <li>If the application defines a trigger, the side content can be hidden.</li></ul>\n *\n * Screen width <= 1440px and > 1024px\n *\n * <ul><li>Main vs. side content ratio is 66.666 vs. 33.333 percent (with a minimum of\n * 320px each). If the side content width falls below 320 px, it automatically slides\n * under the main content, unless the app development team specifies that it should\n * disappear.</li></ul>\n *\n * Screen width <= 1024px and > 720px\n *\n * <ul><li>The side content ratio is fixed to 340px, and the main content takes the rest\n * of the width. Only if the <code>sideContentFallDown</code> is set to <code>OnMinimumWidth</code>\n * and screen width is <= 960px and > 720px the side content falls below the main content.</li></ul>\n *\n * Screen width <= 720px (for example on a mobile device)\n *\n * <ul><li>In this case, the side content automatically disappears from the screen (unless\n * specified to stay under the content by setting of <code>sideContentVisibility</code>\n * property to <code>AlwaysShow</code>) and can be triggered from a pre-set trigger\n * (specified within the app). When the side content is triggered, it replaces the main\n * content. We recommend that you always place the trigger for the side content in the\n * same location, such as in the app footer.</li></ul>\n *\n * A special case allows switching the comparison mode between the main and side content.\n * In this case, the screen is split into 50:50 percent for main vs. side content. The\n * responsive behavior of the equal split is the same as in the standard view - the\n * side content disappears on screen widths of less than 720 px and can only be\n * viewed by triggering it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents-fiori/dist/DynamicSideContent\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.DynamicSideContent\n * @extends UI5Element\n * @tagname ui5-dynamic-side-content\n * @public\n * @since 1.1.0\n */\nclass DynamicSideContent extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._handleResizeBound = this.handleResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn DynamicSideContentCss;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn DynamicSideContentTemplate;\n\t}\n\n\tstatic async onDefine() {\n\t\tDynamicSideContent.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\tonAfterRendering() {\n\t\tthis._resizeContents();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._handleResizeBound);\n\t}\n\n\t/**\n\t * Toggles visibility of main and side contents on S screen size (mobile device).\n\t * @type {String}\n\t * @public\n\t */\n\t toggleContents() {\n\t\tif (this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow) {\n\t\t\tthis._toggled = !this._toggled;\n\t\t}\n\t}\n\n\tget classes() {\n\t\tconst gridPrefix = \"ui5-dsc-span\",\n\t\t\tmcSpan = this._toggled ? this._scSpan : this._mcSpan,\n\t\t\tscSpan = this._toggled ? this._mcSpan : this._scSpan,\n\t\t\tclasses = {\n\t\t\t\tmain: {\n\t\t\t\t\t\"ui5-dsc-main\": true,\n\t\t\t\t},\n\t\t\t\tside: {\n\t\t\t\t\t\"ui5-dsc-side\": true,\n\t\t\t\t},\n\t\t\t};\n\n\t\tclasses.main[`${gridPrefix}-${mcSpan}`] = true;\n\t\tclasses.side[`${gridPrefix}-${scSpan}`] = true;\n\n\t\treturn classes;\n\t}\n\n\tget styles() {\n\t\tconst isToggled = this.breakpoint === this.sizeS && this._toggled,\n\t\t\tmcSpan = isToggled ? this._scSpan : this._mcSpan,\n\t\t\tscSpan = isToggled ? this._mcSpan : this._scSpan,\n\t\t\tcontentHeight = this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow ? \"100%\" : \"auto\";\n\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"flex-wrap\": this._mcSpan === \"12\" ? \"wrap\" : \"nowrap\",\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\t\"height\": mcSpan === this.span12 ? contentHeight : \"100%\",\n\t\t\t\t\"order\": this.sideContentPosition === SideContentPosition.Start ? 2 : 1,\n\t\t\t},\n\t\t\tside: {\n\t\t\t\t\"height\": scSpan === this.span12 ? contentHeight : \"100%\",\n\t\t\t\t\"order\": this.sideContentPosition === SideContentPosition.Start ? 1 : 2,\n\t\t\t},\n\t\t};\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"label\": DynamicSideContent.i18nBundle.getText(DSC_SIDE_ARIA_LABEL),\n\t\t};\n\t}\n\n\tget sizeS() {\n\t\treturn \"S\";\n\t}\n\n\tget sizeM() {\n\t\treturn \"M\";\n\t}\n\n\tget sizeL() {\n\t\treturn \"L\";\n\t}\n\n\tget sizeXL() {\n\t\treturn \"XL\";\n\t}\n\n\tget span0() {\n\t\treturn \"0\";\n\t}\n\n\tget span3() {\n\t\treturn \"3\";\n\t}\n\n\tget span4() {\n\t\treturn \"4\";\n\t}\n\n\tget span6() {\n\t\treturn \"6\";\n\t}\n\n\tget span8() {\n\t\treturn \"8\";\n\t}\n\n\tget span9() {\n\t\treturn \"9\";\n\t}\n\n\tget span12() {\n\t\treturn \"12\";\n\t}\n\n\tget spanFixed() {\n\t\treturn \"fixed\";\n\t}\n\n\tget containerWidth() {\n\t\treturn this.parentElement.clientWidth;\n\t}\n\n\tget breakpoint() {\n\t\tlet size;\n\n\t\tif (this.containerWidth <= S_M_BREAKPOINT) {\n\t\t\tsize = this.sizeS;\n\t\t} else if (this.containerWidth > S_M_BREAKPOINT && this.containerWidth <= M_L_BREAKPOINT) {\n\t\t\tsize = this.sizeM;\n\t\t} else if (this.containerWidth > M_L_BREAKPOINT && this.containerWidth <= L_XL_BREAKPOINT) {\n\t\t\tsize = this.sizeL;\n\t\t} else {\n\t\t\tsize = this.sizeXL;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\thandleResize() {\n\t\tthis._resizeContents();\n\t}\n\n\t_resizeContents() {\n\t\tlet mainSize,\n\t\t\tsideSize,\n\t\t\tsideVisible;\n\n\t\t// initial set contents sizes\n\t\tswitch (this.breakpoint) {\n\t\tcase this.sizeS:\n\t\t\tmainSize = this.span12;\n\t\t\tsideSize = this.span12;\n\t\t\tbreak;\n\t\tcase this.sizeM:\n\t\t\tif (this.sideContentFallDown === SideContentFallDown.BelowXL\n\t\t\t\t|| this.sideContentFallDown === SideContentFallDown.BelowL\n\t\t\t\t|| (this.containerWidth <= MINIMUM_WIDTH_BREAKPOINT && this.sideContentFallDown === SideContentFallDown.OnMinimumWidth)) {\n\t\t\t\tmainSize = this.span12;\n\t\t\t\tsideSize = this.span12;\n\t\t\t} else {\n\t\t\t\tmainSize = this.equalSplit ? this.span6 : this.spanFixed;\n\t\t\t\tsideSize = this.equalSplit ? this.span6 : this.spanFixed;\n\t\t\t}\n\t\t\tsideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n\t\t\tbreak;\n\t\tcase this.sizeL:\n\t\t\tif (this.sideContentFallDown === SideContentFallDown.BelowXL) {\n\t\t\t\tmainSize = this.span12;\n\t\t\t\tsideSize = this.span12;\n\t\t\t} else {\n\t\t\t\tmainSize = this.equalSplit ? this.span6 : this.span8;\n\t\t\t\tsideSize = this.equalSplit ? this.span6 : this.span4;\n\t\t\t}\n\t\t\tsideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.ShowAboveM\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n\t\t\tbreak;\n\t\tcase this.sizeXL:\n\t\t\tmainSize = this.equalSplit ? this.span6 : this.span9;\n\t\t\tsideSize = this.equalSplit ? this.span6 : this.span3;\n\t\t\tsideVisible = this.sideContentVisibility !== SideContentVisibility.NeverShow;\n\t\t}\n\n\t\tif (this.sideContentVisibility === SideContentVisibility.AlwaysShow) {\n\t\t\tsideVisible = true;\n\t\t}\n\n\t\t// modify sizes of the contents depending on hideMainContent and hideSideContent properties\n\t\tif (this.hideSideContent) {\n\t\t\tmainSize = this.hideMainContent ? this.span0 : this.span12;\n\t\t\tsideSize = this.span0;\n\t\t\tsideVisible = false;\n\t\t}\n\n\t\tif (this.hideMainContent) {\n\t\t\tmainSize = this.span0;\n\t\t\tsideSize = this.hideSideContent ? this.span0 : this.span12;\n\t\t\tsideVisible = true;\n\t\t}\n\n\t\t// set final sizes of the contents\n\t\tif (!sideVisible) {\n\t\t\tmainSize = this.span12;\n\t\t\tsideSize = this.span0;\n\t\t}\n\n\t\t// fire \"layout-change\" event\n\t\tif (this._currentBreakpoint !== this.breakpoint) {\n\t\t\tconst eventParams = {\n\t\t\t\tcurrentBreakpoint: this.breakpoint,\n\t\t\t\tpreviousBreakpoint: this._currentBreakpoint,\n\t\t\t\tmainContentVisible: mainSize !== this.span0,\n\t\t\t\tsideContentVisible: sideSize !== this.span0,\n\t\t\t};\n\t\t\tthis.fireEvent(\"layout-change\", eventParams);\n\t\t\tthis._currentBreakpoint = this.breakpoint;\n\t\t}\n\n\t\t// update contents sizes\n\t\tthis._setSpanSizes(mainSize, sideSize);\n\t}\n\n\t_setSpanSizes(mainSize, sideSize) {\n\t\tthis._mcSpan = mainSize;\n\t\tthis._scSpan = sideSize;\n\t\tif (this.breakpoint !== this.sizeS) {\n\t\t\tthis._toggled = false;\n\t\t}\n\t}\n}\n\nDynamicSideContent.define();\n\nexport default DynamicSideContent;\n"]},"metadata":{},"sourceType":"module"}