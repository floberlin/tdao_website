{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TreeItem from \"./TreeItem.js\";\nimport List from \"./List.js\";\nimport TreeListItem from \"./TreeListItem.js\";\nimport ListMode from \"./types/ListMode.js\"; // Template\n\nimport TreeTemplate from \"./generated/templates/TreeTemplate.lit.js\"; // Styles\n\nimport TreeCss from \"./generated/themes/Tree.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-tree\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.Tree.prototype */\n  {\n    /**\n     * Defines the mode of the component. Since the tree uses a <code>ui5-list</code> to display its structure,\n     * the tree modes are exactly the same as the list modes, and are all applicable.\n     *\n     * <br><br>\n     * <b>Note:</b>\n     *\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>SingleSelect</code></li>\n     * <li><code>SingleSelectBegin</code></li>\n     * <li><code>SingleSelectEnd</code></li>\n     * <li><code>MultiSelect</code></li>\n     * <li><code>Delete</code></li>\n     * </ul>\n     *\n     * @public\n     * @type {ListMode}\n     * @defaultValue \"None\"\n     */\n    mode: {\n      type: ListMode,\n      defaultValue: ListMode.None\n    },\n\n    /**\n     * Defines the text that is displayed when the component contains no items.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    noDataText: {\n      type: String\n    },\n\n    /**\n     * Defines the component header text.\n     * <br><br>\n     * <b>Note:</b> If the <code>header</code> slot is set, this property is ignored.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    headerText: {\n      type: String\n    },\n\n    /**\n     * Defines the component footer text.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    footerText: {\n      type: String\n    },\n\n    /**\n     * An array, containing a flat structure of list items to render\n     *\n     * @private\n     */\n    _listItems: {\n      type: Object,\n      multiple: true\n    },\n\n    /**\n     * Shows the toggle button at the end, rather than at the beginning of the items\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _toggleButtonEnd: {\n      type: Boolean\n    },\n\n    /**\n     * Represents the tree in a very minimal state - icons only with no text and no toggle buttons\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _minimal: {\n      type: Boolean\n    }\n  },\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.Tree.prototype */\n  {\n    /**\n     * Defines the items of the component. Tree items may have other tree items as children.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-tree-item</code> for the intended design.\n     *\n     * @type {sap.ui.webcomponents.main.ITreeItem[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement,\n      propertyName: \"items\",\n      invalidateOnChildChange: true\n    },\n\n    /**\n     * Defines the component header.\n     * <br><br>\n     * <b>Note:</b> When the <code>header</code> slot is set, the\n     * <code>headerText</code> property is ignored.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    header: {\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.Tree.prototype */\n  {\n    /**\n     * Fired when a tree item is expanded or collapsed.\n     * <i>Note:</i> You can call <code>preventDefault()</code> on the event object to suppress the event, if needed.\n     * This may be handy for example if you want to dynamically load tree items upon the user expanding a node.\n     * Even if you prevented the event's default behavior, you can always manually call <code>toggle()</code> on a tree item.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-toggle\n     * @param {HTMLElement} item the toggled item.\n     * @allowPreventDefault\n     * @public\n     */\n    \"item-toggle\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the mouse cursor enters the tree item borders.\n     * @event sap.ui.webcomponents.main.Tree#item-mouseover\n     * @param {HTMLElement} item the hovered item.\n     * @since 1.0.0-rc.16\n     * @public\n     */\n    \"item-mouseover\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the mouse cursor leaves the tree item borders.\n     * @event sap.ui.webcomponents.main.Tree#item-mouseout\n     * @param {HTMLElement} item the hovered item.\n     * @since 1.0.0-rc.16\n     * @public\n     */\n    \"item-mouseout\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when a tree item is activated.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-click\n     * @param {HTMLElement} item The clicked item.\n     * @public\n     */\n    \"item-click\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the Delete button of any tree item is pressed.\n     * <br><br>\n     * <b>Note:</b> A Delete button is displayed on each item,\n     * when the component <code>mode</code> property is set to <code>Delete</code>.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-delete\n     * @param {HTMLElement} item the deleted item.\n     * @public\n     */\n    \"item-delete\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when selection is changed by user interaction\n     * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n     *\n     * @event sap.ui.webcomponents.main.Tree#selection-change\n     * @param {Array} selectedItems An array of the selected items.\n     * @param {Array} previouslySelectedItems An array of the previously selected items.\n     * @public\n     */\n    \"selection-change\": {\n      detail: {\n        selectedItems: {\n          type: Array\n        },\n        previouslySelectedItems: {\n          type: Array\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>ui5-tree</code> component provides a tree structure for displaying data in a hierarchy.\n *\n * <h3>Usage</h3>\n *\n * <h4>When to use:</h4>\n * <ul>\n * <li>To display hierarchically structured items.</li>\n * <li>To select one or more items out of a set of hierarchically structured items.</li>\n * </ul>\n *\n * <h4>When not to use:</h4>\n * <ul>\n * <li>To display items not hierarchically strcutured. In this case, use the List component.</li>\n * <li>To select one item from a very small number of non-hierarchical items. Select or ComboBox might be more appropriate.</li>\n * <li>The hierarchy turns out to have only two levels. In this case, use List with group items.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n *\n * The <code>ui5-tree</code> provides advanced keyboard handling.\n * The user can use the following keyboard shortcuts in order to navigate trough the tree:\n * <ul>\n * <li>[UP/DOWN] - Navigates up and down the tree items that are currently visible.</li>\n * <li>[RIGHT] - Drills down the tree by expanding the tree nodes.</li>\n * <li>[LEFT] - Goes up the tree and collapses the tree nodes.</li>\n * </ul>\n * <br>\n *\n * The user can use the following keyboard shortcuts to perform selection,\n * when the <code>mode</code> property is in use:\n * <ul>\n * <li>[SPACE] - Selects the currently focused item upon keyup.</li>\n * <li>[ENTER]  - Selects the currently focused item upon keydown.</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents/dist/Tree.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Tree\n * @extends UI5Element\n * @tagname ui5-tree\n * @appenddocs TreeItem\n * @public\n * @since 1.0.0-rc.8\n */\n\nclass Tree extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get styles() {\n    return TreeCss;\n  }\n\n  static get template() {\n    return TreeTemplate;\n  }\n\n  static get dependencies() {\n    return [List, TreeListItem, TreeItem];\n  }\n\n  onBeforeRendering() {\n    this._listItems = [];\n    buildTree(this, 1, this._listItems);\n  }\n\n  get list() {\n    return this.getDomRef();\n  }\n\n  get _role() {\n    return \"tree\";\n  }\n\n  _onListItemStepIn(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n\n    if (treeItem.items.length > 0) {\n      const firstChild = treeItem.items[0];\n      const firstChildListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === firstChild);\n      firstChildListItem && this.list.focusItem(firstChildListItem);\n    }\n  }\n\n  _onListItemStepOut(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n\n    if (treeItem.parentElement !== this) {\n      const parent = treeItem.parentElement;\n      const parentListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === parent);\n      parentListItem && this.list.focusItem(parentListItem);\n    }\n  }\n\n  _onListItemToggle(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    const defaultPrevented = !this.fireEvent(\"item-toggle\", {\n      item: treeItem\n    }, true);\n\n    if (!defaultPrevented) {\n      treeItem.toggle();\n    }\n  }\n\n  _onListItemClick(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    this.fireEvent(\"item-click\", {\n      item: treeItem\n    });\n  }\n\n  _onListItemDelete(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    this.fireEvent(\"item-delete\", {\n      item: treeItem\n    });\n  }\n\n  _onListItemMouseOver(event) {\n    const treeItem = event.target.treeItem;\n    this.fireEvent(\"item-mouseover\", {\n      item: treeItem\n    });\n  }\n\n  _onListItemMouseOut(event) {\n    const treeItem = event.target.treeItem;\n    this.fireEvent(\"item-mouseout\", {\n      item: treeItem\n    });\n  }\n\n  _onListSelectionChange(event) {\n    const previouslySelectedItems = event.detail.previouslySelectedItems.map(item => item.treeItem);\n    const selectedItems = event.detail.selectedItems.map(item => item.treeItem);\n    previouslySelectedItems.forEach(item => {\n      item.selected = false;\n    });\n    selectedItems.forEach(item => {\n      item.selected = true;\n    });\n    this.fireEvent(\"selection-change\", {\n      previouslySelectedItems,\n      selectedItems\n    });\n  }\n  /**\n   * Returns the corresponding list item for a given tree item\n   *\n   * @param item The tree item\n   * @protected\n   */\n\n\n  _getListItemForTreeItem(item) {\n    return this.list.items.find(listItem => listItem.treeItem === item);\n  }\n  /**\n   * Perform Depth-First-Search walk on the tree and run a callback on each node\n   *\n   * @public\n   * @param {function} callback function to execute on each node of the tree with 2 arguments: the node and the level\n   */\n\n\n  walk(callback) {\n    walkTree(this, 1, callback);\n  }\n\n}\n\nconst walkTree = (el, level, callback) => {\n  el.items.forEach(item => {\n    callback(item, level);\n\n    if (item.items.length > 0) {\n      walkTree(item, level + 1, callback);\n    }\n  });\n};\n\nconst buildTree = (el, level, result) => {\n  el.items.forEach((item, index) => {\n    const listItem = {\n      treeItem: item,\n      size: el.items.length,\n      posinset: index + 1,\n      level\n    };\n    result.push(listItem);\n\n    if (item.expanded && item.items.length > 0) {\n      buildTree(item, level + 1, result);\n    }\n  });\n};\n\nTree.define();\nexport default Tree;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/Tree.js"],"names":["UI5Element","litRender","TreeItem","List","TreeListItem","ListMode","TreeTemplate","TreeCss","metadata","tag","properties","mode","type","defaultValue","None","noDataText","String","headerText","footerText","_listItems","Object","multiple","_toggleButtonEnd","Boolean","_minimal","managedSlots","slots","HTMLElement","propertyName","invalidateOnChildChange","header","events","detail","item","selectedItems","Array","previouslySelectedItems","Tree","render","styles","template","dependencies","onBeforeRendering","buildTree","list","getDomRef","_role","_onListItemStepIn","event","listItem","treeItem","items","length","firstChild","firstChildListItem","getSlottedNodes","find","li","focusItem","_onListItemStepOut","parentElement","parent","parentListItem","_onListItemToggle","defaultPrevented","fireEvent","toggle","_onListItemClick","_onListItemDelete","_onListItemMouseOver","target","_onListItemMouseOut","_onListSelectionChange","map","forEach","selected","_getListItemForTreeItem","walk","callback","walkTree","el","level","result","index","size","posinset","push","expanded","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,2CAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,UADW;AAEhBC,EAAAA,UAAU;AAAE;AAAuD;AAClE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEP,QADD;AAELQ,MAAAA,YAAY,EAAER,QAAQ,CAACS;AAFlB,KArB4D;;AA0BlE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXH,MAAAA,IAAI,EAAEI;AADK,KAjCsD;;AAqClE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXL,MAAAA,IAAI,EAAEI;AADK,KA9CsD;;AAkDlE;AACF;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,UAAU,EAAE;AACXN,MAAAA,IAAI,EAAEI;AADK,KAzDsD;;AA6DlE;AACF;AACA;AACA;AACA;AACEG,IAAAA,UAAU,EAAE;AACXP,MAAAA,IAAI,EAAEQ,MADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAlEsD;;AAuElE;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,gBAAgB,EAAE;AACjBV,MAAAA,IAAI,EAAEW;AADW,KA7EgD;;AAiFlE;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTZ,MAAAA,IAAI,EAAEW;AADG;AAvFwD,GAFnD;AA6FhBE,EAAAA,YAAY,EAAE,IA7FE;AA8FhBC,EAAAA,KAAK;AAAE;AAAuD;AAE7D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVd,MAAAA,IAAI,EAAEe,WADI;AAEVC,MAAAA,YAAY,EAAE,OAFJ;AAGVC,MAAAA,uBAAuB,EAAE;AAHf,KAXkD;;AAiB7D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,MAAM,EAAE;AACPlB,MAAAA,IAAI,EAAEe;AADC;AA3BqD,GA9F9C;AA6HhBI,EAAAA,MAAM;AAAE;AAAuD;AAE9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,mBAAe;AACdC,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAErB,UAAAA,IAAI,EAAEe;AAAR;AADC;AADM,KAb+C;;AAmB9D;AACF;AACA;AACA;AACA;AACA;AACA;AACE,sBAAkB;AACjBK,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAErB,UAAAA,IAAI,EAAEe;AAAR;AADC;AADS,KA1B4C;;AAgC9D;AACF;AACA;AACA;AACA;AACA;AACA;AACE,qBAAiB;AAChBK,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAErB,UAAAA,IAAI,EAAEe;AAAR;AADC;AADQ,KAvC6C;;AA6C9D;AACF;AACA;AACA;AACA;AACA;AACA;AACE,kBAAc;AACbK,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAErB,UAAAA,IAAI,EAAEe;AAAR;AADC;AADK,KApDgD;;AA0D9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,mBAAe;AACdK,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE;AAAErB,UAAAA,IAAI,EAAEe;AAAR;AADC;AADM,KApE+C;;AA0E9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,wBAAoB;AACnBK,MAAAA,MAAM,EAAE;AACPE,QAAAA,aAAa,EAAE;AAAEtB,UAAAA,IAAI,EAAEuB;AAAR,SADR;AAEPC,QAAAA,uBAAuB,EAAE;AAAExB,UAAAA,IAAI,EAAEuB;AAAR;AAFlB;AADW;AAnF0C;AA7H/C,CAAjB;AAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,IAAN,SAAmBrC,UAAnB,CAA8B;AACV,aAARQ,QAAQ,GAAG;AACrB,WAAOA,QAAP;AACA;;AAEgB,aAAN8B,MAAM,GAAG;AACnB,WAAOrC,SAAP;AACA;;AAEgB,aAANsC,MAAM,GAAG;AACnB,WAAOhC,OAAP;AACA;;AAEkB,aAARiC,QAAQ,GAAG;AACrB,WAAOlC,YAAP;AACA;;AAEsB,aAAZmC,YAAY,GAAG;AACzB,WAAO,CACNtC,IADM,EAENC,YAFM,EAGNF,QAHM,CAAP;AAKA;;AAEDwC,EAAAA,iBAAiB,GAAG;AACnB,SAAKvB,UAAL,GAAkB,EAAlB;AACAwB,IAAAA,SAAS,CAAC,IAAD,EAAO,CAAP,EAAU,KAAKxB,UAAf,CAAT;AACA;;AAEO,MAAJyB,IAAI,GAAG;AACV,WAAO,KAAKC,SAAL,EAAP;AACA;;AAEQ,MAALC,KAAK,GAAG;AACX,WAAO,MAAP;AACA;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACxB,UAAMC,QAAQ,GAAGD,KAAK,CAAChB,MAAN,CAAaC,IAA9B;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;;AACA,QAAIA,QAAQ,CAACC,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC9B,YAAMC,UAAU,GAAGH,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAnB;AACA,YAAMG,kBAAkB,GAAG,KAAKV,IAAL,CAAUW,eAAV,CAA0B,OAA1B,EAAmCC,IAAnC,CAAwCC,EAAE,IAAIA,EAAE,CAACP,QAAH,KAAgBG,UAA9D,CAA3B;AACAC,MAAAA,kBAAkB,IAAI,KAAKV,IAAL,CAAUc,SAAV,CAAoBJ,kBAApB,CAAtB;AACA;AACD;;AAEDK,EAAAA,kBAAkB,CAACX,KAAD,EAAQ;AACzB,UAAMC,QAAQ,GAAGD,KAAK,CAAChB,MAAN,CAAaC,IAA9B;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;;AACA,QAAIA,QAAQ,CAACU,aAAT,KAA2B,IAA/B,EAAqC;AACpC,YAAMC,MAAM,GAAGX,QAAQ,CAACU,aAAxB;AACA,YAAME,cAAc,GAAG,KAAKlB,IAAL,CAAUW,eAAV,CAA0B,OAA1B,EAAmCC,IAAnC,CAAwCC,EAAE,IAAIA,EAAE,CAACP,QAAH,KAAgBW,MAA9D,CAAvB;AACAC,MAAAA,cAAc,IAAI,KAAKlB,IAAL,CAAUc,SAAV,CAAoBI,cAApB,CAAlB;AACA;AACD;;AAEDC,EAAAA,iBAAiB,CAACf,KAAD,EAAQ;AACxB,UAAMC,QAAQ,GAAGD,KAAK,CAAChB,MAAN,CAAaC,IAA9B;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;AACA,UAAMc,gBAAgB,GAAG,CAAC,KAAKC,SAAL,CAAe,aAAf,EAA8B;AAAEhC,MAAAA,IAAI,EAAEiB;AAAR,KAA9B,EAAkD,IAAlD,CAA1B;;AACA,QAAI,CAACc,gBAAL,EAAuB;AACtBd,MAAAA,QAAQ,CAACgB,MAAT;AACA;AACD;;AAEDC,EAAAA,gBAAgB,CAACnB,KAAD,EAAQ;AACvB,UAAMC,QAAQ,GAAGD,KAAK,CAAChB,MAAN,CAAaC,IAA9B;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;AACA,SAAKe,SAAL,CAAe,YAAf,EAA6B;AAAEhC,MAAAA,IAAI,EAAEiB;AAAR,KAA7B;AACA;;AAEDkB,EAAAA,iBAAiB,CAACpB,KAAD,EAAQ;AACxB,UAAMC,QAAQ,GAAGD,KAAK,CAAChB,MAAN,CAAaC,IAA9B;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;AACA,SAAKe,SAAL,CAAe,aAAf,EAA8B;AAAEhC,MAAAA,IAAI,EAAEiB;AAAR,KAA9B;AACA;;AAEDmB,EAAAA,oBAAoB,CAACrB,KAAD,EAAQ;AAC3B,UAAME,QAAQ,GAAGF,KAAK,CAACsB,MAAN,CAAapB,QAA9B;AAEA,SAAKe,SAAL,CAAe,gBAAf,EAAiC;AAAEhC,MAAAA,IAAI,EAAEiB;AAAR,KAAjC;AACA;;AAEDqB,EAAAA,mBAAmB,CAACvB,KAAD,EAAQ;AAC1B,UAAME,QAAQ,GAAGF,KAAK,CAACsB,MAAN,CAAapB,QAA9B;AAEA,SAAKe,SAAL,CAAe,eAAf,EAAgC;AAAEhC,MAAAA,IAAI,EAAEiB;AAAR,KAAhC;AACA;;AAEDsB,EAAAA,sBAAsB,CAACxB,KAAD,EAAQ;AAC7B,UAAMZ,uBAAuB,GAAGY,KAAK,CAAChB,MAAN,CAAaI,uBAAb,CAAqCqC,GAArC,CAAyCxC,IAAI,IAAIA,IAAI,CAACiB,QAAtD,CAAhC;AACA,UAAMhB,aAAa,GAAGc,KAAK,CAAChB,MAAN,CAAaE,aAAb,CAA2BuC,GAA3B,CAA+BxC,IAAI,IAAIA,IAAI,CAACiB,QAA5C,CAAtB;AAEAd,IAAAA,uBAAuB,CAACsC,OAAxB,CAAgCzC,IAAI,IAAI;AACvCA,MAAAA,IAAI,CAAC0C,QAAL,GAAgB,KAAhB;AACA,KAFD;AAGAzC,IAAAA,aAAa,CAACwC,OAAd,CAAsBzC,IAAI,IAAI;AAC7BA,MAAAA,IAAI,CAAC0C,QAAL,GAAgB,IAAhB;AACA,KAFD;AAIA,SAAKV,SAAL,CAAe,kBAAf,EAAmC;AAClC7B,MAAAA,uBADkC;AAElCF,MAAAA;AAFkC,KAAnC;AAIA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC0C,EAAAA,uBAAuB,CAAC3C,IAAD,EAAO;AAC7B,WAAO,KAAKW,IAAL,CAAUO,KAAV,CAAgBK,IAAhB,CAAqBP,QAAQ,IAAIA,QAAQ,CAACC,QAAT,KAAsBjB,IAAvD,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC4C,EAAAA,IAAI,CAACC,QAAD,EAAW;AACdC,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,EAAUD,QAAV,CAAR;AACA;;AA9H4B;;AAiI9B,MAAMC,QAAQ,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYH,QAAZ,KAAyB;AACzCE,EAAAA,EAAE,CAAC7B,KAAH,CAASuB,OAAT,CAAiBzC,IAAI,IAAI;AACxB6C,IAAAA,QAAQ,CAAC7C,IAAD,EAAOgD,KAAP,CAAR;;AACA,QAAIhD,IAAI,CAACkB,KAAL,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AAC1B2B,MAAAA,QAAQ,CAAC9C,IAAD,EAAOgD,KAAK,GAAG,CAAf,EAAkBH,QAAlB,CAAR;AACA;AACD,GALD;AAMA,CAPD;;AASA,MAAMnC,SAAS,GAAG,CAACqC,EAAD,EAAKC,KAAL,EAAYC,MAAZ,KAAuB;AACxCF,EAAAA,EAAE,CAAC7B,KAAH,CAASuB,OAAT,CAAiB,CAACzC,IAAD,EAAOkD,KAAP,KAAiB;AACjC,UAAMlC,QAAQ,GAAG;AAChBC,MAAAA,QAAQ,EAAEjB,IADM;AAEhBmD,MAAAA,IAAI,EAAEJ,EAAE,CAAC7B,KAAH,CAASC,MAFC;AAGhBiC,MAAAA,QAAQ,EAAEF,KAAK,GAAG,CAHF;AAIhBF,MAAAA;AAJgB,KAAjB;AAOAC,IAAAA,MAAM,CAACI,IAAP,CAAYrC,QAAZ;;AACA,QAAIhB,IAAI,CAACsD,QAAL,IAAiBtD,IAAI,CAACkB,KAAL,CAAWC,MAAX,GAAoB,CAAzC,EAA4C;AAC3CT,MAAAA,SAAS,CAACV,IAAD,EAAOgD,KAAK,GAAG,CAAf,EAAkBC,MAAlB,CAAT;AACA;AACD,GAZD;AAaA,CAdD;;AAgBA7C,IAAI,CAACmD,MAAL;AAEA,eAAenD,IAAf","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TreeItem from \"./TreeItem.js\";\nimport List from \"./List.js\";\nimport TreeListItem from \"./TreeListItem.js\";\nimport ListMode from \"./types/ListMode.js\";\n\n// Template\nimport TreeTemplate from \"./generated/templates/TreeTemplate.lit.js\";\n\n// Styles\nimport TreeCss from \"./generated/themes/Tree.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-tree\",\n\tproperties: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\t\t/**\n\t\t * Defines the mode of the component. Since the tree uses a <code>ui5-list</code> to display its structure,\n\t\t * the tree modes are exactly the same as the list modes, and are all applicable.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>SingleSelect</code></li>\n\t\t * <li><code>SingleSelectBegin</code></li>\n\t\t * <li><code>SingleSelectEnd</code></li>\n\t\t * <li><code>MultiSelect</code></li>\n\t\t * <li><code>Delete</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @public\n\t\t * @type {ListMode}\n\t\t * @defaultValue \"None\"\n\t\t */\n\t\tmode: {\n\t\t\ttype: ListMode,\n\t\t\tdefaultValue: ListMode.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text that is displayed when the component contains no items.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tnoDataText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the component header text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If the <code>header</code> slot is set, this property is ignored.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\theaderText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the component footer text.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tfooterText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * An array, containing a flat structure of list items to render\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_listItems: {\n\t\t\ttype: Object,\n\t\t\tmultiple: true,\n\t\t},\n\n\t\t/**\n\t\t * Shows the toggle button at the end, rather than at the beginning of the items\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_toggleButtonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Represents the tree in a very minimal state - icons only with no text and no toggle buttons\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_minimal: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\n\t\t/**\n\t\t * Defines the items of the component. Tree items may have other tree items as children.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-tree-item</code> for the intended design.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.ITreeItem[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the component header.\n\t\t * <br><br>\n\t\t * <b>Note:</b> When the <code>header</code> slot is set, the\n\t\t * <code>headerText</code> property is ignored.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\theader: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\n\t\t/**\n\t\t * Fired when a tree item is expanded or collapsed.\n\t\t * <i>Note:</i> You can call <code>preventDefault()</code> on the event object to suppress the event, if needed.\n\t\t * This may be handy for example if you want to dynamically load tree items upon the user expanding a node.\n\t\t * Even if you prevented the event's default behavior, you can always manually call <code>toggle()</code> on a tree item.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-toggle\n\t\t * @param {HTMLElement} item the toggled item.\n\t\t * @allowPreventDefault\n\t\t * @public\n\t\t */\n\t\t\"item-toggle\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the mouse cursor enters the tree item borders.\n\t\t * @event sap.ui.webcomponents.main.Tree#item-mouseover\n\t\t * @param {HTMLElement} item the hovered item.\n\t\t * @since 1.0.0-rc.16\n\t\t * @public\n\t\t */\n\t\t\"item-mouseover\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the mouse cursor leaves the tree item borders.\n\t\t * @event sap.ui.webcomponents.main.Tree#item-mouseout\n\t\t * @param {HTMLElement} item the hovered item.\n\t\t * @since 1.0.0-rc.16\n\t\t * @public\n\t\t */\n\t\t\"item-mouseout\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when a tree item is activated.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-click\n\t\t * @param {HTMLElement} item The clicked item.\n\t\t * @public\n\t\t */\n\t\t\"item-click\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the Delete button of any tree item is pressed.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A Delete button is displayed on each item,\n\t\t * when the component <code>mode</code> property is set to <code>Delete</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-delete\n\t\t * @param {HTMLElement} item the deleted item.\n\t\t * @public\n\t\t */\n\t\t\"item-delete\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when selection is changed by user interaction\n\t\t * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#selection-change\n\t\t * @param {Array} selectedItems An array of the selected items.\n\t\t * @param {Array} previouslySelectedItems An array of the previously selected items.\n\t\t * @public\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedItems: { type: Array },\n\t\t\t\tpreviouslySelectedItems: { type: Array },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>ui5-tree</code> component provides a tree structure for displaying data in a hierarchy.\n *\n * <h3>Usage</h3>\n *\n * <h4>When to use:</h4>\n * <ul>\n * <li>To display hierarchically structured items.</li>\n * <li>To select one or more items out of a set of hierarchically structured items.</li>\n * </ul>\n *\n * <h4>When not to use:</h4>\n * <ul>\n * <li>To display items not hierarchically strcutured. In this case, use the List component.</li>\n * <li>To select one item from a very small number of non-hierarchical items. Select or ComboBox might be more appropriate.</li>\n * <li>The hierarchy turns out to have only two levels. In this case, use List with group items.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n *\n * The <code>ui5-tree</code> provides advanced keyboard handling.\n * The user can use the following keyboard shortcuts in order to navigate trough the tree:\n * <ul>\n * <li>[UP/DOWN] - Navigates up and down the tree items that are currently visible.</li>\n * <li>[RIGHT] - Drills down the tree by expanding the tree nodes.</li>\n * <li>[LEFT] - Goes up the tree and collapses the tree nodes.</li>\n * </ul>\n * <br>\n *\n * The user can use the following keyboard shortcuts to perform selection,\n * when the <code>mode</code> property is in use:\n * <ul>\n * <li>[SPACE] - Selects the currently focused item upon keyup.</li>\n * <li>[ENTER]  - Selects the currently focused item upon keydown.</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents/dist/Tree.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Tree\n * @extends UI5Element\n * @tagname ui5-tree\n * @appenddocs TreeItem\n * @public\n * @since 1.0.0-rc.8\n */\nclass Tree extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn TreeCss;\n\t}\n\n\tstatic get template() {\n\t\treturn TreeTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tList,\n\t\t\tTreeListItem,\n\t\t\tTreeItem,\n\t\t];\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._listItems = [];\n\t\tbuildTree(this, 1, this._listItems);\n\t}\n\n\tget list() {\n\t\treturn this.getDomRef();\n\t}\n\n\tget _role() {\n\t\treturn \"tree\";\n\t}\n\n\t_onListItemStepIn(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tif (treeItem.items.length > 0) {\n\t\t\tconst firstChild = treeItem.items[0];\n\t\t\tconst firstChildListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === firstChild);\n\t\t\tfirstChildListItem && this.list.focusItem(firstChildListItem);\n\t\t}\n\t}\n\n\t_onListItemStepOut(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tif (treeItem.parentElement !== this) {\n\t\t\tconst parent = treeItem.parentElement;\n\t\t\tconst parentListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === parent);\n\t\t\tparentListItem && this.list.focusItem(parentListItem);\n\t\t}\n\t}\n\n\t_onListItemToggle(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tconst defaultPrevented = !this.fireEvent(\"item-toggle\", { item: treeItem }, true);\n\t\tif (!defaultPrevented) {\n\t\t\ttreeItem.toggle();\n\t\t}\n\t}\n\n\t_onListItemClick(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tthis.fireEvent(\"item-click\", { item: treeItem });\n\t}\n\n\t_onListItemDelete(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tthis.fireEvent(\"item-delete\", { item: treeItem });\n\t}\n\n\t_onListItemMouseOver(event) {\n\t\tconst treeItem = event.target.treeItem;\n\n\t\tthis.fireEvent(\"item-mouseover\", { item: treeItem });\n\t}\n\n\t_onListItemMouseOut(event) {\n\t\tconst treeItem = event.target.treeItem;\n\n\t\tthis.fireEvent(\"item-mouseout\", { item: treeItem });\n\t}\n\n\t_onListSelectionChange(event) {\n\t\tconst previouslySelectedItems = event.detail.previouslySelectedItems.map(item => item.treeItem);\n\t\tconst selectedItems = event.detail.selectedItems.map(item => item.treeItem);\n\n\t\tpreviouslySelectedItems.forEach(item => {\n\t\t\titem.selected = false;\n\t\t});\n\t\tselectedItems.forEach(item => {\n\t\t\titem.selected = true;\n\t\t});\n\n\t\tthis.fireEvent(\"selection-change\", {\n\t\t\tpreviouslySelectedItems,\n\t\t\tselectedItems,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the corresponding list item for a given tree item\n\t *\n\t * @param item The tree item\n\t * @protected\n\t */\n\t_getListItemForTreeItem(item) {\n\t\treturn this.list.items.find(listItem => listItem.treeItem === item);\n\t}\n\n\t/**\n\t * Perform Depth-First-Search walk on the tree and run a callback on each node\n\t *\n\t * @public\n\t * @param {function} callback function to execute on each node of the tree with 2 arguments: the node and the level\n\t */\n\twalk(callback) {\n\t\twalkTree(this, 1, callback);\n\t}\n}\n\nconst walkTree = (el, level, callback) => {\n\tel.items.forEach(item => {\n\t\tcallback(item, level);\n\t\tif (item.items.length > 0) {\n\t\t\twalkTree(item, level + 1, callback);\n\t\t}\n\t});\n};\n\nconst buildTree = (el, level, result) => {\n\tel.items.forEach((item, index) => {\n\t\tconst listItem = {\n\t\t\ttreeItem: item,\n\t\t\tsize: el.items.length,\n\t\t\tposinset: index + 1,\n\t\t\tlevel,\n\t\t};\n\n\t\tresult.push(listItem);\n\t\tif (item.expanded && item.items.length > 0) {\n\t\t\tbuildTree(item, level + 1, result);\n\t\t}\n\t});\n};\n\nTree.define();\n\nexport default Tree;\n"]},"metadata":{},"sourceType":"module"}