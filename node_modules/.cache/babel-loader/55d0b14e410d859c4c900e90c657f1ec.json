{"ast":null,"code":"import setToArray from \"./util/setToArray.js\";\nimport getSharedResource from \"./getSharedResource.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes, getAllRuntimes } from \"./Runtimes.js\";\nvar Tags = getSharedResource(\"Tags\", new Map());\nvar Definitions = new Set();\nvar Failures = {};\nvar failureTimeout;\nvar UNKNOWN_RUNTIME = \"unknown\";\n\nvar registerTag = function registerTag(tag) {\n  Definitions.add(tag);\n  Tags.set(tag, getCurrentRuntimeIndex());\n};\n\nvar isTagRegistered = function isTagRegistered(tag) {\n  return Definitions.has(tag);\n};\n\nvar getAllRegisteredTags = function getAllRegisteredTags() {\n  return setToArray(Definitions);\n};\n\nvar recordTagRegistrationFailure = function recordTagRegistrationFailure(tag) {\n  var tagRegRuntimeIndex = Tags.get(tag);\n\n  if (tagRegRuntimeIndex === undefined) {\n    tagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the \"unknown\" key\n  }\n\n  Failures[tagRegRuntimeIndex] = Failures[tagRegRuntimeIndex] || new Set();\n  Failures[tagRegRuntimeIndex].add(tag);\n\n  if (!failureTimeout) {\n    failureTimeout = setTimeout(function () {\n      displayFailedRegistrations();\n      Failures = {};\n      failureTimeout = undefined;\n    }, 1000);\n  }\n};\n\nvar displayFailedRegistrations = function displayFailedRegistrations() {\n  var allRuntimes = getAllRuntimes();\n  var currentRuntimeIndex = getCurrentRuntimeIndex();\n  var currentRuntime = allRuntimes[currentRuntimeIndex];\n  var message = \"Multiple UI5 Web Components instances detected.\";\n\n  if (allRuntimes.length > 1) {\n    message = \"\".concat(message, \"\\nLoading order (versions before 1.1.0 not listed): \").concat(allRuntimes.map(function (runtime) {\n      return \"\\n\".concat(runtime.description);\n    }).join(\"\"));\n  }\n\n  Object.keys(Failures).forEach(function (otherRuntimeIndex) {\n    var comparison;\n    var otherRuntime;\n\n    if (otherRuntimeIndex === UNKNOWN_RUNTIME) {\n      // version < 1.1.0 defined the tag\n      comparison = 1; // the current runtime is considered newer\n\n      otherRuntime = {\n        description: \"Older unknown runtime\"\n      };\n    } else {\n      comparison = compareRuntimes(currentRuntimeIndex, otherRuntimeIndex);\n      otherRuntime = allRuntimes[otherRuntimeIndex];\n    }\n\n    var compareWord;\n\n    if (comparison > 0) {\n      compareWord = \"an older\";\n    } else if (comparison < 0) {\n      compareWord = \"a newer\";\n    } else {\n      compareWord = \"the same\";\n    }\n\n    message = \"\".concat(message, \"\\n\\n\\\"\").concat(currentRuntime.description, \"\\\" failed to define \").concat(Failures[otherRuntimeIndex].size, \" tag(s) as they were defined by a runtime of \").concat(compareWord, \" version \\\"\").concat(otherRuntime.description, \"\\\": \").concat(setToArray(Failures[otherRuntimeIndex]).sort().join(\", \"), \".\");\n\n    if (comparison > 0) {\n      message = \"\".concat(message, \"\\nWARNING! If your code uses features of the above web components, unavailable in \").concat(otherRuntime.description, \", it might not work as expected!\");\n    } else {\n      message = \"\".concat(message, \"\\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.\");\n    }\n  });\n  message = \"\".concat(message, \"\\n\\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/master/docs/2-advanced/03-scoping.md.\");\n  console.warn(message); // eslint-disable-line\n};\n\nexport { registerTag, isTagRegistered, getAllRegisteredTags, recordTagRegistrationFailure };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js"],"names":["setToArray","getSharedResource","getCurrentRuntimeIndex","compareRuntimes","getAllRuntimes","Tags","Map","Definitions","Set","Failures","failureTimeout","UNKNOWN_RUNTIME","registerTag","tag","add","set","isTagRegistered","has","getAllRegisteredTags","recordTagRegistrationFailure","tagRegRuntimeIndex","get","undefined","setTimeout","displayFailedRegistrations","allRuntimes","currentRuntimeIndex","currentRuntime","message","length","map","runtime","description","join","Object","keys","forEach","otherRuntimeIndex","comparison","otherRuntime","compareWord","size","sort","console","warn"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,SAASC,sBAAT,EAAiCC,eAAjC,EAAkDC,cAAlD,QAAwE,eAAxE;AAEA,IAAMC,IAAI,GAAGJ,iBAAiB,CAAC,MAAD,EAAS,IAAIK,GAAJ,EAAT,CAA9B;AAEA,IAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,cAAJ;AAEA,IAAMC,eAAe,GAAG,SAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AAC1BN,EAAAA,WAAW,CAACO,GAAZ,CAAgBD,GAAhB;AACAR,EAAAA,IAAI,CAACU,GAAL,CAASF,GAAT,EAAcX,sBAAsB,EAApC;AACA,CAHD;;AAKA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,GAAG,EAAI;AAC9B,SAAON,WAAW,CAACU,GAAZ,CAAgBJ,GAAhB,CAAP;AACA,CAFD;;AAIA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClC,SAAOlB,UAAU,CAACO,WAAD,CAAjB;AACA,CAFD;;AAIA,IAAMY,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAN,GAAG,EAAI;AAC3C,MAAIO,kBAAkB,GAAGf,IAAI,CAACgB,GAAL,CAASR,GAAT,CAAzB;;AACA,MAAIO,kBAAkB,KAAKE,SAA3B,EAAsC;AACrCF,IAAAA,kBAAkB,GAAGT,eAArB,CADqC,CACC;AACtC;;AACDF,EAAAA,QAAQ,CAACW,kBAAD,CAAR,GAA+BX,QAAQ,CAACW,kBAAD,CAAR,IAAgC,IAAIZ,GAAJ,EAA/D;AACAC,EAAAA,QAAQ,CAACW,kBAAD,CAAR,CAA6BN,GAA7B,CAAiCD,GAAjC;;AAEA,MAAI,CAACH,cAAL,EAAqB;AACpBA,IAAAA,cAAc,GAAGa,UAAU,CAAC,YAAM;AACjCC,MAAAA,0BAA0B;AAC1Bf,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,cAAc,GAAGY,SAAjB;AACA,KAJ0B,EAIxB,IAJwB,CAA3B;AAKA;AACD,CAfD;;AAiBA,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACxC,MAAMC,WAAW,GAAGrB,cAAc,EAAlC;AACA,MAAMsB,mBAAmB,GAAGxB,sBAAsB,EAAlD;AACA,MAAMyB,cAAc,GAAGF,WAAW,CAACC,mBAAD,CAAlC;AAEA,MAAIE,OAAO,oDAAX;;AAEA,MAAIH,WAAW,CAACI,MAAZ,GAAqB,CAAzB,EAA4B;AAC3BD,IAAAA,OAAO,aAAMA,OAAN,iEAAoEH,WAAW,CAACK,GAAZ,CAAgB,UAAAC,OAAO;AAAA,yBAASA,OAAO,CAACC,WAAjB;AAAA,KAAvB,EAAuDC,IAAvD,CAA4D,EAA5D,CAApE,CAAP;AACA;;AAEDC,EAAAA,MAAM,CAACC,IAAP,CAAY1B,QAAZ,EAAsB2B,OAAtB,CAA8B,UAAAC,iBAAiB,EAAI;AAClD,QAAIC,UAAJ;AACA,QAAIC,YAAJ;;AAEA,QAAIF,iBAAiB,KAAK1B,eAA1B,EAA2C;AAAE;AAC5C2B,MAAAA,UAAU,GAAG,CAAb,CAD0C,CAC1B;;AAChBC,MAAAA,YAAY,GAAG;AACdP,QAAAA,WAAW;AADG,OAAf;AAGA,KALD,MAKO;AACNM,MAAAA,UAAU,GAAGnC,eAAe,CAACuB,mBAAD,EAAsBW,iBAAtB,CAA5B;AACAE,MAAAA,YAAY,GAAGd,WAAW,CAACY,iBAAD,CAA1B;AACA;;AAED,QAAIG,WAAJ;;AACA,QAAIF,UAAU,GAAG,CAAjB,EAAoB;AACnBE,MAAAA,WAAW,GAAG,UAAd;AACA,KAFD,MAEO,IAAIF,UAAU,GAAG,CAAjB,EAAoB;AAC1BE,MAAAA,WAAW,GAAG,SAAd;AACA,KAFM,MAEA;AACNA,MAAAA,WAAW,GAAG,UAAd;AACA;;AACDZ,IAAAA,OAAO,aAAMA,OAAN,mBAAqBD,cAAc,CAACK,WAApC,iCAAqEvB,QAAQ,CAAC4B,iBAAD,CAAR,CAA4BI,IAAjG,0DAAqJD,WAArJ,wBAA6KD,YAAY,CAACP,WAA1L,iBAA2MhC,UAAU,CAACS,QAAQ,CAAC4B,iBAAD,CAAT,CAAV,CAAwCK,IAAxC,GAA+CT,IAA/C,CAAoD,IAApD,CAA3M,MAAP;;AAEA,QAAIK,UAAU,GAAG,CAAjB,EAAoB;AACnBV,MAAAA,OAAO,aAAMA,OAAN,+FAAkGW,YAAY,CAACP,WAA/G,qCAAP;AACA,KAFD,MAEO;AACNJ,MAAAA,OAAO,aAAMA,OAAN,kIAAP;AACA;AACD,GA7BD;AA+BAA,EAAAA,OAAO,aAAMA,OAAN,yNAAP;AAEAe,EAAAA,OAAO,CAACC,IAAR,CAAahB,OAAb,EA5CwC,CA4CjB;AACvB,CA7CD;;AA+CA,SACChB,WADD,EAECI,eAFD,EAGCE,oBAHD,EAICC,4BAJD","sourcesContent":["import setToArray from \"./util/setToArray.js\";\nimport getSharedResource from \"./getSharedResource.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes, getAllRuntimes } from \"./Runtimes.js\";\n\nconst Tags = getSharedResource(\"Tags\", new Map());\n\nconst Definitions = new Set();\nlet Failures = {};\nlet failureTimeout;\n\nconst UNKNOWN_RUNTIME = \"unknown\";\n\nconst registerTag = tag => {\n\tDefinitions.add(tag);\n\tTags.set(tag, getCurrentRuntimeIndex());\n};\n\nconst isTagRegistered = tag => {\n\treturn Definitions.has(tag);\n};\n\nconst getAllRegisteredTags = () => {\n\treturn setToArray(Definitions);\n};\n\nconst recordTagRegistrationFailure = tag => {\n\tlet tagRegRuntimeIndex = Tags.get(tag);\n\tif (tagRegRuntimeIndex === undefined) {\n\t\ttagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the \"unknown\" key\n\t}\n\tFailures[tagRegRuntimeIndex] = Failures[tagRegRuntimeIndex] || new Set();\n\tFailures[tagRegRuntimeIndex].add(tag);\n\n\tif (!failureTimeout) {\n\t\tfailureTimeout = setTimeout(() => {\n\t\t\tdisplayFailedRegistrations();\n\t\t\tFailures = {};\n\t\t\tfailureTimeout = undefined;\n\t\t}, 1000);\n\t}\n};\n\nconst displayFailedRegistrations = () => {\n\tconst allRuntimes = getAllRuntimes();\n\tconst currentRuntimeIndex = getCurrentRuntimeIndex();\n\tconst currentRuntime = allRuntimes[currentRuntimeIndex];\n\n\tlet message = `Multiple UI5 Web Components instances detected.`;\n\n\tif (allRuntimes.length > 1) {\n\t\tmessage = `${message}\\nLoading order (versions before 1.1.0 not listed): ${allRuntimes.map(runtime => `\\n${runtime.description}`).join(\"\")}`;\n\t}\n\n\tObject.keys(Failures).forEach(otherRuntimeIndex => {\n\t\tlet comparison;\n\t\tlet otherRuntime;\n\n\t\tif (otherRuntimeIndex === UNKNOWN_RUNTIME) { // version < 1.1.0 defined the tag\n\t\t\tcomparison = 1; // the current runtime is considered newer\n\t\t\totherRuntime = {\n\t\t\t\tdescription: `Older unknown runtime`,\n\t\t\t};\n\t\t} else {\n\t\t\tcomparison = compareRuntimes(currentRuntimeIndex, otherRuntimeIndex);\n\t\t\totherRuntime = allRuntimes[otherRuntimeIndex];\n\t\t}\n\n\t\tlet compareWord;\n\t\tif (comparison > 0) {\n\t\t\tcompareWord = \"an older\";\n\t\t} else if (comparison < 0) {\n\t\t\tcompareWord = \"a newer\";\n\t\t} else {\n\t\t\tcompareWord = \"the same\";\n\t\t}\n\t\tmessage = `${message}\\n\\n\"${currentRuntime.description}\" failed to define ${Failures[otherRuntimeIndex].size} tag(s) as they were defined by a runtime of ${compareWord} version \"${otherRuntime.description}\": ${setToArray(Failures[otherRuntimeIndex]).sort().join(\", \")}.`;\n\n\t\tif (comparison > 0) {\n\t\t\tmessage = `${message}\\nWARNING! If your code uses features of the above web components, unavailable in ${otherRuntime.description}, it might not work as expected!`;\n\t\t} else {\n\t\t\tmessage = `${message}\\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;\n\t\t}\n\t});\n\n\tmessage = `${message}\\n\\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/master/docs/2-advanced/03-scoping.md.`;\n\n\tconsole.warn(message); // eslint-disable-line\n};\n\nexport {\n\tregisterTag,\n\tisTagRegistered,\n\tgetAllRegisteredTags,\n\trecordTagRegistrationFailure,\n};\n"]},"metadata":{},"sourceType":"module"}