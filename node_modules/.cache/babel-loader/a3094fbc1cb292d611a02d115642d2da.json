{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { registerI18nLoader, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\nvar I18nBundleInstances = new Map();\nvar customGetI18nBundle;\n/**\n * @class\n * @public\n */\n\nvar I18nBundle = /*#__PURE__*/function () {\n  function I18nBundle(packageName) {\n    _classCallCheck(this, I18nBundle);\n\n    this.packageName = packageName;\n  }\n  /**\n   * Returns a text in the currently loaded language\n   *\n   * @public\n   * @param {Object|String} textObj key/defaultText pair or just the key\n   * @param params Values for the placeholders\n   * @returns {*}\n   */\n\n\n  _createClass(I18nBundle, [{\n    key: \"getText\",\n    value: function getText(textObj) {\n      if (typeof textObj === \"string\") {\n        textObj = {\n          key: textObj,\n          defaultText: textObj\n        };\n      }\n\n      if (!textObj || !textObj.key) {\n        return \"\";\n      }\n\n      var bundle = getI18nBundleData(this.packageName);\n\n      if (bundle && !bundle[textObj.key]) {\n        console.warn(\"Key \".concat(textObj.key, \" not found in the i18n bundle, the default text will be used\")); // eslint-disable-line\n      }\n\n      var messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : textObj.defaultText || textObj.key;\n\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      return formatMessage(messageText, params);\n    }\n  }]);\n\n  return I18nBundle;\n}();\n\nvar getI18nBundleSync = function getI18nBundleSync(packageName) {\n  if (I18nBundleInstances.has(packageName)) {\n    return I18nBundleInstances.get(packageName);\n  }\n\n  var i18nBundle = new I18nBundle(packageName);\n  I18nBundleInstances.set(packageName, i18nBundle);\n  return i18nBundle;\n};\n/**\n * Allows developers to provide a custom getI18nBundle implementation\n * If this function is called, the custom implementation will be used for all components and will completely\n * replace the default implementation.\n *\n * @public\n * @param customGet the function to use instead of the standard getI18nBundle implementation\n */\n\n\nvar registerCustomI18nBundleGetter = function registerCustomI18nBundleGetter(customGet) {\n  customGetI18nBundle = customGet;\n};\n/**\n * Fetches and returns the I18nBundle instance for the given package\n *\n * @public\n * @param packageName\n * @returns {Promise<I18nBundle>}\n */\n\n\nvar getI18nBundle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(packageName) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!customGetI18nBundle) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", customGetI18nBundle(packageName));\n\n          case 2:\n            _context.next = 4;\n            return fetchI18nBundle(packageName);\n\n          case 4:\n            return _context.abrupt(\"return\", getI18nBundleSync(packageName));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getI18nBundle(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { registerI18nLoader, getI18nBundle, registerCustomI18nBundleGetter };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/i18nBundle.js"],"names":["registerI18nLoader","fetchI18nBundle","getI18nBundleData","formatMessage","I18nBundleInstances","Map","customGetI18nBundle","I18nBundle","packageName","textObj","key","defaultText","bundle","console","warn","messageText","params","getI18nBundleSync","has","get","i18nBundle","set","registerCustomI18nBundleGetter","customGet","getI18nBundle"],"mappings":";;;;AAAA,SAASA,kBAAT,EAA6BC,eAA7B,EAA8CC,iBAA9C,QAAuE,4BAAvE;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,IAAMC,mBAAmB,GAAG,IAAIC,GAAJ,EAA5B;AAEA,IAAIC,mBAAJ;AAEA;AACA;AACA;AACA;;IACMC,U;AACL,sBAAYC,WAAZ,EAAyB;AAAA;;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACC,iBAAQC,OAAR,EAA4B;AAC3B,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,QAAAA,OAAO,GAAG;AAAEC,UAAAA,GAAG,EAAED,OAAP;AAAgBE,UAAAA,WAAW,EAAEF;AAA7B,SAAV;AACA;;AAED,UAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACC,GAAzB,EAA8B;AAC7B,eAAO,EAAP;AACA;;AAED,UAAME,MAAM,GAAGV,iBAAiB,CAAC,KAAKM,WAAN,CAAhC;;AACA,UAAII,MAAM,IAAI,CAACA,MAAM,CAACH,OAAO,CAACC,GAAT,CAArB,EAAoC;AACnCG,QAAAA,OAAO,CAACC,IAAR,eAAoBL,OAAO,CAACC,GAA5B,mEADmC,CAC6D;AAChG;;AACD,UAAMK,WAAW,GAAGH,MAAM,IAAIA,MAAM,CAACH,OAAO,CAACC,GAAT,CAAhB,GAAgCE,MAAM,CAACH,OAAO,CAACC,GAAT,CAAtC,GAAuDD,OAAO,CAACE,WAAR,IAAuBF,OAAO,CAACC,GAA1G;;AAb2B,wCAARM,MAAQ;AAARA,QAAAA,MAAQ;AAAA;;AAe3B,aAAOb,aAAa,CAACY,WAAD,EAAcC,MAAd,CAApB;AACA;;;;;;AAGF,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAT,WAAW,EAAI;AACxC,MAAIJ,mBAAmB,CAACc,GAApB,CAAwBV,WAAxB,CAAJ,EAA0C;AACzC,WAAOJ,mBAAmB,CAACe,GAApB,CAAwBX,WAAxB,CAAP;AACA;;AAED,MAAMY,UAAU,GAAG,IAAIb,UAAJ,CAAeC,WAAf,CAAnB;AACAJ,EAAAA,mBAAmB,CAACiB,GAApB,CAAwBb,WAAxB,EAAqCY,UAArC;AACA,SAAOA,UAAP;AACA,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAME,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAAC,SAAS,EAAI;AACnDjB,EAAAA,mBAAmB,GAAGiB,SAAtB;AACA,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,aAAa;AAAA,sEAAG,iBAAMhB,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA,iBACjBF,mBADiB;AAAA;AAAA;AAAA;;AAAA,6CAEbA,mBAAmB,CAACE,WAAD,CAFN;;AAAA;AAAA;AAAA,mBAKfP,eAAe,CAACO,WAAD,CALA;;AAAA;AAAA,6CAMdS,iBAAiB,CAACT,WAAD,CANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbgB,aAAa;AAAA;AAAA;AAAA,GAAnB;;AASA,SACCxB,kBADD,EAECwB,aAFD,EAGCF,8BAHD","sourcesContent":["import { registerI18nLoader, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\n\nconst I18nBundleInstances = new Map();\n\nlet customGetI18nBundle;\n\n/**\n * @class\n * @public\n */\nclass I18nBundle {\n\tconstructor(packageName) {\n\t\tthis.packageName = packageName;\n\t}\n\n\t/**\n\t * Returns a text in the currently loaded language\n\t *\n\t * @public\n\t * @param {Object|String} textObj key/defaultText pair or just the key\n\t * @param params Values for the placeholders\n\t * @returns {*}\n\t */\n\tgetText(textObj, ...params) {\n\t\tif (typeof textObj === \"string\") {\n\t\t\ttextObj = { key: textObj, defaultText: textObj };\n\t\t}\n\n\t\tif (!textObj || !textObj.key) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst bundle = getI18nBundleData(this.packageName);\n\t\tif (bundle && !bundle[textObj.key]) {\n\t\t\tconsole.warn(`Key ${textObj.key} not found in the i18n bundle, the default text will be used`); // eslint-disable-line\n\t\t}\n\t\tconst messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : (textObj.defaultText || textObj.key);\n\n\t\treturn formatMessage(messageText, params);\n\t}\n}\n\nconst getI18nBundleSync = packageName => {\n\tif (I18nBundleInstances.has(packageName)) {\n\t\treturn I18nBundleInstances.get(packageName);\n\t}\n\n\tconst i18nBundle = new I18nBundle(packageName);\n\tI18nBundleInstances.set(packageName, i18nBundle);\n\treturn i18nBundle;\n};\n\n/**\n * Allows developers to provide a custom getI18nBundle implementation\n * If this function is called, the custom implementation will be used for all components and will completely\n * replace the default implementation.\n *\n * @public\n * @param customGet the function to use instead of the standard getI18nBundle implementation\n */\nconst registerCustomI18nBundleGetter = customGet => {\n\tcustomGetI18nBundle = customGet;\n};\n\n/**\n * Fetches and returns the I18nBundle instance for the given package\n *\n * @public\n * @param packageName\n * @returns {Promise<I18nBundle>}\n */\nconst getI18nBundle = async packageName => {\n\tif (customGetI18nBundle) {\n\t\treturn customGetI18nBundle(packageName);\n\t}\n\n\tawait fetchI18nBundle(packageName);\n\treturn getI18nBundleSync(packageName);\n};\n\nexport {\n\tregisterI18nLoader,\n\tgetI18nBundle,\n\tregisterCustomI18nBundleGetter,\n};\n"]},"metadata":{},"sourceType":"module"}