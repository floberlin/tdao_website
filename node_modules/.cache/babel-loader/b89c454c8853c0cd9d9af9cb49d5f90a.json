{"ast":null,"code":"/*\n * Copyright 2012 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // package com.google.zxing.pdf417.decoder.ec;\n// import com.google.zxing.pdf417.PDF417Common;\n\n\nimport PDF417Common from '../../PDF417Common';\nimport ModulusPoly from './ModulusPoly';\nimport IllegalArgumentException from '../../../IllegalArgumentException';\nimport ModulusBase from './ModulusBase';\n/**\n * <p>A field based on powers of a generator integer, modulo some modulus.</p>\n *\n * @author Sean Owen\n * @see com.google.zxing.common.reedsolomon.GenericGF\n */\n\nvar ModulusGF = function (_super) {\n  __extends(ModulusGF, _super); // private /*final*/ modulus: /*int*/ number;\n\n\n  function ModulusGF(modulus, generator) {\n    var _this = _super.call(this) || this;\n\n    _this.modulus = modulus;\n    _this.expTable = new Int32Array(modulus);\n    _this.logTable = new Int32Array(modulus);\n    var x =\n    /*int*/\n    1;\n\n    for (var i\n    /*int*/\n    = 0; i < modulus; i++) {\n      _this.expTable[i] = x;\n      x = x * generator % modulus;\n    }\n\n    for (var i\n    /*int*/\n    = 0; i < modulus - 1; i++) {\n      _this.logTable[_this.expTable[i]] = i;\n    } // logTable[0] == 0 but this should never be used\n\n\n    _this.zero = new ModulusPoly(_this, new Int32Array([0]));\n    _this.one = new ModulusPoly(_this, new Int32Array([1]));\n    return _this;\n  }\n\n  ModulusGF.prototype.getZero = function () {\n    return this.zero;\n  };\n\n  ModulusGF.prototype.getOne = function () {\n    return this.one;\n  };\n\n  ModulusGF.prototype.buildMonomial = function (degree, coefficient) {\n    if (degree < 0) {\n      throw new IllegalArgumentException();\n    }\n\n    if (coefficient === 0) {\n      return this.zero;\n    }\n\n    var coefficients = new Int32Array(degree + 1);\n    coefficients[0] = coefficient;\n    return new ModulusPoly(this, coefficients);\n  };\n\n  ModulusGF.PDF417_GF = new ModulusGF(PDF417Common.NUMBER_OF_CODEWORDS, 3);\n  return ModulusGF;\n}(ModulusBase);\n\nexport default ModulusGF;","map":{"version":3,"sources":["../../../../../../src/core/pdf417/decoder/ec/ModulusGF.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;;KAEH;AAEA;;;AACA,OAAO,YAAP,MAAyB,oBAAzB;AAEA,OAAO,WAAP,MAAwB,eAAxB;AAEA,OAAO,wBAAP,MAAqC,mCAArC;AACA,OAAO,WAAP,MAAwB,eAAxB;AAGA;;;;;AAKG;;AACH,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA,CAAxD,CAQE;;;AAEA,WAAA,SAAA,CAAoB,OAApB,EAA6C,SAA7C,EAAsE;AAAtE,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAEE,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,IAAI,UAAJ,CAAe,OAAf,CAAhB;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,IAAI,UAAJ,CAAe,OAAf,CAAhB;AACA,QAAI,CAAC;AAAE;AAAiB,KAAxB;;AACA,SAAK,IAAI;AAAE;AAAD,MAAW,CAArB,EAAwB,CAAC,GAAG,OAA5B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,MAAA,KAAI,CAAC,QAAL,CAAc,CAAd,IAAmB,CAAnB;AACA,MAAA,CAAC,GAAI,CAAC,GAAG,SAAL,GAAkB,OAAtB;AACD;;AACD,SAAK,IAAI;AAAE;AAAD,MAAW,CAArB,EAAwB,CAAC,GAAG,OAAO,GAAG,CAAtC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,MAAA,KAAI,CAAC,QAAL,CAAc,KAAI,CAAC,QAAL,CAAc,CAAd,CAAd,IAAkC,CAAlC;AACD,KAZmE,CAapE;;;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,IAAI,WAAJ,CAAgB,KAAhB,EAAsB,IAAI,UAAJ,CAAe,CAAC,CAAD,CAAf,CAAtB,CAAZ;AACA,IAAA,KAAI,CAAC,GAAL,GAAW,IAAI,WAAJ,CAAgB,KAAhB,EAAsB,IAAI,UAAJ,CAAe,CAAC,CAAD,CAAf,CAAtB,CAAX;;AACD;;AAGD,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,IAAZ;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,WAAO,KAAK,GAAZ;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAsC,WAAtC,EAAiE;AAC/D,QAAI,MAAM,GAAG,CAAb,EAAgB;AACd,YAAM,IAAI,wBAAJ,EAAN;AACD;;AACD,QAAI,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAO,KAAK,IAAZ;AACD;;AACD,QAAI,YAAY,GAAe,IAAI,UAAJ,CAAe,MAAM,GAAG,CAAxB,CAA/B;AACA,IAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,WAAlB;AACA,WAAO,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,YAAtB,CAAP;AACD,GAVD;;AAnCwB,EAAA,SAAA,CAAA,SAAA,GAAuB,IAAI,SAAJ,CAAc,YAAY,CAAC,mBAA3B,EAAgD,CAAhD,CAAvB;AA+C1B,SAAA,SAAA;AAAC,CAjDD,CAAwD,WAAxD,CAAA;;eAAsC,S","sourceRoot":"","sourcesContent":["/*\n * Copyright 2012 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// package com.google.zxing.pdf417.decoder.ec;\n// import com.google.zxing.pdf417.PDF417Common;\nimport PDF417Common from '../../PDF417Common';\nimport ModulusPoly from './ModulusPoly';\nimport IllegalArgumentException from '../../../IllegalArgumentException';\nimport ModulusBase from './ModulusBase';\n/**\n * <p>A field based on powers of a generator integer, modulo some modulus.</p>\n *\n * @author Sean Owen\n * @see com.google.zxing.common.reedsolomon.GenericGF\n */\nvar ModulusGF = /** @class */ (function (_super) {\n    __extends(ModulusGF, _super);\n    // private /*final*/ modulus: /*int*/ number;\n    function ModulusGF(modulus, generator) {\n        var _this = _super.call(this) || this;\n        _this.modulus = modulus;\n        _this.expTable = new Int32Array(modulus);\n        _this.logTable = new Int32Array(modulus);\n        var x = /*int*/ 1;\n        for (var i /*int*/ = 0; i < modulus; i++) {\n            _this.expTable[i] = x;\n            x = (x * generator) % modulus;\n        }\n        for (var i /*int*/ = 0; i < modulus - 1; i++) {\n            _this.logTable[_this.expTable[i]] = i;\n        }\n        // logTable[0] == 0 but this should never be used\n        _this.zero = new ModulusPoly(_this, new Int32Array([0]));\n        _this.one = new ModulusPoly(_this, new Int32Array([1]));\n        return _this;\n    }\n    ModulusGF.prototype.getZero = function () {\n        return this.zero;\n    };\n    ModulusGF.prototype.getOne = function () {\n        return this.one;\n    };\n    ModulusGF.prototype.buildMonomial = function (degree, coefficient) {\n        if (degree < 0) {\n            throw new IllegalArgumentException();\n        }\n        if (coefficient === 0) {\n            return this.zero;\n        }\n        var coefficients = new Int32Array(degree + 1);\n        coefficients[0] = coefficient;\n        return new ModulusPoly(this, coefficients);\n    };\n    ModulusGF.PDF417_GF = new ModulusGF(PDF417Common.NUMBER_OF_CODEWORDS, 3);\n    return ModulusGF;\n}(ModulusBase));\nexport default ModulusGF;\n//# sourceMappingURL=ModulusGF.js.map"]},"metadata":{},"sourceType":"module"}