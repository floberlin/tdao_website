{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport TableGrowingMode from \"./types/TableGrowingMode.js\";\nimport BusyIndicator from \"./BusyIndicator.js\";\nimport TableMode from \"./types/TableMode.js\"; // Texts\n\nimport { LOAD_MORE_TEXT, ARIA_LABEL_SELECT_ALL_CHECKBOX, TABLE_HEADER_ROW_TEXT, TABLE_ROW_POSITION } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport TableTemplate from \"./generated/templates/TableTemplate.lit.js\"; // Styles\n\nimport styles from \"./generated/themes/Table.css.js\";\nconst GROWING_WITH_SCROLL_DEBOUNCE_RATE = 250; // ms\n\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-table\",\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.Table.prototype */\n  {\n    /**\n     * Defines the component rows.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-table-row</code> for the intended design.\n     *\n     * @type {sap.ui.webcomponents.main.ITableRow[]}\n     * @slot rows\n     * @public\n     */\n    \"default\": {\n      propertyName: \"rows\",\n      type: HTMLElement,\n      individualSlots: true\n    },\n\n    /**\n     * Defines the configuration for the columns of the component.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-table-column</code> for the intended design.\n     *\n     * @type {sap.ui.webcomponents.main.ITableColumn[]}\n     * @slot\n     * @public\n     */\n    columns: {\n      type: HTMLElement,\n      individualSlots: true,\n      invalidateOnChildChange: {\n        properties: true,\n        slots: false\n      }\n    }\n  },\n  properties:\n  /** @lends sap.ui.webcomponents.main.Table.prototype */\n  {\n    /**\n     * Defines the text that will be displayed when there is no data and <code>hideNoData</code> is not present.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    noDataText: {\n      type: String\n    },\n\n    /**\n     * Defines the text that will be displayed inside the growing button at the bottom of the table,\n     * meant for loading more rows upon press.\n     *\n     * <br><br>\n     * <b>Note:</b> If not specified a built-in text will be displayed.\n     * <br>\n     * <b>Note:</b> This property takes effect if <code>growing</code> is set to <code>Button</code>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @since 1.0.0-rc.15\n     * @public\n     */\n    growingButtonText: {\n      type: String\n    },\n\n    /**\n     * Defines the subtext that will be displayed under the <code>growingButtonText</code>.\n     *\n     * <br><br>\n     * <b>Note:</b> This property takes effect if <code>growing</code> is set to <code>Button</code>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @since 1.0.0-rc.15\n     * @public\n     */\n    growingButtonSubtext: {\n      type: String\n    },\n\n    /**\n     * Defines if the value of <code>noDataText</code> will be diplayed when there is no rows present in the table.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    hideNoData: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the table will have growing capability either by pressing a <code>More</code> button,\n     * or via user scroll. In both cases <code>load-more</code> event is fired.\n     * <br><br>\n     *\n     * Available options:\n     * <br><br>\n     * <code>Button</code> - Shows a <code>More</code> button at the bottom of the table, pressing of which triggers the <code>load-more</code> event.\n     * <br>\n     * <code>Scroll</code> - The <code>load-more</code> event is triggered when the user scrolls to the bottom of the table;\n     * <br>\n     * <code>None</code> (default) - The growing is off.\n     * <br><br>\n     *\n     * <b>Limitations:</b> <code>growing=\"Scroll\"</code> is not supported for Internet Explorer,\n     * and the component will fallback to <code>growing=\"Button\"</code>.\n     * @type {TableGrowingMode}\n     * @defaultvalue \"None\"\n     * @since 1.0.0-rc.12\n     * @public\n     */\n    growing: {\n      type: TableGrowingMode,\n      defaultValue: TableGrowingMode.None\n    },\n\n    /**\n     * Defines if the table is in busy state.\n     * <b>\n     *\n     * In this state the component's opacity is reduced\n     * and busy indicator is displayed at the bottom of the table.\n     * @type {boolean}\n     * @defaultvalue false\n     * @since 1.0.0-rc.12\n     * @public\n    */\n    busy: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n     *\n     * @type {Integer}\n     * @defaultValue 1000\n     * @public\n     */\n    busyDelay: {\n      type: Integer,\n      defaultValue: 1000\n    },\n\n    /**\n     * Determines whether the column headers remain fixed at the top of the page during\n     * vertical scrolling as long as the Web Component is in the viewport.\n     * <br><br>\n     * <b>Limitations:</b>\n     * <ul>\n     * <li>Browsers that do not support this feature:\n     * <ul>\n     * <li>Internet Explorer</li>\n     * <li>Microsoft Edge lower than version 41 (EdgeHTML 16)</li>\n     * <li>Mozilla Firefox lower than version 59</li>\n     * </ul>\n     * </li>\n     * <li>Scrolling behavior:\n     * <ul>\n     * <li>If the Web Component is placed in layout containers that have the <code>overflow: hidden</code>\n     * or <code>overflow: auto</code> style definition, this can\n     * prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.</li>\n     * </ul>\n     * </li>\n     * </ul>\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    stickyColumnHeader: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the mode of the component.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>MultiSelect</code></li>\n     * <li><code>SingleSelect</code></li>\n     * <li><code>None</code></li>\n     * <ul>\n     * @type {TableMode}\n     * @defaultvalue \"None\"\n     * @since 1.0.0-rc.15\n     * @public\n     */\n    mode: {\n      type: TableMode,\n      defaultValue: TableMode.None\n    },\n    _hiddenColumns: {\n      type: Object,\n      multiple: true\n    },\n    _noDataDisplayed: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the active state of the <code>More</code> button.\n     * @private\n     */\n    _loadMoreActive: {\n      type: Boolean\n    },\n\n    /**\n     * Used to represent the table column header for the purpose of the item navigation as it does not work with DOM objects directly\n     * @private\n     */\n    _columnHeader: {\n      type: Object\n    },\n\n    /**\n     * Defines if the entire table is in view port.\n     * @private\n     */\n    _inViewport: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether all rows are selected or not when table is in MultiSelect mode.\n     * @type {Boolean}\n     * @defaultvalue false\n     * @since 1.0.0-rc.15\n     * @private\n     */\n    _allRowsSelected: {\n      type: Boolean\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.Table.prototype */\n  {\n    /**\n     * Fired when a row in <code>Active</code> mode is clicked or <code>Enter</code> key is pressed.\n     *\n     * @event sap.ui.webcomponents.main.Table#row-click\n     * @param {HTMLElement} row the activated row.\n     * @public\n     */\n    \"row-click\": {\n      detail: {\n        row: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when <code>ui5-table-column</code> is shown as a pop-in instead of hiding it.\n     *\n     * @event sap.ui.webcomponents.main.Table#popin-change\n     * @param {Array} poppedColumns popped-in columns.\n     * @since 1.0.0-rc.6\n     * @public\n     */\n    \"popin-change\": {\n      detail: {\n        poppedColumns: {}\n      }\n    },\n\n    /**\n     * Fired when the user presses the <code>More</code> button or scrolls to the table's end.\n     * <br><br>\n     *\n     * <b>Note:</b> The event will be fired if <code>growing</code> is set to <code>Button</code> or <code>Scroll</code>.\n     * @event sap.ui.webcomponents.main.Table#load-more\n     * @public\n     * @since 1.0.0-rc.11\n     */\n    \"load-more\": {},\n\n    /**\n     * Fired when selection is changed by user interaction\n     * in <code>SingleSelect</code> and <code>MultiSelect</code> modes.\n     *\n     * @event sap.ui.webcomponents.main.Table#selection-change\n     * @param {Array} selectedRows An array of the selected rows.\n     * @param {Array} previouslySelectedRows An array of the previously selected rows.\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    \"selection-change\": {\n      detail: {\n        selectedRows: {\n          type: Array\n        },\n        previouslySelectedRows: {\n          type: Array\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-table</code> component provides a set of sophisticated and convenient functions for responsive table design.\n * It provides a comprehensive set of features for displaying and dealing with vast amounts of data.\n * <br><br>\n * To render the <code>Table</code> properly, the order of the <code>columns</code> should match with the\n * order of the item <code>cells</code> in the <code>rows</code>.\n * <br><br>\n * Desktop and tablet devices are supported.\n * On tablets, special consideration should be given to the number of visible columns\n * and rows due to the limited performance of some devices.\n *\n * <h3>Selection</h3>\n * To benefit from the selection mechanism of <code>ui5-table</code> component, you can use the available selection modes:\n * <code>SingleSelect</code> and <code>MultiSelect</code>.\n * <br>\n * In additition to the used mode, you can also specify the <code>ui5-table-row</code> type choosing between\n * <code>Active</code> or <code>Inactive</code>.\n * <br><br>\n * In <code>SingleSelect</code> mode, you can select both an <code>Active</code> and <code>Inactive</code> row via mouse or\n * by pressing the <code>Space</code> or <code>Enter</code> keys.\n * <br>\n * In <code>MultiSelect</code> mode, you can select both an <code>Active</code> and <code>Inactive</code> row by pressing the\n * <code>Space</code> key when a row is on focus or via mouse click over the selection checkbox of the row.\n * In order to select all the available rows at once, you can use the selection checkbox presented in the table's header.\n * <br><br>\n * <b>Note:</b> Currently, when a column is shown as a pop-in, the visual indication for selection is not presented over it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Table.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableColumn.js\";</code> (for <code>ui5-table-column</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableRow.js\";</code> (for <code>ui5-table-row</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableCell.js\";</code> (for <code>ui5-table-cell</code>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Table\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-table\n * @appenddocs TableColumn TableRow TableGroupRow TableCell\n * @public\n */\n\nclass Table extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return TableTemplate;\n  }\n\n  static get dependencies() {\n    return [BusyIndicator];\n  }\n\n  static async onDefine() {\n    await fetchI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  constructor() {\n    super(); // The ItemNavigation requires each item to 1) have a \"_tabIndex\" property and 2) be either a UI5Element, or have an id property (to find it in the component's shadow DOM by)\n\n    this._columnHeader = {\n      id: `${this._id}-columnHeader`,\n      _tabIndex: \"0\"\n    };\n    this._itemNavigation = new ItemNavigation(this, {\n      navigationMode: NavigationMode.Vertical,\n      affectedPropertiesNames: [\"_columnHeader\"],\n      getItemsCallback: () => [this._columnHeader, ...this.rows]\n    });\n    this.fnOnRowFocused = this.onRowFocused.bind(this);\n    this._handleResize = this.popinContent.bind(this);\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n    this.tableEndObserved = false;\n    this.addEventListener(\"ui5-selection-requested\", this._handleSelect.bind(this));\n  }\n\n  onBeforeRendering() {\n    const columnSettings = this.getColumnPropagationSettings();\n    const columnSettingsString = JSON.stringify(columnSettings);\n    const rowsCount = this.rows.length;\n    this.rows.forEach((row, index) => {\n      if (row._columnsInfoString !== columnSettingsString) {\n        row._columnsInfo = columnSettings;\n        row._columnsInfoString = JSON.stringify(row._columnsInfo);\n      }\n\n      row._ariaPosition = this.i18nBundle.getText(TABLE_ROW_POSITION, index + 1, rowsCount);\n      row._busy = this.busy;\n      row.removeEventListener(\"ui5-_focused\", this.fnOnRowFocused);\n      row.addEventListener(\"ui5-_focused\", this.fnOnRowFocused);\n      row.mode = this.mode;\n    });\n    this.visibleColumns = this.columns.filter((column, index) => {\n      column.sticky = this.stickyColumnHeader;\n      return !this._hiddenColumns[index];\n    });\n    this._noDataDisplayed = !this.rows.length && !this.hideNoData;\n    this.visibleColumnsCount = this.visibleColumns.length;\n  }\n\n  onAfterRendering() {\n    if (this.growsOnScroll) {\n      this.observeTableEnd();\n    }\n\n    this.checkTableInViewport();\n  }\n\n  onEnterDOM() {\n    if (!isIE()) {\n      this.growingIntersectionObserver = this.getIntersectionObserver();\n    }\n\n    ResizeHandler.register(this.getDomRef(), this._handleResize);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(this.getDomRef(), this._handleResize);\n\n    if (!isIE()) {\n      this.growingIntersectionObserver.disconnect();\n      this.growingIntersectionObserver = null;\n      this.tableEndObserved = false;\n    }\n  }\n\n  onRowFocused(event) {\n    this._itemNavigation.setCurrentItem(event.target);\n  }\n\n  _onColumnHeaderClick(event) {\n    this.getColumnHeader().focus();\n\n    this._itemNavigation.setCurrentItem(this._columnHeader);\n  }\n\n  _onLoadMoreKeydown(event) {\n    if (isSpace(event)) {\n      event.preventDefault();\n      this._loadMoreActive = true;\n    }\n\n    if (isEnter(event)) {\n      this._onLoadMoreClick();\n\n      this._loadMoreActive = true;\n    }\n  }\n\n  _onLoadMoreKeyup(event) {\n    if (isSpace(event)) {\n      this._onLoadMoreClick();\n    }\n\n    this._loadMoreActive = false;\n  }\n\n  _onLoadMoreClick() {\n    this.fireEvent(\"load-more\");\n  }\n\n  observeTableEnd() {\n    if (!this.tableEndObserved) {\n      this.getIntersectionObserver().observe(this.tableEndDOM);\n      this.tableEndObserved = true;\n    }\n  }\n\n  onInteresection(entries) {\n    if (entries.some(entry => entry.isIntersecting)) {\n      debounce(this.loadMore.bind(this), GROWING_WITH_SCROLL_DEBOUNCE_RATE);\n    }\n  }\n\n  loadMore() {\n    this.fireEvent(\"load-more\");\n  }\n\n  _handleSingleSelect(event) {\n    const row = this.getRowParent(event.target);\n\n    if (!row.selected) {\n      const previouslySelectedRows = this.selectedRows;\n      this.rows.forEach(item => {\n        if (item.selected) {\n          item.selected = false;\n        }\n      });\n      row.selected = true;\n      this.fireEvent(\"selection-change\", {\n        selectedRows: [row],\n        previouslySelectedRows\n      });\n    }\n  }\n\n  _handleMultiSelect(event) {\n    const row = this.getRowParent(event.target);\n    const previouslySelectedRows = this.selectedRows;\n    row.selected = !row.selected;\n    const selectedRows = this.selectedRows;\n\n    if (selectedRows.length === this.rows.length) {\n      this._allRowsSelected = true;\n    } else {\n      this._allRowsSelected = false;\n    }\n\n    this.fireEvent(\"selection-change\", {\n      selectedRows,\n      previouslySelectedRows\n    });\n  }\n\n  _handleSelect(event) {\n    this[`_handle${this.mode}`](event);\n  }\n\n  _selectAll(event) {\n    const bAllSelected = event.target.checked;\n    const previouslySelectedRows = this.rows.filter(row => row.selected);\n    this._allRowsSelected = bAllSelected;\n    this.rows.forEach(row => {\n      row.selected = bAllSelected;\n    });\n    const selectedRows = bAllSelected ? this.rows : [];\n    this.fireEvent(\"selection-change\", {\n      selectedRows,\n      previouslySelectedRows\n    });\n  }\n\n  getRowParent(child) {\n    const parent = child.parentElement;\n\n    if (child.hasAttribute(\"ui5-table-row\")) {\n      return child;\n    }\n\n    if (parent && parent.hasAttribute(\"ui5-table-row\")) {\n      return parent;\n    }\n\n    this.getRowParent(parent);\n  }\n\n  getColumnHeader() {\n    return this.getDomRef() && this.getDomRef().querySelector(`#${this._id}-columnHeader`);\n  }\n\n  handleResize(event) {\n    this.checkTableInViewport();\n    this.popinContent(event);\n  }\n\n  checkTableInViewport() {\n    this._inViewport = isElementInView(this.getDomRef());\n  }\n\n  popinContent(_event) {\n    const clientRect = this.getDomRef().getBoundingClientRect();\n    const tableWidth = clientRect.width;\n    const hiddenColumns = [];\n    const visibleColumnsIndexes = []; // store the hidden columns\n\n    this.columns.forEach((column, index) => {\n      if (tableWidth < column.minWidth && column.minWidth !== Infinity) {\n        hiddenColumns[index] = {\n          index,\n          popinText: column.popinText,\n          demandPopin: column.demandPopin\n        };\n      } else {\n        visibleColumnsIndexes.push(index);\n      }\n    });\n\n    if (visibleColumnsIndexes.length) {\n      if (!this.isMultiSelect) {\n        this.columns[visibleColumnsIndexes[0]].first = true;\n      }\n\n      this.columns[visibleColumnsIndexes[visibleColumnsIndexes.length - 1]].last = true;\n    } // invalidate only if hidden columns count has changed\n\n\n    if (this._hiddenColumns.length !== hiddenColumns.length) {\n      this._hiddenColumns = hiddenColumns;\n\n      if (hiddenColumns.length) {\n        this.fireEvent(\"popin-change\", {\n          poppedColumns: this._hiddenColumns\n        });\n      }\n    }\n  }\n  /**\n   * Gets settings to be propagated from columns to rows.\n   *\n   * @returns {object}\n   * @memberof Table\n   */\n\n\n  getColumnPropagationSettings() {\n    return this.columns.map((column, index) => {\n      return {\n        index,\n        minWidth: column.minWidth,\n        demandPopin: column.demandPopin,\n        text: column.textContent,\n        popinText: column.popinText,\n        visible: !this._hiddenColumns[index]\n      };\n    }, this);\n  }\n\n  getIntersectionObserver() {\n    if (!this.growingIntersectionObserver) {\n      this.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n        root: document,\n        rootMargin: \"0px\",\n        threshold: 1.0\n      });\n    }\n\n    return this.growingIntersectionObserver;\n  }\n\n  get styles() {\n    return {\n      busy: {\n        position: this.busyIndPosition\n      }\n    };\n  }\n\n  get growsWithButton() {\n    if (isIE()) {\n      // On IE fallback to \"More\" button, even if growing of type \"Scroll\" is set.\n      return this.growing === TableGrowingMode.Button || this.growing === TableGrowingMode.Scroll;\n    }\n\n    return this.growing === TableGrowingMode.Button;\n  }\n\n  get growsOnScroll() {\n    return !isIE() && this.growing === TableGrowingMode.Scroll;\n  }\n\n  get _growingButtonText() {\n    return this.growingButtonText || this.i18nBundle.getText(LOAD_MORE_TEXT);\n  }\n\n  get ariaLabelText() {\n    const headerRowText = this.i18nBundle.getText(TABLE_HEADER_ROW_TEXT);\n    const columnsTitle = this.columns.map(column => {\n      return column.textContent.trim();\n    }).join(\" \");\n    return `${headerRowText} ${columnsTitle}`;\n  }\n\n  get ariaLabelSelectAllText() {\n    return this.i18nBundle.getText(ARIA_LABEL_SELECT_ALL_CHECKBOX);\n  }\n\n  get loadMoreAriaLabelledBy() {\n    if (this.moreDataText) {\n      return `${this._id}-growingButton-text ${this._id}-growingButton-subtext`;\n    }\n\n    return `${this._id}-growingButton-text`;\n  }\n\n  get tableEndDOM() {\n    return this.shadowRoot.querySelector(\".ui5-table-end-marker\");\n  }\n\n  get busyIndPosition() {\n    if (isIE()) {\n      return \"absolute\";\n    }\n\n    return this._inViewport ? \"absolute\" : \"sticky\";\n  }\n\n  get isMultiSelect() {\n    return this.mode === \"MultiSelect\";\n  }\n\n  get selectedRows() {\n    return this.rows.filter(row => row.selected);\n  }\n\n}\n\nTable.define();\nexport default Table;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/Table.js"],"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","Integer","NavigationMode","isIE","isSpace","isEnter","fetchI18nBundle","getI18nBundle","debounce","isElementInView","TableGrowingMode","BusyIndicator","TableMode","LOAD_MORE_TEXT","ARIA_LABEL_SELECT_ALL_CHECKBOX","TABLE_HEADER_ROW_TEXT","TABLE_ROW_POSITION","TableTemplate","styles","GROWING_WITH_SCROLL_DEBOUNCE_RATE","metadata","tag","managedSlots","slots","propertyName","type","HTMLElement","individualSlots","columns","invalidateOnChildChange","properties","noDataText","String","growingButtonText","growingButtonSubtext","hideNoData","Boolean","growing","defaultValue","None","busy","busyDelay","stickyColumnHeader","mode","_hiddenColumns","Object","multiple","_noDataDisplayed","_loadMoreActive","_columnHeader","_inViewport","_allRowsSelected","events","detail","row","poppedColumns","selectedRows","Array","previouslySelectedRows","Table","render","template","dependencies","onDefine","constructor","id","_id","_tabIndex","_itemNavigation","navigationMode","Vertical","affectedPropertiesNames","getItemsCallback","rows","fnOnRowFocused","onRowFocused","bind","_handleResize","popinContent","i18nBundle","tableEndObserved","addEventListener","_handleSelect","onBeforeRendering","columnSettings","getColumnPropagationSettings","columnSettingsString","JSON","stringify","rowsCount","length","forEach","index","_columnsInfoString","_columnsInfo","_ariaPosition","getText","_busy","removeEventListener","visibleColumns","filter","column","sticky","visibleColumnsCount","onAfterRendering","growsOnScroll","observeTableEnd","checkTableInViewport","onEnterDOM","growingIntersectionObserver","getIntersectionObserver","register","getDomRef","onExitDOM","deregister","disconnect","event","setCurrentItem","target","_onColumnHeaderClick","getColumnHeader","focus","_onLoadMoreKeydown","preventDefault","_onLoadMoreClick","_onLoadMoreKeyup","fireEvent","observe","tableEndDOM","onInteresection","entries","some","entry","isIntersecting","loadMore","_handleSingleSelect","getRowParent","selected","item","_handleMultiSelect","_selectAll","bAllSelected","checked","child","parent","parentElement","hasAttribute","querySelector","handleResize","_event","clientRect","getBoundingClientRect","tableWidth","width","hiddenColumns","visibleColumnsIndexes","minWidth","Infinity","popinText","demandPopin","push","isMultiSelect","first","last","map","text","textContent","visible","IntersectionObserver","root","document","rootMargin","threshold","position","busyIndPosition","growsWithButton","Button","Scroll","_growingButtonText","ariaLabelText","headerRowText","columnsTitle","trim","join","ariaLabelSelectAllText","loadMoreAriaLabelledBy","moreDataText","shadowRoot","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,sCAAjC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,4CAA/C;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,eAAP,MAA4B,sDAA5B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;;AACA,SACCC,cADD,EAECC,8BAFD,EAGCC,qBAHD,EAICC,kBAJD,QAKO,mCALP,C,CAOA;;AACA,OAAOC,aAAP,MAA0B,4CAA1B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,MAAMC,iCAAiC,GAAG,GAA1C,C,CAA+C;;AAE/C;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,WADW;AAEhBC,EAAAA,YAAY,EAAE,IAFE;AAGhBC,EAAAA,KAAK;AAAE;AAAwD;AAE9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVC,MAAAA,YAAY,EAAE,MADJ;AAEVC,MAAAA,IAAI,EAAEC,WAFI;AAGVC,MAAAA,eAAe,EAAE;AAHP,KAXmD;;AAiB9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACRH,MAAAA,IAAI,EAAEC,WADE;AAERC,MAAAA,eAAe,EAAE,IAFT;AAGRE,MAAAA,uBAAuB,EAAE;AACxBC,QAAAA,UAAU,EAAE,IADY;AAExBP,QAAAA,KAAK,EAAE;AAFiB;AAHjB;AA1BqD,GAH/C;AAsChBO,EAAAA,UAAU;AAAE;AAAwD;AAEnE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXN,MAAAA,IAAI,EAAEO;AADK,KATuD;;AAanE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,iBAAiB,EAAE;AAClBR,MAAAA,IAAI,EAAEO;AADY,KA3BgD;;AA+BnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGE,IAAAA,oBAAoB,EAAE;AACtBT,MAAAA,IAAI,EAAEO;AADgB,KA1C4C;;AA8CnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,IAAAA,UAAU,EAAE;AACXV,MAAAA,IAAI,EAAEW;AADK,KAtDuD;;AA0DnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACRZ,MAAAA,IAAI,EAAEf,gBADE;AAER4B,MAAAA,YAAY,EAAE5B,gBAAgB,CAAC6B;AAFvB,KA/E0D;;AAoFnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLf,MAAAA,IAAI,EAAEW;AADD,KA/F6D;;AAmGnE;AACF;AACA;AACA;AACA;AACA;AACA;AACEK,IAAAA,SAAS,EAAE;AACVhB,MAAAA,IAAI,EAAExB,OADI;AAEVqC,MAAAA,YAAY,EAAE;AAFJ,KA1GwD;;AA+GnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,IAAAA,kBAAkB,EAAE;AACnBjB,MAAAA,IAAI,EAAEW;AADa,KAzI+C;;AA6InE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEO,IAAAA,IAAI,EAAE;AACLlB,MAAAA,IAAI,EAAEb,SADD;AAEL0B,MAAAA,YAAY,EAAE1B,SAAS,CAAC2B;AAFnB,KA3J6D;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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport debounce from \"@ui5/webcomponents-base/dist/util/debounce.js\";\nimport isElementInView from \"@ui5/webcomponents-base/dist/util/isElementInView.js\";\nimport TableGrowingMode from \"./types/TableGrowingMode.js\";\nimport BusyIndicator from \"./BusyIndicator.js\";\nimport TableMode from \"./types/TableMode.js\";\n\n// Texts\nimport {\n\tLOAD_MORE_TEXT,\n\tARIA_LABEL_SELECT_ALL_CHECKBOX,\n\tTABLE_HEADER_ROW_TEXT,\n\tTABLE_ROW_POSITION,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport TableTemplate from \"./generated/templates/TableTemplate.lit.js\";\n\n// Styles\nimport styles from \"./generated/themes/Table.css.js\";\n\nconst GROWING_WITH_SCROLL_DEBOUNCE_RATE = 250; // ms\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-table\",\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Table.prototype */ {\n\n\t\t/**\n\t\t * Defines the component rows.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-table-row</code> for the intended design.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.ITableRow[]}\n\t\t * @slot rows\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"rows\",\n\t\t\ttype: HTMLElement,\n\t\t\tindividualSlots: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the configuration for the columns of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-table-column</code> for the intended design.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.ITableColumn[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tcolumns: {\n\t\t\ttype: HTMLElement,\n\t\t\tindividualSlots: true,\n\t\t\tinvalidateOnChildChange: {\n\t\t\t\tproperties: true,\n\t\t\t\tslots: false,\n\t\t\t},\n\t\t},\n\t},\n\tproperties: /** @lends sap.ui.webcomponents.main.Table.prototype */ {\n\n\t\t/**\n\t\t * Defines the text that will be displayed when there is no data and <code>hideNoData</code> is not present.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tnoDataText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text that will be displayed inside the growing button at the bottom of the table,\n\t\t * meant for loading more rows upon press.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> If not specified a built-in text will be displayed.\n\t\t * <br>\n\t\t * <b>Note:</b> This property takes effect if <code>growing</code> is set to <code>Button</code>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.0.0-rc.15\n\t\t * @public\n\t\t */\n\t\tgrowingButtonText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the subtext that will be displayed under the <code>growingButtonText</code>.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> This property takes effect if <code>growing</code> is set to <code>Button</code>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.0.0-rc.15\n\t\t * @public\n\t\t */\n\t\t growingButtonSubtext: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the value of <code>noDataText</code> will be diplayed when there is no rows present in the table.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\thideNoData: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the table will have growing capability either by pressing a <code>More</code> button,\n\t\t * or via user scroll. In both cases <code>load-more</code> event is fired.\n\t\t * <br><br>\n\t\t *\n\t\t * Available options:\n\t\t * <br><br>\n\t\t * <code>Button</code> - Shows a <code>More</code> button at the bottom of the table, pressing of which triggers the <code>load-more</code> event.\n\t\t * <br>\n\t\t * <code>Scroll</code> - The <code>load-more</code> event is triggered when the user scrolls to the bottom of the table;\n\t\t * <br>\n\t\t * <code>None</code> (default) - The growing is off.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Limitations:</b> <code>growing=\"Scroll\"</code> is not supported for Internet Explorer,\n\t\t * and the component will fallback to <code>growing=\"Button\"</code>.\n\t\t * @type {TableGrowingMode}\n\t\t * @defaultvalue \"None\"\n\t\t * @since 1.0.0-rc.12\n\t\t * @public\n\t\t */\n\t\tgrowing: {\n\t\t\ttype: TableGrowingMode,\n\t\t\tdefaultValue: TableGrowingMode.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the table is in busy state.\n\t\t * <b>\n\t\t *\n\t\t * In this state the component's opacity is reduced\n\t\t * and busy indicator is displayed at the bottom of the table.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @since 1.0.0-rc.12\n\t\t * @public\n\t\t*/\n\t\tbusy: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @defaultValue 1000\n\t\t * @public\n\t\t */\n\t\tbusyDelay: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 1000,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the column headers remain fixed at the top of the page during\n\t\t * vertical scrolling as long as the Web Component is in the viewport.\n\t\t * <br><br>\n\t\t * <b>Limitations:</b>\n\t\t * <ul>\n\t\t * <li>Browsers that do not support this feature:\n\t\t * <ul>\n\t\t * <li>Internet Explorer</li>\n\t\t * <li>Microsoft Edge lower than version 41 (EdgeHTML 16)</li>\n\t\t * <li>Mozilla Firefox lower than version 59</li>\n\t\t * </ul>\n\t\t * </li>\n\t\t * <li>Scrolling behavior:\n\t\t * <ul>\n\t\t * <li>If the Web Component is placed in layout containers that have the <code>overflow: hidden</code>\n\t\t * or <code>overflow: auto</code> style definition, this can\n\t\t * prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.</li>\n\t\t * </ul>\n\t\t * </li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tstickyColumnHeader: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the mode of the component.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>MultiSelect</code></li>\n\t\t * <li><code>SingleSelect</code></li>\n\t\t * <li><code>None</code></li>\n\t\t * <ul>\n\t\t * @type {TableMode}\n\t\t * @defaultvalue \"None\"\n\t\t * @since 1.0.0-rc.15\n\t\t * @public\n\t\t */\n\t\tmode: {\n\t\t\ttype: TableMode,\n\t\t\tdefaultValue: TableMode.None,\n\t\t},\n\n\t\t_hiddenColumns: {\n\t\t\ttype: Object,\n\t\t\tmultiple: true,\n\t\t},\n\n\t\t_noDataDisplayed: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the active state of the <code>More</code> button.\n\t\t * @private\n\t\t */\n\t\t_loadMoreActive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Used to represent the table column header for the purpose of the item navigation as it does not work with DOM objects directly\n\t\t * @private\n\t\t */\n\t\t_columnHeader: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the entire table is in view port.\n\t\t * @private\n\t\t */\n\t\t_inViewport: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether all rows are selected or not when table is in MultiSelect mode.\n\t\t * @type {Boolean}\n\t\t * @defaultvalue false\n\t\t * @since 1.0.0-rc.15\n\t\t * @private\n\t\t */\n\t\t_allRowsSelected: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.Table.prototype */ {\n\t\t/**\n\t\t * Fired when a row in <code>Active</code> mode is clicked or <code>Enter</code> key is pressed.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Table#row-click\n\t\t * @param {HTMLElement} row the activated row.\n\t\t * @public\n\t\t */\n\t\t\"row-click\": {\n\t\t\tdetail: {\n\t\t\t\trow: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when <code>ui5-table-column</code> is shown as a pop-in instead of hiding it.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Table#popin-change\n\t\t * @param {Array} poppedColumns popped-in columns.\n\t\t * @since 1.0.0-rc.6\n\t\t * @public\n\t\t */\n\t\t\"popin-change\": {\n\t\t\tdetail: {\n\t\t\t\tpoppedColumns: {},\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user presses the <code>More</code> button or scrolls to the table's end.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Note:</b> The event will be fired if <code>growing</code> is set to <code>Button</code> or <code>Scroll</code>.\n\t\t * @event sap.ui.webcomponents.main.Table#load-more\n\t\t * @public\n\t\t * @since 1.0.0-rc.11\n\t\t */\n\t\t\"load-more\": {},\n\n\t\t/**\n\t\t * Fired when selection is changed by user interaction\n\t\t * in <code>SingleSelect</code> and <code>MultiSelect</code> modes.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Table#selection-change\n\t\t * @param {Array} selectedRows An array of the selected rows.\n\t\t * @param {Array} previouslySelectedRows An array of the previously selected rows.\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedRows: { type: Array },\n\t\t\t\tpreviouslySelectedRows: { type: Array },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-table</code> component provides a set of sophisticated and convenient functions for responsive table design.\n * It provides a comprehensive set of features for displaying and dealing with vast amounts of data.\n * <br><br>\n * To render the <code>Table</code> properly, the order of the <code>columns</code> should match with the\n * order of the item <code>cells</code> in the <code>rows</code>.\n * <br><br>\n * Desktop and tablet devices are supported.\n * On tablets, special consideration should be given to the number of visible columns\n * and rows due to the limited performance of some devices.\n *\n * <h3>Selection</h3>\n * To benefit from the selection mechanism of <code>ui5-table</code> component, you can use the available selection modes:\n * <code>SingleSelect</code> and <code>MultiSelect</code>.\n * <br>\n * In additition to the used mode, you can also specify the <code>ui5-table-row</code> type choosing between\n * <code>Active</code> or <code>Inactive</code>.\n * <br><br>\n * In <code>SingleSelect</code> mode, you can select both an <code>Active</code> and <code>Inactive</code> row via mouse or\n * by pressing the <code>Space</code> or <code>Enter</code> keys.\n * <br>\n * In <code>MultiSelect</code> mode, you can select both an <code>Active</code> and <code>Inactive</code> row by pressing the\n * <code>Space</code> key when a row is on focus or via mouse click over the selection checkbox of the row.\n * In order to select all the available rows at once, you can use the selection checkbox presented in the table's header.\n * <br><br>\n * <b>Note:</b> Currently, when a column is shown as a pop-in, the visual indication for selection is not presented over it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Table.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableColumn.js\";</code> (for <code>ui5-table-column</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableRow.js\";</code> (for <code>ui5-table-row</code>)\n * <br>\n * <code>import \"@ui5/webcomponents/dist/TableCell.js\";</code> (for <code>ui5-table-cell</code>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Table\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-table\n * @appenddocs TableColumn TableRow TableGroupRow TableCell\n * @public\n */\nclass Table extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn styles;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn TableTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [BusyIndicator];\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// The ItemNavigation requires each item to 1) have a \"_tabIndex\" property and 2) be either a UI5Element, or have an id property (to find it in the component's shadow DOM by)\n\t\tthis._columnHeader = {\n\t\t\tid: `${this._id}-columnHeader`,\n\t\t\t_tabIndex: \"0\",\n\t\t};\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tnavigationMode: NavigationMode.Vertical,\n\t\t\taffectedPropertiesNames: [\"_columnHeader\"],\n\t\t\tgetItemsCallback: () => [this._columnHeader, ...this.rows],\n\t\t});\n\n\t\tthis.fnOnRowFocused = this.onRowFocused.bind(this);\n\n\t\tthis._handleResize = this.popinContent.bind(this);\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\n\t\tthis.tableEndObserved = false;\n\t\tthis.addEventListener(\"ui5-selection-requested\", this._handleSelect.bind(this));\n\t}\n\n\tonBeforeRendering() {\n\t\tconst columnSettings = this.getColumnPropagationSettings();\n\t\tconst columnSettingsString = JSON.stringify(columnSettings);\n\t\tconst rowsCount = this.rows.length;\n\n\t\tthis.rows.forEach((row, index) => {\n\t\t\tif (row._columnsInfoString !== columnSettingsString) {\n\t\t\t\trow._columnsInfo = columnSettings;\n\t\t\t\trow._columnsInfoString = JSON.stringify(row._columnsInfo);\n\t\t\t}\n\n\t\t\trow._ariaPosition = this.i18nBundle.getText(TABLE_ROW_POSITION, index + 1, rowsCount);\n\t\t\trow._busy = this.busy;\n\t\t\trow.removeEventListener(\"ui5-_focused\", this.fnOnRowFocused);\n\t\t\trow.addEventListener(\"ui5-_focused\", this.fnOnRowFocused);\n\t\t\trow.mode = this.mode;\n\t\t});\n\n\t\tthis.visibleColumns = this.columns.filter((column, index) => {\n\t\t\tcolumn.sticky = this.stickyColumnHeader;\n\t\t\treturn !this._hiddenColumns[index];\n\t\t});\n\n\t\tthis._noDataDisplayed = !this.rows.length && !this.hideNoData;\n\t\tthis.visibleColumnsCount = this.visibleColumns.length;\n\t}\n\n\tonAfterRendering() {\n\t\tif (this.growsOnScroll) {\n\t\t\tthis.observeTableEnd();\n\t\t}\n\n\t\tthis.checkTableInViewport();\n\t}\n\n\tonEnterDOM() {\n\t\tif (!isIE()) {\n\t\t\tthis.growingIntersectionObserver = this.getIntersectionObserver();\n\t\t}\n\n\t\tResizeHandler.register(this.getDomRef(), this._handleResize);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this.getDomRef(), this._handleResize);\n\n\t\tif (!isIE()) {\n\t\t\tthis.growingIntersectionObserver.disconnect();\n\t\t\tthis.growingIntersectionObserver = null;\n\t\t\tthis.tableEndObserved = false;\n\t\t}\n\t}\n\n\tonRowFocused(event) {\n\t\tthis._itemNavigation.setCurrentItem(event.target);\n\t}\n\n\t_onColumnHeaderClick(event) {\n\t\tthis.getColumnHeader().focus();\n\t\tthis._itemNavigation.setCurrentItem(this._columnHeader);\n\t}\n\n\t_onLoadMoreKeydown(event) {\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t\tthis._loadMoreActive = true;\n\t\t}\n\t}\n\n\t_onLoadMoreKeyup(event) {\n\t\tif (isSpace(event)) {\n\t\t\tthis._onLoadMoreClick();\n\t\t}\n\t\tthis._loadMoreActive = false;\n\t}\n\n\t_onLoadMoreClick() {\n\t\tthis.fireEvent(\"load-more\");\n\t}\n\n\tobserveTableEnd() {\n\t\tif (!this.tableEndObserved) {\n\t\t\tthis.getIntersectionObserver().observe(this.tableEndDOM);\n\t\t\tthis.tableEndObserved = true;\n\t\t}\n\t}\n\n\tonInteresection(entries) {\n\t\tif (entries.some(entry => entry.isIntersecting)) {\n\t\t\tdebounce(this.loadMore.bind(this), GROWING_WITH_SCROLL_DEBOUNCE_RATE);\n\t\t}\n\t}\n\n\tloadMore() {\n\t\tthis.fireEvent(\"load-more\");\n\t}\n\n\t_handleSingleSelect(event) {\n\t\tconst row = this.getRowParent(event.target);\n\t\tif (!row.selected) {\n\t\t\tconst previouslySelectedRows = this.selectedRows;\n\t\t\tthis.rows.forEach(item => {\n\t\t\t\tif (item.selected) {\n\t\t\t\t\titem.selected = false;\n\t\t\t\t}\n\t\t\t});\n\t\t\trow.selected = true;\n\t\t\tthis.fireEvent(\"selection-change\", {\n\t\t\t\tselectedRows: [row],\n\t\t\t\tpreviouslySelectedRows,\n\t\t\t});\n\t\t}\n\t}\n\n\t_handleMultiSelect(event) {\n\t\tconst row = this.getRowParent(event.target);\n\t\tconst previouslySelectedRows = this.selectedRows;\n\n\t\trow.selected = !row.selected;\n\n\t\tconst selectedRows = this.selectedRows;\n\n\t\tif (selectedRows.length === this.rows.length) {\n\t\t\tthis._allRowsSelected = true;\n\t\t} else {\n\t\t\tthis._allRowsSelected = false;\n\t\t}\n\n\t\tthis.fireEvent(\"selection-change\", {\n\t\t\tselectedRows,\n\t\t\tpreviouslySelectedRows,\n\t\t});\n\t}\n\n\t_handleSelect(event) {\n\t\tthis[`_handle${this.mode}`](event);\n\t}\n\n\t_selectAll(event) {\n\t\tconst bAllSelected = event.target.checked;\n\t\tconst previouslySelectedRows = this.rows.filter(row => row.selected);\n\n\t\tthis._allRowsSelected = bAllSelected;\n\n\t\tthis.rows.forEach(row => {\n\t\t\trow.selected = bAllSelected;\n\t\t});\n\n\t\tconst selectedRows = bAllSelected ? this.rows : [];\n\n\t\tthis.fireEvent(\"selection-change\", {\n\t\t\tselectedRows,\n\t\t\tpreviouslySelectedRows,\n\t\t});\n\t}\n\n\tgetRowParent(child) {\n\t\tconst parent = child.parentElement;\n\n\t\tif (child.hasAttribute(\"ui5-table-row\")) {\n\t\t\treturn child;\n\t\t}\n\n\t\tif (parent && parent.hasAttribute(\"ui5-table-row\")) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tthis.getRowParent(parent);\n\t}\n\n\tgetColumnHeader() {\n\t\treturn this.getDomRef() && this.getDomRef().querySelector(`#${this._id}-columnHeader`);\n\t}\n\n\thandleResize(event) {\n\t\tthis.checkTableInViewport();\n\t\tthis.popinContent(event);\n\t}\n\n\tcheckTableInViewport() {\n\t\tthis._inViewport = isElementInView(this.getDomRef());\n\t}\n\n\tpopinContent(_event) {\n\t\tconst clientRect = this.getDomRef().getBoundingClientRect();\n\t\tconst tableWidth = clientRect.width;\n\t\tconst hiddenColumns = [];\n\t\tconst visibleColumnsIndexes = [];\n\n\t\t// store the hidden columns\n\t\tthis.columns.forEach((column, index) => {\n\t\t\tif (tableWidth < column.minWidth && column.minWidth !== Infinity) {\n\t\t\t\thiddenColumns[index] = {\n\t\t\t\t\tindex,\n\t\t\t\t\tpopinText: column.popinText,\n\t\t\t\t\tdemandPopin: column.demandPopin,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvisibleColumnsIndexes.push(index);\n\t\t\t}\n\t\t});\n\n\t\tif (visibleColumnsIndexes.length) {\n\t\t\tif (!this.isMultiSelect) {\n\t\t\t\tthis.columns[visibleColumnsIndexes[0]].first = true;\n\t\t\t}\n\t\t\tthis.columns[visibleColumnsIndexes[visibleColumnsIndexes.length - 1]].last = true;\n\t\t}\n\n\t\t// invalidate only if hidden columns count has changed\n\t\tif (this._hiddenColumns.length !== hiddenColumns.length) {\n\t\t\tthis._hiddenColumns = hiddenColumns;\n\t\t\tif (hiddenColumns.length) {\n\t\t\t\tthis.fireEvent(\"popin-change\", {\n\t\t\t\t\tpoppedColumns: this._hiddenColumns,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets settings to be propagated from columns to rows.\n\t *\n\t * @returns {object}\n\t * @memberof Table\n\t */\n\tgetColumnPropagationSettings() {\n\t\treturn this.columns.map((column, index) => {\n\t\t\treturn {\n\t\t\t\tindex,\n\t\t\t\tminWidth: column.minWidth,\n\t\t\t\tdemandPopin: column.demandPopin,\n\t\t\t\ttext: column.textContent,\n\t\t\t\tpopinText: column.popinText,\n\t\t\t\tvisible: !this._hiddenColumns[index],\n\t\t\t};\n\t\t}, this);\n\t}\n\n\tgetIntersectionObserver() {\n\t\tif (!this.growingIntersectionObserver) {\n\t\t\tthis.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {\n\t\t\t\troot: document,\n\t\t\t\trootMargin: \"0px\",\n\t\t\t\tthreshold: 1.0,\n\t\t\t});\n\t\t}\n\n\t\treturn this.growingIntersectionObserver;\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tbusy: {\n\t\t\t\tposition: this.busyIndPosition,\n\t\t\t},\n\t\t};\n\t}\n\n\tget growsWithButton() {\n\t\tif (isIE()) {\n\t\t\t// On IE fallback to \"More\" button, even if growing of type \"Scroll\" is set.\n\t\t\treturn this.growing === TableGrowingMode.Button || this.growing === TableGrowingMode.Scroll;\n\t\t}\n\n\t\treturn this.growing === TableGrowingMode.Button;\n\t}\n\n\tget growsOnScroll() {\n\t\treturn !isIE() && this.growing === TableGrowingMode.Scroll;\n\t}\n\n\tget _growingButtonText() {\n\t\treturn this.growingButtonText || this.i18nBundle.getText(LOAD_MORE_TEXT);\n\t}\n\n\tget ariaLabelText() {\n\t\tconst headerRowText = this.i18nBundle.getText(TABLE_HEADER_ROW_TEXT);\n\t\tconst columnsTitle = this.columns.map(column => {\n\t\t\treturn column.textContent.trim();\n\t\t}).join(\" \");\n\n\t\treturn `${headerRowText} ${columnsTitle}`;\n\t}\n\n\tget ariaLabelSelectAllText() {\n\t\treturn this.i18nBundle.getText(ARIA_LABEL_SELECT_ALL_CHECKBOX);\n\t}\n\n\tget loadMoreAriaLabelledBy() {\n\t\tif (this.moreDataText) {\n\t\t\treturn `${this._id}-growingButton-text ${this._id}-growingButton-subtext`;\n\t\t}\n\n\t\treturn `${this._id}-growingButton-text`;\n\t}\n\n\tget tableEndDOM() {\n\t\treturn this.shadowRoot.querySelector(\".ui5-table-end-marker\");\n\t}\n\n\tget busyIndPosition() {\n\t\tif (isIE()) {\n\t\t\treturn \"absolute\";\n\t\t}\n\n\t\treturn this._inViewport ? \"absolute\" : \"sticky\";\n\t}\n\n\tget isMultiSelect() {\n\t\treturn this.mode === \"MultiSelect\";\n\t}\n\n\tget selectedRows() {\n\t\treturn this.rows.filter(row => row.selected);\n\t}\n}\n\nTable.define();\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}