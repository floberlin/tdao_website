{"ast":null,"code":"import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents-fiori/dist/WizardStep';\n/**\n * A component that represents a logical step as part of the `Wizard`. It is meant to aggregate arbitrary HTML elements that forms the content of a single step.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/WizardStep\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar WizardStep = withWebComponent('ui5-wizard-step', ['icon', 'subtitleText', 'titleText'], ['accessibleName', 'accessibleNameRef', 'branching', 'disabled', 'selected'], [], []);\nWizardStep.displayName = 'WizardStep';\nWizardStep.defaultProps = {\n  accessibleName: false,\n  accessibleNameRef: false,\n  branching: false,\n  disabled: false,\n  selected: false\n};\nexport { WizardStep };","map":{"version":3,"sources":["../src/webComponents/WizardStep/index.tsx"],"names":["WizardStep","withWebComponent","accessibleName","accessibleNameRef","branching","disabled","selected"],"mappings":";;AA6DA;AACA;AACA;AACA;AACA;;IACMA,UAAU,GAAGC,gBAAgB,CAAA,iBAAA,EAEjC,CAAA,MAAA,EAAA,cAAA,EAFiC,WAEjC,CAFiC,EAGjC,CAAA,gBAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,UAAA,EAHiC,UAGjC,CAHiC,EAAA,EAAA,EAAA,EAAA,C;AAQnCD,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEAA,UAAU,CAAVA,YAAAA,GAA0B;AACxBE,EAAAA,cAAc,EADU,KAAA;AAExBC,EAAAA,iBAAiB,EAFO,KAAA;AAGxBC,EAAAA,SAAS,EAHe,KAAA;AAIxBC,EAAAA,QAAQ,EAJgB,KAAA;AAKxBC,EAAAA,QAAQ,EAAE;AALc,CAA1BN","sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/WizardStep';\n\nexport interface WizardStepPropTypes extends CommonProps {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: boolean;\n  /**\n   * Defines the aria-labelledby of the step.\n   */\n  accessibleNameRef?: boolean;\n  /**\n   * When `branching` is enabled a dashed line would be displayed after the step, meant to indicate that the next step is not yet known and depends on user choice in the current step.\n   *\n   * **Note:** It is recommended to use `branching` on the last known step and later add new steps when it becomes clear how the wizard flow should continue.\n   */\n  branching?: boolean;\n  /**\n   * Defines if the step is `disabled`. When disabled the step is displayed, but the user can't select the step by clicking or navigate to it with scrolling.\n   *\n   * **Note:** Step can't be `selected` and `disabled` at the same time. In this case the `selected` property would take precedence.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the `icon` of the step.\n   *\n   * **Note:** the icon is displayed in the `Wizard` navigation header.\n   *\n   * The SAP-icons font provides numerous options. See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines the step's `selected` state - the step that is currently active.\n   *\n   * **Note:** Step can't be `selected` and `disabled` at the same time. In this case the `selected` property would take precedence.\n   */\n  selected?: boolean;\n  /**\n   * Defines the `subtitleText` of the step.\n   *\n   * **Note:** the text is displayed in the `Wizard` navigation header.\n   * **Note:** the text will hide on small sizes (about 559 px).\n   */\n  subtitleText?: string;\n  /**\n   * Defines the `titleText` of the step.\n   *\n   * **Note:** the text is displayed in the `Wizard` navigation header.\n   * **Note:** the text will hide on small sizes (about 559 px).\n   */\n  titleText?: string;\n  /**\n   * Defines the step content.\n   */\n  children?: ReactNode | ReactNode[];\n}\n\n/**\n * A component that represents a logical step as part of the `Wizard`. It is meant to aggregate arbitrary HTML elements that forms the content of a single step.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/WizardStep\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst WizardStep = withWebComponent<WizardStepPropTypes>(\n  'ui5-wizard-step',\n  ['icon', 'subtitleText', 'titleText'],\n  ['accessibleName', 'accessibleNameRef', 'branching', 'disabled', 'selected'],\n  [],\n  []\n);\n\nWizardStep.displayName = 'WizardStep';\n\nWizardStep.defaultProps = {\n  accessibleName: false,\n  accessibleNameRef: false,\n  branching: false,\n  disabled: false,\n  selected: false\n};\n\nexport { WizardStep };\n"]},"metadata":{},"sourceType":"module"}