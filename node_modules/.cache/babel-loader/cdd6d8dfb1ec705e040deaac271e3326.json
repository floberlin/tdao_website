{"ast":null,"code":"import _slicedToArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport getSharedResource from \"../getSharedResource.js\";\nvar loaders = new Map();\nvar registry = getSharedResource(\"SVGIcons.registry\", new Map());\nvar iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\nvar ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nvar DEFAULT_COLLECTION = \"SAP-icons\";\n/**\n * @deprecated\n */\n\nvar registerIconBundle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(collectionName, bundleData) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            throw new Error(\"This method has been removed. Use `registerIconLoader` instead.\");\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function registerIconBundle(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar registerIconLoader = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionName, loader) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loaders.set(collectionName, loader);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerIconLoader(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _loadIconCollectionOnce = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(collectionName) {\n    var loadIcons;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (iconCollectionPromises.has(collectionName)) {\n              _context3.next = 5;\n              break;\n            }\n\n            if (loaders.has(collectionName)) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"No loader registered for the \".concat(collectionName, \" icons collection. Probably you forgot to import the \\\"AllIcons.js\\\" module for the respective package.\"));\n\n          case 3:\n            loadIcons = loaders.get(collectionName);\n            iconCollectionPromises.set(collectionName, loadIcons(collectionName));\n\n          case 5:\n            return _context3.abrupt(\"return\", iconCollectionPromises.get(collectionName));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function _loadIconCollectionOnce(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _fillRegistry = function _fillRegistry(bundleData) {\n  Object.keys(bundleData.data).forEach(function (iconName) {\n    var iconData = bundleData.data[iconName];\n    registerIcon(iconName, {\n      pathData: iconData.path,\n      ltr: iconData.ltr,\n      accData: iconData.acc,\n      collection: bundleData.collection,\n      packageName: bundleData.packageName\n    });\n  });\n}; // set\n\n\nvar registerIcon = function registerIcon(name) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      pathData = _ref4.pathData,\n      ltr = _ref4.ltr,\n      accData = _ref4.accData,\n      collection = _ref4.collection,\n      packageName = _ref4.packageName;\n\n  // eslint-disable-line\n  if (!collection) {\n    collection = DEFAULT_COLLECTION;\n  }\n\n  var key = \"\".concat(collection, \"/\").concat(name);\n  registry.set(key, {\n    pathData: pathData,\n    ltr: ltr,\n    accData: accData,\n    packageName: packageName\n  });\n};\n\nvar _parseName = function _parseName(name) {\n  // silently support ui5-compatible URIs\n  if (name.startsWith(\"sap-icon://\")) {\n    name = name.replace(\"sap-icon://\", \"\");\n  }\n\n  var collection;\n\n  var _name$split$reverse = name.split(\"/\").reverse();\n\n  var _name$split$reverse2 = _slicedToArray(_name$split$reverse, 2);\n\n  name = _name$split$reverse2[0];\n  collection = _name$split$reverse2[1];\n  collection = collection || DEFAULT_COLLECTION; // hardcoded alias in case icon explorer is used, resolve `SAP-icons-TNT` to `tnt`\n  // aliases can be made a feature in the future if more collections need it or more aliases are needed.\n\n  if (collection === \"SAP-icons-TNT\") {\n    collection = \"tnt\";\n  }\n\n  var registryKey = \"\".concat(collection, \"/\").concat(name);\n  return {\n    name: name,\n    collection: collection,\n    registryKey: registryKey\n  };\n};\n\nvar getIconDataSync = function getIconDataSync(nameProp) {\n  var _parseName2 = _parseName(nameProp),\n      registryKey = _parseName2.registryKey;\n\n  return registry.get(registryKey);\n};\n\nvar getIconData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(nameProp) {\n    var _parseName3, collection, registryKey, iconData;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _parseName3 = _parseName(nameProp), collection = _parseName3.collection, registryKey = _parseName3.registryKey;\n            iconData = ICON_NOT_FOUND;\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _loadIconCollectionOnce(collection);\n\n          case 5:\n            iconData = _context4.sent;\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.error(_context4.t0.message);\n            /* eslint-disable-line */\n\n          case 11:\n            if (!(iconData === ICON_NOT_FOUND)) {\n              _context4.next = 13;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", iconData);\n\n          case 13:\n            if (!registry.has(registryKey)) {\n              // not filled by another await. many getters will await on the same loader, but fill only once\n              _fillRegistry(iconData);\n            }\n\n            return _context4.abrupt(\"return\", registry.get(registryKey));\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n\n  return function getIconData(_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // test page usage only\n\n\nvar _getRegisteredNames = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return getIconData(\"edit\");\n\n          case 2:\n            _context5.next = 4;\n            return getIconData(\"tnt/arrow\");\n\n          case 4:\n            return _context5.abrupt(\"return\", Array.from(registry.keys()));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function _getRegisteredNames() {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexport { registerIconBundle, registerIconLoader, getIconData, getIconDataSync, registerIcon, _getRegisteredNames };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js"],"names":["getSharedResource","loaders","Map","registry","iconCollectionPromises","ICON_NOT_FOUND","DEFAULT_COLLECTION","registerIconBundle","collectionName","bundleData","Error","registerIconLoader","loader","set","_loadIconCollectionOnce","has","loadIcons","get","_fillRegistry","Object","keys","data","forEach","iconName","iconData","registerIcon","pathData","path","ltr","accData","acc","collection","packageName","name","key","_parseName","startsWith","replace","split","reverse","registryKey","getIconDataSync","nameProp","getIconData","console","error","message","_getRegisteredNames","Array","from"],"mappings":"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","sourcesContent":["import getSharedResource from \"../getSharedResource.js\";\n\nconst loaders = new Map();\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\n\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nconst DEFAULT_COLLECTION = \"SAP-icons\";\n\n/**\n * @deprecated\n */\nconst registerIconBundle = async (collectionName, bundleData) => {\n\tthrow new Error(\"This method has been removed. Use `registerIconLoader` instead.\");\n};\n\nconst registerIconLoader = async (collectionName, loader) => {\n\tloaders.set(collectionName, loader);\n};\n\nconst _loadIconCollectionOnce = async collectionName => {\n\tif (!iconCollectionPromises.has(collectionName)) {\n\t\tif (!loaders.has(collectionName)) {\n\t\t\tthrow new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the \"AllIcons.js\" module for the respective package.`);\n\t\t}\n\t\tconst loadIcons = loaders.get(collectionName);\n\t\ticonCollectionPromises.set(collectionName, loadIcons(collectionName));\n\t}\n\n\treturn iconCollectionPromises.get(collectionName);\n};\n\nconst _fillRegistry = bundleData => {\n\tObject.keys(bundleData.data).forEach(iconName => {\n\t\tconst iconData = bundleData.data[iconName];\n\n\t\tregisterIcon(iconName, {\n\t\t\tpathData: iconData.path,\n\t\t\tltr: iconData.ltr,\n\t\t\taccData: iconData.acc,\n\t\t\tcollection: bundleData.collection,\n\t\t\tpackageName: bundleData.packageName,\n\t\t });\n\t});\n};\n\n// set\nconst registerIcon = (name, { pathData, ltr, accData, collection, packageName } = {}) => { // eslint-disable-line\n\tif (!collection) {\n\t\tcollection = DEFAULT_COLLECTION;\n\t}\n\n\tconst key = `${collection}/${name}`;\n\tregistry.set(key, {\n\t\tpathData,\n\t\tltr,\n\t\taccData,\n\t\tpackageName,\n\t});\n};\n\nconst _parseName = name => {\n\t// silently support ui5-compatible URIs\n\tif (name.startsWith(\"sap-icon://\")) {\n\t\tname = name.replace(\"sap-icon://\", \"\");\n\t}\n\n\tlet collection;\n\t[name, collection] = name.split(\"/\").reverse();\n\tcollection = collection || DEFAULT_COLLECTION;\n\t// hardcoded alias in case icon explorer is used, resolve `SAP-icons-TNT` to `tnt`\n\t// aliases can be made a feature in the future if more collections need it or more aliases are needed.\n\tif (collection === \"SAP-icons-TNT\") {\n\t\tcollection = \"tnt\";\n\t}\n\tconst registryKey = `${collection}/${name}`;\n\treturn { name, collection, registryKey };\n};\n\nconst getIconDataSync = nameProp => {\n\tconst { registryKey } = _parseName(nameProp);\n\treturn registry.get(registryKey);\n};\n\nconst getIconData = async nameProp => {\n\tconst { collection, registryKey } = _parseName(nameProp);\n\n\tlet iconData = ICON_NOT_FOUND;\n\ttry {\n\t\ticonData = await _loadIconCollectionOnce(collection);\n\t} catch (e) {\n\t\tconsole.error(e.message); /* eslint-disable-line */\n\t}\n\n\tif (iconData === ICON_NOT_FOUND) {\n\t\treturn iconData;\n\t}\n\n\tif (!registry.has(registryKey)) {\n\t\t// not filled by another await. many getters will await on the same loader, but fill only once\n\t\t_fillRegistry(iconData);\n\t}\n\treturn registry.get(registryKey);\n};\n\n// test page usage only\nconst _getRegisteredNames = async () => {\n\t// fetch one icon of each collection to trigger the bundle load\n\tawait getIconData(\"edit\");\n\tawait getIconData(\"tnt/arrow\");\n\treturn Array.from(registry.keys());\n};\n\nexport {\n\tregisterIconBundle,\n\tregisterIconLoader,\n\tgetIconData,\n\tgetIconDataSync,\n\tregisterIcon,\n\t_getRegisteredNames,\n};\n"]},"metadata":{},"sourceType":"module"}