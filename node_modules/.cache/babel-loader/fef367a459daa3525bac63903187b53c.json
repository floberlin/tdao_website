{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isEscape } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport Popover from \"./Popover.js\";\nimport TextAreaTemplate from \"./generated/templates/TextAreaTemplate.lit.js\";\nimport TextAreaPopoverTemplate from \"./generated/templates/TextAreaPopoverTemplate.lit.js\";\nimport { VALUE_STATE_INFORMATION, VALUE_STATE_ERROR, VALUE_STATE_WARNING, TEXTAREA_CHARACTERS_LEFT, TEXTAREA_CHARACTERS_EXCEEDED } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport styles from \"./generated/themes/TextArea.css.js\";\nimport valueStateMessageStyles from \"./generated/themes/ValueStateMessage.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-textarea\",\n  languageAware: true,\n  managedSlots: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.TextArea.prototype */\n  {\n    /**\n     * Defines the value of the component.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    value: {\n      type: String\n    },\n\n    /**\n     * Indicates whether the user can interact with the component or not.\n     * <br><br>\n     * <b>Note:</b> A disabled component is completely noninteractive.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the component is read-only.\n     * <br><br>\n     * <b>Note:</b> A read-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the component is required.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.0.0-rc.3\n     */\n    required: {\n      type: Boolean\n    },\n\n    /**\n     * Defines a short hint intended to aid the user with data entry when the component has no value.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    placeholder: {\n      type: String\n    },\n\n    /**\n     * Defines the value state of the component.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     * <br><br>\n     * <b>Note:</b> If <code>maxlength</code> property is set,\n     * the component turns into \"Warning\" state once the characters exceeds the limit.\n     * In this case, only the \"Error\" state is considered and can be applied.\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @since 1.0.0-rc.7\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Defines the number of visible text lines for the component.\n     * <br><br>\n     * <b>Notes:</b>\n     * <ul>\n     * <li>If the <code>growing</code> property is enabled, this property defines the minimum rows to be displayed\n     * in the textarea.</li>\n     * <li>The CSS <code>height</code> property wins over the <code>rows</code> property, if both are set.</li>\n     * </ul>\n     *\n     * @type {Integer}\n     * @defaultvalue 0\n     * @public\n     */\n    rows: {\n      type: Integer,\n      defaultValue: 0\n    },\n\n    /**\n     * Defines the maximum number of characters that the <code>value</code> can have.\n     *\n     * @type {Integer}\n     * @defaultValue null\n     * @public\n     */\n    maxlength: {\n      type: Integer,\n      defaultValue: null\n    },\n\n    /**\n     * Determines whether the characters exceeding the maximum allowed character count are visible\n     * in the component.\n     * <br><br>\n     * If set to <code>false</code>, the user is not allowed to enter more characters than what is set in the\n     * <code>maxlength</code> property.\n     * If set to <code>true</code> the characters exceeding the <code>maxlength</code> value are selected on\n     * paste and the counter below the component displays their number.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    showExceededText: {\n      type: Boolean\n    },\n\n    /**\n     * Enables the component to automatically grow and shrink dynamically with its content.\n     * <br><br>\n     * <b>Note:</b> If set to <code>true</code>, the CSS <code>height</code> property is ignored.\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    growing: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the maximum number of lines that the component can grow.\n     *\n     * @type {Integer}\n     * @defaultvalue 0\n     * @public\n     */\n    growingMaxLines: {\n      type: Integer,\n      defaultValue: 0\n    },\n\n    /**\n     * Determines the name with which the component will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the component so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n\n    /**\n     * Sets the accessible aria name of the component.\n     *\n     * @type {String}\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String\n    },\n\n    /**\n     * Receives id(or many ids) of the elements that label the textarea.\n     *\n     * @type {String}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleNameRef: {\n      type: String\n    },\n\n    /**\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n\n    /**\n     * @private\n     */\n    exceeding: {\n      type: Boolean\n    },\n\n    /**\n     * @private\n     */\n    _mirrorText: {\n      type: Object,\n      multiple: true,\n      defaultValue: \"\"\n    },\n\n    /**\n     * @private\n     */\n    _maxHeight: {\n      type: String,\n      noAttribute: true\n    },\n\n    /**\n     * @private\n     */\n    _width: {\n      type: Integer\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.TextArea.prototype */\n  {\n    /**\n     * Defines the value state message that will be displayed as pop up under the component.\n     *\n     * <br><br>\n     * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n     *\n     * <br><br>\n     * <b>Note:</b> The <code>valueStateMessage</code> would be displayed if the component has\n     * <code>valueState</code> of type <code>Information</code>, <code>Warning</code> or <code>Error</code>.\n     * @type {HTMLElement[]}\n     * @since 1.0.0-rc.7\n     * @slot\n     * @public\n     */\n    valueStateMessage: {\n      type: HTMLElement\n    },\n\n    /**\n     * The slot is used to render native <code>input</code> HTML element within Light DOM to enable form submit,\n     * when <code>name</code> property is set.\n     * @type {HTMLElement[]}\n     * @slot\n     * @private\n     */\n    formSupport: {\n      type: HTMLElement\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.TextArea.prototype */\n  {\n    /**\n     * Fired when the text has changed and the focus leaves the component.\n     *\n     * @event\n     * @public\n     */\n    change: {},\n\n    /**\n     * Fired when the value of the component changes at each keystroke or when\n     * something is pasted.\n     *\n     * @event\n     * @since 1.0.0-rc.5\n     * @public\n     */\n    input: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-textarea</code> component is used to enter multiple lines of text.\n * <br><br>\n * When empty, it can hold a placeholder similar to a <code>ui5-input</code>.\n * You can define the rows of the <code>ui5-textarea</code> and also determine specific behavior when handling long texts.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-textarea</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>textarea - Used to style the native textarea</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/TextArea\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TextArea\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-textarea\n * @public\n */\n\nclass TextArea extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return TextAreaTemplate;\n  }\n\n  static get staticAreaTemplate() {\n    return TextAreaPopoverTemplate;\n  }\n\n  static get staticAreaStyles() {\n    return valueStateMessageStyles;\n  }\n\n  constructor() {\n    super();\n    this._firstRendering = true;\n    this._openValueStateMsgPopover = false;\n    this._fnOnResize = this._onResize.bind(this);\n  }\n\n  onEnterDOM() {\n    ResizeHandler.register(this, this._fnOnResize);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._fnOnResize);\n  }\n\n  onBeforeRendering() {\n    this._exceededTextProps = this._calcExceededText();\n    this._mirrorText = this._tokenizeText(this.value);\n    this.exceeding = this._exceededTextProps.leftCharactersCount < 0;\n\n    if (this.growingMaxLines) {\n      // this should be complex calc between line height and paddings - TODO: make it stable\n      this._maxHeight = `${this.growingMaxLines * 1.4 * 14 + 9}px`;\n    }\n\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this);\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n  }\n\n  onAfterRendering() {\n    this.toggleValueStateMessage(this.openValueStateMsgPopover);\n    this._firstRendering = false;\n  }\n\n  getInputDomRef() {\n    return this.getDomRef().querySelector(\"textarea\");\n  }\n\n  _onkeydown(event) {\n    this._keyDown = true;\n\n    if (isEscape(event)) {\n      const nativeTextArea = this.getInputDomRef();\n      this.value = this.previousValue;\n      nativeTextArea.value = this.value;\n      this.fireEvent(\"input\");\n    }\n  }\n\n  _onkeyup() {\n    this._keyDown = false;\n  }\n\n  _onfocusin() {\n    this.focused = true;\n    this._openValueStateMsgPopover = true;\n    this.previousValue = this.getInputDomRef().value;\n  }\n\n  _onfocusout(event) {\n    const focusedOutToValueStateMessage = event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.querySelector(\".ui5-valuestatemessage-root\");\n    this.focused = false;\n\n    if (!focusedOutToValueStateMessage) {\n      this._openValueStateMsgPopover = false;\n    }\n  }\n\n  _onchange() {\n    this.fireEvent(\"change\", {});\n  }\n\n  _oninput(event) {\n    const nativeTextArea = this.getInputDomRef();\n    /* skip calling change event when an textarea with a placeholder is focused on IE\n    \t- value of the host and the internal textarea should be different in case of actual input\n    \t- input is called when a key is pressed => keyup should not be called yet\n    */\n\n    const skipFiring = nativeTextArea.value === this.value && isIE() && !this._keyDown && !!this.placeholder;\n\n    if (event.target === nativeTextArea) {\n      // stop the native event, as the semantic \"input\" would be fired.\n      event.stopImmediatePropagation();\n    }\n\n    if (skipFiring) {\n      return;\n    }\n\n    this.value = nativeTextArea.value;\n    this.fireEvent(\"input\", {}); // Angular two way data binding\n\n    this.fireEvent(\"value-changed\");\n  }\n\n  _onResize() {\n    if (this.displayValueStateMessagePopover) {\n      this._width = this.offsetWidth;\n    }\n  }\n\n  toggleValueStateMessage(toggle) {\n    if (toggle) {\n      this.openPopover();\n    } else {\n      this.closePopover();\n    }\n  }\n\n  async openPopover() {\n    this.popover = await this._getPopover();\n    this.popover && this.popover.showAt(this.shadowRoot.querySelector(\".ui5-textarea-inner\"));\n  }\n\n  async closePopover() {\n    this.popover = await this._getPopover();\n    this.popover && this.popover.close();\n  }\n\n  async _getPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(\"[ui5-popover]\");\n  }\n\n  _tokenizeText(value) {\n    const tokenizedText = value.replace(/&/gm, \"&amp;\").replace(/\"/gm, \"&quot;\").replace(/'/gm, \"&apos;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").split(\"\\n\");\n\n    if (tokenizedText.length < this.rows) {\n      return this._mapTokenizedTextToObject([...tokenizedText, ...Array(this.rows - tokenizedText.length).fill(\"\")]);\n    }\n\n    return this._mapTokenizedTextToObject(tokenizedText);\n  }\n\n  _mapTokenizedTextToObject(tokenizedText) {\n    return tokenizedText.map((token, index) => {\n      return {\n        text: token,\n        last: index === tokenizedText.length - 1\n      };\n    });\n  }\n\n  _calcExceededText() {\n    let calcedMaxLength, exceededText, leftCharactersCount;\n\n    if (this.showExceededText) {\n      const maxLength = this.maxlength || 0;\n\n      if (maxLength) {\n        leftCharactersCount = maxLength - this.value.length;\n\n        if (leftCharactersCount >= 0) {\n          exceededText = TextArea.i18nBundle.getText(TEXTAREA_CHARACTERS_LEFT, leftCharactersCount);\n        } else {\n          exceededText = TextArea.i18nBundle.getText(TEXTAREA_CHARACTERS_EXCEEDED, Math.abs(leftCharactersCount));\n        }\n      }\n    } else {\n      calcedMaxLength = this.maxlength;\n    }\n\n    return {\n      exceededText,\n      leftCharactersCount,\n      calcedMaxLength\n    };\n  }\n\n  get classes() {\n    return {\n      valueStateMsg: {\n        \"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n        \"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning || this.exceeding,\n        \"ui5-valuestatemessage--information\": this.valueState === ValueState.Information\n      }\n    };\n  }\n\n  get styles() {\n    const lineHeight = 1.4 * 16;\n    return {\n      mirror: {\n        \"max-height\": this._maxHeight\n      },\n      main: {\n        width: \"100%\",\n        height: this.rows && !this.growing ? `${this.rows * lineHeight}px` : \"100%\"\n      },\n      focusDiv: {\n        \"height\": this.showExceededText ? \"calc(100% - 26px)\" : \"100%\",\n        \"max-height\": this._maxHeight\n      },\n      valueStateMsgPopover: {\n        \"max-width\": `${this._width}px`\n      }\n    };\n  }\n\n  get tabIndex() {\n    return this.disabled ? undefined : \"0\";\n  }\n\n  get ariaLabelText() {\n    const effectiveAriaLabelText = getEffectiveAriaLabelText(this);\n\n    if (this.showExceededText) {\n      if (effectiveAriaLabelText) {\n        return `${effectiveAriaLabelText} ${this._exceededTextProps.exceededText}`;\n      }\n\n      return this._exceededTextProps.exceededText;\n    }\n\n    return effectiveAriaLabelText;\n  }\n\n  get ariaDescribedBy() {\n    return this.hasValueState ? `${this._id}-valueStateDesc` : undefined;\n  }\n\n  get ariaValueStateHiddenText() {\n    if (!this.hasValueState) {\n      return;\n    }\n\n    if (this.hasCustomValueState) {\n      return this.valueStateMessageText.map(el => el.textContent).join(\" \");\n    }\n\n    return this.valueStateText;\n  }\n\n  get ariaInvalid() {\n    return this.valueState === \"Error\" ? \"true\" : undefined;\n  }\n\n  get openValueStateMsgPopover() {\n    return !this._firstRendering && this._openValueStateMsgPopover && this.displayValueStateMessagePopover;\n  }\n\n  get displayValueStateMessagePopover() {\n    return this.hasCustomValueState || this.hasValueState || this.exceeding;\n  }\n\n  get hasCustomValueState() {\n    return !!this.valueStateMessage.length && this.hasValueState;\n  }\n\n  get hasValueState() {\n    return this.valueState === ValueState.Error || this.valueState === ValueState.Warning || this.valueState === ValueState.Information;\n  }\n\n  get valueStateMessageText() {\n    return this.valueStateMessage.map(x => x.cloneNode(true));\n  }\n\n  get valueStateText() {\n    if (this.valueState !== ValueState.Error && this.exceeding) {\n      return this.valueStateTextMappings()[ValueState.Warning];\n    }\n\n    return this.valueStateTextMappings()[this.valueState];\n  }\n  /**\n   * This method is relevant for sap_horizon theme only\n   */\n\n\n  get _valueStateMessageIcon() {\n    const iconPerValueState = {\n      Error: \"error\",\n      Warning: \"alert\",\n      Success: \"sys-enter-2\",\n      Information: \"information\"\n    };\n    return this.valueState !== ValueState.None ? iconPerValueState[this.valueState] : \"\";\n  }\n\n  valueStateTextMappings() {\n    return {\n      \"Information\": TextArea.i18nBundle.getText(VALUE_STATE_INFORMATION),\n      \"Error\": TextArea.i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": TextArea.i18nBundle.getText(VALUE_STATE_WARNING)\n    };\n  }\n\n  static get dependencies() {\n    return [Popover];\n  }\n\n  static async onDefine() {\n    TextArea.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n}\n\nTextArea.define();\nexport default TextArea;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/TextArea.js"],"names":["UI5Element","litRender","ResizeHandler","Integer","getEffectiveAriaLabelText","getI18nBundle","getFeature","isIE","isEscape","ValueState","Popover","TextAreaTemplate","TextAreaPopoverTemplate","VALUE_STATE_INFORMATION","VALUE_STATE_ERROR","VALUE_STATE_WARNING","TEXTAREA_CHARACTERS_LEFT","TEXTAREA_CHARACTERS_EXCEEDED","styles","valueStateMessageStyles","metadata","tag","languageAware","managedSlots","properties","value","type","String","disabled","Boolean","readonly","required","placeholder","valueState","defaultValue","None","rows","maxlength","showExceededText","growing","growingMaxLines","name","accessibleName","accessibleNameRef","focused","exceeding","_mirrorText","Object","multiple","_maxHeight","noAttribute","_width","slots","valueStateMessage","HTMLElement","formSupport","events","change","input","TextArea","render","template","staticAreaTemplate","staticAreaStyles","constructor","_firstRendering","_openValueStateMsgPopover","_fnOnResize","_onResize","bind","onEnterDOM","register","onExitDOM","deregister","onBeforeRendering","_exceededTextProps","_calcExceededText","_tokenizeText","leftCharactersCount","FormSupport","syncNativeHiddenInput","console","warn","onAfterRendering","toggleValueStateMessage","openValueStateMsgPopover","getInputDomRef","getDomRef","querySelector","_onkeydown","event","_keyDown","nativeTextArea","previousValue","fireEvent","_onkeyup","_onfocusin","_onfocusout","focusedOutToValueStateMessage","relatedTarget","shadowRoot","_onchange","_oninput","skipFiring","target","stopImmediatePropagation","displayValueStateMessagePopover","offsetWidth","toggle","openPopover","closePopover","popover","_getPopover","showAt","close","staticAreaItem","getStaticAreaItemDomRef","tokenizedText","replace","split","length","_mapTokenizedTextToObject","Array","fill","map","token","index","text","last","calcedMaxLength","exceededText","maxLength","i18nBundle","getText","Math","abs","classes","valueStateMsg","Error","Warning","Information","lineHeight","mirror","main","width","height","focusDiv","valueStateMsgPopover","tabIndex","undefined","ariaLabelText","effectiveAriaLabelText","ariaDescribedBy","hasValueState","_id","ariaValueStateHiddenText","hasCustomValueState","valueStateMessageText","el","textContent","join","valueStateText","ariaInvalid","x","cloneNode","valueStateTextMappings","_valueStateMessageIcon","iconPerValueState","Success","dependencies","onDefine","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,SAASC,yBAAT,QAA0C,sDAA1C;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,SAASC,QAAT,QAAyB,sCAAzB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,OAAOC,uBAAP,MAAoC,sDAApC;AAEA,SACCC,uBADD,EAECC,iBAFD,EAGCC,mBAHD,EAICC,wBAJD,EAKCC,4BALD,QAMO,mCANP,C,CAQA;;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,uBAAP,MAAoC,6CAApC;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,cADW;AAEhBC,EAAAA,aAAa,EAAE,IAFC;AAGhBC,EAAAA,YAAY,EAAE,IAHE;AAIhBC,EAAAA,UAAU;AAAE;AAA2D;AACtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,KAAK,EAAE;AACNC,MAAAA,IAAI,EAAEC;AADA,KAR+D;;AAYtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTF,MAAAA,IAAI,EAAEG;AADG,KArB4D;;AAyBtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEG;AADG,KAnC4D;;AAuCtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,QAAQ,EAAE;AACTL,MAAAA,IAAI,EAAEG;AADG,KA/C4D;;AAmDtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEG,IAAAA,WAAW,EAAE;AACZN,MAAAA,IAAI,EAAEC;AADM,KA1DyD;;AA8DtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEM,IAAAA,UAAU,EAAE;AACXP,MAAAA,IAAI,EAAEjB,UADK;AAEXyB,MAAAA,YAAY,EAAEzB,UAAU,CAAC0B;AAFd,KAlF0D;;AAuFtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLV,MAAAA,IAAI,EAAEvB,OADD;AAEL+B,MAAAA,YAAY,EAAE;AAFT,KArGgE;;AA0GtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEG,IAAAA,SAAS,EAAE;AACVX,MAAAA,IAAI,EAAEvB,OADI;AAEV+B,MAAAA,YAAY,EAAE;AAFJ,KAjH2D;;AAsHtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,IAAAA,gBAAgB,EAAE;AACjBZ,MAAAA,IAAI,EAAEG;AADW,KAnIoD;;AAuItE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEU,IAAAA,OAAO,EAAE;AACRb,MAAAA,IAAI,EAAEG;AADE,KA/I6D;;AAmJtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEW,IAAAA,eAAe,EAAE;AAChBd,MAAAA,IAAI,EAAEvB,OADU;AAEhB+B,MAAAA,YAAY,EAAE;AAFE,KA1JqD;;AA+JtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEO,IAAAA,IAAI,EAAE;AACLf,MAAAA,IAAI,EAAEC;AADD,KA/KgE;;AAmLtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEe,IAAAA,cAAc,EAAE;AACfhB,MAAAA,IAAI,EAAEC;AADS,KA1LsD;;AA8LtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEgB,IAAAA,iBAAiB,EAAE;AAClBjB,MAAAA,IAAI,EAAEC;AADY,KAtMmD;;AA0MtE;AACF;AACA;AACEiB,IAAAA,OAAO,EAAE;AACRl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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { isEscape } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport Popover from \"./Popover.js\";\n\nimport TextAreaTemplate from \"./generated/templates/TextAreaTemplate.lit.js\";\nimport TextAreaPopoverTemplate from \"./generated/templates/TextAreaPopoverTemplate.lit.js\";\n\nimport {\n\tVALUE_STATE_INFORMATION,\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tTEXTAREA_CHARACTERS_LEFT,\n\tTEXTAREA_CHARACTERS_EXCEEDED,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/TextArea.css.js\";\nimport valueStateMessageStyles from \"./generated/themes/ValueStateMessage.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-textarea\",\n\tlanguageAware: true,\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.TextArea.prototype */ {\n\t\t/**\n\t\t * Defines the value of the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Indicates whether the user can interact with the component or not.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A disabled component is completely noninteractive.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is read-only.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A read-only component is not editable,\n\t\t * but still provides visual feedback upon user interaction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is required.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.0.0-rc.3\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines a short hint intended to aid the user with data entry when the component has no value.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tplaceholder: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the component.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t * <br><br>\n\t\t * <b>Note:</b> If <code>maxlength</code> property is set,\n\t\t * the component turns into \"Warning\" state once the characters exceeds the limit.\n\t\t * In this case, only the \"Error\" state is considered and can be applied.\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @since 1.0.0-rc.7\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the number of visible text lines for the component.\n\t\t * <br><br>\n\t\t * <b>Notes:</b>\n\t\t * <ul>\n\t\t * <li>If the <code>growing</code> property is enabled, this property defines the minimum rows to be displayed\n\t\t * in the textarea.</li>\n\t\t * <li>The CSS <code>height</code> property wins over the <code>rows</code> property, if both are set.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {Integer}\n\t\t * @defaultvalue 0\n\t\t * @public\n\t\t */\n\t\trows: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 0,\n\t\t},\n\n\t\t/**\n\t\t * Defines the maximum number of characters that the <code>value</code> can have.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @defaultValue null\n\t\t * @public\n\t\t */\n\t\tmaxlength: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: null,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the characters exceeding the maximum allowed character count are visible\n\t\t * in the component.\n\t\t * <br><br>\n\t\t * If set to <code>false</code>, the user is not allowed to enter more characters than what is set in the\n\t\t * <code>maxlength</code> property.\n\t\t * If set to <code>true</code> the characters exceeding the <code>maxlength</code> value are selected on\n\t\t * paste and the counter below the component displays their number.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tshowExceededText: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Enables the component to automatically grow and shrink dynamically with its content.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If set to <code>true</code>, the CSS <code>height</code> property is ignored.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tgrowing: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the maximum number of lines that the component can grow.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @defaultvalue 0\n\t\t * @public\n\t\t */\n\t\tgrowingMaxLines: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 0,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the component will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the component so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Sets the accessible aria name of the component.\n\t\t *\n\t\t * @type {String}\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Receives id(or many ids) of the elements that label the textarea.\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleNameRef: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tfocused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\texceeding: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_mirrorText: {\n\t\t\ttype: Object,\n\t\t\tmultiple: true,\n\t\t\tdefaultValue: \"\",\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_maxHeight: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_width: {\n\t\t\ttype: Integer,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.TextArea.prototype */ {\n\n\t\t/**\n\t\t * Defines the value state message that will be displayed as pop up under the component.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> The <code>valueStateMessage</code> would be displayed if the component has\n\t\t * <code>valueState</code> of type <code>Information</code>, <code>Warning</code> or <code>Error</code>.\n\t\t * @type {HTMLElement[]}\n\t\t * @since 1.0.0-rc.7\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tvalueStateMessage: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * The slot is used to render native <code>input</code> HTML element within Light DOM to enable form submit,\n\t\t * when <code>name</code> property is set.\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @private\n\t\t */\n\t\tformSupport: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.TextArea.prototype */ {\n\t\t/**\n\t\t * Fired when the text has changed and the focus leaves the component.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tchange: {},\n\n\t\t/**\n\t\t * Fired when the value of the component changes at each keystroke or when\n\t\t * something is pasted.\n\t\t *\n\t\t * @event\n\t\t * @since 1.0.0-rc.5\n\t\t * @public\n\t\t */\n\t\tinput: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-textarea</code> component is used to enter multiple lines of text.\n * <br><br>\n * When empty, it can hold a placeholder similar to a <code>ui5-input</code>.\n * You can define the rows of the <code>ui5-textarea</code> and also determine specific behavior when handling long texts.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-textarea</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>textarea - Used to style the native textarea</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/TextArea\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TextArea\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-textarea\n * @public\n */\nclass TextArea extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn styles;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn TextAreaTemplate;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn TextAreaPopoverTemplate;\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn valueStateMessageStyles;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._firstRendering = true;\n\t\tthis._openValueStateMsgPopover = false;\n\t\tthis._fnOnResize = this._onResize.bind(this);\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._fnOnResize);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._fnOnResize);\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._exceededTextProps = this._calcExceededText();\n\t\tthis._mirrorText = this._tokenizeText(this.value);\n\n\t\tthis.exceeding = this._exceededTextProps.leftCharactersCount < 0;\n\n\t\tif (this.growingMaxLines) {\n\t\t\t// this should be complex calc between line height and paddings - TODO: make it stable\n\t\t\tthis._maxHeight = `${this.growingMaxLines * 1.4 * 14 + 9}px`;\n\t\t}\n\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this);\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\t}\n\n\tonAfterRendering() {\n\t\tthis.toggleValueStateMessage(this.openValueStateMsgPopover);\n\t\tthis._firstRendering = false;\n\t}\n\n\tgetInputDomRef() {\n\t\treturn this.getDomRef().querySelector(\"textarea\");\n\t}\n\n\t_onkeydown(event) {\n\t\tthis._keyDown = true;\n\n\t\tif (isEscape(event)) {\n\t\t\tconst nativeTextArea = this.getInputDomRef();\n\n\t\t\tthis.value = this.previousValue;\n\t\t\tnativeTextArea.value = this.value;\n\t\t\tthis.fireEvent(\"input\");\n\t\t}\n\t}\n\n\t_onkeyup() {\n\t\tthis._keyDown = false;\n\t}\n\n\t_onfocusin() {\n\t\tthis.focused = true;\n\t\tthis._openValueStateMsgPopover = true;\n\t\tthis.previousValue = this.getInputDomRef().value;\n\t}\n\n\t_onfocusout(event) {\n\t\tconst focusedOutToValueStateMessage = event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.querySelector(\".ui5-valuestatemessage-root\");\n\t\tthis.focused = false;\n\n\t\tif (!focusedOutToValueStateMessage) {\n\t\t\tthis._openValueStateMsgPopover = false;\n\t\t}\n\t}\n\n\t_onchange() {\n\t\tthis.fireEvent(\"change\", {});\n\t}\n\n\t_oninput(event) {\n\t\tconst nativeTextArea = this.getInputDomRef();\n\n\t\t/* skip calling change event when an textarea with a placeholder is focused on IE\n\t\t\t- value of the host and the internal textarea should be different in case of actual input\n\t\t\t- input is called when a key is pressed => keyup should not be called yet\n\t\t*/\n\t\tconst skipFiring = (nativeTextArea.value === this.value) && isIE() && !this._keyDown && !!this.placeholder;\n\t\tif (event.target === nativeTextArea) {\n\t\t\t// stop the native event, as the semantic \"input\" would be fired.\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t\tif (skipFiring) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.value = nativeTextArea.value;\n\t\tthis.fireEvent(\"input\", {});\n\n\t\t// Angular two way data binding\n\t\tthis.fireEvent(\"value-changed\");\n\t}\n\n\t_onResize() {\n\t\tif (this.displayValueStateMessagePopover) {\n\t\t\tthis._width = this.offsetWidth;\n\t\t}\n\t}\n\n\ttoggleValueStateMessage(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.openPopover();\n\t\t} else {\n\t\t\tthis.closePopover();\n\t\t}\n\t}\n\n\tasync openPopover() {\n\t\tthis.popover = await this._getPopover();\n\t\tthis.popover && this.popover.showAt(this.shadowRoot.querySelector(\".ui5-textarea-inner\"));\n\t}\n\n\tasync closePopover() {\n\t\tthis.popover = await this._getPopover();\n\t\tthis.popover && this.popover.close();\n\t}\n\n\tasync _getPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"[ui5-popover]\");\n\t}\n\n\t_tokenizeText(value) {\n\t\tconst tokenizedText = value.replace(/&/gm, \"&amp;\").replace(/\"/gm, \"&quot;\").replace(/'/gm, \"&apos;\").replace(/</gm, \"&lt;\")\n\t\t\t.replace(/>/gm, \"&gt;\")\n\t\t\t.split(\"\\n\");\n\n\t\tif (tokenizedText.length < this.rows) {\n\t\t\treturn this._mapTokenizedTextToObject([...tokenizedText, ...Array(this.rows - tokenizedText.length).fill(\"\")]);\n\t\t}\n\n\t\treturn this._mapTokenizedTextToObject(tokenizedText);\n\t}\n\n\t_mapTokenizedTextToObject(tokenizedText) {\n\t\treturn tokenizedText.map((token, index) => {\n\t\t\treturn {\n\t\t\t\ttext: token,\n\t\t\t\tlast: index === (tokenizedText.length - 1),\n\t\t\t};\n\t\t});\n\t}\n\n\t_calcExceededText() {\n\t\tlet calcedMaxLength,\n\t\t\texceededText,\n\t\t\tleftCharactersCount;\n\n\t\tif (this.showExceededText) {\n\t\t\tconst maxLength = this.maxlength || 0;\n\n\t\t\tif (maxLength) {\n\t\t\t\tleftCharactersCount = maxLength - this.value.length;\n\n\t\t\t\tif (leftCharactersCount >= 0) {\n\t\t\t\t\texceededText = TextArea.i18nBundle.getText(TEXTAREA_CHARACTERS_LEFT, leftCharactersCount);\n\t\t\t\t} else {\n\t\t\t\t\texceededText = TextArea.i18nBundle.getText(TEXTAREA_CHARACTERS_EXCEEDED, Math.abs(leftCharactersCount));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcalcedMaxLength = this.maxlength;\n\t\t}\n\n\t\treturn {\n\t\t\texceededText, leftCharactersCount, calcedMaxLength,\n\t\t};\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tvalueStateMsg: {\n\t\t\t\t\"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n\t\t\t\t\"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning || this.exceeding,\n\t\t\t\t\"ui5-valuestatemessage--information\": this.valueState === ValueState.Information,\n\t\t\t},\n\t\t};\n\t}\n\n\tget styles() {\n\t\tconst lineHeight = 1.4 * 16;\n\n\t\treturn {\n\t\t\tmirror: {\n\t\t\t\t\"max-height\": this._maxHeight,\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: (this.rows && !this.growing) ? `${this.rows * lineHeight}px` : \"100%\",\n\t\t\t},\n\t\t\tfocusDiv: {\n\t\t\t\t\"height\": (this.showExceededText ? \"calc(100% - 26px)\" : \"100%\"),\n\t\t\t\t\"max-height\": (this._maxHeight),\n\t\t\t},\n\t\t\tvalueStateMsgPopover: {\n\t\t\t\t\"max-width\": `${this._width}px`,\n\t\t\t},\n\t\t};\n\t}\n\n\tget tabIndex() {\n\t\treturn this.disabled ? undefined : \"0\";\n\t}\n\n\tget ariaLabelText() {\n\t\tconst effectiveAriaLabelText = getEffectiveAriaLabelText(this);\n\n\t\tif (this.showExceededText) {\n\t\t\tif (effectiveAriaLabelText) {\n\t\t\t\treturn `${effectiveAriaLabelText} ${this._exceededTextProps.exceededText}`;\n\t\t\t}\n\n\t\t\treturn this._exceededTextProps.exceededText;\n\t\t}\n\n\t\treturn effectiveAriaLabelText;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn this.hasValueState ? `${this._id}-valueStateDesc` : undefined;\n\t}\n\n\tget ariaValueStateHiddenText() {\n\t\tif (!this.hasValueState) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.hasCustomValueState) {\n\t\t\treturn this.valueStateMessageText.map(el => el.textContent).join(\" \");\n\t\t}\n\n\t\treturn this.valueStateText;\n\t}\n\n\tget ariaInvalid() {\n\t\treturn this.valueState === \"Error\" ? \"true\" : undefined;\n\t}\n\n\tget openValueStateMsgPopover() {\n\t\treturn !this._firstRendering && this._openValueStateMsgPopover && this.displayValueStateMessagePopover;\n\t}\n\n\tget displayValueStateMessagePopover() {\n\t\treturn this.hasCustomValueState || this.hasValueState || this.exceeding;\n\t}\n\n\tget hasCustomValueState() {\n\t\treturn !!this.valueStateMessage.length && this.hasValueState;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState === ValueState.Error || this.valueState === ValueState.Warning || this.valueState === ValueState.Information;\n\t}\n\n\tget valueStateMessageText() {\n\t\treturn this.valueStateMessage.map(x => x.cloneNode(true));\n\t}\n\n\tget valueStateText() {\n\t\tif (this.valueState !== ValueState.Error && this.exceeding) {\n\t\t\treturn this.valueStateTextMappings()[ValueState.Warning];\n\t\t}\n\n\t\treturn this.valueStateTextMappings()[this.valueState];\n\t}\n\n\t/**\n\t * This method is relevant for sap_horizon theme only\n\t */\n\tget _valueStateMessageIcon() {\n\t\tconst iconPerValueState = {\n\t\t\tError: \"error\",\n\t\t\tWarning: \"alert\",\n\t\t\tSuccess: \"sys-enter-2\",\n\t\t\tInformation: \"information\",\n\t\t};\n\n\t\treturn this.valueState !== ValueState.None ? iconPerValueState[this.valueState] : \"\";\n\t}\n\n\tvalueStateTextMappings() {\n\t\treturn {\n\t\t\t\"Information\": TextArea.i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t\t\"Error\": TextArea.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": TextArea.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t};\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [Popover];\n\t}\n\n\tstatic async onDefine() {\n\t\tTextArea.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nTextArea.define();\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}