{"ast":null,"code":"import { DEFAULT_LOCALE } from \"../generated/AssetParameters.js\";\nvar localeRegEX = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;\nvar SAPSupportabilityLocales = /(?:^|-)(saptrc|sappsd)(?:-|$)/i;\n/* Map for old language names for a few ISO639 codes. */\n\nvar M_ISO639_NEW_TO_OLD = {\n  \"he\": \"iw\",\n  \"yi\": \"ji\",\n  \"id\": \"in\",\n  \"sr\": \"sh\"\n};\n/**\n * Normalizes the given locale in BCP-47 syntax.\n * @param {string} locale locale to normalize\n * @returns {string} Normalized locale, \"undefined\" if the locale can't be normalized or the default locale, if no locale provided.\n */\n\nvar normalizeLocale = function normalizeLocale(locale) {\n  var m;\n\n  if (!locale) {\n    return DEFAULT_LOCALE;\n  }\n\n  if (typeof locale === \"string\" && (m = localeRegEX.exec(locale.replace(/_/g, \"-\")))) {\n    /* eslint-disable-line */\n    var language = m[1].toLowerCase();\n    var region = m[3] ? m[3].toUpperCase() : undefined;\n    var script = m[2] ? m[2].toLowerCase() : undefined;\n    var variants = m[4] ? m[4].slice(1) : undefined;\n    var isPrivate = m[6];\n    language = M_ISO639_NEW_TO_OLD[language] || language; // recognize and convert special SAP supportability locales (overwrites m[]!)\n\n    if (isPrivate && (m = SAPSupportabilityLocales.exec(isPrivate)) || variants && (m = SAPSupportabilityLocales.exec(variants))) {\n      /* eslint-disable-line */\n      return \"en_US_\".concat(m[1].toLowerCase()); // for now enforce en_US (agreed with SAP SLS)\n    } // Chinese: when no region but a script is specified, use default region for each script\n\n\n    if (language === \"zh\" && !region) {\n      if (script === \"hans\") {\n        region = \"CN\";\n      } else if (script === \"hant\") {\n        region = \"TW\";\n      }\n    }\n\n    return language + (region ? \"_\" + region + (variants ? \"_\" + variants.replace(\"-\", \"_\") : \"\") : \"\");\n    /* eslint-disable-line */\n  }\n};\n\nexport default normalizeLocale;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/locale/normalizeLocale.js"],"names":["DEFAULT_LOCALE","localeRegEX","SAPSupportabilityLocales","M_ISO639_NEW_TO_OLD","normalizeLocale","locale","m","exec","replace","language","toLowerCase","region","toUpperCase","undefined","script","variants","slice","isPrivate"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iCAA/B;AAEA,IAAMC,WAAW,GAAG,4MAApB;AACA,IAAMC,wBAAwB,GAAG,gCAAjC;AAEA;;AACA,IAAMC,mBAAmB,GAAG;AAC3B,QAAM,IADqB;AAE3B,QAAM,IAFqB;AAG3B,QAAM,IAHqB;AAI3B,QAAM;AAJqB,CAA5B;AAOA;AACA;AACA;AACA;AACA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,MAAM,EAAI;AACjC,MAAIC,CAAJ;;AAEA,MAAI,CAACD,MAAL,EAAa;AACZ,WAAOL,cAAP;AACA;;AAED,MAAI,OAAOK,MAAP,KAAkB,QAAlB,KAA+BC,CAAC,GAAGL,WAAW,CAACM,IAAZ,CAAiBF,MAAM,CAACG,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAjB,CAAnC,CAAJ,EAAqF;AAAC;AACrF,QAAIC,QAAQ,GAAGH,CAAC,CAAC,CAAD,CAAD,CAAKI,WAAL,EAAf;AACA,QAAIC,MAAM,GAAGL,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKM,WAAL,EAAP,GAA4BC,SAAzC;AACA,QAAMC,MAAM,GAAGR,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKI,WAAL,EAAP,GAA4BG,SAA3C;AACA,QAAME,QAAQ,GAAGT,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKU,KAAL,CAAW,CAAX,CAAP,GAAuBH,SAAxC;AACA,QAAMI,SAAS,GAAGX,CAAC,CAAC,CAAD,CAAnB;AAEAG,IAAAA,QAAQ,GAAGN,mBAAmB,CAACM,QAAD,CAAnB,IAAiCA,QAA5C,CAPoF,CASpF;;AACA,QAAKQ,SAAS,KAAKX,CAAC,GAAGJ,wBAAwB,CAACK,IAAzB,CAA8BU,SAA9B,CAAT,CAAV,IACFF,QAAQ,KAAKT,CAAC,GAAGJ,wBAAwB,CAACK,IAAzB,CAA8BQ,QAA9B,CAAT,CADV,EAC8D;AAAC;AAC9D,6BAAgBT,CAAC,CAAC,CAAD,CAAD,CAAKI,WAAL,EAAhB,EAD6D,CACvB;AACtC,KAbmF,CAepF;;;AACA,QAAID,QAAQ,KAAK,IAAb,IAAqB,CAACE,MAA1B,EAAkC;AACjC,UAAIG,MAAM,KAAK,MAAf,EAAuB;AACtBH,QAAAA,MAAM,GAAG,IAAT;AACA,OAFD,MAEO,IAAIG,MAAM,KAAK,MAAf,EAAuB;AAC7BH,QAAAA,MAAM,GAAG,IAAT;AACA;AACD;;AAED,WAAOF,QAAQ,IAAIE,MAAM,GAAG,MAAMA,MAAN,IAAgBI,QAAQ,GAAG,MAAMA,QAAQ,CAACP,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAAT,GAAsC,EAA9D,CAAH,GAAuE,EAAjF,CAAf;AAAqG;AACrG;AACD,CAjCD;;AAmCA,eAAeJ,eAAf","sourcesContent":["import { DEFAULT_LOCALE } from \"../generated/AssetParameters.js\";\n\nconst localeRegEX = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;\nconst SAPSupportabilityLocales = /(?:^|-)(saptrc|sappsd)(?:-|$)/i;\n\n/* Map for old language names for a few ISO639 codes. */\nconst M_ISO639_NEW_TO_OLD = {\n\t\"he\": \"iw\",\n\t\"yi\": \"ji\",\n\t\"id\": \"in\",\n\t\"sr\": \"sh\",\n};\n\n/**\n * Normalizes the given locale in BCP-47 syntax.\n * @param {string} locale locale to normalize\n * @returns {string} Normalized locale, \"undefined\" if the locale can't be normalized or the default locale, if no locale provided.\n */\nconst normalizeLocale = locale => {\n\tlet m;\n\n\tif (!locale) {\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\tif (typeof locale === \"string\" && (m = localeRegEX.exec(locale.replace(/_/g, \"-\")))) {/* eslint-disable-line */\n\t\tlet language = m[1].toLowerCase();\n\t\tlet region = m[3] ? m[3].toUpperCase() : undefined;\n\t\tconst script = m[2] ? m[2].toLowerCase() : undefined;\n\t\tconst variants = m[4] ? m[4].slice(1) : undefined;\n\t\tconst isPrivate = m[6];\n\n\t\tlanguage = M_ISO639_NEW_TO_OLD[language] || language;\n\n\t\t// recognize and convert special SAP supportability locales (overwrites m[]!)\n\t\tif ((isPrivate && (m = SAPSupportabilityLocales.exec(isPrivate))) /* eslint-disable-line */ ||\n\t\t\t(variants && (m = SAPSupportabilityLocales.exec(variants)))) {/* eslint-disable-line */\n\t\t\treturn `en_US_${m[1].toLowerCase()}`; // for now enforce en_US (agreed with SAP SLS)\n\t\t}\n\n\t\t// Chinese: when no region but a script is specified, use default region for each script\n\t\tif (language === \"zh\" && !region) {\n\t\t\tif (script === \"hans\") {\n\t\t\t\tregion = \"CN\";\n\t\t\t} else if (script === \"hant\") {\n\t\t\t\tregion = \"TW\";\n\t\t\t}\n\t\t}\n\n\t\treturn language + (region ? \"_\" + region + (variants ? \"_\" + variants.replace(\"-\", \"_\") : \"\") : \"\"); /* eslint-disable-line */\n\t}\n};\n\nexport default normalizeLocale;\n"]},"metadata":{},"sourceType":"module"}