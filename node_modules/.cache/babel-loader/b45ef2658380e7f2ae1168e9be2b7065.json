{"ast":null,"code":"import _toConsumableArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _get from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport \"@ui5/webcomponents-icons/dist/date-time.js\";\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\nimport SegmentedButton from \"./SegmentedButton.js\";\nimport Calendar from \"./Calendar.js\";\nimport DatePicker from \"./DatePicker.js\";\nimport TimeSelection from \"./TimeSelection.js\"; // i18n texts\n\nimport { TIMEPICKER_SUBMIT_BUTTON, TIMEPICKER_CANCEL_BUTTON, DATETIME_DESCRIPTION, DATETIME_PICKER_DATE_BUTTON, DATETIME_PICKER_TIME_BUTTON } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport DateTimePickerPopoverTemplate from \"./generated/templates/DateTimePickerPopoverTemplate.lit.js\"; // Styles\n\nimport DateTimePickerCss from \"./generated/themes/DateTimePicker.css.js\";\nimport DateTimePickerPopoverCss from \"./generated/themes/DateTimePickerPopover.css.js\";\nvar PHONE_MODE_BREAKPOINT = 640; // px\n\n/**\n * @public\n */\n\nvar metadata = {\n  tag: \"ui5-datetime-picker\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.DateTimePicker.prototype */\n  {\n    /**\n     * Defines the visibility of the time view in <code>phoneMode</code>.\n     * For more information, see the <code>phoneMode</code> property.\n     *\n     * <br><br>\n     * <b>Note:</b> The date view would be displayed by default.\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _showTimeView: {\n      type: Boolean,\n      noAttribute: true\n    },\n\n    /**\n     * Defines if the <code>DateTimePicker</code> should be displayed in phone mode.\n     * The phone mode turns on when the component is used on small screens or phone devices.\n     * In phone mode the user can see either the calendar view, or the time view\n     * and can switch between the views via toggle buttons.\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _phoneMode: {\n      type: Boolean\n    },\n\n    /**\n     * Selected, but not yet confirmed date/time\n     * @private\n     */\n    _previewValues: {\n      type: Object\n    },\n\n    /**\n     * @private\n     */\n    _currentTimeSlider: {\n      type: String,\n      defaultValue: \"hours\"\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>DateTimePicker</code> component alows users to select both date (day, month and year) and time (hours, minutes and seconds)\n * and for the purpose it consists of input field and Date/Time picker.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>DateTimePicker</code> if you need a combined date and time input component.\n * Don't use it if you want to use either date, or time value.\n * In this case, use the <code>DatePicker</code> or the <code>TimePicker</code> components instead.\n * <br><br>\n * The user can set date/time by:\n * <ul>\n * <li>using the calendar and the time selectors</li>\n * <li>typing in the input field</li>\n * </ul>\n *\n * Programatically, to set date/time for the <code>DateTimePicker</code>, use the <code>value</code> property\n *\n * <h3>Formatting</h3>\n *\n * The value entered by typing into the input field must fit to the used date/time format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, hh:mm:ss aa</code>\n * corresponds the <code>13/04/2020, 03:16:16 AM</code> value.\n * <br>\n * The small 'h' defines \"12\" hours format and the \"aa\" symbols - \"AM/PM\" time periods.\n *\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, HH:mm:ss</code>\n * corresponds the <code>13/04/2020, 15:16:16</code> value.\n * <br>\n * The capital 'H' indicates \"24\" hours format.\n *\n * <br><br>\n * <b>Note:</b> If the <code>formatPattern</code> does NOT include time,\n * the <code>DateTimePicker</code> will fallback to the default time format according to the locale.\n *\n * <br><br>\n * <b>Note:</b> If no placeholder is set to the <code>DateTimePicker</code>,\n * the current <code>formatPattern</code> is displayed as a placeholder.\n * If another placeholder is needed, it must be set or in case no placeholder is needed - it can be set to an empty string.\n *\n * <br><br>\n * <b>Note:</b> If the user input does NOT match the <code>formatPattern</code>,\n * the <code>DateTimePicker</code> makes an attempt to parse it based on the\n * locale settings.\n *\n * <h3>Responsive behavior</h3>\n *\n * The <code>DateTimePicker</code> is responsive and fully adapts to all devices.\n * For larger screens, such as tablet or desktop, it is displayed as a popover, while\n * on phone devices, it is displayed full screen.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DateTimePicker.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateTimePicker\n * @extends DatePicker\n * @tagname ui5-datetime-picker\n * @since 1.0.0-rc.7\n * @public\n */\n\nvar DateTimePicker = /*#__PURE__*/function (_DatePicker) {\n  _inherits(DateTimePicker, _DatePicker);\n\n  var _super = _createSuper(DateTimePicker);\n\n  function DateTimePicker() {\n    var _this;\n\n    _classCallCheck(this, DateTimePicker);\n\n    _this = _super.call(this);\n    _this._handleResizeBound = _this._handleResize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  _createClass(DateTimePicker, [{\n    key: \"onResponsivePopoverAfterClose\",\n    value: function onResponsivePopoverAfterClose() {\n      _get(_getPrototypeOf(DateTimePicker.prototype), \"onResponsivePopoverAfterClose\", this).call(this);\n\n      this._showTimeView = false;\n      this._previewValues = {};\n    }\n    /**\n     * LIFECYCLE METHODS\n     */\n\n  }, {\n    key: \"onEnterDOM\",\n    value: function onEnterDOM() {\n      ResizeHandler.register(document.body, this._handleResizeBound);\n    }\n  }, {\n    key: \"onExitDOM\",\n    value: function onExitDOM() {\n      ResizeHandler.deregister(document.body, this._handleResizeBound);\n    }\n    /**\n     * PUBLIC METHODS\n     */\n\n    /**\n     * Opens the picker.\n     * @public\n     */\n\n  }, {\n    key: \"openPicker\",\n    value: function () {\n      var _openPicker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _get(_getPrototypeOf(DateTimePicker.prototype), \"openPicker\", this).call(this);\n\n              case 2:\n                this._currentTimeSlider = \"hours\";\n                this._previewValues.timeSelectionValue = this.value || this.getFormat().format(new Date());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function openPicker() {\n        return _openPicker.apply(this, arguments);\n      }\n\n      return openPicker;\n    }()\n    /**\n     * Read-only getters\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return {\n        picker: {\n          \"ui5-dt-picker-content--phone\": this.phone\n        },\n        dateTimeView: {\n          \"ui5-dt-cal--hidden\": this.phone && this.showTimeView,\n          \"ui5-dt-time--hidden\": this.phone && this.showDateView\n        }\n      };\n    }\n  }, {\n    key: \"_formatPattern\",\n    get: function get() {\n      var hasHours = !!this.formatPattern.match(/H/i);\n      var fallback = !this.formatPattern || !hasHours;\n      var localeData = getCachedLocaleDataInstance(getLocale());\n      return fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", this._primaryCalendarType) : this.formatPattern;\n    }\n  }, {\n    key: \"_calendarTimestamp\",\n    get: function get() {\n      return this._previewValues.calendarTimestamp ? this._previewValues.calendarTimestamp : _get(_getPrototypeOf(DateTimePicker.prototype), \"_calendarTimestamp\", this);\n    }\n  }, {\n    key: \"_calendarSelectedDates\",\n    get: function get() {\n      return this._previewValues.calendarValue ? [this._previewValues.calendarValue] : _get(_getPrototypeOf(DateTimePicker.prototype), \"_calendarSelectedDates\", this);\n    }\n  }, {\n    key: \"_timeSelectionValue\",\n    get: function get() {\n      return this._previewValues.timeSelectionValue ? this._previewValues.timeSelectionValue : this.value;\n    }\n  }, {\n    key: \"openIconName\",\n    get: function get() {\n      return \"date-time\";\n    }\n  }, {\n    key: \"btnOKLabel\",\n    get: function get() {\n      return DateTimePicker.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n    }\n  }, {\n    key: \"btnCancelLabel\",\n    get: function get() {\n      return DateTimePicker.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n    }\n  }, {\n    key: \"btnDateLabel\",\n    get: function get() {\n      return DateTimePicker.i18nBundle.getText(DATETIME_PICKER_DATE_BUTTON);\n    }\n  }, {\n    key: \"btnTimeLabel\",\n    get: function get() {\n      return DateTimePicker.i18nBundle.getText(DATETIME_PICKER_TIME_BUTTON);\n    }\n  }, {\n    key: \"showFooter\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"showDateView\",\n    get: function get() {\n      return this.phone ? !this._showTimeView : true;\n    }\n  }, {\n    key: \"showTimeView\",\n    get: function get() {\n      return this.phone ? this._showTimeView : true;\n    }\n  }, {\n    key: \"phone\",\n    get: function get() {\n      return _get(_getPrototypeOf(DateTimePicker.prototype), \"phone\", this) || this._phoneMode;\n    }\n  }, {\n    key: \"dateAriaDescription\",\n    get: function get() {\n      return DateTimePicker.i18nBundle.getText(DATETIME_DESCRIPTION);\n    }\n    /**\n     * Defines whether the dialog on mobile should have header\n     * @private\n     */\n\n  }, {\n    key: \"_shouldHideHeader\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * EVENT HANDLERS\n     */\n\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"onSelectedDatesChange\",\n    value: function onSelectedDatesChange(event) {\n      event.preventDefault();\n      var dateTimePickerContent = event.path ? event.path[1] : event.composedPath()[1];\n      this._previewValues = _objectSpread(_objectSpread({}, this._previewValues), {}, {\n        calendarTimestamp: event.detail.timestamp,\n        calendarValue: event.detail.values[0],\n        timeSelectionValue: dateTimePickerContent.lastChild.value\n      });\n    }\n  }, {\n    key: \"onTimeSelectionChange\",\n    value: function onTimeSelectionChange(event) {\n      this._previewValues = _objectSpread(_objectSpread({}, this._previewValues), {}, {\n        timeSelectionValue: event.detail.value\n      });\n    }\n  }, {\n    key: \"onTimeSliderChange\",\n    value: function onTimeSliderChange(event) {\n      this._currentTimeSlider = event.detail.slider;\n    }\n    /**\n     * Handles document resize to switch between <code>phoneMode</code> and normal appearance.\n     */\n\n  }, {\n    key: \"_handleResize\",\n    value: function _handleResize() {\n      var documentWidth = document.body.offsetWidth;\n      var toPhoneMode = documentWidth <= PHONE_MODE_BREAKPOINT;\n      var modeChange = toPhoneMode && !this._phoneMode || !toPhoneMode && this._phoneMode; // XOR not allowed by lint\n\n      if (modeChange) {\n        this._phoneMode = toPhoneMode;\n      }\n    }\n  }, {\n    key: \"_submitDisabled\",\n    get: function get() {\n      return !this._calendarSelectedDates || !this._calendarSelectedDates.length;\n    }\n    /**\n     * Handles clicking on the <code>submit</code> button, within the picker`s footer.\n     */\n\n  }, {\n    key: \"_submitClick\",\n    value: function _submitClick() {\n      var selectedDate = this.getSelectedDateTime();\n      var value = this.getFormat().format(selectedDate);\n      var valid = this.isValid(value);\n\n      if (this.value !== value) {\n        this.value = value;\n        this.fireEvent(\"change\", {\n          value: this.value,\n          valid: valid\n        });\n        this.fireEvent(\"value-changed\", {\n          value: this.value,\n          valid: valid\n        });\n      }\n\n      this._updateValueState();\n\n      this.closePicker();\n    }\n    /**\n     * Handles clicking on the <code>cancel</code> button, within the picker`s footer,\n     * that would disregard the user selection.\n     */\n\n  }, {\n    key: \"_cancelClick\",\n    value: function _cancelClick() {\n      this.closePicker();\n    }\n    /**\n     * Handles the date/time switch available in <code>phoneMode</code> to switch\n     * between the date and time views.\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"_dateTimeSwitchChange\",\n    value: function _dateTimeSwitchChange(event) {\n      this._showTimeView = event.target.getAttribute(\"key\") === \"Time\";\n\n      if (this._showTimeView) {\n        this._currentTimeSlider = \"hours\";\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_modifyDateValue\",\n    value: function _modifyDateValue(amount, unit) {\n      if (!this.dateValue) {\n        return;\n      }\n\n      var modifiedDate = modifyDateBy(CalendarDate.fromLocalJSDate(this.dateValue), amount, unit, this._minDate, this._maxDate);\n      var modifiedLocalDate = modifiedDate.toLocalJSDate();\n      modifiedLocalDate.setHours(this.dateValue.getHours());\n      modifiedLocalDate.setMinutes(this.dateValue.getMinutes());\n      modifiedLocalDate.setSeconds(this.dateValue.getSeconds());\n      var newValue = this.formatValue(modifiedLocalDate);\n\n      this._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n    }\n  }, {\n    key: \"getPicker\",\n    value: function () {\n      var _getPicker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var staticAreaItem;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getStaticAreaItemDomRef();\n\n              case 2:\n                staticAreaItem = _context2.sent;\n                return _context2.abrupt(\"return\", staticAreaItem.querySelector(\"[ui5-responsive-popover]\"));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getPicker() {\n        return _getPicker.apply(this, arguments);\n      }\n\n      return getPicker;\n    }()\n  }, {\n    key: \"getSelectedDateTime\",\n    value: function getSelectedDateTime() {\n      var selectedDate = this.getFormat().parse(this._calendarSelectedDates[0]);\n      var selectedTime = this.getFormat().parse(this._timeSelectionValue);\n      selectedDate.setHours(selectedTime.getHours());\n      selectedDate.setMinutes(selectedTime.getMinutes());\n      selectedDate.setSeconds(selectedTime.getSeconds());\n      return selectedDate;\n    }\n  }], [{\n    key: \"metadata\",\n    get: function get() {\n      return metadata;\n    }\n  }, {\n    key: \"staticAreaTemplate\",\n    get: function get() {\n      return DateTimePickerPopoverTemplate;\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return [_get(_getPrototypeOf(DateTimePicker), \"styles\", this), DateTimePickerCss];\n    }\n  }, {\n    key: \"staticAreaStyles\",\n    get: function get() {\n      return [_get(_getPrototypeOf(DateTimePicker), \"staticAreaStyles\", this), DateTimePickerPopoverCss];\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [].concat(_toConsumableArray(DatePicker.dependencies), [Calendar, Button, ToggleButton, SegmentedButton, TimeSelection]);\n    }\n  }]);\n\n  return DateTimePicker;\n}(DatePicker);\n\nDateTimePicker.define();\nexport default DateTimePicker;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/DateTimePicker.js"],"names":["ResizeHandler","getLocale","getCachedLocaleDataInstance","modifyDateBy","CalendarDate","Button","ToggleButton","SegmentedButton","Calendar","DatePicker","TimeSelection","TIMEPICKER_SUBMIT_BUTTON","TIMEPICKER_CANCEL_BUTTON","DATETIME_DESCRIPTION","DATETIME_PICKER_DATE_BUTTON","DATETIME_PICKER_TIME_BUTTON","DateTimePickerPopoverTemplate","DateTimePickerCss","DateTimePickerPopoverCss","PHONE_MODE_BREAKPOINT","metadata","tag","properties","_showTimeView","type","Boolean","noAttribute","_phoneMode","_previewValues","Object","_currentTimeSlider","String","defaultValue","DateTimePicker","_handleResizeBound","_handleResize","bind","register","document","body","deregister","timeSelectionValue","value","getFormat","format","Date","picker","phone","dateTimeView","showTimeView","showDateView","hasHours","formatPattern","match","fallback","localeData","getCombinedDateTimePattern","_primaryCalendarType","calendarTimestamp","calendarValue","i18nBundle","getText","event","preventDefault","dateTimePickerContent","path","composedPath","detail","timestamp","values","lastChild","slider","documentWidth","offsetWidth","toPhoneMode","modeChange","_calendarSelectedDates","length","selectedDate","getSelectedDateTime","valid","isValid","fireEvent","_updateValueState","closePicker","target","getAttribute","amount","unit","dateValue","modifiedDate","fromLocalJSDate","_minDate","_maxDate","modifiedLocalDate","toLocalJSDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","newValue","formatValue","_updateValueAndFireEvents","getStaticAreaItemDomRef","staticAreaItem","querySelector","parse","selectedTime","_timeSelectionValue","dependencies","define"],"mappings":"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","sourcesContent":["import ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport \"@ui5/webcomponents-icons/dist/date-time.js\";\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\nimport SegmentedButton from \"./SegmentedButton.js\";\nimport Calendar from \"./Calendar.js\";\nimport DatePicker from \"./DatePicker.js\";\nimport TimeSelection from \"./TimeSelection.js\";\n\n// i18n texts\nimport {\n\tTIMEPICKER_SUBMIT_BUTTON,\n\tTIMEPICKER_CANCEL_BUTTON,\n\tDATETIME_DESCRIPTION,\n\tDATETIME_PICKER_DATE_BUTTON,\n\tDATETIME_PICKER_TIME_BUTTON,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport DateTimePickerPopoverTemplate from \"./generated/templates/DateTimePickerPopoverTemplate.lit.js\";\n\n// Styles\nimport DateTimePickerCss from \"./generated/themes/DateTimePicker.css.js\";\nimport DateTimePickerPopoverCss from \"./generated/themes/DateTimePickerPopover.css.js\";\n\nconst PHONE_MODE_BREAKPOINT = 640; // px\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-datetime-picker\",\n\tproperties: /** @lends sap.ui.webcomponents.main.DateTimePicker.prototype */ {\n\n\t\t/**\n\t\t * Defines the visibility of the time view in <code>phoneMode</code>.\n\t\t * For more information, see the <code>phoneMode</code> property.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> The date view would be displayed by default.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_showTimeView: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the <code>DateTimePicker</code> should be displayed in phone mode.\n\t\t * The phone mode turns on when the component is used on small screens or phone devices.\n\t\t * In phone mode the user can see either the calendar view, or the time view\n\t\t * and can switch between the views via toggle buttons.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_phoneMode: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Selected, but not yet confirmed date/time\n\t\t * @private\n\t\t */\n\t\t_previewValues: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_currentTimeSlider: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"hours\",\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>DateTimePicker</code> component alows users to select both date (day, month and year) and time (hours, minutes and seconds)\n * and for the purpose it consists of input field and Date/Time picker.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>DateTimePicker</code> if you need a combined date and time input component.\n * Don't use it if you want to use either date, or time value.\n * In this case, use the <code>DatePicker</code> or the <code>TimePicker</code> components instead.\n * <br><br>\n * The user can set date/time by:\n * <ul>\n * <li>using the calendar and the time selectors</li>\n * <li>typing in the input field</li>\n * </ul>\n *\n * Programatically, to set date/time for the <code>DateTimePicker</code>, use the <code>value</code> property\n *\n * <h3>Formatting</h3>\n *\n * The value entered by typing into the input field must fit to the used date/time format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, hh:mm:ss aa</code>\n * corresponds the <code>13/04/2020, 03:16:16 AM</code> value.\n * <br>\n * The small 'h' defines \"12\" hours format and the \"aa\" symbols - \"AM/PM\" time periods.\n *\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, HH:mm:ss</code>\n * corresponds the <code>13/04/2020, 15:16:16</code> value.\n * <br>\n * The capital 'H' indicates \"24\" hours format.\n *\n * <br><br>\n * <b>Note:</b> If the <code>formatPattern</code> does NOT include time,\n * the <code>DateTimePicker</code> will fallback to the default time format according to the locale.\n *\n * <br><br>\n * <b>Note:</b> If no placeholder is set to the <code>DateTimePicker</code>,\n * the current <code>formatPattern</code> is displayed as a placeholder.\n * If another placeholder is needed, it must be set or in case no placeholder is needed - it can be set to an empty string.\n *\n * <br><br>\n * <b>Note:</b> If the user input does NOT match the <code>formatPattern</code>,\n * the <code>DateTimePicker</code> makes an attempt to parse it based on the\n * locale settings.\n *\n * <h3>Responsive behavior</h3>\n *\n * The <code>DateTimePicker</code> is responsive and fully adapts to all devices.\n * For larger screens, such as tablet or desktop, it is displayed as a popover, while\n * on phone devices, it is displayed full screen.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DateTimePicker.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateTimePicker\n * @extends DatePicker\n * @tagname ui5-datetime-picker\n * @since 1.0.0-rc.7\n * @public\n */\nclass DateTimePicker extends DatePicker {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn DateTimePickerPopoverTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn [super.styles, DateTimePickerCss];\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [super.staticAreaStyles, DateTimePickerPopoverCss];\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\t...DatePicker.dependencies,\n\t\t\tCalendar,\n\t\t\tButton,\n\t\t\tToggleButton,\n\t\t\tSegmentedButton,\n\t\t\tTimeSelection,\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._handleResizeBound = this._handleResize.bind(this);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tonResponsivePopoverAfterClose() {\n\t\tsuper.onResponsivePopoverAfterClose();\n\t\tthis._showTimeView = false;\n\t\tthis._previewValues = {};\n\t}\n\n\t/**\n\t * LIFECYCLE METHODS\n\t */\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(document.body, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(document.body, this._handleResizeBound);\n\t}\n\n\t/**\n\t * PUBLIC METHODS\n\t */\n\n\t/**\n\t * Opens the picker.\n\t * @public\n\t */\n\tasync openPicker() {\n\t\tawait super.openPicker();\n\t\tthis._currentTimeSlider = \"hours\";\n\t\tthis._previewValues.timeSelectionValue = this.value || this.getFormat().format(new Date());\n\t}\n\n\t/**\n\t * Read-only getters\n\t */\n\n\tget classes() {\n\t\treturn {\n\t\t\tpicker: {\n\t\t\t\t\"ui5-dt-picker-content--phone\": this.phone,\n\t\t\t},\n\t\t\tdateTimeView: {\n\t\t\t\t\"ui5-dt-cal--hidden\": this.phone && this.showTimeView,\n\t\t\t\t\"ui5-dt-time--hidden\": this.phone && this.showDateView,\n\t\t\t},\n\t\t};\n\t}\n\n\tget _formatPattern() {\n\t\tconst hasHours = !!this.formatPattern.match(/H/i);\n\t\tconst fallback = !this.formatPattern || !hasHours;\n\n\t\tconst localeData = getCachedLocaleDataInstance(getLocale());\n\t\treturn fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", this._primaryCalendarType) : this.formatPattern;\n\t}\n\n\tget _calendarTimestamp() {\n\t\treturn this._previewValues.calendarTimestamp ? this._previewValues.calendarTimestamp : super._calendarTimestamp;\n\t}\n\n\tget _calendarSelectedDates() {\n\t\treturn this._previewValues.calendarValue ? [this._previewValues.calendarValue] : super._calendarSelectedDates;\n\t}\n\n\tget _timeSelectionValue() {\n\t\treturn this._previewValues.timeSelectionValue ? this._previewValues.timeSelectionValue : this.value;\n\t}\n\n\tget openIconName() {\n\t\treturn \"date-time\";\n\t}\n\n\tget btnOKLabel() {\n\t\treturn DateTimePicker.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n\t}\n\n\tget btnCancelLabel() {\n\t\treturn DateTimePicker.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n\t}\n\n\tget btnDateLabel() {\n\t\treturn DateTimePicker.i18nBundle.getText(DATETIME_PICKER_DATE_BUTTON);\n\t}\n\n\tget btnTimeLabel() {\n\t\treturn DateTimePicker.i18nBundle.getText(DATETIME_PICKER_TIME_BUTTON);\n\t}\n\n\tget showFooter() {\n\t\treturn true;\n\t}\n\n\tget showDateView() {\n\t\treturn this.phone ? !this._showTimeView : true;\n\t}\n\n\tget showTimeView() {\n\t\treturn this.phone ? this._showTimeView : true;\n\t}\n\n\tget phone() {\n\t\treturn super.phone || this._phoneMode;\n\t}\n\n\tget dateAriaDescription() {\n\t\treturn DateTimePicker.i18nBundle.getText(DATETIME_DESCRIPTION);\n\t}\n\n\t/**\n\t * Defines whether the dialog on mobile should have header\n\t * @private\n\t */\n\tget _shouldHideHeader() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * EVENT HANDLERS\n\t */\n\n\t/**\n\t * @override\n\t */\n\tonSelectedDatesChange(event) {\n\t\tevent.preventDefault();\n\t\tconst dateTimePickerContent = event.path ? event.path[1] : event.composedPath()[1];\n\n\t\tthis._previewValues = {\n\t\t\t...this._previewValues,\n\t\t\tcalendarTimestamp: event.detail.timestamp,\n\t\t\tcalendarValue: event.detail.values[0],\n\t\t\ttimeSelectionValue: dateTimePickerContent.lastChild.value,\n\t\t};\n\t}\n\n\tonTimeSelectionChange(event) {\n\t\tthis._previewValues = {\n\t\t\t...this._previewValues,\n\t\t\ttimeSelectionValue: event.detail.value,\n\t\t};\n\t}\n\n\tonTimeSliderChange(event) {\n\t\tthis._currentTimeSlider = event.detail.slider;\n\t}\n\n\t/**\n\t * Handles document resize to switch between <code>phoneMode</code> and normal appearance.\n\t */\n\t_handleResize() {\n\t\tconst documentWidth = document.body.offsetWidth;\n\t\tconst toPhoneMode = documentWidth <= PHONE_MODE_BREAKPOINT;\n\t\tconst modeChange = (toPhoneMode && !this._phoneMode) || (!toPhoneMode && this._phoneMode); // XOR not allowed by lint\n\n\t\tif (modeChange) {\n\t\t\tthis._phoneMode = toPhoneMode;\n\t\t}\n\t}\n\n\tget _submitDisabled() {\n\t\treturn !this._calendarSelectedDates || !this._calendarSelectedDates.length;\n\t}\n\n\t/**\n\t * Handles clicking on the <code>submit</code> button, within the picker`s footer.\n\t */\n\t_submitClick() {\n\t\tconst selectedDate = this.getSelectedDateTime();\n\n\t\tconst value = this.getFormat().format(selectedDate);\n\t\tconst valid = this.isValid(value);\n\n\t\tif (this.value !== value) {\n\t\t\tthis.value = value;\n\t\t\tthis.fireEvent(\"change\", { value: this.value, valid });\n\t\t\tthis.fireEvent(\"value-changed\", { value: this.value, valid });\n\t\t}\n\n\t\tthis._updateValueState();\n\t\tthis.closePicker();\n\t}\n\n\t/**\n\t * Handles clicking on the <code>cancel</code> button, within the picker`s footer,\n\t * that would disregard the user selection.\n\t */\n\t_cancelClick() {\n\t\tthis.closePicker();\n\t}\n\n\t/**\n\t * Handles the date/time switch available in <code>phoneMode</code> to switch\n\t * between the date and time views.\n\t * @param {Event} event\n\t */\n\t_dateTimeSwitchChange(event) {\n\t\tthis._showTimeView = event.target.getAttribute(\"key\") === \"Time\";\n\t\tif (this._showTimeView) {\n\t\t\tthis._currentTimeSlider = \"hours\";\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t */\n\t_modifyDateValue(amount, unit) {\n\t\tif (!this.dateValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modifiedDate = modifyDateBy(CalendarDate.fromLocalJSDate(this.dateValue), amount, unit, this._minDate, this._maxDate);\n\t\tconst modifiedLocalDate = modifiedDate.toLocalJSDate();\n\t\tmodifiedLocalDate.setHours(this.dateValue.getHours());\n\t\tmodifiedLocalDate.setMinutes(this.dateValue.getMinutes());\n\t\tmodifiedLocalDate.setSeconds(this.dateValue.getSeconds());\n\n\t\tconst newValue = this.formatValue(modifiedLocalDate);\n\t\tthis._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n\t}\n\n\tasync getPicker() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"[ui5-responsive-popover]\");\n\t}\n\n\tgetSelectedDateTime() {\n\t\tconst selectedDate = this.getFormat().parse(this._calendarSelectedDates[0]);\n\t\tconst selectedTime = this.getFormat().parse(this._timeSelectionValue);\n\t\tselectedDate.setHours(selectedTime.getHours());\n\t\tselectedDate.setMinutes(selectedTime.getMinutes());\n\t\tselectedDate.setSeconds(selectedTime.getSeconds());\n\n\t\treturn selectedDate;\n\t}\n}\n\nDateTimePicker.define();\n\nexport default DateTimePicker;\n"]},"metadata":{},"sourceType":"module"}