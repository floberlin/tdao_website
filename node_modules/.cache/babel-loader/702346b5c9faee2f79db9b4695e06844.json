{"ast":null,"code":"import { useEffect } from 'react';\nimport { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';\nvar PROP_INCLUDELIST = /^(aria-|data-|id$|on[A-Z]|slot$|role$)/;\n/**\n * @deprecated please use rest/spread syntax instead. `{ propA, propB, ...rest } = props`\n */\n\nvar usePassThroughHtmlProps = function usePassThroughHtmlProps(props) {\n  var propExcludeList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var componentPropExcludelist = new Set(propExcludeList);\n  useEffect(function () {\n    deprecationNotice('usePassThroughHtmlProps', \"`usePassThroughHtmlProps` is deprecated. Please use rest/spread syntax instead. `{ propA, propB, ...rest } = props`\");\n  }, []);\n  var returnVal = {};\n\n  for (var name in props) {\n    if (PROP_INCLUDELIST.test(name) && !componentPropExcludelist.has(name)) {\n      returnVal[name] = props[name];\n    }\n  }\n\n  return returnVal;\n};\n\nexport { usePassThroughHtmlProps };","map":{"version":3,"sources":["../src/hooks/usePassThroughHtmlProps.ts"],"names":["PROP_INCLUDELIST","usePassThroughHtmlProps","propExcludeList","componentPropExcludelist","useEffect","deprecationNotice","returnVal","props"],"mappings":";;AAGA,IAAMA,gBAAgB,GAAtB,wCAAA;AAEA;AACA;AACA;;IACaC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,KAAA,EAAgE;AAAA,MAAnCC,eAAmC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;AACrG,MAAMC,wBAAwB,GAAG,IAAA,GAAA,CAAjC,eAAiC,CAAjC;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,iBAAiB,CAAA,yBAAA,EAAjBA,qHAAiB,CAAjBA;AADO,GAAA,EAATD,EAAS,CAATA;AAOA,MAAME,SAAkC,GAAxC,EAAA;;AACA,OAAK,IAAL,IAAA,IAAA,KAAA,EAA0B;AACxB,QAAIN,gBAAgB,CAAhBA,IAAAA,CAAAA,IAAAA,KAA+B,CAACG,wBAAwB,CAAxBA,GAAAA,CAApC,IAAoCA,CAApC,EAAwE;AACtEG,MAAAA,SAAS,CAATA,IAAS,CAATA,GAAkBC,KAAK,CAAvBD,IAAuB,CAAvBA;AACD;AACF;;AAED,SAAA,SAAA;AACD,C","sourcesContent":["import { useEffect } from 'react';\nimport { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';\n\nconst PROP_INCLUDELIST = /^(aria-|data-|id$|on[A-Z]|slot$|role$)/;\n\n/**\n * @deprecated please use rest/spread syntax instead. `{ propA, propB, ...rest } = props`\n */\nexport const usePassThroughHtmlProps = (props: Record<string, any>, propExcludeList: string[] = []) => {\n  const componentPropExcludelist = new Set(propExcludeList);\n\n  useEffect(() => {\n    deprecationNotice(\n      'usePassThroughHtmlProps',\n      `\\`usePassThroughHtmlProps\\` is deprecated. Please use rest/spread syntax instead. \\`{ propA, propB, ...rest } = props\\``\n    );\n  }, []);\n\n  const returnVal: Record<string, unknown> = {};\n  for (const name in props) {\n    if (PROP_INCLUDELIST.test(name) && !componentPropExcludelist.has(name)) {\n      returnVal[name] = props[name];\n    }\n  }\n\n  return returnVal;\n};\n"]},"metadata":{},"sourceType":"module"}