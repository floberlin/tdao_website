{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nvar localeDataMap = new Map();\nvar loaders = new Map();\nvar cldrPromises = new Map();\nvar reportedErrors = new Set();\nvar warningShown = false;\nvar M_ISO639_OLD_TO_NEW = {\n  \"iw\": \"he\",\n  \"ji\": \"yi\",\n  \"in\": \"id\",\n  \"sh\": \"sr\"\n};\n\nvar _showAssetsWarningOnce = function _showAssetsWarningOnce(localeId) {\n  if (!warningShown) {\n    console.warn(\"[LocaleData] Supported locale \\\"\".concat(localeId, \"\\\" not configured, import the \\\"Assets.js\\\" module from the webcomponents package you are using.\"));\n    /* eslint-disable-line */\n\n    warningShown = true;\n  }\n};\n\nvar calcLocale = function calcLocale(language, region, script) {\n  // normalize language and handle special cases\n  language = language && M_ISO639_OLD_TO_NEW[language] || language; // Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n\n  if (language === \"no\") {\n    language = \"nb\";\n  } // Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n\n\n  if (language === \"zh\" && !region) {\n    if (script === \"Hans\") {\n      region = \"CN\";\n    } else if (script === \"Hant\") {\n      region = \"TW\";\n    }\n  } // try language + region\n\n\n  var localeId = \"\".concat(language, \"_\").concat(region);\n\n  if (SUPPORTED_LOCALES.includes(localeId)) {\n    if (loaders.has(localeId)) {\n      // supported and has loader\n      return localeId;\n    } // supported, no loader - fallback to default and warn\n\n\n    _showAssetsWarningOnce(localeId);\n\n    return DEFAULT_LOCALE;\n  } // not supported, try language only\n\n\n  localeId = language;\n\n  if (SUPPORTED_LOCALES.includes(localeId)) {\n    if (loaders.has(localeId)) {\n      // supported and has loader\n      return localeId;\n    } // supported, no loader - fallback to default and warn\n\n\n    _showAssetsWarningOnce(localeId);\n\n    return DEFAULT_LOCALE;\n  } // not supported - fallback to default locale\n\n\n  return DEFAULT_LOCALE;\n}; // internal set data\n\n\nvar setLocaleData = function setLocaleData(localeId, content) {\n  localeDataMap.set(localeId, content);\n}; // external getSync\n\n\nvar getLocaleData = function getLocaleData(localeId) {\n  // if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n  if (!loaders.has(localeId)) {\n    localeId = DEFAULT_LOCALE;\n  }\n\n  var content = localeDataMap.get(localeId);\n\n  if (!content) {\n    throw new Error(\"CLDR data for locale \".concat(localeId, \" is not loaded!\"));\n  }\n\n  return content;\n}; // load bundle over the network once\n\n\nvar _loadCldrOnce = function _loadCldrOnce(localeId) {\n  var loadCldr = loaders.get(localeId);\n\n  if (!cldrPromises.get(localeId)) {\n    cldrPromises.set(localeId, loadCldr(localeId));\n  }\n\n  return cldrPromises.get(localeId);\n}; // external getAsync\n\n\nvar fetchCldr = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(language, region, script) {\n    var localeId, OpenUI5Support, cldrContent, _cldrContent;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            localeId = calcLocale(language, region, script); // reuse OpenUI5 CLDR if present\n\n            OpenUI5Support = getFeature(\"OpenUI5Support\");\n\n            if (!OpenUI5Support) {\n              _context.next = 7;\n              break;\n            }\n\n            cldrContent = OpenUI5Support.getLocaleDataObject();\n\n            if (!cldrContent) {\n              _context.next = 7;\n              break;\n            }\n\n            // only if openui5 actually returned valid content\n            setLocaleData(localeId, cldrContent);\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.prev = 7;\n            _context.next = 10;\n            return _loadCldrOnce(localeId);\n\n          case 10:\n            _cldrContent = _context.sent;\n            setLocaleData(localeId, _cldrContent);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](7);\n\n            if (!reportedErrors.has(_context.t0.message)) {\n              reportedErrors.add(_context.t0.message);\n              console.error(_context.t0.message);\n              /* eslint-disable-line */\n            }\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 14]]);\n  }));\n\n  return function fetchCldr(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar registerLocaleDataLoader = function registerLocaleDataLoader(localeId, loader) {\n  loaders.set(localeId, loader);\n}; // register default loader for \"en\" from ui5 CDN (dev workflow without assets)\n\n\nregisterLocaleDataLoader(\"en\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(runtimeLocaleId) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://ui5.sap.com/1.60.2/resources/sap/ui/core/cldr/en.json\");\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent.json());\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\n\nattachLanguageChange(function () {\n  var locale = getLocale();\n  return fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\nexport { registerLocaleDataLoader, fetchCldr, getLocaleData };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/asset-registries/LocaleData.js"],"names":["attachLanguageChange","getLocale","DEFAULT_LOCALE","SUPPORTED_LOCALES","getFeature","localeDataMap","Map","loaders","cldrPromises","reportedErrors","Set","warningShown","M_ISO639_OLD_TO_NEW","_showAssetsWarningOnce","localeId","console","warn","calcLocale","language","region","script","includes","has","setLocaleData","content","set","getLocaleData","get","Error","_loadCldrOnce","loadCldr","fetchCldr","OpenUI5Support","cldrContent","getLocaleDataObject","message","add","error","registerLocaleDataLoader","loader","runtimeLocaleId","fetch","json","locale","getLanguage","getRegion","getScript"],"mappings":"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","sourcesContent":["import { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\n\nconst localeDataMap = new Map();\nconst loaders = new Map();\nconst cldrPromises = new Map();\nconst reportedErrors = new Set();\nlet warningShown = false;\n\nconst M_ISO639_OLD_TO_NEW = {\n\t\"iw\": \"he\",\n\t\"ji\": \"yi\",\n\t\"in\": \"id\",\n\t\"sh\": \"sr\",\n};\n\nconst _showAssetsWarningOnce = localeId => {\n\tif (!warningShown) {\n\t\tconsole.warn(`[LocaleData] Supported locale \"${localeId}\" not configured, import the \"Assets.js\" module from the webcomponents package you are using.`); /* eslint-disable-line */\n\t\twarningShown = true;\n\t}\n};\n\nconst calcLocale = (language, region, script) => {\n\t// normalize language and handle special cases\n\tlanguage = (language && M_ISO639_OLD_TO_NEW[language]) || language;\n\t// Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n\tif (language === \"no\") {\n\t\tlanguage = \"nb\";\n\t}\n\t// Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n\tif (language === \"zh\" && !region) {\n\t\tif (script === \"Hans\") {\n\t\t\tregion = \"CN\";\n\t\t} else if (script === \"Hant\") {\n\t\t\tregion = \"TW\";\n\t\t}\n\t}\n\n\t// try language + region\n\tlet localeId = `${language}_${region}`;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported, try language only\n\tlocaleId = language;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported - fallback to default locale\n\treturn DEFAULT_LOCALE;\n};\n\n// internal set data\nconst setLocaleData = (localeId, content) => {\n\tlocaleDataMap.set(localeId, content);\n};\n\n// external getSync\nconst getLocaleData = localeId => {\n\t// if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n\tif (!loaders.has(localeId)) {\n\t\tlocaleId = DEFAULT_LOCALE;\n\t}\n\n\tconst content = localeDataMap.get(localeId);\n\tif (!content) {\n\t\tthrow new Error(`CLDR data for locale ${localeId} is not loaded!`);\n\t}\n\n\treturn content;\n};\n\n// load bundle over the network once\nconst _loadCldrOnce = localeId => {\n\tconst loadCldr = loaders.get(localeId);\n\n\tif (!cldrPromises.get(localeId)) {\n\t\tcldrPromises.set(localeId, loadCldr(localeId));\n\t}\n\n\treturn cldrPromises.get(localeId);\n};\n\n// external getAsync\nconst fetchCldr = async (language, region, script) => {\n\tconst localeId = calcLocale(language, region, script);\n\n\t// reuse OpenUI5 CLDR if present\n\tconst OpenUI5Support = getFeature(\"OpenUI5Support\");\n\tif (OpenUI5Support) {\n\t\tconst cldrContent = OpenUI5Support.getLocaleDataObject();\n\t\tif (cldrContent) {\n\t\t\t// only if openui5 actually returned valid content\n\t\t\tsetLocaleData(localeId, cldrContent);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// fetch it\n\ttry {\n\t\tconst cldrContent = await _loadCldrOnce(localeId);\n\t\tsetLocaleData(localeId, cldrContent);\n\t} catch (e) {\n\t\tif (!reportedErrors.has(e.message)) {\n\t\t\treportedErrors.add(e.message);\n\t\t\tconsole.error(e.message); /* eslint-disable-line */\n\t\t}\n\t}\n};\n\nconst registerLocaleDataLoader = (localeId, loader) => {\n\tloaders.set(localeId, loader);\n};\n\n// register default loader for \"en\" from ui5 CDN (dev workflow without assets)\nregisterLocaleDataLoader(\"en\", async runtimeLocaleId => {\n\treturn (await fetch(`https://ui5.sap.com/1.60.2/resources/sap/ui/core/cldr/en.json`)).json();\n});\n\n// When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\nattachLanguageChange(() => {\n\tconst locale = getLocale();\n\treturn fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\n\nexport {\n\tregisterLocaleDataLoader,\n\tfetchCldr,\n\tgetLocaleData,\n};\n"]},"metadata":{},"sourceType":"module"}