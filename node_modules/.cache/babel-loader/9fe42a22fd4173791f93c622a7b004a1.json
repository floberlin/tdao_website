{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('../token.js');\n\nvar encode$1 = require('../encode.js');\n\nvar common = require('../common.js');\n\nvar byteUtils = require('../byte-utils.js');\n\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n\n    if (recurs) {\n      if (recurs.type === token.Type.array) {\n        recurs.elements++;\n\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n\n      if (recurs.type === token.Type.map) {\n        recurs.elements++;\n\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n\n  [token.Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n\n    buf.push(isa);\n  }\n\n  [token.Type.negint.major](buf, token$1) {\n    this[token.Type.uint.major](buf, token$1);\n  }\n\n  [token.Type.bytes.major](_buf, _token) {\n    throw new Error(`${common.encodeErrPrefix} unsupported type: Uint8Array`);\n  }\n\n  [token.Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = byteUtils.fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? byteUtils.asU8A(byts) : byts);\n  }\n\n  [token.Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n\n  [token.Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n\n  [token.Type.tag.major](_buf, _token) {}\n\n  [token.Type.float.major](buf, token$1) {\n    if (token$1.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n\n      if (recurs) {\n        if (recurs.type === token.Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === token.Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n\n        return;\n      }\n\n      throw new Error('Unexpected break; this should not happen!');\n    }\n\n    if (token$1.value === undefined) {\n      throw new Error(`${common.encodeErrPrefix} unsupported type: undefined`);\n    }\n\n    this.prefix(buf);\n\n    if (token$1.type.name === 'true') {\n      buf.push([116, 114, 117, 101]);\n      return;\n    } else if (token$1.type.name === 'false') {\n      buf.push([102, 97, 108, 115, 101]);\n      return;\n    } else if (token$1.type.name === 'null') {\n      buf.push([110, 117, 108, 108]);\n      return;\n    }\n\n    const is = String(token$1.value);\n    const isa = [];\n    let dp = false;\n\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n\n    buf.push(isa);\n  }\n\n}\n\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${common.encodeErrPrefix} complex map keys are not supported`);\n  }\n\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n\n  if (keyToken1.type !== token.Type.string || keyToken2.type !== token.Type.string) {\n    throw new Error(`${common.encodeErrPrefix} non-string map keys are not supported`);\n  }\n\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n\n  throw new Error(`${common.encodeErrPrefix} unexpected duplicate map keys, this is not supported`);\n}\n\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\n\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encode$1.encodeCustom(data, new JSONEncoder(), options);\n}\n\nexports.encode = encode;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/cborg/cjs/lib/json/encode.js"],"names":["Object","defineProperty","exports","value","token","require","encode$1","common","byteUtils","JSONEncoder","Array","constructor","inRecursive","prefix","buf","recurs","length","type","Type","array","elements","push","map","uint","major","is","String","isa","i","charCodeAt","negint","token$1","bytes","_buf","_token","Error","encodeErrPrefix","string","byts","fromString","JSON","stringify","asU8A","tag","float","name","pop","undefined","dp","mapSorter","e1","e2","isArray","keyToken1","keyToken2","defaultEncodeOptions","addBreakTokens","encode","data","options","assign","encodeCustom"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('../token.js');\nvar encode$1 = require('../encode.js');\nvar common = require('../common.js');\nvar byteUtils = require('../byte-utils.js');\n\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === token.Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === token.Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [token.Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [token.Type.negint.major](buf, token$1) {\n    this[token.Type.uint.major](buf, token$1);\n  }\n  [token.Type.bytes.major](_buf, _token) {\n    throw new Error(`${ common.encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [token.Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = byteUtils.fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? byteUtils.asU8A(byts) : byts);\n  }\n  [token.Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [token.Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [token.Type.tag.major](_buf, _token) {\n  }\n  [token.Type.float.major](buf, token$1) {\n    if (token$1.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === token.Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === token.Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token$1.value === undefined) {\n      throw new Error(`${ common.encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token$1.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token$1.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token$1.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token$1.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ common.encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== token.Type.string || keyToken2.type !== token.Type.string) {\n    throw new Error(`${ common.encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ common.encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encode$1.encodeCustom(data, new JSONEncoder(), options);\n}\n\nexports.encode = encode;\n"]},"metadata":{},"sourceType":"script"}