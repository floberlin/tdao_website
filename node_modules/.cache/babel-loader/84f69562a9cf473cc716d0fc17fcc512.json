{"ast":null,"code":"import EventProvider from \"./EventProvider.js\";\nimport whenDOMReady from \"./util/whenDOMReady.js\";\nimport insertFontFace from \"./FontFace.js\";\nimport insertSystemCSSVars from \"./SystemCSSVars.js\";\nimport { getTheme } from \"./config/Theme.js\";\nimport applyTheme from \"./theming/applyTheme.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nlet booted = false;\nconst eventProvider = new EventProvider();\n/**\n * Attach a callback that will be executed on boot\n * @public\n * @param listener\n */\n\nconst attachBoot = listener => {\n  eventProvider.attachEvent(\"boot\", listener);\n};\n\nconst boot = async () => {\n  if (booted) {\n    return;\n  }\n\n  const OpenUI5Support = getFeature(\"OpenUI5Support\");\n\n  if (OpenUI5Support) {\n    await OpenUI5Support.init();\n  }\n\n  await whenDOMReady();\n  await applyTheme(getTheme());\n  OpenUI5Support && OpenUI5Support.attachListeners();\n  insertFontFace();\n  insertSystemCSSVars();\n  await eventProvider.fireEventAsync(\"boot\");\n  booted = true;\n};\n\nexport { boot, attachBoot };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/Boot.js"],"names":["EventProvider","whenDOMReady","insertFontFace","insertSystemCSSVars","getTheme","applyTheme","getFeature","booted","eventProvider","attachBoot","listener","attachEvent","boot","OpenUI5Support","init","attachListeners","fireEventAsync"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,mBAAP,MAAgC,oBAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,IAAIC,MAAM,GAAG,KAAb;AACA,MAAMC,aAAa,GAAG,IAAIR,aAAJ,EAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMS,UAAU,GAAGC,QAAQ,IAAI;AAC9BF,EAAAA,aAAa,CAACG,WAAd,CAA0B,MAA1B,EAAkCD,QAAlC;AACA,CAFD;;AAIA,MAAME,IAAI,GAAG,YAAY;AACxB,MAAIL,MAAJ,EAAY;AACX;AACA;;AAED,QAAMM,cAAc,GAAGP,UAAU,CAAC,gBAAD,CAAjC;;AACA,MAAIO,cAAJ,EAAoB;AACnB,UAAMA,cAAc,CAACC,IAAf,EAAN;AACA;;AAED,QAAMb,YAAY,EAAlB;AACA,QAAMI,UAAU,CAACD,QAAQ,EAAT,CAAhB;AACAS,EAAAA,cAAc,IAAIA,cAAc,CAACE,eAAf,EAAlB;AACAb,EAAAA,cAAc;AACdC,EAAAA,mBAAmB;AACnB,QAAMK,aAAa,CAACQ,cAAd,CAA6B,MAA7B,CAAN;AACAT,EAAAA,MAAM,GAAG,IAAT;AACA,CAjBD;;AAmBA,SACCK,IADD,EAECH,UAFD","sourcesContent":["import EventProvider from \"./EventProvider.js\";\nimport whenDOMReady from \"./util/whenDOMReady.js\";\nimport insertFontFace from \"./FontFace.js\";\nimport insertSystemCSSVars from \"./SystemCSSVars.js\";\nimport { getTheme } from \"./config/Theme.js\";\nimport applyTheme from \"./theming/applyTheme.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\n\nlet booted = false;\nconst eventProvider = new EventProvider();\n\n/**\n * Attach a callback that will be executed on boot\n * @public\n * @param listener\n */\nconst attachBoot = listener => {\n\teventProvider.attachEvent(\"boot\", listener);\n};\n\nconst boot = async () => {\n\tif (booted) {\n\t\treturn;\n\t}\n\n\tconst OpenUI5Support = getFeature(\"OpenUI5Support\");\n\tif (OpenUI5Support) {\n\t\tawait OpenUI5Support.init();\n\t}\n\n\tawait whenDOMReady();\n\tawait applyTheme(getTheme());\n\tOpenUI5Support && OpenUI5Support.attachListeners();\n\tinsertFontFace();\n\tinsertSystemCSSVars();\n\tawait eventProvider.fireEventAsync(\"boot\");\n\tbooted = true;\n};\n\nexport {\n\tboot,\n\tattachBoot,\n};\n"]},"metadata":{},"sourceType":"module"}