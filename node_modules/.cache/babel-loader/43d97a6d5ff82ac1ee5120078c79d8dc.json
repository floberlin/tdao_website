{"ast":null,"code":"import { CalendarSelectionMode } from '@ui5/webcomponents-react/dist/CalendarSelectionMode';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/Calendar';\n/**\n * The `Calendar` component allows users to select one or more dates.\n *\n * Currently selected dates are represented with instances of `CalendarDate` as children of the `Calendar`. The value property of each `CalendarDate` must be a date string, correctly formatted according to the `Calendar`'s `formatPattern` property. Whenever the user changes the date selection, `Calendar` will automatically create/remove instances of `CalendarDate` in itself, unless you prevent this behavior by calling `preventDefault()` for the `selected-dates-change` event. This is useful if you want to control the selected dates externally.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Calendar\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar Calendar = withWebComponent('ui5-calendar', ['selectionMode', 'formatPattern', 'maxDate', 'minDate', 'primaryCalendarType'], ['hideWeekNumbers'], [], ['selected-dates-change']);\nCalendar.displayName = 'Calendar';\nCalendar.defaultProps = {\n  hideWeekNumbers: false,\n  selectionMode: CalendarSelectionMode.Single\n};\nexport { Calendar };","map":{"version":3,"sources":["../src/webComponents/Calendar/index.tsx"],"names":["Calendar","withWebComponent","hideWeekNumbers","selectionMode","CalendarSelectionMode","Single"],"mappings":";;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMA,QAAQ,GAAGC,gBAAgB,CAAA,cAAA,EAE/B,CAAA,eAAA,EAAA,eAAA,EAAA,SAAA,EAAA,SAAA,EAF+B,qBAE/B,CAF+B,EAG/B,CAH+B,iBAG/B,CAH+B,EAAA,EAAA,EAK/B,CAL+B,uBAK/B,CAL+B,C;AAQjCD,QAAQ,CAARA,WAAAA,GAAAA,UAAAA;AAEAA,QAAQ,CAARA,YAAAA,GAAwB;AACtBE,EAAAA,eAAe,EADO,KAAA;AAEtBC,EAAAA,aAAa,EAAEC,qBAAqB,CAACC;AAFf,CAAxBL","sourcesContent":["import { CalendarSelectionMode } from '@ui5/webcomponents-react/dist/CalendarSelectionMode';\nimport { CalendarType } from '@ui5/webcomponents-react/dist/CalendarType';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Calendar';\n\nexport interface CalendarPropTypes extends CommonProps {\n  /**\n   * Defines the visibility of the week numbers column.\n   *\n   * **Note:** For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n   */\n  hideWeekNumbers?: boolean;\n  /**\n   * Defines the type of selection used in the calendar component. Accepted property values are:\n   *\n   * *   `CalendarSelectionMode.Single` - enables a single date selection.(default value)\n   * *   `CalendarSelectionMode.Range` - enables selection of a date range.\n   * *   `CalendarSelectionMode.Multiple` - enables selection of multiple dates.\n   */\n  selectionMode?: CalendarSelectionMode;\n  /**\n   * Determines the format, displayed in the input field.\n   */\n  formatPattern?: string;\n  /**\n   * Determines the maximum date available for selection.\n   */\n  maxDate?: string;\n  /**\n   * Determines the Ð¼inimum date available for selection.\n   */\n  minDate?: string;\n  /**\n   * Sets a calendar type used for display. If not set, the calendar type of the global configuration is used.<br/>__Note:__ Calendar types other than Gregorian must be imported manually:<br />`import \"@ui5/webcomponents-localization/dist/features/calendar/{primaryCalendarType}.js\";`\n   */\n  primaryCalendarType?: CalendarType;\n  /**\n   * Defines the selected date or dates (depending on the `selectionMode` property) for this calendar as instances of `CalendarDate`\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the selected dates change. **Note:** If you call `preventDefault()` for this event, the component will not create instances of `CalendarDate` for the newly selected dates. In that case you should do this manually.\n   */\n  onSelectedDatesChange?: (event: Ui5CustomEvent<HTMLElement, { values: unknown[]; dates: unknown[] }>) => void;\n}\n\n/**\n * The `Calendar` component allows users to select one or more dates.\n *\n * Currently selected dates are represented with instances of `CalendarDate` as children of the `Calendar`. The value property of each `CalendarDate` must be a date string, correctly formatted according to the `Calendar`'s `formatPattern` property. Whenever the user changes the date selection, `Calendar` will automatically create/remove instances of `CalendarDate` in itself, unless you prevent this behavior by calling `preventDefault()` for the `selected-dates-change` event. This is useful if you want to control the selected dates externally.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Calendar\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Calendar = withWebComponent<CalendarPropTypes>(\n  'ui5-calendar',\n  ['selectionMode', 'formatPattern', 'maxDate', 'minDate', 'primaryCalendarType'],\n  ['hideWeekNumbers'],\n  [],\n  ['selected-dates-change']\n);\n\nCalendar.displayName = 'Calendar';\n\nCalendar.defaultProps = {\n  hideWeekNumbers: false,\n  selectionMode: CalendarSelectionMode.Single\n};\n\nexport { Calendar };\n"]},"metadata":{},"sourceType":"module"}