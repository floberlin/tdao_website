{"ast":null,"code":"import ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport \"@ui5/webcomponents-icons/dist/date-time.js\";\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\nimport SegmentedButton from \"./SegmentedButton.js\";\nimport Calendar from \"./Calendar.js\";\nimport DatePicker from \"./DatePicker.js\";\nimport TimeSelection from \"./TimeSelection.js\"; // i18n texts\n\nimport { TIMEPICKER_SUBMIT_BUTTON, TIMEPICKER_CANCEL_BUTTON, DATETIME_DESCRIPTION, DATETIME_PICKER_DATE_BUTTON, DATETIME_PICKER_TIME_BUTTON } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport DateTimePickerPopoverTemplate from \"./generated/templates/DateTimePickerPopoverTemplate.lit.js\"; // Styles\n\nimport DateTimePickerCss from \"./generated/themes/DateTimePicker.css.js\";\nimport DateTimePickerPopoverCss from \"./generated/themes/DateTimePickerPopover.css.js\";\nconst PHONE_MODE_BREAKPOINT = 640; // px\n\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-datetime-picker\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.DateTimePicker.prototype */\n  {\n    /**\n     * Defines the visibility of the time view in <code>phoneMode</code>.\n     * For more information, see the <code>phoneMode</code> property.\n     *\n     * <br><br>\n     * <b>Note:</b> The date view would be displayed by default.\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _showTimeView: {\n      type: Boolean,\n      noAttribute: true\n    },\n\n    /**\n     * Defines if the <code>DateTimePicker</code> should be displayed in phone mode.\n     * The phone mode turns on when the component is used on small screens or phone devices.\n     * In phone mode the user can see either the calendar view, or the time view\n     * and can switch between the views via toggle buttons.\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _phoneMode: {\n      type: Boolean\n    },\n\n    /**\n     * Selected, but not yet confirmed date/time\n     * @private\n     */\n    _previewValues: {\n      type: Object\n    },\n\n    /**\n     * @private\n     */\n    _currentTimeSlider: {\n      type: String,\n      defaultValue: \"hours\"\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>DateTimePicker</code> component alows users to select both date (day, month and year) and time (hours, minutes and seconds)\n * and for the purpose it consists of input field and Date/Time picker.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>DateTimePicker</code> if you need a combined date and time input component.\n * Don't use it if you want to use either date, or time value.\n * In this case, use the <code>DatePicker</code> or the <code>TimePicker</code> components instead.\n * <br><br>\n * The user can set date/time by:\n * <ul>\n * <li>using the calendar and the time selectors</li>\n * <li>typing in the input field</li>\n * </ul>\n *\n * Programatically, to set date/time for the <code>DateTimePicker</code>, use the <code>value</code> property\n * <br><br>\n * As most of the input based components, the <code>DateTimePicker</code> supports properties,\n * such as: <code>disabled</code>, <code>readonly</code>, <code>valueState</code> and  <code>placeholder</code>.\n *\n * <h3>Formatting</h3>\n *\n * The value entered by typing into the input field must fit to the used date/time format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, hh:mm:ss aa</code>\n * corresponds the <code>13/04/2020, 03:16:16 AM</code> value.\n * <br>\n * The small 'h' defines \"12\" hours format and the \"aa\" symbols - \"AM/PM\" time periods.\n *\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, HH:mm:ss</code>\n * corresponds the <code>13/04/2020, 15:16:16</code> value.\n * <br>\n * The capital 'H' indicates \"24\" hours format.\n *\n * <br><br>\n * <b>Note:</b> If the <code>formatPattern</code> does NOT include time,\n * the <code>DateTimePicker</code> will fallback to the default time format according to the locale.\n *\n * <br><br>\n * <b>Note:</b> If no placeholder is set to the <code>DateTimePicker</code>,\n * the current <code>formatPattern</code> is displayed as a placeholder.\n * If another placeholder is needed, it must be set or in case no placeholder is needed - it can be set to an empty string.\n *\n * <br><br>\n * <b>Note:</b> If the user input does NOT match the <code>formatPattern</code>,\n * the <code>DateTimePicker</code> makes an attempt to parse it based on the\n * locale settings.\n *\n * <h3>Responsive behavior</h3>\n *\n * The <code>DateTimePicker</code> is responsive and fully adapts to all devices.\n * For larger screens, such as tablet or desktop, it is displayed as a popover, while\n * on phone devices, it is displayed full screen.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DateTimePicker.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateTimePicker\n * @extends DatePicker\n * @tagname ui5-datetime-picker\n * @since 1.0.0-rc.7\n * @public\n */\n\nclass DateTimePicker extends DatePicker {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get staticAreaTemplate() {\n    return DateTimePickerPopoverTemplate;\n  }\n\n  static get styles() {\n    return [super.styles, DateTimePickerCss];\n  }\n\n  static get staticAreaStyles() {\n    return [super.staticAreaStyles, DateTimePickerPopoverCss];\n  }\n\n  static get dependencies() {\n    return [...DatePicker.dependencies, Calendar, Button, ToggleButton, SegmentedButton, TimeSelection];\n  }\n\n  constructor() {\n    super();\n    this._handleResizeBound = this._handleResize.bind(this);\n  }\n  /**\n   * @override\n   */\n\n\n  onResponsivePopoverAfterClose() {\n    super.onResponsivePopoverAfterClose();\n    this._showTimeView = false;\n    this._previewValues = {};\n  }\n  /**\n   * LIFECYCLE METHODS\n   */\n\n\n  onEnterDOM() {\n    ResizeHandler.register(document.body, this._handleResizeBound);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(document.body, this._handleResizeBound);\n  }\n  /**\n   * PUBLIC METHODS\n   */\n\n  /**\n   * Opens the picker.\n   * @public\n   */\n\n\n  async openPicker() {\n    await super.openPicker();\n    this._currentTimeSlider = \"hours\";\n    this._previewValues.timeSelectionValue = this.value || this.getFormat().format(new Date());\n  }\n  /**\n   * Read-only getters\n   */\n\n\n  get classes() {\n    return {\n      picker: {\n        \"ui5-dt-picker-content--phone\": this.phone\n      },\n      dateTimeView: {\n        \"ui5-dt-cal--hidden\": this.phone && this.showTimeView,\n        \"ui5-dt-time--hidden\": this.phone && this.showDateView\n      }\n    };\n  }\n\n  get _formatPattern() {\n    const hasHours = !!this.formatPattern.match(/H/i);\n    const fallback = !this.formatPattern || !hasHours;\n    const localeData = getCachedLocaleDataInstance(getLocale());\n    return fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", this._primaryCalendarType) : this.formatPattern;\n  }\n\n  get _calendarTimestamp() {\n    return this._previewValues.calendarTimestamp ? this._previewValues.calendarTimestamp : super._calendarTimestamp;\n  }\n\n  get _calendarSelectedDates() {\n    return this._previewValues.calendarValue ? [this._previewValues.calendarValue] : super._calendarSelectedDates;\n  }\n\n  get _timeSelectionValue() {\n    return this._previewValues.timeSelectionValue ? this._previewValues.timeSelectionValue : this.value;\n  }\n\n  get openIconName() {\n    return \"date-time\";\n  }\n\n  get btnOKLabel() {\n    return this.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n  }\n\n  get btnCancelLabel() {\n    return this.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n  }\n\n  get btnDateLabel() {\n    return this.i18nBundle.getText(DATETIME_PICKER_DATE_BUTTON);\n  }\n\n  get btnTimeLabel() {\n    return this.i18nBundle.getText(DATETIME_PICKER_TIME_BUTTON);\n  }\n\n  get showFooter() {\n    return true;\n  }\n\n  get showDateView() {\n    return this.phone ? !this._showTimeView : true;\n  }\n\n  get showTimeView() {\n    return this.phone ? this._showTimeView : true;\n  }\n\n  get phone() {\n    return super.phone || this._phoneMode;\n  }\n\n  get dateAriaDescription() {\n    return this.i18nBundle.getText(DATETIME_DESCRIPTION);\n  }\n  /**\n   * Defines whether the dialog on mobile should have header\n   * @private\n   */\n\n\n  get _shouldHideHeader() {\n    return true;\n  }\n  /**\n   * EVENT HANDLERS\n   */\n\n  /**\n   * @override\n   */\n\n\n  onSelectedDatesChange(event) {\n    event.preventDefault();\n    this._previewValues = { ...this._previewValues,\n      calendarTimestamp: event.detail.timestamp,\n      calendarValue: event.detail.values[0],\n      timeSelectionValue: event.path[1].lastChild.value\n    };\n  }\n\n  onTimeSelectionChange(event) {\n    this._previewValues = { ...this._previewValues,\n      timeSelectionValue: event.detail.value\n    };\n  }\n\n  onTimeSliderChange(event) {\n    this._currentTimeSlider = event.detail.slider;\n  }\n  /**\n   * Handles document resize to switch between <code>phoneMode</code> and normal appearance.\n   */\n\n\n  _handleResize() {\n    const documentWidth = document.body.offsetWidth;\n    const toPhoneMode = documentWidth <= PHONE_MODE_BREAKPOINT;\n    const modeChange = toPhoneMode && !this._phoneMode || !toPhoneMode && this._phoneMode; // XOR not allowed by lint\n\n    if (modeChange) {\n      this._phoneMode = toPhoneMode;\n    }\n  }\n\n  get _submitDisabled() {\n    return !this._calendarSelectedDates || !this._calendarSelectedDates.length;\n  }\n  /**\n   * Handles clicking on the <code>submit</code> button, within the picker`s footer.\n   */\n\n\n  _submitClick() {\n    const selectedDate = this.getSelectedDateTime();\n    const value = this.getFormat().format(selectedDate);\n    const valid = this.isValid(value);\n\n    if (this.value !== value) {\n      this.value = value;\n      this.fireEvent(\"change\", {\n        value: this.value,\n        valid\n      });\n      this.fireEvent(\"value-changed\", {\n        value: this.value,\n        valid\n      });\n    }\n\n    this._focusInputAfterClose = true;\n\n    this._updateValueState();\n\n    this.closePicker();\n  }\n  /**\n   * Handles clicking on the <code>cancel</code> button, within the picker`s footer,\n   * that would disregard the user selection.\n   */\n\n\n  _cancelClick() {\n    this.closePicker();\n  }\n  /**\n   * Handles the date/time switch available in <code>phoneMode</code> to switch\n   * between the date and time views.\n   * @param {Event} event\n   */\n\n\n  _dateTimeSwitchChange(event) {\n    this._showTimeView = event.target.getAttribute(\"key\") === \"Time\";\n\n    if (this._showTimeView) {\n      this._currentTimeSlider = \"hours\";\n    }\n  }\n  /**\n   * @override\n   */\n\n\n  _modifyDateValue(amount, unit) {\n    if (!this.dateValue) {\n      return;\n    }\n\n    const modifiedDate = modifyDateBy(CalendarDate.fromLocalJSDate(this.dateValue), amount, unit, this._minDate, this._maxDate);\n    const modifiedLocalDate = modifiedDate.toLocalJSDate();\n    modifiedLocalDate.setHours(this.dateValue.getHours());\n    modifiedLocalDate.setMinutes(this.dateValue.getMinutes());\n    modifiedLocalDate.setSeconds(this.dateValue.getSeconds());\n    const newValue = this.formatValue(modifiedLocalDate);\n\n    this._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n  }\n\n  async getPicker() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(\"[ui5-responsive-popover]\");\n  }\n\n  getSelectedDateTime() {\n    const selectedDate = this.getFormat().parse(this._calendarSelectedDates[0]);\n    const selectedTime = this.getFormat().parse(this._timeSelectionValue);\n    selectedDate.setHours(selectedTime.getHours());\n    selectedDate.setMinutes(selectedTime.getMinutes());\n    selectedDate.setSeconds(selectedTime.getSeconds());\n    return selectedDate;\n  }\n\n}\n\nDateTimePicker.define();\nexport default DateTimePicker;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/DateTimePicker.js"],"names":["ResizeHandler","getLocale","getCachedLocaleDataInstance","modifyDateBy","CalendarDate","Button","ToggleButton","SegmentedButton","Calendar","DatePicker","TimeSelection","TIMEPICKER_SUBMIT_BUTTON","TIMEPICKER_CANCEL_BUTTON","DATETIME_DESCRIPTION","DATETIME_PICKER_DATE_BUTTON","DATETIME_PICKER_TIME_BUTTON","DateTimePickerPopoverTemplate","DateTimePickerCss","DateTimePickerPopoverCss","PHONE_MODE_BREAKPOINT","metadata","tag","properties","_showTimeView","type","Boolean","noAttribute","_phoneMode","_previewValues","Object","_currentTimeSlider","String","defaultValue","DateTimePicker","staticAreaTemplate","styles","staticAreaStyles","dependencies","constructor","_handleResizeBound","_handleResize","bind","onResponsivePopoverAfterClose","onEnterDOM","register","document","body","onExitDOM","deregister","openPicker","timeSelectionValue","value","getFormat","format","Date","classes","picker","phone","dateTimeView","showTimeView","showDateView","_formatPattern","hasHours","formatPattern","match","fallback","localeData","getCombinedDateTimePattern","_primaryCalendarType","_calendarTimestamp","calendarTimestamp","_calendarSelectedDates","calendarValue","_timeSelectionValue","openIconName","btnOKLabel","i18nBundle","getText","btnCancelLabel","btnDateLabel","btnTimeLabel","showFooter","dateAriaDescription","_shouldHideHeader","onSelectedDatesChange","event","preventDefault","detail","timestamp","values","path","lastChild","onTimeSelectionChange","onTimeSliderChange","slider","documentWidth","offsetWidth","toPhoneMode","modeChange","_submitDisabled","length","_submitClick","selectedDate","getSelectedDateTime","valid","isValid","fireEvent","_focusInputAfterClose","_updateValueState","closePicker","_cancelClick","_dateTimeSwitchChange","target","getAttribute","_modifyDateValue","amount","unit","dateValue","modifiedDate","fromLocalJSDate","_minDate","_maxDate","modifiedLocalDate","toLocalJSDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","newValue","formatValue","_updateValueAndFireEvents","getPicker","staticAreaItem","getStaticAreaItemDomRef","querySelector","parse","selectedTime","define"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,wDAA1B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,2BAAP,MAAwC,qEAAxC;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,SACCC,wBADD,EAECC,wBAFD,EAGCC,oBAHD,EAICC,2BAJD,EAKCC,2BALD,QAMO,mCANP,C,CAQA;;AACA,OAAOC,6BAAP,MAA0C,4DAA1C,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,wBAAP,MAAqC,iDAArC;AAEA,MAAMC,qBAAqB,GAAG,GAA9B,C,CAAmC;;AAEnC;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,qBADW;AAEhBC,EAAAA,UAAU;AAAE;AAAiE;AAE5E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,aAAa,EAAE;AACdC,MAAAA,IAAI,EAAEC,OADQ;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAZ6D;;AAiB5E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACXH,MAAAA,IAAI,EAAEC;AADK,KA1BgE;;AA8B5E;AACF;AACA;AACA;AACEG,IAAAA,cAAc,EAAE;AACfJ,MAAAA,IAAI,EAAEK;AADS,KAlC4D;;AAsC5E;AACF;AACA;AACEC,IAAAA,kBAAkB,EAAE;AACnBN,MAAAA,IAAI,EAAEO,MADa;AAEnBC,MAAAA,YAAY,EAAE;AAFK;AAzCwD;AAF7D,CAAjB;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BxB,UAA7B,CAAwC;AACpB,aAARW,QAAQ,GAAG;AACrB,WAAOA,QAAP;AACA;;AAE4B,aAAlBc,kBAAkB,GAAG;AAC/B,WAAOlB,6BAAP;AACA;;AAEgB,aAANmB,MAAM,GAAG;AACnB,WAAO,CAAC,MAAMA,MAAP,EAAelB,iBAAf,CAAP;AACA;;AAE0B,aAAhBmB,gBAAgB,GAAG;AAC7B,WAAO,CAAC,MAAMA,gBAAP,EAAyBlB,wBAAzB,CAAP;AACA;;AAEsB,aAAZmB,YAAY,GAAG;AACzB,WAAO,CACN,GAAG5B,UAAU,CAAC4B,YADR,EAEN7B,QAFM,EAGNH,MAHM,EAINC,YAJM,EAKNC,eALM,EAMNG,aANM,CAAP;AAQA;;AAED4B,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,kBAAL,GAA0B,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA1B;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,6BAA6B,GAAG;AAC/B,UAAMA,6BAAN;AACA,SAAKnB,aAAL,GAAqB,KAArB;AACA,SAAKK,cAAL,GAAsB,EAAtB;AACA;AAED;AACD;AACA;;;AAECe,EAAAA,UAAU,GAAG;AACZ3C,IAAAA,aAAa,CAAC4C,QAAd,CAAuBC,QAAQ,CAACC,IAAhC,EAAsC,KAAKP,kBAA3C;AACA;;AAEDQ,EAAAA,SAAS,GAAG;AACX/C,IAAAA,aAAa,CAACgD,UAAd,CAAyBH,QAAQ,CAACC,IAAlC,EAAwC,KAAKP,kBAA7C;AACA;AAED;AACD;AACA;;AAEC;AACD;AACA;AACA;;;AACiB,QAAVU,UAAU,GAAG;AAClB,UAAM,MAAMA,UAAN,EAAN;AACA,SAAKnB,kBAAL,GAA0B,OAA1B;AACA,SAAKF,cAAL,CAAoBsB,kBAApB,GAAyC,KAAKC,KAAL,IAAc,KAAKC,SAAL,GAAiBC,MAAjB,CAAwB,IAAIC,IAAJ,EAAxB,CAAvD;AACA;AAED;AACD;AACA;;;AAEY,MAAPC,OAAO,GAAG;AACb,WAAO;AACNC,MAAAA,MAAM,EAAE;AACP,wCAAgC,KAAKC;AAD9B,OADF;AAINC,MAAAA,YAAY,EAAE;AACb,8BAAsB,KAAKD,KAAL,IAAc,KAAKE,YAD5B;AAEb,+BAAuB,KAAKF,KAAL,IAAc,KAAKG;AAF7B;AAJR,KAAP;AASA;;AAEiB,MAAdC,cAAc,GAAG;AACpB,UAAMC,QAAQ,GAAG,CAAC,CAAC,KAAKC,aAAL,CAAmBC,KAAnB,CAAyB,IAAzB,CAAnB;AACA,UAAMC,QAAQ,GAAG,CAAC,KAAKF,aAAN,IAAuB,CAACD,QAAzC;AAEA,UAAMI,UAAU,GAAGhE,2BAA2B,CAACD,SAAS,EAAV,CAA9C;AACA,WAAOgE,QAAQ,GAAGC,UAAU,CAACC,0BAAX,CAAsC,QAAtC,EAAgD,QAAhD,EAA0D,KAAKC,oBAA/D,CAAH,GAA0F,KAAKL,aAA9G;AACA;;AAEqB,MAAlBM,kBAAkB,GAAG;AACxB,WAAO,KAAKzC,cAAL,CAAoB0C,iBAApB,GAAwC,KAAK1C,cAAL,CAAoB0C,iBAA5D,GAAgF,MAAMD,kBAA7F;AACA;;AAEyB,MAAtBE,sBAAsB,GAAG;AAC5B,WAAO,KAAK3C,cAAL,CAAoB4C,aAApB,GAAoC,CAAC,KAAK5C,cAAL,CAAoB4C,aAArB,CAApC,GAA0E,MAAMD,sBAAvF;AACA;;AAEsB,MAAnBE,mBAAmB,GAAG;AACzB,WAAO,KAAK7C,cAAL,CAAoBsB,kBAApB,GAAyC,KAAKtB,cAAL,CAAoBsB,kBAA7D,GAAkF,KAAKC,KAA9F;AACA;;AAEe,MAAZuB,YAAY,GAAG;AAClB,WAAO,WAAP;AACA;;AAEa,MAAVC,UAAU,GAAG;AAChB,WAAO,KAAKC,UAAL,CAAgBC,OAAhB,CAAwBlE,wBAAxB,CAAP;AACA;;AAEiB,MAAdmE,cAAc,GAAG;AACpB,WAAO,KAAKF,UAAL,CAAgBC,OAAhB,CAAwBjE,wBAAxB,CAAP;AACA;;AAEe,MAAZmE,YAAY,GAAG;AAClB,WAAO,KAAKH,UAAL,CAAgBC,OAAhB,CAAwB/D,2BAAxB,CAAP;AACA;;AAEe,MAAZkE,YAAY,GAAG;AAClB,WAAO,KAAKJ,UAAL,CAAgBC,OAAhB,CAAwB9D,2BAAxB,CAAP;AACA;;AAEa,MAAVkE,UAAU,GAAG;AAChB,WAAO,IAAP;AACA;;AAEe,MAAZrB,YAAY,GAAG;AAClB,WAAO,KAAKH,KAAL,GAAa,CAAC,KAAKlC,aAAnB,GAAmC,IAA1C;AACA;;AAEe,MAAZoC,YAAY,GAAG;AAClB,WAAO,KAAKF,KAAL,GAAa,KAAKlC,aAAlB,GAAkC,IAAzC;AACA;;AAEQ,MAALkC,KAAK,GAAG;AACX,WAAO,MAAMA,KAAN,IAAe,KAAK9B,UAA3B;AACA;;AAEsB,MAAnBuD,mBAAmB,GAAG;AACzB,WAAO,KAAKN,UAAL,CAAgBC,OAAhB,CAAwBhE,oBAAxB,CAAP;AACA;AAED;AACD;AACA;AACA;;;AACsB,MAAjBsE,iBAAiB,GAAG;AACvB,WAAO,IAAP;AACA;AAED;AACD;AACA;;AAEC;AACD;AACA;;;AACCC,EAAAA,qBAAqB,CAACC,KAAD,EAAQ;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,SAAK1D,cAAL,GAAsB,EACrB,GAAG,KAAKA,cADa;AAErB0C,MAAAA,iBAAiB,EAAEe,KAAK,CAACE,MAAN,CAAaC,SAFX;AAGrBhB,MAAAA,aAAa,EAAEa,KAAK,CAACE,MAAN,CAAaE,MAAb,CAAoB,CAApB,CAHM;AAIrBvC,MAAAA,kBAAkB,EAAEmC,KAAK,CAACK,IAAN,CAAW,CAAX,EAAcC,SAAd,CAAwBxC;AAJvB,KAAtB;AAMA;;AAEDyC,EAAAA,qBAAqB,CAACP,KAAD,EAAQ;AAC5B,SAAKzD,cAAL,GAAsB,EACrB,GAAG,KAAKA,cADa;AAErBsB,MAAAA,kBAAkB,EAAEmC,KAAK,CAACE,MAAN,CAAapC;AAFZ,KAAtB;AAIA;;AAED0C,EAAAA,kBAAkB,CAACR,KAAD,EAAQ;AACzB,SAAKvD,kBAAL,GAA0BuD,KAAK,CAACE,MAAN,CAAaO,MAAvC;AACA;AAED;AACD;AACA;;;AACCtD,EAAAA,aAAa,GAAG;AACf,UAAMuD,aAAa,GAAGlD,QAAQ,CAACC,IAAT,CAAckD,WAApC;AACA,UAAMC,WAAW,GAAGF,aAAa,IAAI5E,qBAArC;AACA,UAAM+E,UAAU,GAAID,WAAW,IAAI,CAAC,KAAKtE,UAAtB,IAAsC,CAACsE,WAAD,IAAgB,KAAKtE,UAA9E,CAHe,CAG4E;;AAE3F,QAAIuE,UAAJ,EAAgB;AACf,WAAKvE,UAAL,GAAkBsE,WAAlB;AACA;AACD;;AAEkB,MAAfE,eAAe,GAAG;AACrB,WAAO,CAAC,KAAK5B,sBAAN,IAAgC,CAAC,KAAKA,sBAAL,CAA4B6B,MAApE;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,YAAY,GAAG;AACd,UAAMC,YAAY,GAAG,KAAKC,mBAAL,EAArB;AAEA,UAAMpD,KAAK,GAAG,KAAKC,SAAL,GAAiBC,MAAjB,CAAwBiD,YAAxB,CAAd;AACA,UAAME,KAAK,GAAG,KAAKC,OAAL,CAAatD,KAAb,CAAd;;AAEA,QAAI,KAAKA,KAAL,KAAeA,KAAnB,EAA0B;AACzB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKuD,SAAL,CAAe,QAAf,EAAyB;AAAEvD,QAAAA,KAAK,EAAE,KAAKA,KAAd;AAAqBqD,QAAAA;AAArB,OAAzB;AACA,WAAKE,SAAL,CAAe,eAAf,EAAgC;AAAEvD,QAAAA,KAAK,EAAE,KAAKA,KAAd;AAAqBqD,QAAAA;AAArB,OAAhC;AACA;;AAED,SAAKG,qBAAL,GAA6B,IAA7B;;AACA,SAAKC,iBAAL;;AACA,SAAKC,WAAL;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,YAAY,GAAG;AACd,SAAKD,WAAL;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,qBAAqB,CAAC1B,KAAD,EAAQ;AAC5B,SAAK9D,aAAL,GAAqB8D,KAAK,CAAC2B,MAAN,CAAaC,YAAb,CAA0B,KAA1B,MAAqC,MAA1D;;AACA,QAAI,KAAK1F,aAAT,EAAwB;AACvB,WAAKO,kBAAL,GAA0B,OAA1B;AACA;AACD;AAED;AACD;AACA;;;AACCoF,EAAAA,gBAAgB,CAACC,MAAD,EAASC,IAAT,EAAe;AAC9B,QAAI,CAAC,KAAKC,SAAV,EAAqB;AACpB;AACA;;AAED,UAAMC,YAAY,GAAGnH,YAAY,CAACC,YAAY,CAACmH,eAAb,CAA6B,KAAKF,SAAlC,CAAD,EAA+CF,MAA/C,EAAuDC,IAAvD,EAA6D,KAAKI,QAAlE,EAA4E,KAAKC,QAAjF,CAAjC;AACA,UAAMC,iBAAiB,GAAGJ,YAAY,CAACK,aAAb,EAA1B;AACAD,IAAAA,iBAAiB,CAACE,QAAlB,CAA2B,KAAKP,SAAL,CAAeQ,QAAf,EAA3B;AACAH,IAAAA,iBAAiB,CAACI,UAAlB,CAA6B,KAAKT,SAAL,CAAeU,UAAf,EAA7B;AACAL,IAAAA,iBAAiB,CAACM,UAAlB,CAA6B,KAAKX,SAAL,CAAeY,UAAf,EAA7B;AAEA,UAAMC,QAAQ,GAAG,KAAKC,WAAL,CAAiBT,iBAAjB,CAAjB;;AACA,SAAKU,yBAAL,CAA+BF,QAA/B,EAAyC,IAAzC,EAA+C,CAAC,QAAD,EAAW,eAAX,CAA/C;AACA;;AAEc,QAATG,SAAS,GAAG;AACjB,UAAMC,cAAc,GAAG,MAAM,KAAKC,uBAAL,EAA7B;AACA,WAAOD,cAAc,CAACE,aAAf,CAA6B,0BAA7B,CAAP;AACA;;AAEDjC,EAAAA,mBAAmB,GAAG;AACrB,UAAMD,YAAY,GAAG,KAAKlD,SAAL,GAAiBqF,KAAjB,CAAuB,KAAKlE,sBAAL,CAA4B,CAA5B,CAAvB,CAArB;AACA,UAAMmE,YAAY,GAAG,KAAKtF,SAAL,GAAiBqF,KAAjB,CAAuB,KAAKhE,mBAA5B,CAArB;AACA6B,IAAAA,YAAY,CAACsB,QAAb,CAAsBc,YAAY,CAACb,QAAb,EAAtB;AACAvB,IAAAA,YAAY,CAACwB,UAAb,CAAwBY,YAAY,CAACX,UAAb,EAAxB;AACAzB,IAAAA,YAAY,CAAC0B,UAAb,CAAwBU,YAAY,CAACT,UAAb,EAAxB;AAEA,WAAO3B,YAAP;AACA;;AA7QsC;;AAgRxCrE,cAAc,CAAC0G,MAAf;AAEA,eAAe1G,cAAf","sourcesContent":["import ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js\";\nimport modifyDateBy from \"@ui5/webcomponents-localization/dist/dates/modifyDateBy.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport \"@ui5/webcomponents-icons/dist/date-time.js\";\nimport Button from \"./Button.js\";\nimport ToggleButton from \"./ToggleButton.js\";\nimport SegmentedButton from \"./SegmentedButton.js\";\nimport Calendar from \"./Calendar.js\";\nimport DatePicker from \"./DatePicker.js\";\nimport TimeSelection from \"./TimeSelection.js\";\n\n// i18n texts\nimport {\n\tTIMEPICKER_SUBMIT_BUTTON,\n\tTIMEPICKER_CANCEL_BUTTON,\n\tDATETIME_DESCRIPTION,\n\tDATETIME_PICKER_DATE_BUTTON,\n\tDATETIME_PICKER_TIME_BUTTON,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport DateTimePickerPopoverTemplate from \"./generated/templates/DateTimePickerPopoverTemplate.lit.js\";\n\n// Styles\nimport DateTimePickerCss from \"./generated/themes/DateTimePicker.css.js\";\nimport DateTimePickerPopoverCss from \"./generated/themes/DateTimePickerPopover.css.js\";\n\nconst PHONE_MODE_BREAKPOINT = 640; // px\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-datetime-picker\",\n\tproperties: /** @lends sap.ui.webcomponents.main.DateTimePicker.prototype */ {\n\n\t\t/**\n\t\t * Defines the visibility of the time view in <code>phoneMode</code>.\n\t\t * For more information, see the <code>phoneMode</code> property.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> The date view would be displayed by default.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_showTimeView: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the <code>DateTimePicker</code> should be displayed in phone mode.\n\t\t * The phone mode turns on when the component is used on small screens or phone devices.\n\t\t * In phone mode the user can see either the calendar view, or the time view\n\t\t * and can switch between the views via toggle buttons.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_phoneMode: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Selected, but not yet confirmed date/time\n\t\t * @private\n\t\t */\n\t\t_previewValues: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_currentTimeSlider: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"hours\",\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>DateTimePicker</code> component alows users to select both date (day, month and year) and time (hours, minutes and seconds)\n * and for the purpose it consists of input field and Date/Time picker.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>DateTimePicker</code> if you need a combined date and time input component.\n * Don't use it if you want to use either date, or time value.\n * In this case, use the <code>DatePicker</code> or the <code>TimePicker</code> components instead.\n * <br><br>\n * The user can set date/time by:\n * <ul>\n * <li>using the calendar and the time selectors</li>\n * <li>typing in the input field</li>\n * </ul>\n *\n * Programatically, to set date/time for the <code>DateTimePicker</code>, use the <code>value</code> property\n * <br><br>\n * As most of the input based components, the <code>DateTimePicker</code> supports properties,\n * such as: <code>disabled</code>, <code>readonly</code>, <code>valueState</code> and  <code>placeholder</code>.\n *\n * <h3>Formatting</h3>\n *\n * The value entered by typing into the input field must fit to the used date/time format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, hh:mm:ss aa</code>\n * corresponds the <code>13/04/2020, 03:16:16 AM</code> value.\n * <br>\n * The small 'h' defines \"12\" hours format and the \"aa\" symbols - \"AM/PM\" time periods.\n *\n * <br><br>\n * <b>Example:</b> the following format <code>dd/MM/yyyy, HH:mm:ss</code>\n * corresponds the <code>13/04/2020, 15:16:16</code> value.\n * <br>\n * The capital 'H' indicates \"24\" hours format.\n *\n * <br><br>\n * <b>Note:</b> If the <code>formatPattern</code> does NOT include time,\n * the <code>DateTimePicker</code> will fallback to the default time format according to the locale.\n *\n * <br><br>\n * <b>Note:</b> If no placeholder is set to the <code>DateTimePicker</code>,\n * the current <code>formatPattern</code> is displayed as a placeholder.\n * If another placeholder is needed, it must be set or in case no placeholder is needed - it can be set to an empty string.\n *\n * <br><br>\n * <b>Note:</b> If the user input does NOT match the <code>formatPattern</code>,\n * the <code>DateTimePicker</code> makes an attempt to parse it based on the\n * locale settings.\n *\n * <h3>Responsive behavior</h3>\n *\n * The <code>DateTimePicker</code> is responsive and fully adapts to all devices.\n * For larger screens, such as tablet or desktop, it is displayed as a popover, while\n * on phone devices, it is displayed full screen.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DateTimePicker.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateTimePicker\n * @extends DatePicker\n * @tagname ui5-datetime-picker\n * @since 1.0.0-rc.7\n * @public\n */\nclass DateTimePicker extends DatePicker {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn DateTimePickerPopoverTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn [super.styles, DateTimePickerCss];\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [super.staticAreaStyles, DateTimePickerPopoverCss];\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\t...DatePicker.dependencies,\n\t\t\tCalendar,\n\t\t\tButton,\n\t\t\tToggleButton,\n\t\t\tSegmentedButton,\n\t\t\tTimeSelection,\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._handleResizeBound = this._handleResize.bind(this);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tonResponsivePopoverAfterClose() {\n\t\tsuper.onResponsivePopoverAfterClose();\n\t\tthis._showTimeView = false;\n\t\tthis._previewValues = {};\n\t}\n\n\t/**\n\t * LIFECYCLE METHODS\n\t */\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(document.body, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(document.body, this._handleResizeBound);\n\t}\n\n\t/**\n\t * PUBLIC METHODS\n\t */\n\n\t/**\n\t * Opens the picker.\n\t * @public\n\t */\n\tasync openPicker() {\n\t\tawait super.openPicker();\n\t\tthis._currentTimeSlider = \"hours\";\n\t\tthis._previewValues.timeSelectionValue = this.value || this.getFormat().format(new Date());\n\t}\n\n\t/**\n\t * Read-only getters\n\t */\n\n\tget classes() {\n\t\treturn {\n\t\t\tpicker: {\n\t\t\t\t\"ui5-dt-picker-content--phone\": this.phone,\n\t\t\t},\n\t\t\tdateTimeView: {\n\t\t\t\t\"ui5-dt-cal--hidden\": this.phone && this.showTimeView,\n\t\t\t\t\"ui5-dt-time--hidden\": this.phone && this.showDateView,\n\t\t\t},\n\t\t};\n\t}\n\n\tget _formatPattern() {\n\t\tconst hasHours = !!this.formatPattern.match(/H/i);\n\t\tconst fallback = !this.formatPattern || !hasHours;\n\n\t\tconst localeData = getCachedLocaleDataInstance(getLocale());\n\t\treturn fallback ? localeData.getCombinedDateTimePattern(\"medium\", \"medium\", this._primaryCalendarType) : this.formatPattern;\n\t}\n\n\tget _calendarTimestamp() {\n\t\treturn this._previewValues.calendarTimestamp ? this._previewValues.calendarTimestamp : super._calendarTimestamp;\n\t}\n\n\tget _calendarSelectedDates() {\n\t\treturn this._previewValues.calendarValue ? [this._previewValues.calendarValue] : super._calendarSelectedDates;\n\t}\n\n\tget _timeSelectionValue() {\n\t\treturn this._previewValues.timeSelectionValue ? this._previewValues.timeSelectionValue : this.value;\n\t}\n\n\tget openIconName() {\n\t\treturn \"date-time\";\n\t}\n\n\tget btnOKLabel() {\n\t\treturn this.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);\n\t}\n\n\tget btnCancelLabel() {\n\t\treturn this.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);\n\t}\n\n\tget btnDateLabel() {\n\t\treturn this.i18nBundle.getText(DATETIME_PICKER_DATE_BUTTON);\n\t}\n\n\tget btnTimeLabel() {\n\t\treturn this.i18nBundle.getText(DATETIME_PICKER_TIME_BUTTON);\n\t}\n\n\tget showFooter() {\n\t\treturn true;\n\t}\n\n\tget showDateView() {\n\t\treturn this.phone ? !this._showTimeView : true;\n\t}\n\n\tget showTimeView() {\n\t\treturn this.phone ? this._showTimeView : true;\n\t}\n\n\tget phone() {\n\t\treturn super.phone || this._phoneMode;\n\t}\n\n\tget dateAriaDescription() {\n\t\treturn this.i18nBundle.getText(DATETIME_DESCRIPTION);\n\t}\n\n\t/**\n\t * Defines whether the dialog on mobile should have header\n\t * @private\n\t */\n\tget _shouldHideHeader() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * EVENT HANDLERS\n\t */\n\n\t/**\n\t * @override\n\t */\n\tonSelectedDatesChange(event) {\n\t\tevent.preventDefault();\n\n\t\tthis._previewValues = {\n\t\t\t...this._previewValues,\n\t\t\tcalendarTimestamp: event.detail.timestamp,\n\t\t\tcalendarValue: event.detail.values[0],\n\t\t\ttimeSelectionValue: event.path[1].lastChild.value,\n\t\t};\n\t}\n\n\tonTimeSelectionChange(event) {\n\t\tthis._previewValues = {\n\t\t\t...this._previewValues,\n\t\t\ttimeSelectionValue: event.detail.value,\n\t\t};\n\t}\n\n\tonTimeSliderChange(event) {\n\t\tthis._currentTimeSlider = event.detail.slider;\n\t}\n\n\t/**\n\t * Handles document resize to switch between <code>phoneMode</code> and normal appearance.\n\t */\n\t_handleResize() {\n\t\tconst documentWidth = document.body.offsetWidth;\n\t\tconst toPhoneMode = documentWidth <= PHONE_MODE_BREAKPOINT;\n\t\tconst modeChange = (toPhoneMode && !this._phoneMode) || (!toPhoneMode && this._phoneMode); // XOR not allowed by lint\n\n\t\tif (modeChange) {\n\t\t\tthis._phoneMode = toPhoneMode;\n\t\t}\n\t}\n\n\tget _submitDisabled() {\n\t\treturn !this._calendarSelectedDates || !this._calendarSelectedDates.length;\n\t}\n\n\t/**\n\t * Handles clicking on the <code>submit</code> button, within the picker`s footer.\n\t */\n\t_submitClick() {\n\t\tconst selectedDate = this.getSelectedDateTime();\n\n\t\tconst value = this.getFormat().format(selectedDate);\n\t\tconst valid = this.isValid(value);\n\n\t\tif (this.value !== value) {\n\t\t\tthis.value = value;\n\t\t\tthis.fireEvent(\"change\", { value: this.value, valid });\n\t\t\tthis.fireEvent(\"value-changed\", { value: this.value, valid });\n\t\t}\n\n\t\tthis._focusInputAfterClose = true;\n\t\tthis._updateValueState();\n\t\tthis.closePicker();\n\t}\n\n\t/**\n\t * Handles clicking on the <code>cancel</code> button, within the picker`s footer,\n\t * that would disregard the user selection.\n\t */\n\t_cancelClick() {\n\t\tthis.closePicker();\n\t}\n\n\t/**\n\t * Handles the date/time switch available in <code>phoneMode</code> to switch\n\t * between the date and time views.\n\t * @param {Event} event\n\t */\n\t_dateTimeSwitchChange(event) {\n\t\tthis._showTimeView = event.target.getAttribute(\"key\") === \"Time\";\n\t\tif (this._showTimeView) {\n\t\t\tthis._currentTimeSlider = \"hours\";\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t */\n\t_modifyDateValue(amount, unit) {\n\t\tif (!this.dateValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modifiedDate = modifyDateBy(CalendarDate.fromLocalJSDate(this.dateValue), amount, unit, this._minDate, this._maxDate);\n\t\tconst modifiedLocalDate = modifiedDate.toLocalJSDate();\n\t\tmodifiedLocalDate.setHours(this.dateValue.getHours());\n\t\tmodifiedLocalDate.setMinutes(this.dateValue.getMinutes());\n\t\tmodifiedLocalDate.setSeconds(this.dateValue.getSeconds());\n\n\t\tconst newValue = this.formatValue(modifiedLocalDate);\n\t\tthis._updateValueAndFireEvents(newValue, true, [\"change\", \"value-changed\"]);\n\t}\n\n\tasync getPicker() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"[ui5-responsive-popover]\");\n\t}\n\n\tgetSelectedDateTime() {\n\t\tconst selectedDate = this.getFormat().parse(this._calendarSelectedDates[0]);\n\t\tconst selectedTime = this.getFormat().parse(this._timeSelectionValue);\n\t\tselectedDate.setHours(selectedTime.getHours());\n\t\tselectedDate.setMinutes(selectedTime.getMinutes());\n\t\tselectedDate.setSeconds(selectedTime.getSeconds());\n\n\t\treturn selectedDate;\n\t}\n}\n\nDateTimePicker.define();\n\nexport default DateTimePicker;\n"]},"metadata":{},"sourceType":"module"}