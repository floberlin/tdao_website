{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/flo/Desktop/mdao.fioriapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { isLeft, isRight } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ListItem from \"./ListItem.js\";\nimport Icon from \"./Icon.js\";\nimport \"@ui5/webcomponents-icons/dist/navigation-right-arrow.js\";\nimport \"@ui5/webcomponents-icons/dist/navigation-down-arrow.js\";\nimport { TREE_ITEM_ARIA_LABEL, TREE_ITEM_EXPAND_NODE, TREE_ITEM_COLLAPSE_NODE } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport TreeListItemTemplate from \"./generated/templates/TreeListItemTemplate.lit.js\"; // Styles\n\nimport treeListItemCss from \"./generated/themes/TreeListItem.css.js\";\n/**\n * @public\n */\n\nvar metadata = {\n  tag: \"ui5-li-tree\",\n  languageAware: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */\n  {\n    /**\n     * Defines the indentation of the tree list item. Use level 1 for tree list items, representing top-level tree nodes.\n     *\n     * @type {Integer}\n     * @public\n     * @defaultValue 1\n     */\n    level: {\n      type: Integer,\n      defaultValue: 1\n    },\n\n    /**\n     * If set, an icon will be displayed before the text of the tree list item.\n     *\n     * @public\n     * @type {String}\n     * @defaultValue \"\"\n     */\n    icon: {\n      type: String\n    },\n\n    /**\n     * Defines whether the tree list item should display an expand/collapse button.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    showToggleButton: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    expanded: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the <code>additionalText</code>, displayed in the end of the tree item.\n     * @type {string}\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalText: {\n      type: String\n    },\n\n    /**\n     * Defines the state of the <code>additionalText</code>.\n     * <br>\n     * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Erorr\"</code>.\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalTextState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Defines whether the toggle button is shown at the end, rather than at the beginning of the item\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _toggleButtonEnd: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the item shows minimal details - only icon (no text or toggle button)\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _minimal: {\n      type: Boolean\n    },\n\n    /**\n     * @private\n     * @since 1.0.0-rc.11\n     */\n    _setsize: {\n      type: Integer,\n      defaultValue: 1,\n      noAttribute: true\n    },\n\n    /**\n     * @private\n     * @since 1.0.0-rc.11\n     */\n    _posinset: {\n      type: Integer,\n      defaultValue: 1,\n      noAttribute: true\n    }\n  },\n  slots:\n  /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */\n  {\n    /**\n     * Defines the text of the component.\n     * <br><br>\n     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */\n  {\n    /**\n     * Fired when the user interacts with the expand/collapse button of the tree list item.\n     * @event\n     * @param {HTMLElement} item the toggled item.\n     * @public\n     */\n    toggle: {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the user drills down into the tree hierarchy by pressing the right arrow on the tree node.\n     *\n     * @event sap.ui.webcomponents.main.TreeListItem#step-in\n     * @param {HTMLElement} item the item on which right arrow was pressed.\n     * @public\n     */\n    \"step-in\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the user goes up the tree hierarchy by pressing the left arrow on the tree node.\n     *\n     * @event sap.ui.webcomponents.main.TreeListItem#step-out\n     * @param {HTMLElement} item the item on which left arrow was pressed.\n     * @public\n     */\n    \"step-out\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n * The <code>ui5-li-tree</code> represents a node in a tree structure, shown as a <code>ui5-list</code>.\n * <br>\n * <i>Note:</i> Do not use <code>ui5-li-tree</code> directly in your apps. Use <code>ui5-tree-item</code> instead, as it can be nested inside a <code>ui5-tree</code>.\n * On the other hand, <code>ui5-li-tree</code> can only be slotted inside a <code>ui5-list</code>, being a list item. It may be useful if you want to build a custom tree component, for example.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-li-tree</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>title - Used to style the title of the tree list item</li>\n * <li>additionalText - Used to style the additionalText of the tree list item</li>\n * <li>icon - Used to style the icon of the tree list item</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeListItem\n * @extends ListItem\n * @tagname ui5-li-tree\n * @public\n * @since 1.0.0-rc.8\n */\n\nvar TreeListItem = /*#__PURE__*/function (_ListItem) {\n  _inherits(TreeListItem, _ListItem);\n\n  var _super = _createSuper(TreeListItem);\n\n  function TreeListItem() {\n    _classCallCheck(this, TreeListItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TreeListItem, [{\n    key: \"onBeforeRendering\",\n    value: function onBeforeRendering() {\n      this.actionable = false;\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var allClasses = _get(_getPrototypeOf(TreeListItem.prototype), \"classes\", this);\n\n      allClasses.main[\"ui5-li-root-tree\"] = true;\n      return allClasses;\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return {\n        preContent: {\n          \"padding-left\": isIE() ? \"\".concat(this.effectiveLevel, \"rem\") : \"calc(var(--_ui5-tree-indent-step) * \".concat(this.effectiveLevel, \")\")\n        }\n      };\n    }\n  }, {\n    key: \"effectiveLevel\",\n    get: function get() {\n      return this.level - 1;\n    }\n  }, {\n    key: \"hasParent\",\n    get: function get() {\n      return this.level > 1;\n    }\n  }, {\n    key: \"_toggleIconName\",\n    get: function get() {\n      return this.expanded ? \"navigation-down-arrow\" : \"navigation-right-arrow\";\n    }\n  }, {\n    key: \"_showToggleButtonBeginning\",\n    get: function get() {\n      return this.showToggleButton && !this._minimal && !this._toggleButtonEnd;\n    }\n  }, {\n    key: \"_showToggleButtonEnd\",\n    get: function get() {\n      return this.showToggleButton && !this._minimal && this._toggleButtonEnd;\n    }\n  }, {\n    key: \"_showTitle\",\n    get: function get() {\n      return this.textContent.length && !this._minimal;\n    }\n  }, {\n    key: \"_accInfo\",\n    get: function get() {\n      return {\n        role: \"treeitem\",\n        ariaExpanded: this.showToggleButton ? this.expanded : undefined,\n        ariaLevel: this.level,\n        posinset: this._posinset,\n        setsize: this._setsize,\n        ariaSelectedText: this.ariaSelectedText,\n        listItemAriaLabel: TreeListItem.i18nBundle.getText(TREE_ITEM_ARIA_LABEL)\n      };\n    }\n  }, {\n    key: \"_toggleClick\",\n    value: function _toggleClick(event) {\n      event.stopPropagation();\n      this.fireEvent(\"toggle\", {\n        item: this\n      });\n    }\n  }, {\n    key: \"_onkeydown\",\n    value: function _onkeydown(event) {\n      _get(_getPrototypeOf(TreeListItem.prototype), \"_onkeydown\", this).call(this, event);\n\n      if (this.showToggleButton && isRight(event)) {\n        if (!this.expanded) {\n          this.fireEvent(\"toggle\", {\n            item: this\n          });\n        } else {\n          this.fireEvent(\"step-in\", {\n            item: this\n          });\n        }\n      }\n\n      if (isLeft(event)) {\n        if (this.expanded) {\n          this.fireEvent(\"toggle\", {\n            item: this\n          });\n        } else if (this.hasParent) {\n          this.fireEvent(\"step-out\", {\n            item: this\n          });\n        }\n      }\n    }\n  }, {\n    key: \"iconAccessibleName\",\n    get: function get() {\n      return this.expanded ? TreeListItem.i18nBundle.getText(TREE_ITEM_COLLAPSE_NODE) : TreeListItem.i18nBundle.getText(TREE_ITEM_EXPAND_NODE);\n    }\n  }], [{\n    key: \"template\",\n    get: function get() {\n      return TreeListItemTemplate;\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return [ListItem.styles, treeListItemCss];\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return metadata;\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [].concat(_toConsumableArray(ListItem.dependencies), [Icon]);\n    }\n  }, {\n    key: \"onDefine\",\n    value: function () {\n      var _onDefine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getI18nBundle(\"@ui5/webcomponents\");\n\n              case 2:\n                TreeListItem.i18nBundle = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onDefine() {\n        return _onDefine.apply(this, arguments);\n      }\n\n      return onDefine;\n    }()\n  }]);\n\n  return TreeListItem;\n}(ListItem);\n\nTreeListItem.define();\nexport default TreeListItem;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/TreeListItem.js"],"names":["Integer","isLeft","isRight","getI18nBundle","ValueState","isIE","ListItem","Icon","TREE_ITEM_ARIA_LABEL","TREE_ITEM_EXPAND_NODE","TREE_ITEM_COLLAPSE_NODE","TreeListItemTemplate","treeListItemCss","metadata","tag","languageAware","properties","level","type","defaultValue","icon","String","showToggleButton","Boolean","expanded","additionalText","additionalTextState","None","_toggleButtonEnd","_minimal","_setsize","noAttribute","_posinset","slots","Node","events","toggle","detail","item","HTMLElement","TreeListItem","actionable","allClasses","main","preContent","effectiveLevel","textContent","length","role","ariaExpanded","undefined","ariaLevel","posinset","setsize","ariaSelectedText","listItemAriaLabel","i18nBundle","getText","event","stopPropagation","fireEvent","hasParent","styles","dependencies","define"],"mappings":"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","sourcesContent":["import Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { isLeft, isRight } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { isIE } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ListItem from \"./ListItem.js\";\nimport Icon from \"./Icon.js\";\nimport \"@ui5/webcomponents-icons/dist/navigation-right-arrow.js\";\nimport \"@ui5/webcomponents-icons/dist/navigation-down-arrow.js\";\nimport {\n\tTREE_ITEM_ARIA_LABEL,\n\tTREE_ITEM_EXPAND_NODE,\n\tTREE_ITEM_COLLAPSE_NODE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport TreeListItemTemplate from \"./generated/templates/TreeListItemTemplate.lit.js\";\n\n// Styles\nimport treeListItemCss from \"./generated/themes/TreeListItem.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-li-tree\",\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the indentation of the tree list item. Use level 1 for tree list items, representing top-level tree nodes.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @public\n\t\t * @defaultValue 1\n\t\t */\n\t\tlevel: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 1,\n\t\t},\n\n\t\t/**\n\t\t * If set, an icon will be displayed before the text of the tree list item.\n\t\t *\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultValue \"\"\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree list item should display an expand/collapse button.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tshowToggleButton: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\texpanded: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>additionalText</code>, displayed in the end of the tree item.\n\t\t * @type {string}\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the state of the <code>additionalText</code>.\n\t\t * <br>\n\t\t * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Erorr\"</code>.\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalTextState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the toggle button is shown at the end, rather than at the beginning of the item\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_toggleButtonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the item shows minimal details - only icon (no text or toggle button)\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_minimal: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t * @since 1.0.0-rc.11\n\t\t */\n\t\t_setsize: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 1,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t * @since 1.0.0-rc.11\n\t\t */\n\t\t_posinset: {\n\t\t\ttype: Integer,\n\t\t\tdefaultValue: 1,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {\n\n\t\t/**\n\t\t * Fired when the user interacts with the expand/collapse button of the tree list item.\n\t\t * @event\n\t\t * @param {HTMLElement} item the toggled item.\n\t\t * @public\n\t\t */\n\t\ttoggle: {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user drills down into the tree hierarchy by pressing the right arrow on the tree node.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.TreeListItem#step-in\n\t\t * @param {HTMLElement} item the item on which right arrow was pressed.\n\t\t * @public\n\t\t */\n\t\t\"step-in\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user goes up the tree hierarchy by pressing the left arrow on the tree node.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.TreeListItem#step-out\n\t\t * @param {HTMLElement} item the item on which left arrow was pressed.\n\t\t * @public\n\t\t */\n\t\t\"step-out\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n * The <code>ui5-li-tree</code> represents a node in a tree structure, shown as a <code>ui5-list</code>.\n * <br>\n * <i>Note:</i> Do not use <code>ui5-li-tree</code> directly in your apps. Use <code>ui5-tree-item</code> instead, as it can be nested inside a <code>ui5-tree</code>.\n * On the other hand, <code>ui5-li-tree</code> can only be slotted inside a <code>ui5-list</code>, being a list item. It may be useful if you want to build a custom tree component, for example.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-li-tree</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>title - Used to style the title of the tree list item</li>\n * <li>additionalText - Used to style the additionalText of the tree list item</li>\n * <li>icon - Used to style the icon of the tree list item</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeListItem\n * @extends ListItem\n * @tagname ui5-li-tree\n * @public\n * @since 1.0.0-rc.8\n */\nclass TreeListItem extends ListItem {\n\tstatic get template() {\n\t\treturn TreeListItemTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn [ListItem.styles, treeListItemCss];\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\t...ListItem.dependencies,\n\t\t\tIcon,\n\t\t];\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.actionable = false;\n\t}\n\n\tget classes() {\n\t\tconst allClasses = super.classes;\n\t\tallClasses.main[\"ui5-li-root-tree\"] = true;\n\t\treturn allClasses;\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tpreContent: {\n\t\t\t\t\"padding-left\": isIE() ? `${this.effectiveLevel}rem` : `calc(var(--_ui5-tree-indent-step) * ${this.effectiveLevel})`,\n\t\t\t},\n\t\t};\n\t}\n\n\tget effectiveLevel() {\n\t\treturn this.level - 1;\n\t}\n\n\tget hasParent() {\n\t\treturn this.level > 1;\n\t}\n\n\tget _toggleIconName() {\n\t\treturn this.expanded ? \"navigation-down-arrow\" : \"navigation-right-arrow\";\n\t}\n\n\tget _showToggleButtonBeginning() {\n\t\treturn this.showToggleButton && !this._minimal && !this._toggleButtonEnd;\n\t}\n\n\tget _showToggleButtonEnd() {\n\t\treturn this.showToggleButton && !this._minimal && this._toggleButtonEnd;\n\t}\n\n\tget _showTitle() {\n\t\treturn this.textContent.length && !this._minimal;\n\t}\n\n\tget _accInfo() {\n\t\treturn {\n\t\t\trole: \"treeitem\",\n\t\t\tariaExpanded: this.showToggleButton ? this.expanded : undefined,\n\t\t\tariaLevel: this.level,\n\t\t\tposinset: this._posinset,\n\t\t\tsetsize: this._setsize,\n\t\t\tariaSelectedText: this.ariaSelectedText,\n\t\t\tlistItemAriaLabel: TreeListItem.i18nBundle.getText(TREE_ITEM_ARIA_LABEL),\n\t\t};\n\t}\n\n\t_toggleClick(event) {\n\t\tevent.stopPropagation();\n\t\tthis.fireEvent(\"toggle\", { item: this });\n\t}\n\n\t_onkeydown(event) {\n\t\tsuper._onkeydown(event);\n\n\t\tif (this.showToggleButton && isRight(event)) {\n\t\t\tif (!this.expanded) {\n\t\t\t\tthis.fireEvent(\"toggle\", { item: this });\n\t\t\t} else {\n\t\t\t\tthis.fireEvent(\"step-in\", { item: this });\n\t\t\t}\n\t\t}\n\n\t\tif (isLeft(event)) {\n\t\t\tif (this.expanded) {\n\t\t\t\tthis.fireEvent(\"toggle\", { item: this });\n\t\t\t} else if (this.hasParent) {\n\t\t\t\tthis.fireEvent(\"step-out\", { item: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tget iconAccessibleName() {\n\t\treturn this.expanded ? TreeListItem.i18nBundle.getText(TREE_ITEM_COLLAPSE_NODE) : TreeListItem.i18nBundle.getText(TREE_ITEM_EXPAND_NODE);\n\t}\n\n\tstatic async onDefine() {\n\t\tTreeListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nTreeListItem.define();\n\nexport default TreeListItem;\n"]},"metadata":{},"sourceType":"module"}