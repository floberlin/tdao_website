{"ast":null,"code":"var ua = navigator.userAgent;\nvar touch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\nvar ie = /(msie|trident)/i.test(ua);\nvar chrome = !ie && /(Chrome|CriOS)/.test(ua);\nvar safari = !ie && !chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(ua);\nvar webkit = !ie && /webkit/.test(ua);\nvar windows = navigator.platform.indexOf(\"Win\") !== -1;\nvar iOS = navigator.platform.match(/iPhone|iPad|iPod/) || navigator.userAgent.match(/Mac/) && \"ontouchend\" in document;\nvar android = !windows && /Android/.test(ua);\nvar androidPhone = android && /(?=android)(?=.*mobile)/i.test(ua);\nvar ipad = /ipad/i.test(ua) || /Macintosh/i.test(ua) && \"ontouchend\" in document; // With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n// \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n// Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n\nvar windowsVersion;\nvar webkitVersion;\nvar tablet;\n\nvar isWindows8OrAbove = function isWindows8OrAbove() {\n  if (!windows) {\n    return false;\n  }\n\n  if (windowsVersion === undefined) {\n    var matches = ua.match(/Windows NT (\\d+).(\\d)/);\n    windowsVersion = matches ? parseFloat(matches[1]) : 0;\n  }\n\n  return windowsVersion >= 8;\n};\n\nvar isWebkit537OrAbove = function isWebkit537OrAbove() {\n  if (!webkit) {\n    return false;\n  }\n\n  if (webkitVersion === undefined) {\n    var matches = ua.match(/(webkit)[ /]([\\w.]+)/);\n    webkitVersion = matches ? parseFloat(matches[1]) : 0;\n  }\n\n  return webkitVersion >= 537.10;\n};\n\nvar detectTablet = function detectTablet() {\n  if (tablet !== undefined) {\n    return;\n  }\n\n  if (ipad) {\n    tablet = true;\n    return;\n  }\n\n  if (touch) {\n    if (isWindows8OrAbove()) {\n      tablet = true;\n      return;\n    }\n\n    if (chrome && android) {\n      tablet = !/Mobile Safari\\/[.0-9]+/.test(ua);\n      return;\n    }\n\n    var densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n\n    if (android && isWebkit537OrAbove()) {\n      densityFactor = 1;\n    }\n\n    tablet = Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600;\n    return;\n  }\n\n  tablet = ie && ua.indexOf(\"Touch\") !== -1 || android && !androidPhone;\n};\n\nvar supportsTouch = function supportsTouch() {\n  return touch;\n};\n\nvar isIE = function isIE() {\n  return ie;\n};\n\nvar isSafari = function isSafari() {\n  return safari;\n};\n\nvar isChrome = function isChrome() {\n  return chrome;\n};\n\nvar isTablet = function isTablet() {\n  detectTablet();\n  return (touch || isWindows8OrAbove()) && tablet;\n};\n\nvar isPhone = function isPhone() {\n  detectTablet();\n  return touch && !tablet;\n};\n\nvar isDesktop = function isDesktop() {\n  return !isTablet() && !isPhone() || isWindows8OrAbove();\n};\n\nvar isCombi = function isCombi() {\n  return isTablet() && isDesktop();\n};\n\nvar isIOS = function isIOS() {\n  return iOS;\n};\n\nexport { supportsTouch, isIE, isSafari, isChrome, isPhone, isTablet, isDesktop, isCombi, isIOS };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/Device.js"],"names":["ua","navigator","userAgent","touch","window","maxTouchPoints","ie","test","chrome","safari","webkit","windows","platform","indexOf","iOS","match","document","android","androidPhone","ipad","windowsVersion","webkitVersion","tablet","isWindows8OrAbove","undefined","matches","parseFloat","isWebkit537OrAbove","detectTablet","densityFactor","devicePixelRatio","Math","min","screen","width","height","supportsTouch","isIE","isSafari","isChrome","isTablet","isPhone","isDesktop","isCombi","isIOS"],"mappings":"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","sourcesContent":["const ua = navigator.userAgent;\nconst touch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\nconst ie = /(msie|trident)/i.test(ua);\nconst chrome = !ie && /(Chrome|CriOS)/.test(ua);\nconst safari = !ie && !chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(ua);\nconst webkit = !ie && /webkit/.test(ua);\nconst windows = navigator.platform.indexOf(\"Win\") !== -1;\nconst iOS = navigator.platform.match(/iPhone|iPad|iPod/) || (navigator.userAgent.match(/Mac/) && \"ontouchend\" in document);\nconst android = !windows && /Android/.test(ua);\nconst androidPhone = android && /(?=android)(?=.*mobile)/i.test(ua);\nconst ipad = /ipad/i.test(ua) || (/Macintosh/i.test(ua) && \"ontouchend\" in document);\n// With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n// \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n// Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n\nlet windowsVersion;\nlet webkitVersion;\nlet tablet;\n\nconst isWindows8OrAbove = () => {\n\tif (!windows) {\n\t\treturn false;\n\t}\n\n\tif (windowsVersion === undefined) {\n\t\tconst matches = ua.match(/Windows NT (\\d+).(\\d)/);\n\t\twindowsVersion = matches ? parseFloat(matches[1]) : 0;\n\t}\n\n\treturn windowsVersion >= 8;\n};\n\nconst isWebkit537OrAbove = () => {\n\tif (!webkit) {\n\t\treturn false;\n\t}\n\n\tif (webkitVersion === undefined) {\n\t\tconst matches = ua.match(/(webkit)[ /]([\\w.]+)/);\n\t\twebkitVersion = matches ? parseFloat(matches[1]) : 0;\n\t}\n\n\treturn webkitVersion >= 537.10;\n};\n\nconst detectTablet = () => {\n\tif (tablet !== undefined) {\n\t\treturn;\n\t}\n\n\tif (ipad) {\n\t\ttablet = true;\n\t\treturn;\n\t}\n\n\tif (touch) {\n\t\tif (isWindows8OrAbove()) {\n\t\t\ttablet = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (chrome && android) {\n\t\t\ttablet = !/Mobile Safari\\/[.0-9]+/.test(ua);\n\t\t\treturn;\n\t\t}\n\n\t\tlet densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n\t\tif (android && isWebkit537OrAbove()) {\n\t\t\tdensityFactor = 1;\n\t\t}\n\n\t\ttablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);\n\t\treturn;\n\t}\n\n\ttablet = (ie && ua.indexOf(\"Touch\") !== -1) || (android && !androidPhone);\n};\n\nconst supportsTouch = () => touch;\nconst isIE = () => ie;\nconst isSafari = () => safari;\nconst isChrome = () => chrome;\n\nconst isTablet = () => {\n\tdetectTablet();\n\treturn (touch || isWindows8OrAbove()) && tablet;\n};\n\nconst isPhone = () => {\n\tdetectTablet();\n\treturn touch && !tablet;\n};\n\nconst isDesktop = () => {\n\treturn (!isTablet() && !isPhone()) || isWindows8OrAbove();\n};\n\nconst isCombi = () => {\n\treturn isTablet() && isDesktop();\n};\n\nconst isIOS = () => {\n\treturn iOS;\n};\n\nexport {\n\tsupportsTouch,\n\tisIE,\n\tisSafari,\n\tisChrome,\n\tisPhone,\n\tisTablet,\n\tisDesktop,\n\tisCombi,\n\tisIOS,\n};\n"]},"metadata":{},"sourceType":"module"}