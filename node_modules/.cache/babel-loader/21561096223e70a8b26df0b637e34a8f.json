{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isIE, isPhone, isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { isUp, isDown, isSpace, isEnter, isBackSpace, isEscape, isTabNext } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getCaretPosition, setCaretPosition } from \"@ui5/webcomponents-base/dist/util/Caret.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport InputType from \"./types/InputType.js\";\nimport Popover from \"./Popover.js\"; // Templates\n\nimport InputTemplate from \"./generated/templates/InputTemplate.lit.js\";\nimport InputPopoverTemplate from \"./generated/templates/InputPopoverTemplate.lit.js\";\nimport { VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION, VALUE_STATE_ERROR, VALUE_STATE_WARNING, INPUT_SUGGESTIONS, INPUT_SUGGESTIONS_TITLE, INPUT_SUGGESTIONS_ONE_HIT, INPUT_SUGGESTIONS_MORE_HITS, INPUT_SUGGESTIONS_NO_HIT } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport styles from \"./generated/themes/Input.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\nconst rgxFloat = new RegExp(/(\\+|-)?\\d+(\\.|,)\\d+/);\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-input\",\n  languageAware: true,\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Defines the icon to be displayed in the component.\n     *\n     * @type {sap.ui.webcomponents.main.IIcon}\n     * @slot\n     * @public\n     */\n    icon: {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the suggestion items.\n     * <br><br>\n     * Example:\n     * <br><br>\n     * &lt;ui5-input show-suggestions><br>\n     * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #1\">&lt;/ui5-suggestion-item><br>\n     * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #2\">&lt;/ui5-suggestion-item><br>\n     * &lt;/ui5-input>\n     * <br>\n     * <ui5-input show-suggestions>\n     * <ui5-suggestion-group-item text=\"Group #1\"></ui5-suggestion-group-item>\n     * <ui5-suggestion-item text=\"Item #1\"></ui5-suggestion-item>\n     * <ui5-suggestion-item text=\"Item #2\"></ui5-suggestion-item>\n     * <ui5-suggestion-group-item text=\"Group #2\"></ui5-suggestion-group-item>\n     * <ui5-suggestion-item text=\"Item #3\"></ui5-suggestion-item>\n     * <ui5-suggestion-item text=\"Item #4\"></ui5-suggestion-item>\n     * </ui5-input>\n     * <br><br>\n     * <b>Note:</b> The suggestion would be displayed only if the <code>showSuggestions</code>\n     * property is set to <code>true</code>.\n     * <br><br>\n     * <b>Note:</b> The <code>&lt;ui5-suggestion-item></code> and <code>&lt;ui5-suggestion-group-item><code/> are recommended to be used as suggestion items.\n     * <br><br>\n     * <b>Note:</b> Importing the Input Suggestions Support feature:\n     * <br>\n     * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code>\n     * <br>\n     * automatically imports the <code>&lt;ui5-suggestion-item></code> and <code>&lt;ui5-suggestion-group-item></code> for your convenience.\n     *\n     * @type {sap.ui.webcomponents.main.IInputSuggestionItem[]}\n     * @slot suggestionItems\n     * @public\n     */\n    \"default\": {\n      propertyName: \"suggestionItems\",\n      type: HTMLElement\n    },\n\n    /**\n     * The slot is used for native <code>input</code> HTML element to enable form submit,\n     * when <code>name</code> property is set.\n     * @type {HTMLElement[]}\n     * @private\n     */\n    formSupport: {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the value state message that will be displayed as pop up under the component.\n     * <br><br>\n     *\n     * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n     * <br>\n     * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n     * when the component is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n     * <br>\n     * <b>Note:</b> If the component has <code>suggestionItems</code>,\n     * the <code>valueStateMessage</code> would be displayed as part of the same popover, if used on desktop, or dialog - on phone.\n     * @type {HTMLElement[]}\n     * @since 1.0.0-rc.6\n     * @slot\n     * @public\n     */\n    valueStateMessage: {\n      type: HTMLElement\n    }\n  },\n  properties:\n  /** @lends  sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Defines whether the component is in disabled state.\n     * <br><br>\n     * <b>Note:</b> A disabled component is completely noninteractive.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines if characters within the suggestions are to be highlighted\n     * in case the input value matches parts of the suggestions text.\n     * <br><br>\n     * <b>Note:</b> takes effect when <code>showSuggestions</code> is set to <code>true</code>\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     * @sicne 1.0.0-rc.8\n     */\n    highlight: {\n      type: Boolean\n    },\n\n    /**\n     * Defines a short hint intended to aid the user with data entry when the\n     * component has no value.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    placeholder: {\n      type: String\n    },\n\n    /**\n     * Defines whether the component is read-only.\n     * <br><br>\n     * <b>Note:</b> A read-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the component is required.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.0.0-rc.3\n     */\n    required: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the HTML type of the component.\n     * Available options are: <code>Text</code>, <code>Email</code>,\n     * <code>Number</code>, <code>Password</code>, <code>Tel</code>, and <code>URL</code>.\n     * <br><br>\n     * <b>Notes:</b>\n     * <ul>\n     * <li>The particular effect of this property differs depending on the browser\n     * and the current language settings, especially for type <code>Number</code>.</li>\n     * <li>The property is mostly intended to be used with touch devices\n     * that use different soft keyboard layouts depending on the given input type.</li>\n     * </ul>\n     *\n     * @type {InputType}\n     * @defaultvalue \"Text\"\n     * @public\n     */\n    type: {\n      type: InputType,\n      defaultValue: InputType.Text\n    },\n\n    /**\n     * Defines the value of the component.\n     * <br><br>\n     * <b>Note:</b> The property is updated upon typing.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    value: {\n      type: String\n    },\n\n    /**\n     * Defines the value state of the component.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Determines the name with which the component will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the component so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n\n    /**\n     * Defines whether the component should show suggestions, if such are present.\n     * <br><br>\n     * <b>Note:</b> You need to import the <code>InputSuggestions</code> module\n     * from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"</code> to enable this functionality.\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    showSuggestions: {\n      type: Boolean\n    },\n\n    /**\n     * Sets the maximum number of characters available in the input field.\n     *\n     * @type {Integer}\n     * @since 1.0.0-rc.5\n     * @public\n     */\n    maxlength: {\n      type: Integer\n    },\n\n    /**\n     * Sets the accessible aria name of the component.\n     *\n     * @type {String}\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String\n    },\n\n    /**\n     * Receives id(or many ids) of the elements that label the input\n     *\n     * @type {String}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleNameRef: {\n      type: String,\n      defaultValue: \"\"\n    },\n\n    /**\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n    _input: {\n      type: Object\n    },\n    _inputAccInfo: {\n      type: Object\n    },\n    _nativeInputAttributes: {\n      type: Object\n    },\n    _inputWidth: {\n      type: Integer\n    },\n    _listWidth: {\n      type: Integer\n    },\n    _isPopoverOpen: {\n      type: Boolean,\n      noAttribute: true\n    },\n    _inputIconFocused: {\n      type: Boolean,\n      noAttribute: true\n    }\n  },\n  events:\n  /** @lends  sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Fired when the input operation has finished by pressing Enter or on focusout.\n     *\n     * @event\n     * @public\n     */\n    change: {},\n\n    /**\n     * Fired when the value of the component changes at each keystroke,\n     * and when a suggestion item has been selected.\n     *\n     * @event\n     * @public\n     */\n    input: {},\n\n    /**\n     * Fired when a suggestion item, that is displayed in the suggestion popup, is selected.\n     *\n     * @event sap.ui.webcomponents.main.Input#suggestion-item-select\n     * @param {HTMLElement} item The selected item\n     * @public\n     */\n    \"suggestion-item-select\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the user navigates to a suggestion item via the ARROW keys,\n     * as a preview, before the final selection.\n     *\n     * @event sap.ui.webcomponents.main.Input#suggestion-item-preview\n     * @param {HTMLElement} item The previewed suggestion item\n     * @param {HTMLElement} targetRef The DOM ref of the suggestion item.\n     * @public\n     * @since 1.0.0-rc.8\n     */\n    \"suggestion-item-preview\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        },\n        targetRef: {\n          type: HTMLElement\n        }\n      }\n    },\n\n    /**\n     * Fired when the user scrolls the suggestion popover.\n     *\n     * @event sap.ui.webcomponents.main.Input#suggestion-scroll\n     * @param {Integer} scrollTop The current scroll position\n     * @param {HTMLElement} scrollContainer The scroll container\n     * @public\n     * @since 1.0.0-rc.8\n     */\n    \"suggestion-scroll\": {\n      detail: {\n        scrollTop: {\n          type: Integer\n        },\n        scrollContainer: {\n          type: HTMLElement\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-input</code> component allows the user to enter and edit text or numeric values in one line.\n * <br>\n * Additionally, you can provide <code>suggestionItems</code>,\n * that are displayed in a popover right under the input.\n * <br><br>\n * The text field can be editable or read-only (<code>readonly</code> property),\n * and it can be enabled or disabled (<code>enabled</code> property).\n * To visualize semantic states, such as \"error\" or \"warning\", the <code>valueState</code> property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n * <br><br>\n * <b>Note:</b> If you are using the <code>ui5-input</code> as a single npm module,\n * don't forget to import the <code>InputSuggestions</code> module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Input.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code> (optional - for input suggestions support)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Input\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-input\n * @appenddocs SuggestionItem SuggestionGroupItem\n * @implements sap.ui.webcomponents.main.IInput\n * @public\n */\n\nclass Input extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return InputTemplate;\n  }\n\n  static get staticAreaTemplate() {\n    return InputPopoverTemplate;\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static get staticAreaStyles() {\n    return [ResponsivePopoverCommonCss, ValueStateMessageCss];\n  }\n\n  constructor() {\n    super(); // Indicates if there is selected suggestionItem.\n\n    this.hasSuggestionItemSelected = false; // Represents the value before user moves selection from suggestion item to another\n    // and its value is updated after each move.\n    // Note: Used to register and fire \"input\" event upon [SPACE] or [ENTER].\n    // Note: The property \"value\" is updated upon selection move and can`t be used.\n\n    this.valueBeforeItemSelection = \"\"; // Represents the value before user moves selection between the suggestion items\n    // and its value remains the same when the user navigates up or down the list.\n    // Note: Used to cancel selection upon [ESC].\n\n    this.valueBeforeItemPreview = \"\"; // Indicates if the user selection has been canceled with [ESC].\n\n    this.suggestionSelectionCanceled = false; // Indicates if the change event has already been fired\n\n    this._changeFired = false; // tracks the value between focus in and focus out to detect that change event should be fired.\n\n    this.previousValue = undefined; // Indicates, if the component is rendering for first time.\n\n    this.firstRendering = true; // The value that should be highlited.\n\n    this.highlightValue = \"\"; // Indicates, if the user pressed the BACKSPACE key.\n\n    this._backspaceKeyDown = false; // all sementic events\n\n    this.EVENT_CHANGE = \"change\";\n    this.EVENT_INPUT = \"input\";\n    this.EVENT_SUGGESTION_ITEM_SELECT = \"suggestion-item-select\"; // all user interactions\n\n    this.ACTION_ENTER = \"enter\";\n    this.ACTION_USER_INPUT = \"input\"; // Suggestions array initialization\n\n    this.suggestionsTexts = [];\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n    this._handleResizeBound = this._handleResize.bind(this);\n  }\n\n  onEnterDOM() {\n    ResizeHandler.register(this, this._handleResizeBound);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._handleResizeBound);\n  }\n\n  onBeforeRendering() {\n    if (this.showSuggestions) {\n      this.enableSuggestions();\n      this.suggestionsTexts = this.Suggestions.defaultSlotProperties(this.highlightValue);\n    }\n\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this);\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n  }\n\n  async onAfterRendering() {\n    if (!this.firstRendering && !isPhone() && this.Suggestions) {\n      const shouldOpenSuggestions = this.shouldOpenSuggestions();\n      this.Suggestions.toggle(shouldOpenSuggestions, {\n        preventFocusRestore: !this.hasSuggestionItemSelected\n      });\n      await renderFinished();\n      this._listWidth = await this.Suggestions._getListWidth();\n\n      if (!isPhone() && shouldOpenSuggestions) {\n        // Set initial focus to the native input\n        (await this.getInputDOMRef()).focus();\n      }\n    }\n\n    if (!this.firstRendering && this.hasValueStateMessage) {\n      this.toggle(this.shouldDisplayOnlyValueStateMessage);\n    }\n\n    this.firstRendering = false;\n  }\n\n  _onkeydown(event) {\n    if (isUp(event)) {\n      return this._handleUp(event);\n    }\n\n    if (isDown(event)) {\n      return this._handleDown(event);\n    }\n\n    if (isSpace(event)) {\n      return this._handleSpace(event);\n    }\n\n    if (isTabNext(event)) {\n      return this._handleTab(event);\n    }\n\n    if (isEnter(event)) {\n      return this._handleEnter(event);\n    }\n\n    if (isEscape(event)) {\n      return this._handleEscape(event);\n    }\n\n    if (isBackSpace(event)) {\n      this._backspaceKeyDown = true;\n      this._selectedText = window.getSelection().toString();\n    }\n\n    if (this.showSuggestions) {\n      this.Suggestions._deselectItems();\n    }\n\n    this._keyDown = true;\n  }\n\n  _onkeyup(event) {\n    this._keyDown = false;\n    this._backspaceKeyDown = false;\n  }\n  /* Event handling */\n\n\n  _handleUp(event) {\n    if (this.Suggestions && this.Suggestions.isOpened()) {\n      this.Suggestions.onUp(event);\n    }\n  }\n\n  _handleDown(event) {\n    if (this.Suggestions && this.Suggestions.isOpened()) {\n      this.Suggestions.onDown(event);\n    }\n  }\n\n  _handleSpace(event) {\n    if (this.Suggestions) {\n      this.Suggestions.onSpace(event);\n    }\n  }\n\n  _handleTab(event) {\n    if (this.Suggestions && this.previousValue !== this.value) {\n      this.Suggestions.onTab(event);\n    }\n  }\n\n  _handleEnter(event) {\n    const itemPressed = !!(this.Suggestions && this.Suggestions.onEnter(event));\n\n    if (!itemPressed) {\n      this.fireEventByAction(this.ACTION_ENTER);\n    }\n  }\n\n  _handleEscape() {\n    if (this.showSuggestions && this.Suggestions && this.Suggestions._isItemOnTarget()) {\n      // Restore the value.\n      this.value = this.valueBeforeItemPreview; // Mark that the selection has been canceled, so the popover can close\n      // and not reopen, due to receiving focus.\n\n      this.suggestionSelectionCanceled = true;\n    }\n  }\n\n  async _onfocusin(event) {\n    await this.getInputDOMRef();\n    this.focused = true; // invalidating property\n\n    this.previousValue = this.value;\n    this.valueBeforeItemPreview = this.value;\n    this._inputIconFocused = event.target && event.target === this.querySelector(\"[ui5-icon]\");\n  }\n\n  _onfocusout(event) {\n    const focusedOutToSuggestions = this.Suggestions && event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.contains(this.Suggestions.responsivePopover);\n    const focusedOutToValueStateMessage = event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.querySelector(\".ui5-valuestatemessage-root\"); // if focusout is triggered by pressing on suggestion item or value state message popover, skip invalidation, because re-rendering\n    // will happen before \"itemPress\" event, which will make item \"active\" state not visualized\n\n    if (focusedOutToSuggestions || focusedOutToValueStateMessage) {\n      event.stopImmediatePropagation();\n      return;\n    }\n\n    const toBeFocused = event.relatedTarget;\n\n    if (toBeFocused && toBeFocused.classList.contains(this._id)) {\n      return;\n    }\n\n    this.closePopover();\n    this.previousValue = \"\";\n    this.focused = false; // invalidating property\n  }\n\n  _click(event) {\n    if (isPhone() && !this.readonly && this.Suggestions) {\n      this.Suggestions.showAt(this);\n      this.isRespPopoverOpen = true;\n    }\n  }\n\n  _handleChange(event) {\n    if (!this._changeFired) {\n      this.fireEvent(this.EVENT_CHANGE);\n    } // Set event as no longer marked\n\n\n    this._changeFired = false;\n  }\n\n  _scroll(event) {\n    const detail = event.detail;\n    this.fireEvent(\"suggestion-scroll\", {\n      scrollTop: detail.scrollTop,\n      scrollContainer: detail.targetRef\n    });\n  }\n\n  async _handleInput(event) {\n    const inputDomRef = await this.getInputDOMRef();\n    const emptyValueFiredOnNumberInput = this.value && this.isTypeNumber && !inputDomRef.value;\n    this.suggestionSelectionCanceled = false;\n\n    if (emptyValueFiredOnNumberInput && !this._backspaceKeyDown) {\n      // For input with type=\"Number\", if the delimiter is entered second time,\n      // the inner input is firing event with empty value\n      return;\n    }\n\n    if (emptyValueFiredOnNumberInput && this._backspaceKeyDown) {\n      // Issue: when the user removes the character(s) after the delimeter of numeric Input,\n      // the native input is firing event with an empty value and we have to manually handle this case,\n      // otherwise the entire input will be cleared as we sync the \"value\".\n      // There are tree scenarios:\n      // Example: type \"123.4\" and press BACKSPACE - the native input is firing event with empty value.\n      // Example: type \"123.456\", select/mark \"456\" and press BACKSPACE - the native input is firing event with empty value.\n      // Example: type \"123.456\", select/mark \"123.456\" and press BACKSPACE - the native input is firing event with empty value,\n      // but this time that's really the case.\n      // Perform manual handling in case of floating number\n      // and if the user did not select the entire input value\n      if (rgxFloat.test(this.value) && this._selectedText !== this.value) {\n        const newValue = this.removeFractionalPart(this.value); // update state\n\n        this.value = newValue;\n        this.highlightValue = newValue;\n        this.valueBeforeItemPreview = newValue; // fire events\n\n        this.fireEvent(this.EVENT_INPUT);\n        this.fireEvent(\"value-changed\");\n        return;\n      }\n    }\n\n    if (event.target === inputDomRef) {\n      // stop the native event, as the semantic \"input\" would be fired.\n      event.stopImmediatePropagation();\n    }\n    /* skip calling change event when an input with a placeholder is focused on IE\n    \t- value of the host and the internal input should be differnt in case of actual input\n    \t- input is called when a key is pressed => keyup should not be called yet\n    */\n\n\n    const skipFiring = inputDomRef.value === this.value && isIE() && !this._keyDown && !!this.placeholder;\n    !skipFiring && this.fireEventByAction(this.ACTION_USER_INPUT);\n    this.hasSuggestionItemSelected = false;\n\n    if (this.Suggestions) {\n      this.Suggestions.updateSelectedItemPosition(null);\n    }\n  }\n\n  _handleResize() {\n    this._inputWidth = this.offsetWidth;\n  }\n\n  _closeRespPopover(preventFocusRestore) {\n    this.Suggestions.close(preventFocusRestore);\n  }\n\n  async _afterOpenPopover() {\n    // Set initial focus to the native input\n    if (isPhone()) {\n      (await this.getInputDOMRef()).focus();\n    }\n  }\n\n  _afterClosePopover() {\n    this.announceSelectedItem(); // close device's keyboard and prevent further typing\n\n    if (isPhone()) {\n      this.blur();\n    }\n  }\n\n  toggle(isToggled) {\n    if (isToggled && !this.isRespPopoverOpen) {\n      this.openPopover();\n    } else {\n      this.closePopover();\n    }\n  }\n  /**\n   * Checks if the value state popover is open.\n   * @returns {boolean} true if the value state popover is open, false otherwise\n   */\n\n\n  isValueStateOpened() {\n    return !!this._isPopoverOpen;\n  }\n\n  async openPopover() {\n    const popover = await this._getPopover();\n\n    if (popover) {\n      this._isPopoverOpen = true;\n      popover.showAt(this);\n    }\n  }\n\n  async closePopover() {\n    const popover = await this._getPopover();\n    popover && popover.close();\n  }\n\n  async _getPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem && staticAreaItem.querySelector(\"[ui5-popover]\");\n  }\n\n  enableSuggestions() {\n    if (this.Suggestions) {\n      return;\n    }\n\n    const Suggestions = getFeature(\"InputSuggestions\");\n\n    if (Suggestions) {\n      this.Suggestions = new Suggestions(this, \"suggestionItems\", true);\n    } else {\n      throw new Error(`You have to import \"@ui5/webcomponents/dist/features/InputSuggestions.js\" module to use ui5-input suggestions`);\n    }\n  }\n\n  shouldOpenSuggestions() {\n    return !!(this.suggestionItems.length && this.focused && this.showSuggestions && !this.hasSuggestionItemSelected && !this.suggestionSelectionCanceled);\n  }\n\n  selectSuggestion(item, keyboardUsed) {\n    if (item.group) {\n      return;\n    }\n\n    const itemText = item.text || item.textContent; // keep textContent for compatibility\n\n    const fireInput = keyboardUsed ? this.valueBeforeItemSelection !== itemText : this.value !== itemText;\n    this.hasSuggestionItemSelected = true;\n\n    if (fireInput) {\n      this.value = itemText;\n      this.valueBeforeItemSelection = itemText;\n      this.fireEvent(this.EVENT_INPUT);\n      this.fireEvent(this.EVENT_CHANGE); // Mark the change event to avoid double firing\n\n      this._changeFired = true;\n    }\n\n    this.valueBeforeItemPreview = \"\";\n    this.suggestionSelectionCanceled = false;\n    this.fireEvent(this.EVENT_SUGGESTION_ITEM_SELECT, {\n      item\n    });\n  }\n\n  previewSuggestion(item) {\n    this.valueBeforeItemSelection = this.value;\n    this.updateValueOnPreview(item);\n    this.announceSelectedItem();\n    this._previewItem = item;\n  }\n  /**\n   * Updates the input value on item preview.\n   * @param {Object} item The item that is on preview\n   */\n\n\n  updateValueOnPreview(item) {\n    const noPreview = item.type === \"Inactive\" || item.group;\n    const itemValue = noPreview ? \"\" : item.effectiveTitle || item.textContent;\n    this.value = itemValue;\n  }\n  /**\n   * The suggestion item on preview.\n   * @type { ui5-suggestion-item }\n   * @readonly\n   * @public\n   */\n\n\n  get previewItem() {\n    if (!this._previewItem) {\n      return null;\n    }\n\n    return this.getSuggestionByListItem(this._previewItem);\n  }\n\n  async fireEventByAction(action) {\n    await this.getInputDOMRef();\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const inputValue = await this.getInputValue();\n    const isUserInput = action === this.ACTION_USER_INPUT;\n    const input = await this.getInputDOMRef();\n    const cursorPosition = input.selectionStart;\n    this.value = inputValue;\n    this.highlightValue = inputValue;\n    this.valueBeforeItemPreview = inputValue;\n\n    if (isSafari()) {\n      // When setting the value by hand, Safari moves the cursor when typing in the middle of the text (See #1761)\n      setTimeout(() => {\n        input.selectionStart = cursorPosition;\n        input.selectionEnd = cursorPosition;\n      }, 0);\n    }\n\n    if (isUserInput) {\n      // input\n      this.fireEvent(this.EVENT_INPUT); // Angular two way data binding\n\n      this.fireEvent(\"value-changed\");\n      return;\n    } // In IE, pressing the ENTER does not fire change\n\n\n    const valueChanged = this.previousValue !== undefined && this.previousValue !== this.value;\n\n    if (isIE() && action === this.ACTION_ENTER && valueChanged) {\n      this.fireEvent(this.EVENT_CHANGE);\n    }\n  }\n\n  async getInputValue() {\n    const domRef = this.getDomRef();\n\n    if (domRef) {\n      return (await this.getInputDOMRef()).value;\n    }\n\n    return \"\";\n  }\n\n  async getInputDOMRef() {\n    if (isPhone() && this.Suggestions && this.suggestionItems.length) {\n      await this.Suggestions._respPopover();\n      return this.Suggestions && this.Suggestions.responsivePopover.querySelector(\".ui5-input-inner-phone\");\n    }\n\n    return this.nativeInput;\n  }\n  /**\n   * Returns a reference to the native input element\n   * @protected\n   */\n\n\n  get nativeInput() {\n    return this.getDomRef() && this.getDomRef().querySelector(`input`);\n  }\n\n  get nativeInputWidth() {\n    return this.nativeInput && this.nativeInput.offsetWidth;\n  }\n\n  getLabelableElementId() {\n    return this.getInputId();\n  }\n\n  getSuggestionByListItem(item) {\n    const key = parseInt(item.getAttribute(\"data-ui5-key\"));\n    return this.suggestionItems[key];\n  }\n  /**\n   * Returns if the suggestions popover is scrollable.\n   * The method returns <code>Promise</code> that resolves to true,\n   * if the popup is scrollable and false otherwise.\n   * @returns {Promise}\n   */\n\n\n  isSuggestionsScrollable() {\n    if (!this.Suggestions) {\n      return Promise.resolve(false);\n    }\n\n    return this.Suggestions._isScrollable();\n  }\n\n  getInputId() {\n    return `${this._id}-inner`;\n  }\n  /* Suggestions interface  */\n\n\n  onItemFocused() {}\n\n  onItemMouseOver(event) {\n    const item = event.target;\n    const suggestion = this.getSuggestionByListItem(item);\n    suggestion && suggestion.fireEvent(\"mouseover\", {\n      item: suggestion,\n      targetRef: item\n    });\n  }\n\n  onItemMouseOut(event) {\n    const item = event.target;\n    const suggestion = this.getSuggestionByListItem(item);\n    suggestion && suggestion.fireEvent(\"mouseout\", {\n      item: suggestion,\n      targetRef: item\n    });\n  }\n\n  onItemSelected(item, keyboardUsed) {\n    this.selectSuggestion(item, keyboardUsed);\n  }\n\n  onItemPreviewed(item) {\n    this.previewSuggestion(item);\n    this.fireEvent(\"suggestion-item-preview\", {\n      item: this.getSuggestionByListItem(item),\n      targetRef: item\n    });\n  }\n\n  onOpen() {}\n\n  onClose() {}\n\n  valueStateTextMappings() {\n    const i18nBundle = this.i18nBundle;\n    return {\n      \"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n      \"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION),\n      \"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": i18nBundle.getText(VALUE_STATE_WARNING)\n    };\n  }\n\n  announceSelectedItem() {\n    const invisibleText = this.shadowRoot.querySelector(`#${this._id}-selectionText`);\n\n    if (this.Suggestions && this.Suggestions._isItemOnTarget()) {\n      invisibleText.textContent = this.itemSelectionAnnounce;\n    } else {\n      invisibleText.textContent = \"\";\n    }\n  }\n\n  get _readonly() {\n    return this.readonly && !this.disabled;\n  }\n\n  get _headerTitleText() {\n    return this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n  }\n\n  get inputType() {\n    return this.type.toLowerCase();\n  }\n\n  get isTypeNumber() {\n    return this.type === InputType.Number;\n  }\n\n  get suggestionsTextId() {\n    return this.showSuggestions ? `${this._id}-suggestionsText` : \"\";\n  }\n\n  get valueStateTextId() {\n    return this.hasValueState ? `${this._id}-valueStateDesc` : \"\";\n  }\n\n  get accInfo() {\n    const ariaHasPopupDefault = this.showSuggestions ? \"true\" : undefined;\n    const ariaAutoCompleteDefault = this.showSuggestions ? \"list\" : undefined;\n    const ariaDescribedBy = this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId}`.trim();\n    return {\n      \"input\": {\n        \"ariaRoledescription\": this._inputAccInfo && (this._inputAccInfo.ariaRoledescription || undefined),\n        \"ariaDescribedBy\": ariaDescribedBy || undefined,\n        \"ariaInvalid\": this.valueState === ValueState.Error ? \"true\" : undefined,\n        \"ariaHasPopup\": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,\n        \"ariaAutoComplete\": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,\n        \"role\": this._inputAccInfo && this._inputAccInfo.role,\n        \"ariaControls\": this._inputAccInfo && this._inputAccInfo.ariaControls,\n        \"ariaExpanded\": this._inputAccInfo && this._inputAccInfo.ariaExpanded,\n        \"ariaDescription\": this._inputAccInfo && this._inputAccInfo.ariaDescription,\n        \"ariaLabel\": this._inputAccInfo && this._inputAccInfo.ariaLabel || getEffectiveAriaLabelText(this)\n      }\n    };\n  }\n\n  get nativeInputAttributes() {\n    return {\n      \"min\": this.isTypeNumber ? this._nativeInputAttributes.min : undefined,\n      \"max\": this.isTypeNumber ? this._nativeInputAttributes.max : undefined,\n      \"step\": this.isTypeNumber ? this._nativeInputAttributes.step || \"any\" : undefined\n    };\n  }\n\n  get ariaValueStateHiddenText() {\n    if (!this.hasValueStateMessage) {\n      return;\n    }\n\n    if (this.shouldDisplayDefaultValueStateMessage) {\n      return this.valueStateText;\n    }\n\n    return this.valueStateMessageText.map(el => el.textContent).join(\" \");\n  }\n\n  get itemSelectionAnnounce() {\n    return this.Suggestions ? this.Suggestions.itemSelectionAnnounce : undefined;\n  }\n\n  get classes() {\n    return {\n      popoverValueState: {\n        \"ui5-valuestatemessage-root\": true,\n        \"ui5-responsive-popover-header\": !this.isValueStateOpened(),\n        \"ui5-valuestatemessage--success\": this.valueState === ValueState.Success,\n        \"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n        \"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning,\n        \"ui5-valuestatemessage--information\": this.valueState === ValueState.Information\n      }\n    };\n  }\n\n  get styles() {\n    const stylesObject = {\n      popoverHeader: {\n        \"max-width\": `${this._inputWidth}px`\n      },\n      suggestionPopoverHeader: {\n        \"display\": this._listWidth === 0 ? \"none\" : \"inline-block\",\n        \"width\": `${this._listWidth}px`,\n        \"padding\": \"0.925rem 1rem\"\n      },\n      suggestionsPopover: {\n        \"max-width\": `${this._inputWidth}px`\n      },\n      innerInput: {}\n    };\n\n    if (this.nativeInputWidth < 48) {\n      stylesObject.innerInput.padding = \"0\";\n    }\n\n    return stylesObject;\n  }\n\n  get suggestionSeparators() {\n    return \"None\";\n  }\n\n  get valueStateMessageText() {\n    return this.getSlottedNodes(\"valueStateMessage\").map(el => el.cloneNode(true));\n  }\n\n  get shouldDisplayOnlyValueStateMessage() {\n    return this.hasValueStateMessage && !this.shouldOpenSuggestions() && this.focused;\n  }\n\n  get shouldDisplayDefaultValueStateMessage() {\n    return !this.valueStateMessage.length && this.hasValueStateMessage;\n  }\n\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n\n  get hasValueStateMessage() {\n    return this.hasValueState && this.valueState !== ValueState.Success && (!this._inputIconFocused // Handles the cases when valueStateMessage is forwarded (from datepicker e.g.)\n    || this._isPhone && this.Suggestions); // Handles Input with suggestions on mobile\n  }\n\n  get valueStateText() {\n    return this.valueStateTextMappings()[this.valueState];\n  }\n\n  get suggestionsText() {\n    return this.i18nBundle.getText(INPUT_SUGGESTIONS);\n  }\n\n  get availableSuggestionsCount() {\n    if (this.showSuggestions && (this.value || this.Suggestions.isOpened())) {\n      switch (this.suggestionsTexts.length) {\n        case 0:\n          return this.i18nBundle.getText(INPUT_SUGGESTIONS_NO_HIT);\n\n        case 1:\n          return this.i18nBundle.getText(INPUT_SUGGESTIONS_ONE_HIT);\n\n        default:\n          return this.i18nBundle.getText(INPUT_SUGGESTIONS_MORE_HITS, this.suggestionsTexts.length);\n      }\n    }\n\n    return undefined;\n  }\n\n  get step() {\n    return this.isTypeNumber ? \"any\" : undefined;\n  }\n\n  get _isPhone() {\n    return isPhone();\n  }\n  /**\n   * Returns the placeholder value.\n   * @protected\n   */\n\n\n  get _placeholder() {\n    return this.placeholder;\n  }\n  /**\n   * Returns the caret position inside the native input\n   * @protected\n   */\n\n\n  getCaretPosition() {\n    return getCaretPosition(this.nativeInput);\n  }\n  /**\n   * Sets the caret to a certain position inside the native input\n   * @protected\n   * @param pos\n   */\n\n\n  setCaretPosition(pos) {\n    setCaretPosition(this.nativeInput, pos);\n  }\n  /**\n   * Removes the fractional part of floating-point number.\n   * @param {String} value the numeric value of Input of type \"Number\"\n   */\n\n\n  removeFractionalPart(value) {\n    if (value.includes(\".\")) {\n      return value.slice(0, value.indexOf(\".\"));\n    }\n\n    if (value.includes(\",\")) {\n      return value.slice(0, value.indexOf(\",\"));\n    }\n\n    return value;\n  }\n\n  static get dependencies() {\n    const Suggestions = getFeature(\"InputSuggestions\");\n    return [Popover].concat(Suggestions ? Suggestions.dependencies : []);\n  }\n\n  static async onDefine() {\n    await fetchI18nBundle(\"@ui5/webcomponents\");\n  }\n\n}\n\nInput.define();\nexport default Input;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/Input.js"],"names":["UI5Element","litRender","ResizeHandler","renderFinished","isIE","isPhone","isSafari","ValueState","getFeature","isUp","isDown","isSpace","isEnter","isBackSpace","isEscape","isTabNext","Integer","fetchI18nBundle","getI18nBundle","getEffectiveAriaLabelText","getCaretPosition","setCaretPosition","InputType","Popover","InputTemplate","InputPopoverTemplate","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","VALUE_STATE_ERROR","VALUE_STATE_WARNING","INPUT_SUGGESTIONS","INPUT_SUGGESTIONS_TITLE","INPUT_SUGGESTIONS_ONE_HIT","INPUT_SUGGESTIONS_MORE_HITS","INPUT_SUGGESTIONS_NO_HIT","styles","ResponsivePopoverCommonCss","ValueStateMessageCss","rgxFloat","RegExp","metadata","tag","languageAware","managedSlots","slots","icon","type","HTMLElement","propertyName","formSupport","valueStateMessage","properties","disabled","Boolean","highlight","placeholder","String","readonly","required","defaultValue","Text","value","valueState","None","name","showSuggestions","maxlength","accessibleName","accessibleNameRef","focused","_input","Object","_inputAccInfo","_nativeInputAttributes","_inputWidth","_listWidth","_isPopoverOpen","noAttribute","_inputIconFocused","events","change","input","detail","item","targetRef","scrollTop","scrollContainer","Input","render","template","staticAreaTemplate","staticAreaStyles","constructor","hasSuggestionItemSelected","valueBeforeItemSelection","valueBeforeItemPreview","suggestionSelectionCanceled","_changeFired","previousValue","undefined","firstRendering","highlightValue","_backspaceKeyDown","EVENT_CHANGE","EVENT_INPUT","EVENT_SUGGESTION_ITEM_SELECT","ACTION_ENTER","ACTION_USER_INPUT","suggestionsTexts","i18nBundle","_handleResizeBound","_handleResize","bind","onEnterDOM","register","onExitDOM","deregister","onBeforeRendering","enableSuggestions","Suggestions","defaultSlotProperties","FormSupport","syncNativeHiddenInput","console","warn","onAfterRendering","shouldOpenSuggestions","toggle","preventFocusRestore","_getListWidth","getInputDOMRef","focus","hasValueStateMessage","shouldDisplayOnlyValueStateMessage","_onkeydown","event","_handleUp","_handleDown","_handleSpace","_handleTab","_handleEnter","_handleEscape","_selectedText","window","getSelection","toString","_deselectItems","_keyDown","_onkeyup","isOpened","onUp","onDown","onSpace","onTab","itemPressed","onEnter","fireEventByAction","_isItemOnTarget","_onfocusin","target","querySelector","_onfocusout","focusedOutToSuggestions","relatedTarget","shadowRoot","contains","responsivePopover","focusedOutToValueStateMessage","stopImmediatePropagation","toBeFocused","classList","_id","closePopover","_click","showAt","isRespPopoverOpen","_handleChange","fireEvent","_scroll","_handleInput","inputDomRef","emptyValueFiredOnNumberInput","isTypeNumber","test","newValue","removeFractionalPart","skipFiring","updateSelectedItemPosition","offsetWidth","_closeRespPopover","close","_afterOpenPopover","_afterClosePopover","announceSelectedItem","blur","isToggled","openPopover","isValueStateOpened","popover","_getPopover","staticAreaItem","getStaticAreaItemDomRef","Error","suggestionItems","length","selectSuggestion","keyboardUsed","group","itemText","text","textContent","fireInput","previewSuggestion","updateValueOnPreview","_previewItem","noPreview","itemValue","effectiveTitle","previewItem","getSuggestionByListItem","action","inputValue","getInputValue","isUserInput","cursorPosition","selectionStart","setTimeout","selectionEnd","valueChanged","domRef","getDomRef","_respPopover","nativeInput","nativeInputWidth","getLabelableElementId","getInputId","key","parseInt","getAttribute","isSuggestionsScrollable","Promise","resolve","_isScrollable","onItemFocused","onItemMouseOver","suggestion","onItemMouseOut","onItemSelected","onItemPreviewed","onOpen","onClose","valueStateTextMappings","getText","invisibleText","itemSelectionAnnounce","_readonly","_headerTitleText","inputType","toLowerCase","Number","suggestionsTextId","valueStateTextId","hasValueState","accInfo","ariaHasPopupDefault","ariaAutoCompleteDefault","ariaDescribedBy","trim","ariaRoledescription","ariaHasPopup","ariaAutoComplete","role","ariaControls","ariaExpanded","ariaDescription","ariaLabel","nativeInputAttributes","min","max","step","ariaValueStateHiddenText","shouldDisplayDefaultValueStateMessage","valueStateText","valueStateMessageText","map","el","join","classes","popoverValueState","Success","Warning","Information","stylesObject","popoverHeader","suggestionPopoverHeader","suggestionsPopover","innerInput","padding","suggestionSeparators","getSlottedNodes","cloneNode","_isPhone","suggestionsText","availableSuggestionsCount","_placeholder","pos","includes","slice","indexOf","dependencies","concat","onDefine","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,SAASC,cAAT,QAA+B,wCAA/B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,QAAwC,wCAAxC;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SACCC,IADD,EAECC,MAFD,EAGCC,OAHD,EAICC,OAJD,EAKCC,WALD,EAMCC,QAND,EAOCC,SAPD,QAQO,sCARP;AASA,OAAOC,OAAP,MAAoB,+CAApB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,4CAA/C;AACA,SAASC,yBAAT,QAA0C,sDAA1C;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,4CAAnD;AACA,OAAO,0CAAP;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,oBAAP,MAAiC,mDAAjC;AAEA,SACCC,mBADD,EAECC,uBAFD,EAGCC,iBAHD,EAICC,mBAJD,EAKCC,iBALD,EAMCC,uBAND,EAOCC,yBAPD,EAQCC,2BARD,EASCC,wBATD,QAUO,mCAVP,C,CAYA;;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,0BAAP,MAAuC,mDAAvC;AACA,OAAOC,oBAAP,MAAiC,6CAAjC;AAEA,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAW,qBAAX,CAAjB;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,WADW;AAEhBC,EAAAA,aAAa,EAAE,IAFC;AAGhBC,EAAAA,YAAY,EAAE,IAHE;AAIhBC,EAAAA,KAAK;AAAE;AAAwD;AAE9D;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEC;AADD,KATwD;;AAa9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVC,MAAAA,YAAY,EAAE,iBADJ;AAEVF,MAAAA,IAAI,EAAEC;AAFI,KA/CmD;;AAoD9D;AACF;AACA;AACA;AACA;AACA;AACEE,IAAAA,WAAW,EAAE;AACZH,MAAAA,IAAI,EAAEC;AADM,KA1DiD;;AA8D9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,IAAAA,iBAAiB,EAAE;AAClBJ,MAAAA,IAAI,EAAEC;AADY;AA9E2C,GAJ/C;AAsFhBI,EAAAA,UAAU;AAAE;AAA0D;AAErE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTN,MAAAA,IAAI,EAAEO;AADG,KAX2D;;AAerE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE;AACVR,MAAAA,IAAI,EAAEO;AADI,KA1B0D;;AA8BrE;AACF;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,WAAW,EAAE;AACZT,MAAAA,IAAI,EAAEU;AADM,KArCwD;;AAyCrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTX,MAAAA,IAAI,EAAEO;AADG,KAnD2D;;AAuDrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEK,IAAAA,QAAQ,EAAE;AACTZ,MAAAA,IAAI,EAAEO;AADG,KA/D2D;;AAmErE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEP,IAAAA,IAAI,EAAE;AACLA,MAAAA,IAAI,EAAExB,SADD;AAELqC,MAAAA,YAAY,EAAErC,SAAS,CAACsC;AAFnB,KApF+D;;AAyFrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport { isIE, isPhone, isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport {\n\tisUp,\n\tisDown,\n\tisSpace,\n\tisEnter,\n\tisBackSpace,\n\tisEscape,\n\tisTabNext,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getCaretPosition, setCaretPosition } from \"@ui5/webcomponents-base/dist/util/Caret.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport InputType from \"./types/InputType.js\";\nimport Popover from \"./Popover.js\";\n// Templates\nimport InputTemplate from \"./generated/templates/InputTemplate.lit.js\";\nimport InputPopoverTemplate from \"./generated/templates/InputPopoverTemplate.lit.js\";\n\nimport {\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tINPUT_SUGGESTIONS,\n\tINPUT_SUGGESTIONS_TITLE,\n\tINPUT_SUGGESTIONS_ONE_HIT,\n\tINPUT_SUGGESTIONS_MORE_HITS,\n\tINPUT_SUGGESTIONS_NO_HIT,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/Input.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\n\nconst rgxFloat = new RegExp(/(\\+|-)?\\d+(\\.|,)\\d+/);\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-input\",\n\tlanguageAware: true,\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Input.prototype */ {\n\n\t\t/**\n\t\t * Defines the icon to be displayed in the component.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.IIcon}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the suggestion items.\n\t\t * <br><br>\n\t\t * Example:\n\t\t * <br><br>\n\t\t * &lt;ui5-input show-suggestions><br>\n\t\t * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #1\">&lt;/ui5-suggestion-item><br>\n\t\t * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #2\">&lt;/ui5-suggestion-item><br>\n\t\t * &lt;/ui5-input>\n\t\t * <br>\n\t\t * <ui5-input show-suggestions>\n\t\t * <ui5-suggestion-group-item text=\"Group #1\"></ui5-suggestion-group-item>\n\t\t * <ui5-suggestion-item text=\"Item #1\"></ui5-suggestion-item>\n\t\t * <ui5-suggestion-item text=\"Item #2\"></ui5-suggestion-item>\n\t\t * <ui5-suggestion-group-item text=\"Group #2\"></ui5-suggestion-group-item>\n\t\t * <ui5-suggestion-item text=\"Item #3\"></ui5-suggestion-item>\n\t\t * <ui5-suggestion-item text=\"Item #4\"></ui5-suggestion-item>\n\t\t * </ui5-input>\n\t\t * <br><br>\n\t\t * <b>Note:</b> The suggestion would be displayed only if the <code>showSuggestions</code>\n\t\t * property is set to <code>true</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The <code>&lt;ui5-suggestion-item></code> and <code>&lt;ui5-suggestion-group-item><code/> are recommended to be used as suggestion items.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Importing the Input Suggestions Support feature:\n\t\t * <br>\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code>\n\t\t * <br>\n\t\t * automatically imports the <code>&lt;ui5-suggestion-item></code> and <code>&lt;ui5-suggestion-group-item></code> for your convenience.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.IInputSuggestionItem[]}\n\t\t * @slot suggestionItems\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"suggestionItems\",\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * The slot is used for native <code>input</code> HTML element to enable form submit,\n\t\t * when <code>name</code> property is set.\n\t\t * @type {HTMLElement[]}\n\t\t * @private\n\t\t */\n\t\tformSupport: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state message that will be displayed as pop up under the component.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n\t\t * <br>\n\t\t * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n\t\t * when the component is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n\t\t * <br>\n\t\t * <b>Note:</b> If the component has <code>suggestionItems</code>,\n\t\t * the <code>valueStateMessage</code> would be displayed as part of the same popover, if used on desktop, or dialog - on phone.\n\t\t * @type {HTMLElement[]}\n\t\t * @since 1.0.0-rc.6\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tvalueStateMessage: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tproperties: /** @lends  sap.ui.webcomponents.main.Input.prototype */  {\n\n\t\t/**\n\t\t * Defines whether the component is in disabled state.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A disabled component is completely noninteractive.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines if characters within the suggestions are to be highlighted\n\t\t * in case the input value matches parts of the suggestions text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> takes effect when <code>showSuggestions</code> is set to <code>true</code>\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t * @sicne 1.0.0-rc.8\n\t\t */\n\t\thighlight: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines a short hint intended to aid the user with data entry when the\n\t\t * component has no value.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tplaceholder: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is read-only.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A read-only component is not editable,\n\t\t * but still provides visual feedback upon user interaction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is required.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.0.0-rc.3\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the HTML type of the component.\n\t\t * Available options are: <code>Text</code>, <code>Email</code>,\n\t\t * <code>Number</code>, <code>Password</code>, <code>Tel</code>, and <code>URL</code>.\n\t\t * <br><br>\n\t\t * <b>Notes:</b>\n\t\t * <ul>\n\t\t * <li>The particular effect of this property differs depending on the browser\n\t\t * and the current language settings, especially for type <code>Number</code>.</li>\n\t\t * <li>The property is mostly intended to be used with touch devices\n\t\t * that use different soft keyboard layouts depending on the given input type.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {InputType}\n\t\t * @defaultvalue \"Text\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: InputType,\n\t\t\tdefaultValue: InputType.Text,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The property is updated upon typing.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the component.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the component will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the component so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component should show suggestions, if such are present.\n\t\t * <br><br>\n\t\t * <b>Note:</b> You need to import the <code>InputSuggestions</code> module\n\t\t * from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"</code> to enable this functionality.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tshowSuggestions: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Sets the maximum number of characters available in the input field.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @since 1.0.0-rc.5\n\t\t * @public\n\t\t */\n\t\tmaxlength: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t/**\n\t\t * Sets the accessible aria name of the component.\n\t\t *\n\t\t * @type {String}\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Receives id(or many ids) of the elements that label the input\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleNameRef: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"\",\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tfocused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t_input: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_inputAccInfo: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_nativeInputAttributes: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_inputWidth: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t_listWidth: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t_isPopoverOpen: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t_inputIconFocused: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tevents: /** @lends  sap.ui.webcomponents.main.Input.prototype */ {\n\t\t/**\n\t\t * Fired when the input operation has finished by pressing Enter or on focusout.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tchange: {},\n\n\t\t/**\n\t\t * Fired when the value of the component changes at each keystroke,\n\t\t * and when a suggestion item has been selected.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tinput: {},\n\n\t\t/**\n\t\t * Fired when a suggestion item, that is displayed in the suggestion popup, is selected.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Input#suggestion-item-select\n\t\t * @param {HTMLElement} item The selected item\n\t\t * @public\n\t\t */\n\t\t\"suggestion-item-select\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user navigates to a suggestion item via the ARROW keys,\n\t\t * as a preview, before the final selection.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Input#suggestion-item-preview\n\t\t * @param {HTMLElement} item The previewed suggestion item\n\t\t * @param {HTMLElement} targetRef The DOM ref of the suggestion item.\n\t\t * @public\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t\"suggestion-item-preview\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the user scrolls the suggestion popover.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Input#suggestion-scroll\n\t\t * @param {Integer} scrollTop The current scroll position\n\t\t * @param {HTMLElement} scrollContainer The scroll container\n\t\t * @public\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t\"suggestion-scroll\": {\n\t\t\tdetail: {\n\t\t\t\tscrollTop: { type: Integer },\n\t\t\t\tscrollContainer: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-input</code> component allows the user to enter and edit text or numeric values in one line.\n * <br>\n * Additionally, you can provide <code>suggestionItems</code>,\n * that are displayed in a popover right under the input.\n * <br><br>\n * The text field can be editable or read-only (<code>readonly</code> property),\n * and it can be enabled or disabled (<code>enabled</code> property).\n * To visualize semantic states, such as \"error\" or \"warning\", the <code>valueState</code> property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n * <br><br>\n * <b>Note:</b> If you are using the <code>ui5-input</code> as a single npm module,\n * don't forget to import the <code>InputSuggestions</code> module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Input.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code> (optional - for input suggestions support)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Input\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-input\n * @appenddocs SuggestionItem SuggestionGroupItem\n * @implements sap.ui.webcomponents.main.IInput\n * @public\n */\nclass Input extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn InputTemplate;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn InputPopoverTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn styles;\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [ResponsivePopoverCommonCss, ValueStateMessageCss];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\t// Indicates if there is selected suggestionItem.\n\t\tthis.hasSuggestionItemSelected = false;\n\n\t\t// Represents the value before user moves selection from suggestion item to another\n\t\t// and its value is updated after each move.\n\t\t// Note: Used to register and fire \"input\" event upon [SPACE] or [ENTER].\n\t\t// Note: The property \"value\" is updated upon selection move and can`t be used.\n\t\tthis.valueBeforeItemSelection = \"\";\n\n\t\t// Represents the value before user moves selection between the suggestion items\n\t\t// and its value remains the same when the user navigates up or down the list.\n\t\t// Note: Used to cancel selection upon [ESC].\n\t\tthis.valueBeforeItemPreview = \"\";\n\n\t\t// Indicates if the user selection has been canceled with [ESC].\n\t\tthis.suggestionSelectionCanceled = false;\n\n\t\t// Indicates if the change event has already been fired\n\t\tthis._changeFired = false;\n\n\t\t// tracks the value between focus in and focus out to detect that change event should be fired.\n\t\tthis.previousValue = undefined;\n\n\t\t// Indicates, if the component is rendering for first time.\n\t\tthis.firstRendering = true;\n\n\t\t// The value that should be highlited.\n\t\tthis.highlightValue = \"\";\n\n\t\t// Indicates, if the user pressed the BACKSPACE key.\n\t\tthis._backspaceKeyDown = false;\n\n\t\t// all sementic events\n\t\tthis.EVENT_CHANGE = \"change\";\n\t\tthis.EVENT_INPUT = \"input\";\n\t\tthis.EVENT_SUGGESTION_ITEM_SELECT = \"suggestion-item-select\";\n\n\t\t// all user interactions\n\t\tthis.ACTION_ENTER = \"enter\";\n\t\tthis.ACTION_USER_INPUT = \"input\";\n\n\t\t// Suggestions array initialization\n\t\tthis.suggestionsTexts = [];\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\n\t\tthis._handleResizeBound = this._handleResize.bind(this);\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._handleResizeBound);\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this.showSuggestions) {\n\t\t\tthis.enableSuggestions();\n\t\t\tthis.suggestionsTexts = this.Suggestions.defaultSlotProperties(this.highlightValue);\n\t\t}\n\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this);\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\t}\n\n\tasync onAfterRendering() {\n\t\tif (!this.firstRendering && !isPhone() && this.Suggestions) {\n\t\t\tconst shouldOpenSuggestions = this.shouldOpenSuggestions();\n\n\t\t\tthis.Suggestions.toggle(shouldOpenSuggestions, {\n\t\t\t\tpreventFocusRestore: !this.hasSuggestionItemSelected,\n\t\t\t});\n\n\t\t\tawait renderFinished();\n\t\t\tthis._listWidth = await this.Suggestions._getListWidth();\n\n\t\t\tif (!isPhone() && shouldOpenSuggestions) {\n\t\t\t\t// Set initial focus to the native input\n\n\t\t\t\t(await this.getInputDOMRef()).focus();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.firstRendering && this.hasValueStateMessage) {\n\t\t\tthis.toggle(this.shouldDisplayOnlyValueStateMessage);\n\t\t}\n\n\t\tthis.firstRendering = false;\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isUp(event)) {\n\t\t\treturn this._handleUp(event);\n\t\t}\n\n\t\tif (isDown(event)) {\n\t\t\treturn this._handleDown(event);\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\treturn this._handleSpace(event);\n\t\t}\n\n\t\tif (isTabNext(event)) {\n\t\t\treturn this._handleTab(event);\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\treturn this._handleEnter(event);\n\t\t}\n\n\t\tif (isEscape(event)) {\n\t\t\treturn this._handleEscape(event);\n\t\t}\n\n\t\tif (isBackSpace(event)) {\n\t\t\tthis._backspaceKeyDown = true;\n\t\t\tthis._selectedText = window.getSelection().toString();\n\t\t}\n\n\t\tif (this.showSuggestions) {\n\t\t\tthis.Suggestions._deselectItems();\n\t\t}\n\n\t\tthis._keyDown = true;\n\t}\n\n\t_onkeyup(event) {\n\t\tthis._keyDown = false;\n\t\tthis._backspaceKeyDown = false;\n\t}\n\n\t/* Event handling */\n\t_handleUp(event) {\n\t\tif (this.Suggestions && this.Suggestions.isOpened()) {\n\t\t\tthis.Suggestions.onUp(event);\n\t\t}\n\t}\n\n\t_handleDown(event) {\n\t\tif (this.Suggestions && this.Suggestions.isOpened()) {\n\t\t\tthis.Suggestions.onDown(event);\n\t\t}\n\t}\n\n\t_handleSpace(event) {\n\t\tif (this.Suggestions) {\n\t\t\tthis.Suggestions.onSpace(event);\n\t\t}\n\t}\n\n\t_handleTab(event) {\n\t\tif (this.Suggestions && (this.previousValue !== this.value)) {\n\t\t\tthis.Suggestions.onTab(event);\n\t\t}\n\t}\n\n\t_handleEnter(event) {\n\t\tconst itemPressed = !!(this.Suggestions && this.Suggestions.onEnter(event));\n\t\tif (!itemPressed) {\n\t\t\tthis.fireEventByAction(this.ACTION_ENTER);\n\t\t}\n\t}\n\n\t_handleEscape() {\n\t\tif (this.showSuggestions && this.Suggestions && this.Suggestions._isItemOnTarget()) {\n\t\t\t// Restore the value.\n\t\t\tthis.value = this.valueBeforeItemPreview;\n\n\t\t\t// Mark that the selection has been canceled, so the popover can close\n\t\t\t// and not reopen, due to receiving focus.\n\t\t\tthis.suggestionSelectionCanceled = true;\n\t\t}\n\t}\n\n\tasync _onfocusin(event) {\n\t\tawait this.getInputDOMRef();\n\n\t\tthis.focused = true; // invalidating property\n\t\tthis.previousValue = this.value;\n\t\tthis.valueBeforeItemPreview = this.value;\n\n\t\tthis._inputIconFocused = event.target && event.target === this.querySelector(\"[ui5-icon]\");\n\t}\n\n\t_onfocusout(event) {\n\t\tconst focusedOutToSuggestions = this.Suggestions && event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.contains(this.Suggestions.responsivePopover);\n\t\tconst focusedOutToValueStateMessage = event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.querySelector(\".ui5-valuestatemessage-root\");\n\n\t\t// if focusout is triggered by pressing on suggestion item or value state message popover, skip invalidation, because re-rendering\n\t\t// will happen before \"itemPress\" event, which will make item \"active\" state not visualized\n\t\tif (focusedOutToSuggestions\t|| focusedOutToValueStateMessage) {\n\t\t\tevent.stopImmediatePropagation();\n\t\t\treturn;\n\t\t}\n\n\t\tconst toBeFocused = event.relatedTarget;\n\n\t\tif (toBeFocused && toBeFocused.classList.contains(this._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closePopover();\n\n\t\tthis.previousValue = \"\";\n\t\tthis.focused = false; // invalidating property\n\t}\n\n\t_click(event) {\n\t\tif (isPhone() && !this.readonly && this.Suggestions) {\n\t\t\tthis.Suggestions.showAt(this);\n\t\t\tthis.isRespPopoverOpen = true;\n\t\t}\n\t}\n\n\t_handleChange(event) {\n\t\tif (!this._changeFired) {\n\t\t\tthis.fireEvent(this.EVENT_CHANGE);\n\t\t}\n\n\t\t// Set event as no longer marked\n\t\tthis._changeFired = false;\n\t}\n\n\t_scroll(event) {\n\t\tconst detail = event.detail;\n\t\tthis.fireEvent(\"suggestion-scroll\", {\n\t\t\tscrollTop: detail.scrollTop,\n\t\t\tscrollContainer: detail.targetRef,\n\t\t});\n\t}\n\n\tasync _handleInput(event) {\n\t\tconst inputDomRef = await this.getInputDOMRef();\n\t\tconst emptyValueFiredOnNumberInput = this.value && this.isTypeNumber && !inputDomRef.value;\n\n\t\tthis.suggestionSelectionCanceled = false;\n\n\t\tif (emptyValueFiredOnNumberInput && !this._backspaceKeyDown) {\n\t\t\t// For input with type=\"Number\", if the delimiter is entered second time,\n\t\t\t// the inner input is firing event with empty value\n\t\t\treturn;\n\t\t}\n\n\t\tif (emptyValueFiredOnNumberInput && this._backspaceKeyDown) {\n\t\t\t// Issue: when the user removes the character(s) after the delimeter of numeric Input,\n\t\t\t// the native input is firing event with an empty value and we have to manually handle this case,\n\t\t\t// otherwise the entire input will be cleared as we sync the \"value\".\n\n\t\t\t// There are tree scenarios:\n\t\t\t// Example: type \"123.4\" and press BACKSPACE - the native input is firing event with empty value.\n\t\t\t// Example: type \"123.456\", select/mark \"456\" and press BACKSPACE - the native input is firing event with empty value.\n\t\t\t// Example: type \"123.456\", select/mark \"123.456\" and press BACKSPACE - the native input is firing event with empty value,\n\t\t\t// but this time that's really the case.\n\n\t\t\t// Perform manual handling in case of floating number\n\t\t\t// and if the user did not select the entire input value\n\t\t\tif (rgxFloat.test(this.value) && this._selectedText !== this.value) {\n\t\t\t\tconst newValue = this.removeFractionalPart(this.value);\n\n\t\t\t\t// update state\n\t\t\t\tthis.value = newValue;\n\t\t\t\tthis.highlightValue = newValue;\n\t\t\t\tthis.valueBeforeItemPreview = newValue;\n\n\t\t\t\t// fire events\n\t\t\t\tthis.fireEvent(this.EVENT_INPUT);\n\t\t\t\tthis.fireEvent(\"value-changed\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (event.target === inputDomRef) {\n\t\t\t// stop the native event, as the semantic \"input\" would be fired.\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t\t/* skip calling change event when an input with a placeholder is focused on IE\n\t\t\t- value of the host and the internal input should be differnt in case of actual input\n\t\t\t- input is called when a key is pressed => keyup should not be called yet\n\t\t*/\n\t\tconst skipFiring = (inputDomRef.value === this.value) && isIE() && !this._keyDown && !!this.placeholder;\n\n\t\t!skipFiring && this.fireEventByAction(this.ACTION_USER_INPUT);\n\n\t\tthis.hasSuggestionItemSelected = false;\n\n\t\tif (this.Suggestions) {\n\t\t\tthis.Suggestions.updateSelectedItemPosition(null);\n\t\t}\n\t}\n\n\t_handleResize() {\n\t\tthis._inputWidth = this.offsetWidth;\n\t}\n\n\t_closeRespPopover(preventFocusRestore) {\n\t\tthis.Suggestions.close(preventFocusRestore);\n\t}\n\n\tasync _afterOpenPopover() {\n\t\t// Set initial focus to the native input\n\t\tif (isPhone()) {\n\t\t\t(await this.getInputDOMRef()).focus();\n\t\t}\n\t}\n\n\t_afterClosePopover() {\n\t\tthis.announceSelectedItem();\n\n\t\t// close device's keyboard and prevent further typing\n\t\tif (isPhone()) {\n\t\t\tthis.blur();\n\t\t}\n\t}\n\n\ttoggle(isToggled) {\n\t\tif (isToggled && !this.isRespPopoverOpen) {\n\t\t\tthis.openPopover();\n\t\t} else {\n\t\t\tthis.closePopover();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the value state popover is open.\n\t * @returns {boolean} true if the value state popover is open, false otherwise\n\t */\n\tisValueStateOpened() {\n\t\treturn !!this._isPopoverOpen;\n\t}\n\n\tasync openPopover() {\n\t\tconst popover = await this._getPopover();\n\n\t\tif (popover) {\n\t\t\tthis._isPopoverOpen = true;\n\t\t\tpopover.showAt(this);\n\t\t}\n\t}\n\n\tasync closePopover() {\n\t\tconst popover = await this._getPopover();\n\n\t\tpopover && popover.close();\n\t}\n\n\tasync _getPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem && staticAreaItem.querySelector(\"[ui5-popover]\");\n\t}\n\n\tenableSuggestions() {\n\t\tif (this.Suggestions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst Suggestions = getFeature(\"InputSuggestions\");\n\n\t\tif (Suggestions) {\n\t\t\tthis.Suggestions = new Suggestions(this, \"suggestionItems\", true);\n\t\t} else {\n\t\t\tthrow new Error(`You have to import \"@ui5/webcomponents/dist/features/InputSuggestions.js\" module to use ui5-input suggestions`);\n\t\t}\n\t}\n\n\tshouldOpenSuggestions() {\n\t\treturn !!(this.suggestionItems.length\n\t\t\t&& this.focused\n\t\t\t&& this.showSuggestions\n\t\t\t&& !this.hasSuggestionItemSelected\n\t\t\t&& !this.suggestionSelectionCanceled);\n\t}\n\n\tselectSuggestion(item, keyboardUsed) {\n\t\tif (item.group) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemText = item.text || item.textContent; // keep textContent for compatibility\n\t\tconst fireInput = keyboardUsed\n\t\t\t? this.valueBeforeItemSelection !== itemText : this.value !== itemText;\n\n\t\tthis.hasSuggestionItemSelected = true;\n\n\t\tif (fireInput) {\n\t\t\tthis.value = itemText;\n\t\t\tthis.valueBeforeItemSelection = itemText;\n\t\t\tthis.fireEvent(this.EVENT_INPUT);\n\t\t\tthis.fireEvent(this.EVENT_CHANGE);\n\n\t\t\t// Mark the change event to avoid double firing\n\t\t\tthis._changeFired = true;\n\t\t}\n\n\t\tthis.valueBeforeItemPreview = \"\";\n\t\tthis.suggestionSelectionCanceled = false;\n\n\t\tthis.fireEvent(this.EVENT_SUGGESTION_ITEM_SELECT, { item });\n\t}\n\n\tpreviewSuggestion(item) {\n\t\tthis.valueBeforeItemSelection = this.value;\n\t\tthis.updateValueOnPreview(item);\n\t\tthis.announceSelectedItem();\n\t\tthis._previewItem = item;\n\t}\n\n\t/**\n\t * Updates the input value on item preview.\n\t * @param {Object} item The item that is on preview\n\t */\n\tupdateValueOnPreview(item) {\n\t\tconst noPreview = item.type === \"Inactive\" || item.group;\n\t\tconst itemValue = noPreview ? \"\" : (item.effectiveTitle || item.textContent);\n\t\tthis.value = itemValue;\n\t}\n\n\t/**\n\t * The suggestion item on preview.\n\t * @type { ui5-suggestion-item }\n\t * @readonly\n\t * @public\n\t */\n\tget previewItem() {\n\t\tif (!this._previewItem) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getSuggestionByListItem(this._previewItem);\n\t}\n\n\tasync fireEventByAction(action) {\n\t\tawait this.getInputDOMRef();\n\n\t\tif (this.disabled || this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst inputValue = await this.getInputValue();\n\t\tconst isUserInput = action === this.ACTION_USER_INPUT;\n\n\t\tconst input = await this.getInputDOMRef();\n\t\tconst cursorPosition = input.selectionStart;\n\n\t\tthis.value = inputValue;\n\t\tthis.highlightValue = inputValue;\n\t\tthis.valueBeforeItemPreview = inputValue;\n\n\t\tif (isSafari()) {\n\t\t\t// When setting the value by hand, Safari moves the cursor when typing in the middle of the text (See #1761)\n\t\t\tsetTimeout(() => {\n\t\t\t\tinput.selectionStart = cursorPosition;\n\t\t\t\tinput.selectionEnd = cursorPosition;\n\t\t\t}, 0);\n\t\t}\n\n\t\tif (isUserInput) { // input\n\t\t\tthis.fireEvent(this.EVENT_INPUT);\n\t\t\t// Angular two way data binding\n\t\t\tthis.fireEvent(\"value-changed\");\n\t\t\treturn;\n\t\t}\n\n\t\t// In IE, pressing the ENTER does not fire change\n\t\tconst valueChanged = (this.previousValue !== undefined) && (this.previousValue !== this.value);\n\t\tif (isIE() && action === this.ACTION_ENTER && valueChanged) {\n\t\t\tthis.fireEvent(this.EVENT_CHANGE);\n\t\t}\n\t}\n\n\tasync getInputValue() {\n\t\tconst domRef = this.getDomRef();\n\n\t\tif (domRef) {\n\t\t\treturn (await this.getInputDOMRef()).value;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tasync getInputDOMRef() {\n\t\tif (isPhone() && this.Suggestions && this.suggestionItems.length) {\n\t\t\tawait this.Suggestions._respPopover();\n\t\t\treturn this.Suggestions && this.Suggestions.responsivePopover.querySelector(\".ui5-input-inner-phone\");\n\t\t}\n\n\t\treturn this.nativeInput;\n\t}\n\n\t/**\n\t * Returns a reference to the native input element\n\t * @protected\n\t */\n\tget nativeInput() {\n\t\treturn this.getDomRef() && this.getDomRef().querySelector(`input`);\n\t}\n\n\tget nativeInputWidth() {\n\t\treturn this.nativeInput && this.nativeInput.offsetWidth;\n\t}\n\n\tgetLabelableElementId() {\n\t\treturn this.getInputId();\n\t}\n\n\tgetSuggestionByListItem(item) {\n\t\tconst key = parseInt(item.getAttribute(\"data-ui5-key\"));\n\t\treturn this.suggestionItems[key];\n\t}\n\n\t/**\n\t * Returns if the suggestions popover is scrollable.\n\t * The method returns <code>Promise</code> that resolves to true,\n\t * if the popup is scrollable and false otherwise.\n\t * @returns {Promise}\n\t */\n\tisSuggestionsScrollable() {\n\t\tif (!this.Suggestions) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this.Suggestions._isScrollable();\n\t}\n\n\tgetInputId() {\n\t\treturn `${this._id}-inner`;\n\t}\n\n\t/* Suggestions interface  */\n\tonItemFocused() {}\n\n\tonItemMouseOver(event) {\n\t\tconst item = event.target;\n\t\tconst suggestion = this.getSuggestionByListItem(item);\n\t\tsuggestion && suggestion.fireEvent(\"mouseover\", {\n\t\t\titem: suggestion,\n\t\t\ttargetRef: item,\n\t\t});\n\t}\n\n\tonItemMouseOut(event) {\n\t\tconst item = event.target;\n\t\tconst suggestion = this.getSuggestionByListItem(item);\n\t\tsuggestion && suggestion.fireEvent(\"mouseout\", {\n\t\t\titem: suggestion,\n\t\t\ttargetRef: item,\n\t\t});\n\t}\n\n\tonItemSelected(item, keyboardUsed) {\n\t\tthis.selectSuggestion(item, keyboardUsed);\n\t}\n\n\tonItemPreviewed(item) {\n\t\tthis.previewSuggestion(item);\n\t\tthis.fireEvent(\"suggestion-item-preview\", {\n\t\t\titem: this.getSuggestionByListItem(item),\n\t\t\ttargetRef: item,\n\t\t});\n\t}\n\n\tonOpen() {}\n\n\tonClose() {}\n\n\tvalueStateTextMappings() {\n\t\tconst i18nBundle = this.i18nBundle;\n\n\t\treturn {\n\t\t\t\"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t\"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t\t\"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t};\n\t}\n\n\tannounceSelectedItem() {\n\t\tconst invisibleText = this.shadowRoot.querySelector(`#${this._id}-selectionText`);\n\n\t\tif (this.Suggestions && this.Suggestions._isItemOnTarget()) {\n\t\t\tinvisibleText.textContent = this.itemSelectionAnnounce;\n\t\t} else {\n\t\t\tinvisibleText.textContent = \"\";\n\t\t}\n\t}\n\n\tget _readonly() {\n\t\treturn this.readonly && !this.disabled;\n\t}\n\n\tget _headerTitleText() {\n\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n\t}\n\n\tget inputType() {\n\t\treturn this.type.toLowerCase();\n\t}\n\n\tget isTypeNumber() {\n\t\treturn this.type === InputType.Number;\n\t}\n\n\tget suggestionsTextId() {\n\t\treturn this.showSuggestions ? `${this._id}-suggestionsText` : \"\";\n\t}\n\n\tget valueStateTextId() {\n\t\treturn this.hasValueState ? `${this._id}-valueStateDesc` : \"\";\n\t}\n\n\tget accInfo() {\n\t\tconst ariaHasPopupDefault = this.showSuggestions ? \"true\" : undefined;\n\t\tconst ariaAutoCompleteDefault = this.showSuggestions ? \"list\" : undefined;\n\t\tconst ariaDescribedBy = this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId}`.trim();\n\n\t\treturn {\n\t\t\t\"input\": {\n\t\t\t\t\"ariaRoledescription\": this._inputAccInfo && (this._inputAccInfo.ariaRoledescription || undefined),\n\t\t\t\t\"ariaDescribedBy\": ariaDescribedBy || undefined,\n\t\t\t\t\"ariaInvalid\": this.valueState === ValueState.Error ? \"true\" : undefined,\n\t\t\t\t\"ariaHasPopup\": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,\n\t\t\t\t\"ariaAutoComplete\": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,\n\t\t\t\t\"role\": this._inputAccInfo && this._inputAccInfo.role,\n\t\t\t\t\"ariaControls\": this._inputAccInfo && this._inputAccInfo.ariaControls,\n\t\t\t\t\"ariaExpanded\": this._inputAccInfo && this._inputAccInfo.ariaExpanded,\n\t\t\t\t\"ariaDescription\": this._inputAccInfo && this._inputAccInfo.ariaDescription,\n\t\t\t\t\"ariaLabel\": (this._inputAccInfo && this._inputAccInfo.ariaLabel) || getEffectiveAriaLabelText(this),\n\t\t\t},\n\t\t};\n\t}\n\n\tget nativeInputAttributes() {\n\t\treturn {\n\t\t\t\"min\": this.isTypeNumber ? this._nativeInputAttributes.min : undefined,\n\t\t\t\"max\": this.isTypeNumber ? this._nativeInputAttributes.max : undefined,\n\t\t\t\"step\": this.isTypeNumber ? (this._nativeInputAttributes.step || \"any\") : undefined,\n\t\t};\n\t}\n\n\tget ariaValueStateHiddenText() {\n\t\tif (!this.hasValueStateMessage) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.shouldDisplayDefaultValueStateMessage) {\n\t\t\treturn this.valueStateText;\n\t\t}\n\n\t\treturn this.valueStateMessageText.map(el => el.textContent).join(\" \");\n\t}\n\n\tget itemSelectionAnnounce() {\n\t\treturn this.Suggestions ? this.Suggestions.itemSelectionAnnounce : undefined;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tpopoverValueState: {\n\t\t\t\t\"ui5-valuestatemessage-root\": true,\n\t\t\t\t\"ui5-responsive-popover-header\": !this.isValueStateOpened(),\n\t\t\t\t\"ui5-valuestatemessage--success\": this.valueState === ValueState.Success,\n\t\t\t\t\"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n\t\t\t\t\"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning,\n\t\t\t\t\"ui5-valuestatemessage--information\": this.valueState === ValueState.Information,\n\t\t\t},\n\t\t};\n\t}\n\n\tget styles() {\n\t\tconst stylesObject = {\n\t\t\tpopoverHeader: {\n\t\t\t\t\"max-width\": `${this._inputWidth}px`,\n\t\t\t},\n\t\t\tsuggestionPopoverHeader: {\n\t\t\t\t\"display\": this._listWidth === 0 ? \"none\" : \"inline-block\",\n\t\t\t\t\"width\": `${this._listWidth}px`,\n\t\t\t\t\"padding\": \"0.925rem 1rem\",\n\t\t\t},\n\t\t\tsuggestionsPopover: {\n\t\t\t\t\"max-width\": `${this._inputWidth}px`,\n\t\t\t},\n\t\t\tinnerInput: {},\n\t\t};\n\n\t\tif (this.nativeInputWidth < 48) {\n\t\t\tstylesObject.innerInput.padding = \"0\";\n\t\t}\n\n\t\treturn stylesObject;\n\t}\n\n\tget suggestionSeparators() {\n\t\treturn \"None\";\n\t}\n\n\tget valueStateMessageText() {\n\t\treturn this.getSlottedNodes(\"valueStateMessage\").map(el => el.cloneNode(true));\n\t}\n\n\tget shouldDisplayOnlyValueStateMessage() {\n\t\treturn this.hasValueStateMessage && !this.shouldOpenSuggestions() && this.focused;\n\t}\n\n\tget shouldDisplayDefaultValueStateMessage() {\n\t\treturn !this.valueStateMessage.length && this.hasValueStateMessage;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget hasValueStateMessage() {\n\t\treturn this.hasValueState && this.valueState !== ValueState.Success\n\t\t\t&& (!this._inputIconFocused // Handles the cases when valueStateMessage is forwarded (from datepicker e.g.)\n\t\t\t|| (this._isPhone && this.Suggestions)); // Handles Input with suggestions on mobile\n\t}\n\n\tget valueStateText() {\n\t\treturn this.valueStateTextMappings()[this.valueState];\n\t}\n\n\tget suggestionsText() {\n\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS);\n\t}\n\n\tget availableSuggestionsCount() {\n\t\tif (this.showSuggestions && (this.value || this.Suggestions.isOpened())) {\n\t\t\tswitch (this.suggestionsTexts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_NO_HIT);\n\n\t\t\tcase 1:\n\t\t\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_ONE_HIT);\n\n\t\t\tdefault:\n\t\t\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_MORE_HITS, this.suggestionsTexts.length);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget step() {\n\t\treturn this.isTypeNumber ? \"any\" : undefined;\n\t}\n\n\tget _isPhone() {\n\t\treturn isPhone();\n\t}\n\n\t/**\n\t * Returns the placeholder value.\n\t * @protected\n\t */\n\tget _placeholder() {\n\t\treturn this.placeholder;\n\t}\n\n\t/**\n\t * Returns the caret position inside the native input\n\t * @protected\n\t */\n\tgetCaretPosition() {\n\t\treturn getCaretPosition(this.nativeInput);\n\t}\n\n\t/**\n\t * Sets the caret to a certain position inside the native input\n\t * @protected\n\t * @param pos\n\t */\n\tsetCaretPosition(pos) {\n\t\tsetCaretPosition(this.nativeInput, pos);\n\t}\n\n\t/**\n\t * Removes the fractional part of floating-point number.\n\t * @param {String} value the numeric value of Input of type \"Number\"\n\t */\n\tremoveFractionalPart(value) {\n\t\tif (value.includes(\".\")) {\n\t\t\treturn value.slice(0, value.indexOf(\".\"));\n\t\t}\n\t\tif (value.includes(\",\")) {\n\t\t\treturn value.slice(0, value.indexOf(\",\"));\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tstatic get dependencies() {\n\t\tconst Suggestions = getFeature(\"InputSuggestions\");\n\n\t\treturn [Popover].concat(Suggestions ? Suggestions.dependencies : []);\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nInput.define();\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}