{"ast":null,"code":"import { ListMode } from '@ui5/webcomponents-react/dist/ListMode';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents-fiori/dist/UploadCollection';\n/**\n * This component allows you to represent files before uploading them to a server, with the help of `UploadCollection-item`. It also allows you to show already uploaded files.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/UploadCollection\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar UploadCollection = withWebComponent('ui5-upload-collection', ['mode', 'noDataDescription', 'noDataText'], ['hideDragOverlay'], ['header'], ['drop', 'item-delete', 'selection-change']);\nUploadCollection.displayName = 'UploadCollection';\nUploadCollection.defaultProps = {\n  hideDragOverlay: false,\n  mode: ListMode.None\n};\nexport { UploadCollection };","map":{"version":3,"sources":["../src/webComponents/UploadCollection/index.tsx"],"names":["UploadCollection","withWebComponent","hideDragOverlay","mode","ListMode","None"],"mappings":";;;AAgEA;AACA;AACA;AACA;AACA;;IACMA,gBAAgB,GAAGC,gBAAgB,CAAA,uBAAA,EAEvC,CAAA,MAAA,EAAA,mBAAA,EAFuC,YAEvC,CAFuC,EAGvC,CAHuC,iBAGvC,CAHuC,EAIvC,CAJuC,QAIvC,CAJuC,EAKvC,CAAA,MAAA,EAAA,aAAA,EALuC,kBAKvC,CALuC,C;AAQzCD,gBAAgB,CAAhBA,WAAAA,GAAAA,kBAAAA;AAEAA,gBAAgB,CAAhBA,YAAAA,GAAgC;AAC9BE,EAAAA,eAAe,EADe,KAAA;AAE9BC,EAAAA,IAAI,EAAEC,QAAQ,CAACC;AAFe,CAAhCL","sourcesContent":["import { ListMode } from '@ui5/webcomponents-react/dist/ListMode';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode, DragEventHandler } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/UploadCollection';\n\nexport interface UploadCollectionPropTypes extends Omit<CommonProps, 'onDrop'> {\n  /**\n   * By default there will be drag and drop overlay shown over the `UploadCollection` when files are dragged. If you don't intend to use drag and drop, set this property.\n   *\n   * **Note:** It is up to the application developer to add handler for `drop` event and handle it. `UploadCollection` only displays an overlay.\n   */\n  hideDragOverlay?: boolean;\n  /**\n   * Defines the mode of the `UploadCollection`.\n   *\n   * **Note:**\n   *\n   * *   `None`\n   * *   `SingleSelect`\n   * *   `MultiSelect`\n   * *   `Delete`\n   */\n  mode?: ListMode;\n  /**\n   * Allows you to set your own text for the 'No data' description.\n   */\n  noDataDescription?: string;\n  /**\n   * Allows you to set your own text for the 'No data' text.\n   */\n  noDataText?: string;\n  /**\n   * Defines the items of the `UploadCollection`.\n   * **Note:** Use `UploadCollectionItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the `UploadCollection` header.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when an element is dropped inside the drag and drop overlay.\n   *\n   * **Note:** The `drop` event is fired only when elements are dropped within the drag and drop overlay and ignored for the other parts of the `UploadCollection`.\n   */\n  onDrop?: DragEventHandler<HTMLElement>;\n  /**\n   * Fired when the Delete button of any item is pressed.\n   *\n   * **Note:** A Delete button is displayed on each item, when the `UploadCollection` `mode` property is set to `Delete`.\n   */\n  onItemDelete?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<HTMLElement, { selectedItems: unknown[] }>) => void;\n}\n\n/**\n * This component allows you to represent files before uploading them to a server, with the help of `UploadCollection-item`. It also allows you to show already uploaded files.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/UploadCollection\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst UploadCollection = withWebComponent<UploadCollectionPropTypes>(\n  'ui5-upload-collection',\n  ['mode', 'noDataDescription', 'noDataText'],\n  ['hideDragOverlay'],\n  ['header'],\n  ['drop', 'item-delete', 'selection-change']\n);\n\nUploadCollection.displayName = 'UploadCollection';\n\nUploadCollection.defaultProps = {\n  hideDragOverlay: false,\n  mode: ListMode.None\n};\n\nexport { UploadCollection };\n"]},"metadata":{},"sourceType":"module"}