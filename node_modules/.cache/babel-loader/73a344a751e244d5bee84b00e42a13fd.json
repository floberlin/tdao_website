{"ast":null,"code":"/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\n\nconst draggingFiles = event => {\n  return Array.from(event.dataTransfer.types).includes(\"Files\");\n};\n\nconst eventProvider = new EventProvider();\nconst EVENT = \"UploadCollectionBodyDndEvent\";\nlet lastDragEnter = null;\nlet globalHandlersAttached = false;\n\nconst ondragenter = event => {\n  if (!draggingFiles(event)) {\n    return;\n  }\n\n  lastDragEnter = event.target;\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.Drag\n  });\n};\n\nconst ondragleave = event => {\n  if (lastDragEnter === event.target) {\n    eventProvider.fireEvent(EVENT, {\n      mode: UploadCollectionDnDOverlayMode.None\n    });\n  }\n};\n\nconst ondrop = event => {\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.None\n  });\n};\n\nconst ondragover = event => {\n  event.preventDefault();\n};\n\nconst attachGlobalHandlers = () => {\n  document.body.addEventListener(\"dragenter\", ondragenter);\n  document.body.addEventListener(\"dragleave\", ondragleave);\n  document.body.addEventListener(\"drop\", ondrop);\n  document.body.addEventListener(\"dragover\", ondragover);\n};\n\nconst detachGlobalHandlers = () => {\n  document.body.removeEventListener(\"dragenter\", ondragenter);\n  document.body.removeEventListener(\"dragleave\", ondragleave);\n  document.body.removeEventListener(\"drop\", ondrop);\n  document.body.removeEventListener(\"dragover\", ondragover);\n  globalHandlersAttached = false;\n};\n\nconst attachBodyDnDHandler = handler => {\n  eventProvider.attachEvent(EVENT, handler);\n\n  if (!globalHandlersAttached) {\n    attachGlobalHandlers();\n    globalHandlersAttached = true;\n  }\n};\n\nconst detachBodyDnDHandler = handler => {\n  eventProvider.detachEvent(EVENT, handler);\n\n  if (!eventProvider.hasListeners(EVENT)) {\n    detachGlobalHandlers();\n  }\n};\n\nexport { attachBodyDnDHandler, detachBodyDnDHandler, draggingFiles };","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-fiori/dist/upload-utils/UploadCollectionBodyDnD.js"],"names":["EventProvider","UploadCollectionDnDOverlayMode","draggingFiles","event","Array","from","dataTransfer","types","includes","eventProvider","EVENT","lastDragEnter","globalHandlersAttached","ondragenter","target","fireEvent","mode","Drag","ondragleave","None","ondrop","ondragover","preventDefault","attachGlobalHandlers","document","body","addEventListener","detachGlobalHandlers","removeEventListener","attachBodyDnDHandler","handler","attachEvent","detachBodyDnDHandler","detachEvent","hasListeners"],"mappings":"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","sourcesContent":["/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\n\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\n\nconst draggingFiles = event => {\n\treturn Array.from(event.dataTransfer.types).includes(\"Files\");\n};\n\nconst eventProvider = new EventProvider();\nconst EVENT = \"UploadCollectionBodyDndEvent\";\nlet lastDragEnter = null;\nlet globalHandlersAttached = false;\n\nconst ondragenter = event => {\n\tif (!draggingFiles(event)) {\n\t\treturn;\n\t}\n\n\tlastDragEnter = event.target;\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.Drag });\n};\n\nconst ondragleave = event => {\n\tif (lastDragEnter === event.target) {\n\t\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n\t}\n};\n\nconst ondrop = event => {\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n};\n\nconst ondragover = event => {\n\tevent.preventDefault();\n};\n\nconst attachGlobalHandlers = () => {\n\tdocument.body.addEventListener(\"dragenter\", ondragenter);\n\tdocument.body.addEventListener(\"dragleave\", ondragleave);\n\tdocument.body.addEventListener(\"drop\", ondrop);\n\tdocument.body.addEventListener(\"dragover\", ondragover);\n};\n\nconst detachGlobalHandlers = () => {\n\tdocument.body.removeEventListener(\"dragenter\", ondragenter);\n\tdocument.body.removeEventListener(\"dragleave\", ondragleave);\n\tdocument.body.removeEventListener(\"drop\", ondrop);\n\tdocument.body.removeEventListener(\"dragover\", ondragover);\n\tglobalHandlersAttached = false;\n};\n\nconst attachBodyDnDHandler = handler => {\n\teventProvider.attachEvent(EVENT, handler);\n\n\tif (!globalHandlersAttached) {\n\t\tattachGlobalHandlers();\n\t\tglobalHandlersAttached = true;\n\t}\n};\n\nconst detachBodyDnDHandler = handler => {\n\teventProvider.detachEvent(EVENT, handler);\n\n\tif (!eventProvider.hasListeners(EVENT)) {\n\t\tdetachGlobalHandlers();\n\t}\n};\n\nexport {\n\tattachBodyDnDHandler,\n\tdetachBodyDnDHandler,\n\tdraggingFiles,\n};\n"]},"metadata":{},"sourceType":"module"}