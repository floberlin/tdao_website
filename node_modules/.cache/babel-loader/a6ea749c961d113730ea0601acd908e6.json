{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport '@ui5/webcomponents-icons/dist/hint.js';\nimport '@ui5/webcomponents-icons/dist/message-error.js';\nimport '@ui5/webcomponents-icons/dist/message-information.js';\nimport '@ui5/webcomponents-icons/dist/message-success.js';\nimport '@ui5/webcomponents-icons/dist/message-warning.js';\nimport '@ui5/webcomponents-icons/dist/question-mark.js';\nimport { useSyncRef, useI18nBundle, useIsomorphicLayoutEffect } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { ABORT, CANCEL, CLOSE, DELETE, IGNORE, NO, OK, RETRY, YES, HIGHLIGHT, WARNING, SUCCESS, INFORMATION, ERROR, CONFIRMATION } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { Dialog } from '@ui5/webcomponents-react/dist/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/dist/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/dist/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport clsx from 'clsx';\nimport React, { forwardRef, useEffect, useState, isValidElement, cloneElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nvar stopPropagation = function stopPropagation(e) {\n  var _e$stopImmediatePropa;\n\n  e.stopPropagation();\n  (_e$stopImmediatePropa = e.stopImmediatePropagation) === null || _e$stopImmediatePropa === void 0 ? void 0 : _e$stopImmediatePropa.call(e);\n};\n\nvar style = {\n  messageBox: {\n    '--sapContent_Shadow0': 'none'\n  },\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: \"1px solid var(--messageBoxBorderColor)\",\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '& ui5-icon:first-child': {\n      width: '1rem',\n      height: '1rem'\n    },\n    '& [ui5-title]': {\n      fontSize: '1rem'\n    },\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    }\n  },\n  spacer: {\n    width: '0.5rem'\n  },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& > *': {\n      margin: '0 0.25rem'\n    },\n    '& > ui5-button': {\n      display: 'flex',\n      minWidth: '4rem'\n    }\n  }\n};\nvar styles = style;\nvar _excluded = [\"open\", \"type\", \"children\", \"className\", \"style\", \"tooltip\", \"slot\", \"titleText\", \"icon\", \"actions\", \"emphasizedAction\", \"onClose\", \"initialFocus\", \"accessibleName\"],\n    _excluded2 = [\"footer\", \"headerText\", \"title\", \"onAfterClose\"];\nvar useStyles = createUseStyles(styles, {\n  name: 'MessageBox'\n});\n\nvar createUniqueIds = function createUniqueIds(internalActions) {\n  return internalActions.map(function (action) {\n    if (typeof action === 'string') {\n      return \"\".concat(performance.now() + Math.random()).split('.')[1];\n    }\n\n    return null;\n  });\n};\n\nvar getIcon = function getIcon(icon, type) {\n  if ( /*#__PURE__*/isValidElement(icon)) return icon;\n\n  switch (type) {\n    case MessageBoxTypes.Confirm:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"question-mark\"\n      });\n\n    case MessageBoxTypes.Error:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"message-error\"\n      });\n\n    case MessageBoxTypes.Information:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"message-information\"\n      });\n\n    case MessageBoxTypes.Success:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"message-success\"\n      });\n\n    case MessageBoxTypes.Warning:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"message-warning\"\n      });\n\n    case MessageBoxTypes.Highlight:\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"hint\"\n      });\n\n    default:\n      return null;\n  }\n};\n\nvar getActions = function getActions(actions, type) {\n  if (actions && actions.length > 0) {\n    return actions;\n  }\n\n  if (type === MessageBoxTypes.Confirm) {\n    return [MessageBoxActions.OK, MessageBoxActions.Cancel];\n  }\n\n  if (type === MessageBoxTypes.Error) {\n    return [MessageBoxActions.Close];\n  }\n\n  return [MessageBoxActions.OK];\n};\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.\n */\n\n\nvar MessageBox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _actionTranslations, _titleToRender;\n\n  var open = props.open,\n      type = props.type,\n      children = props.children,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      slot = props.slot,\n      titleText = props.titleText,\n      icon = props.icon,\n      actions = props.actions,\n      emphasizedAction = props.emphasizedAction,\n      onClose = props.onClose,\n      initialFocus = props.initialFocus,\n      accessibleName = props.accessibleName,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useSyncRef = useSyncRef(ref),\n      _useSyncRef2 = _slicedToArray(_useSyncRef, 2),\n      componentRef = _useSyncRef2[0],\n      dialogRef = _useSyncRef2[1];\n\n  var classes = useStyles();\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var actionTranslations = (_actionTranslations = {}, _defineProperty(_actionTranslations, MessageBoxActions.Abort, i18nBundle.getText(ABORT)), _defineProperty(_actionTranslations, MessageBoxActions.Cancel, i18nBundle.getText(CANCEL)), _defineProperty(_actionTranslations, MessageBoxActions.Close, i18nBundle.getText(CLOSE)), _defineProperty(_actionTranslations, MessageBoxActions.Delete, i18nBundle.getText(DELETE)), _defineProperty(_actionTranslations, MessageBoxActions.Ignore, i18nBundle.getText(IGNORE)), _defineProperty(_actionTranslations, MessageBoxActions.No, i18nBundle.getText(NO)), _defineProperty(_actionTranslations, MessageBoxActions.OK, i18nBundle.getText(OK)), _defineProperty(_actionTranslations, MessageBoxActions.Retry, i18nBundle.getText(RETRY)), _defineProperty(_actionTranslations, MessageBoxActions.Yes, i18nBundle.getText(YES)), _actionTranslations);\n\n  var titleToRender = function titleToRender() {\n    if (titleText) {\n      return titleText;\n    }\n\n    switch (type) {\n      case MessageBoxTypes.Confirm:\n        return i18nBundle.getText(CONFIRMATION);\n\n      case MessageBoxTypes.Error:\n        return i18nBundle.getText(ERROR);\n\n      case MessageBoxTypes.Information:\n        return i18nBundle.getText(INFORMATION);\n\n      case MessageBoxTypes.Success:\n        return i18nBundle.getText(SUCCESS);\n\n      case MessageBoxTypes.Warning:\n        return i18nBundle.getText(WARNING);\n\n      case MessageBoxTypes.Highlight:\n        return i18nBundle.getText(HIGHLIGHT);\n\n      default:\n        return null;\n    }\n  };\n\n  var handleOnClose = function handleOnClose(e) {\n    var action = e.target.dataset.action;\n    stopPropagation(e);\n    onClose(enrichEventWithDetails(e, {\n      action: action\n    }));\n  };\n\n  useEffect(function () {\n    if (dialogRef.current) {\n      if (open) {\n        var _dialogRef$current$sh, _dialogRef$current;\n\n        (_dialogRef$current$sh = (_dialogRef$current = dialogRef.current).show) === null || _dialogRef$current$sh === void 0 ? void 0 : _dialogRef$current$sh.call(_dialogRef$current);\n      } else {\n        var _dialogRef$current$cl, _dialogRef$current2;\n\n        (_dialogRef$current$cl = (_dialogRef$current2 = dialogRef.current).close) === null || _dialogRef$current$cl === void 0 ? void 0 : _dialogRef$current$cl.call(_dialogRef$current2);\n      }\n    }\n  }, [dialogRef.current, open]);\n  var messageBoxClassNames = clsx(classes.messageBox, className);\n  var internalActions = getActions(actions, type);\n\n  var _useState = useState(function () {\n    return createUniqueIds(internalActions);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      uniqueIds = _useState2[0],\n      setUniqueIds = _useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    setUniqueIds(createUniqueIds(internalActions));\n  }, [internalActions.length]);\n\n  var getInitialFocus = function getInitialFocus() {\n    var indexOfInitialFocus = internalActions.indexOf(initialFocus);\n\n    if (~indexOfInitialFocus && typeof internalActions[indexOfInitialFocus] === 'string') {\n      return \"\".concat(internalActions[indexOfInitialFocus], \"-\").concat(uniqueIds[indexOfInitialFocus]);\n    }\n\n    return initialFocus;\n  };\n\n  var iconToRender = getIcon(icon, type); // @ts-ignore\n\n  rest.footer;\n  rest.headerText;\n  rest.title;\n  rest.onAfterClose;\n\n  var restWithoutOmitted = _objectWithoutProperties(rest, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Dialog, _extends({\n    slot: slot,\n    ref: componentRef,\n    style: style,\n    title: tooltip !== null && tooltip !== void 0 ? tooltip : props.title,\n    className: messageBoxClassNames,\n    onAfterClose: open ? handleOnClose : stopPropagation\n  }, restWithoutOmitted, {\n    accessibleName: accessibleName !== null && accessibleName !== void 0 ? accessibleName : \"\".concat((_titleToRender = titleToRender()) !== null && _titleToRender !== void 0 ? _titleToRender : '', \" \").concat(typeof children === 'string' ? children : ''),\n    initialFocus: getInitialFocus()\n  }), !props.header && /*#__PURE__*/React.createElement(\"header\", {\n    slot: \"header\",\n    className: classes.header,\n    \"data-type\": type\n  }, iconToRender, iconToRender && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.spacer\n  }), /*#__PURE__*/React.createElement(Title, {\n    level: TitleLevel.H2\n  }, titleToRender())), /*#__PURE__*/React.createElement(Text, {\n    className: classes.content\n  }, children), /*#__PURE__*/React.createElement(\"footer\", {\n    slot: \"footer\",\n    className: classes.footer\n  }, internalActions.map(function (action, index) {\n    var _actionTranslations$a;\n\n    if (typeof action !== 'string' && /*#__PURE__*/isValidElement(action)) {\n      var _props, _action$props$dataAc, _action$props;\n\n      return /*#__PURE__*/cloneElement(action, {\n        onClick: action !== null && action !== void 0 && (_props = action.props) !== null && _props !== void 0 && _props.onClick ? function (e) {\n          var _props2;\n\n          action === null || action === void 0 ? void 0 : (_props2 = action.props) === null || _props2 === void 0 ? void 0 : _props2.onClick(e);\n          handleOnClose(e);\n        } : handleOnClose,\n        'data-action': (_action$props$dataAc = action === null || action === void 0 ? void 0 : (_action$props = action.props) === null || _action$props === void 0 ? void 0 : _action$props['data-action']) !== null && _action$props$dataAc !== void 0 ? _action$props$dataAc : \"\".concat(index, \": custom action\")\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      id: \"\".concat(action, \"-\").concat(uniqueIds[index]),\n      key: \"\".concat(action, \"-\").concat(index),\n      design: emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent,\n      onClick: handleOnClose,\n      \"data-action\": action\n    }, (_actionTranslations$a = actionTranslations[action]) !== null && _actionTranslations$a !== void 0 ? _actionTranslations$a : action);\n  })));\n});\nMessageBox.displayName = 'MessageBox';\nMessageBox.defaultProps = {\n  open: false,\n  type: MessageBoxTypes.Confirm,\n  emphasizedAction: MessageBoxActions.OK,\n  actions: []\n};\nexport { MessageBox };","map":{"version":3,"sources":["../src/internal/stopPropagation.ts","../src/components/MessageBox/MessageBox.jss.ts","../src/components/MessageBox/index.tsx"],"names":["stopPropagation","e","style","messageBox","header","display","height","CssSizeVariables","textAlign","width","alignItems","padding","boxSizing","borderBottom","color","ThemingParameters","fontSize","sapNegativeElementColor","sapCriticalElementColor","sapPositiveElementColor","sapNeutralElementColor","sapInformativeElementColor","spacer","content","footer","justifyContent","margin","minWidth","useStyles","createUseStyles","name","createUniqueIds","performance","Math","getIcon","isValidElement","MessageBoxTypes","getActions","actions","type","MessageBoxActions","MessageBox","forwardRef","open","children","className","tooltip","slot","titleText","icon","emphasizedAction","onClose","initialFocus","accessibleName","rest","props","componentRef","dialogRef","useSyncRef","classes","i18nBundle","useI18nBundle","actionTranslations","titleToRender","handleOnClose","action","enrichEventWithDetails","useEffect","messageBoxClassNames","clsx","internalActions","uniqueIds","setUniqueIds","useState","useIsomorphicLayoutEffect","getInitialFocus","indexOfInitialFocus","iconToRender","restWithoutOmitted","TitleLevel","H2","cloneElement","onClick","ButtonDesign"],"mappings":"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","sourcesContent":["export const stopPropagation = (e) => {\n  e.stopPropagation();\n  e.stopImmediatePropagation?.();\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nconst style = {\n  messageBox: {\n    '--sapContent_Shadow0': 'none'\n  },\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid var(--messageBoxBorderColor)`,\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '& ui5-icon:first-child': {\n      width: '1rem',\n      height: '1rem'\n    },\n    '& [ui5-title]': {\n      fontSize: '1rem'\n    },\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n    }\n  },\n  spacer: { width: '0.5rem' },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& > *': {\n      margin: '0 0.25rem'\n    },\n    '& > ui5-button': {\n      display: 'flex',\n      minWidth: '4rem'\n    }\n  }\n};\n\nexport default style;\n","import '@ui5/webcomponents-icons/dist/hint.js';\nimport '@ui5/webcomponents-icons/dist/message-error.js';\nimport '@ui5/webcomponents-icons/dist/message-information.js';\nimport '@ui5/webcomponents-icons/dist/message-success.js';\nimport '@ui5/webcomponents-icons/dist/message-warning.js';\nimport '@ui5/webcomponents-icons/dist/question-mark.js';\nimport { useI18nBundle, useIsomorphicLayoutEffect, useSyncRef } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport {\n  ABORT,\n  CANCEL,\n  CLOSE,\n  CONFIRMATION,\n  DELETE,\n  ERROR,\n  HIGHLIGHT,\n  IGNORE,\n  INFORMATION,\n  NO,\n  OK,\n  RETRY,\n  SUCCESS,\n  WARNING,\n  YES\n} from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button, ButtonPropTypes } from '@ui5/webcomponents-react/dist/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { Dialog, DialogPropTypes, DialogDomRef } from '@ui5/webcomponents-react/dist/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/dist/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/dist/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/dist/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/dist/Text';\nimport { Title } from '@ui5/webcomponents-react/dist/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport clsx from 'clsx';\nimport React, {\n  cloneElement,\n  forwardRef,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  Ref,\n  useEffect,\n  useState\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { stopPropagation } from '../../internal/stopPropagation';\nimport styles from './MessageBox.jss';\n\ntype MessageBoxAction = MessageBoxActions | keyof typeof MessageBoxActions | string;\n\nexport interface MessageBoxPropTypes\n  extends Omit<DialogPropTypes, 'children' | 'footer' | 'headerText' | 'onAfterClose'> {\n  /**\n   * Flag whether the Message Box should be opened or closed\n   */\n  open?: boolean;\n  /**\n   * A custom title for the MessageBox. If not present, it will be derived from the `MessageBox` type.\n   */\n  titleText?: string;\n  /**\n   * Defines the content of the `MessageBox`.\n   *\n   * **Note:** Although this prop accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design and a11y capabilities.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Array of actions of the MessageBox. Those actions will be transformed into buttons in the `MessageBox` footer.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `MessageBoxAction`s (text) or the `Button` component in order to preserve the intended.\n   */\n  actions?: (MessageBoxAction | ReactNode)[];\n  /**\n   * Specifies which action of the created dialog will be emphasized.\n   *\n   * @since 0.16.3\n   */\n  emphasizedAction?: MessageBoxAction;\n  /**\n   * A custom icon. If not present, it will be derived from the `MessageBox` type.\n   */\n  icon?: ReactNode;\n  /**\n   * Defines the type of the `MessageBox` with predefined title, icon, actions and a visual highlight color.\n   */\n  type?: MessageBoxTypes | keyof typeof MessageBoxTypes;\n  /**\n   * Defines the ID of the HTML Element or the `MessageBoxAction`, which will get the initial focus.\n   */\n  initialFocus?: MessageBoxAction;\n  /**\n   * Callback to be executed when the `MessageBox` is closed (either by pressing on one of the `actions` or by pressing the `ESC` key). `event.detail.action` contains the pressed action button.\n   */\n  onClose?: (event: CustomEvent<{ action: MessageBoxAction }>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. This event does not bubble.\n   */\n  onBeforeOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired after the component is opened. This event does not bubble.\n   */\n  onAfterOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'MessageBox' });\n\nconst createUniqueIds = (internalActions) => {\n  return internalActions.map((action) => {\n    if (typeof action === 'string') {\n      return `${performance.now() + Math.random()}`.split('.')[1];\n    }\n    return null;\n  });\n};\n\nconst getIcon = (icon, type) => {\n  if (isValidElement(icon)) return icon;\n  switch (type) {\n    case MessageBoxTypes.Confirm:\n      return <Icon name=\"question-mark\" />;\n    case MessageBoxTypes.Error:\n      return <Icon name=\"message-error\" />;\n    case MessageBoxTypes.Information:\n      return <Icon name=\"message-information\" />;\n    case MessageBoxTypes.Success:\n      return <Icon name=\"message-success\" />;\n    case MessageBoxTypes.Warning:\n      return <Icon name=\"message-warning\" />;\n    case MessageBoxTypes.Highlight:\n      return <Icon name=\"hint\" />;\n    default:\n      return null;\n  }\n};\n\nconst getActions = (actions, type) => {\n  if (actions && actions.length > 0) {\n    return actions;\n  }\n  if (type === MessageBoxTypes.Confirm) {\n    return [MessageBoxActions.OK, MessageBoxActions.Cancel];\n  }\n  if (type === MessageBoxTypes.Error) {\n    return [MessageBoxActions.Close];\n  }\n  return [MessageBoxActions.OK];\n};\n\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.\n */\nconst MessageBox = forwardRef((props: MessageBoxPropTypes, ref: Ref<DialogDomRef>) => {\n  const {\n    open,\n    type,\n    children,\n    className,\n    style,\n    tooltip,\n    slot,\n    titleText,\n    icon,\n    actions,\n    emphasizedAction,\n    onClose,\n    initialFocus,\n    accessibleName,\n    ...rest\n  } = props;\n  const [componentRef, dialogRef] = useSyncRef<DialogDomRef>(ref);\n\n  const classes = useStyles();\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const actionTranslations = {\n    [MessageBoxActions.Abort]: i18nBundle.getText(ABORT),\n    [MessageBoxActions.Cancel]: i18nBundle.getText(CANCEL),\n    [MessageBoxActions.Close]: i18nBundle.getText(CLOSE),\n    [MessageBoxActions.Delete]: i18nBundle.getText(DELETE),\n    [MessageBoxActions.Ignore]: i18nBundle.getText(IGNORE),\n    [MessageBoxActions.No]: i18nBundle.getText(NO),\n    [MessageBoxActions.OK]: i18nBundle.getText(OK),\n    [MessageBoxActions.Retry]: i18nBundle.getText(RETRY),\n    [MessageBoxActions.Yes]: i18nBundle.getText(YES)\n  };\n\n  const titleToRender = () => {\n    if (titleText) {\n      return titleText;\n    }\n    switch (type) {\n      case MessageBoxTypes.Confirm:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxTypes.Error:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxTypes.Information:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxTypes.Success:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxTypes.Warning:\n        return i18nBundle.getText(WARNING);\n      case MessageBoxTypes.Highlight:\n        return i18nBundle.getText(HIGHLIGHT);\n      default:\n        return null;\n    }\n  };\n\n  const handleOnClose = (e) => {\n    const { action } = e.target.dataset;\n    stopPropagation(e);\n    onClose(enrichEventWithDetails(e, { action }));\n  };\n\n  useEffect(() => {\n    if (dialogRef.current) {\n      if (open) {\n        dialogRef.current.show?.();\n      } else {\n        dialogRef.current.close?.();\n      }\n    }\n  }, [dialogRef.current, open]);\n\n  const messageBoxClassNames = clsx(classes.messageBox, className);\n  const internalActions = getActions(actions, type);\n\n  const [uniqueIds, setUniqueIds] = useState(() => createUniqueIds(internalActions));\n  useIsomorphicLayoutEffect(() => {\n    setUniqueIds(createUniqueIds(internalActions));\n  }, [internalActions.length]);\n\n  const getInitialFocus = () => {\n    const indexOfInitialFocus = internalActions.indexOf(initialFocus);\n    if (~indexOfInitialFocus && typeof internalActions[indexOfInitialFocus] === 'string') {\n      return `${internalActions[indexOfInitialFocus]}-${uniqueIds[indexOfInitialFocus]}`;\n    }\n    return initialFocus;\n  };\n\n  const iconToRender = getIcon(icon, type);\n\n  // @ts-ignore\n  const { footer, headerText, title, onAfterClose, ...restWithoutOmitted } = rest;\n\n  return (\n    <Dialog\n      slot={slot}\n      ref={componentRef}\n      style={style}\n      title={tooltip ?? props.title}\n      className={messageBoxClassNames}\n      onAfterClose={open ? handleOnClose : stopPropagation}\n      {...restWithoutOmitted}\n      accessibleName={accessibleName ?? `${titleToRender() ?? ''} ${typeof children === 'string' ? children : ''}`}\n      initialFocus={getInitialFocus()}\n    >\n      {!props.header && (\n        <header slot=\"header\" className={classes.header} data-type={type}>\n          {iconToRender}\n          {iconToRender && <span className={classes.spacer} />}\n          <Title level={TitleLevel.H2}>{titleToRender()}</Title>\n        </header>\n      )}\n      <Text className={classes.content}>{children}</Text>\n      <footer slot=\"footer\" className={classes.footer}>\n        {internalActions.map((action, index) => {\n          if (typeof action !== 'string' && isValidElement(action)) {\n            return cloneElement<ButtonPropTypes | { 'data-action': string }>(action, {\n              onClick: (action as ReactElement<ButtonPropTypes>)?.props?.onClick\n                ? (e) => {\n                    (action as ReactElement<ButtonPropTypes>)?.props?.onClick(e);\n                    handleOnClose(e);\n                  }\n                : handleOnClose,\n              'data-action': action?.props?.['data-action'] ?? `${index}: custom action`\n            });\n          }\n          return (\n            <Button\n              id={`${action}-${uniqueIds[index]}`}\n              key={`${action}-${index}`}\n              design={emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent}\n              onClick={handleOnClose}\n              data-action={action}\n            >\n              {actionTranslations[action] ?? action}\n            </Button>\n          );\n        })}\n      </footer>\n    </Dialog>\n  );\n});\n\nMessageBox.displayName = 'MessageBox';\n\nMessageBox.defaultProps = {\n  open: false,\n  type: MessageBoxTypes.Confirm,\n  emphasizedAction: MessageBoxActions.OK,\n  actions: []\n};\n\nexport { MessageBox };\n"]},"metadata":{},"sourceType":"module"}