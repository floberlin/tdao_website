{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-tree-item\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.TreeItem.prototype */\n  {\n    /**\n     * Defines the text of the tree item.\n     *\n     * @public\n     * @type {String}\n     * @defaultValue \"\"\n     */\n    text: {\n      type: String\n    },\n\n    /**\n     * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    expanded: {\n      type: Boolean\n    },\n\n    /**\n    * Defines whether the selection of a tree node is displayed as partially selected.\n    * <br><br>\n    * <b>Note:</b> The indeterminate state can be set only programatically and can’t be achieved by user\n    * interaction, meaning that the resulting visual state depends on the values of the <code>indeterminate</code>\n    * and <code>selected</code> properties:\n    * <ul>\n    * <li> If a tree node has both <code>selected</code> and <code>indeterminate</code> set to <code>true</code>, it is displayed as partially selected.\n    * <li> If a tree node has <code>selected</code> set to <code>true</code> and <code>indeterminate</code> set to <code>false</code>, it is displayed as selected.\n    * <li> If a tree node has <code>selected</code> set to <code>false</code>, it is displayed as not selected regardless of the value of the <code>indeterminate</code> property.\n    * </ul>\n    * <br>\n    * <b>Note:</b> This property takes effect only when the <code>ui5-tree</code> is in <code>MultiSelect</code> mode.\n    * @type {boolean}\n    * @defaultvalue false\n    * @public\n    * @since 1.1.0\n    */\n    indeterminate: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n     * <br>\n     * <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons.\n     * Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button.\n     * It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    hasChildren: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the tree node is selected by the user. Only has effect if the <code>ui5-tree</code> is in one of the\n     * following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    selected: {\n      type: Boolean\n    },\n\n    /**\n     * If set, an icon will be displayed before the text, representing the tree item.\n     *\n     * @public\n     * @type {String}\n     * @defaultValue \"\"\n     */\n    icon: {\n      type: String\n    },\n\n    /**\n     * Defines the <code>additionalText</code>, displayed in the end of the tree item.\n     * @type {string}\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalText: {\n      type: String\n    },\n\n    /**\n     * Defines the state of the <code>additionalText</code>.\n     * <br>\n     * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Erorr\"</code>.\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalTextState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Defines the tooltip of the component.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @private\n     * @since 1.0.0-rc.15\n     */\n    title: {\n      type: String\n    }\n  },\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.TreeItem.prototype */\n  {\n    /**\n     * Defines the items of this component.\n     *\n     * @type {sap.ui.webcomponents.main.ITreeItem[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      propertyName: \"items\",\n      type: HTMLElement,\n      invalidateOnChildChange: true\n    }\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * This is the item to use inside a <code>ui5-tree</code>.\n * You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * <h3>Usage</h3>\n * <code>ui5-tree-item</code> is an abstract element, representing a node in a <code>ui5-tree</code>. The tree itself is rendered as a list,\n * and each <code>ui5-tree-item</code> is represented by a list item(<code>ui5-li-tree</code>) in that list. Therefore, you should only use\n * <code>ui5-tree-item</code> directly in your apps. The <code>ui5-li-tree</code> list item is internal for the list, and not intended for public use.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeItem\n * @extends UI5Element\n * @tagname ui5-tree-item\n * @public\n * @implements sap.ui.webcomponents.main.ITreeItem\n * @since 1.0.0-rc.8\n */\n\nclass TreeItem extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  get requiresToggleButton() {\n    return this.hasChildren || this.items.length > 0;\n  }\n  /**\n   * Call this method to manually switch the <code>expanded</code> state of a tree item.\n   * @public\n   */\n\n\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n\n}\n\nTreeItem.define();\nexport default TreeItem;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/TreeItem.js"],"names":["UI5Element","ValueState","metadata","tag","properties","text","type","String","expanded","Boolean","indeterminate","hasChildren","selected","icon","additionalText","additionalTextState","defaultValue","None","title","managedSlots","slots","propertyName","HTMLElement","invalidateOnChildChange","TreeItem","requiresToggleButton","items","length","toggle","define"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4CAAvB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE,eADW;AAEhBC,EAAAA,UAAU;AAAE;AAA2D;AAEtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEC;AADD,KATgE;;AAatE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE;AACTF,MAAAA,IAAI,EAAEG;AADG,KApB4D;;AAuBtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,aAAa,EAAE;AACdJ,MAAAA,IAAI,EAAEG;AADQ,KAzCuD;;AA6CtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEG;AADM,KAxDyD;;AA4DtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,IAAAA,QAAQ,EAAE;AACTN,MAAAA,IAAI,EAAEG;AADG,KApE4D;;AAwEtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEI,IAAAA,IAAI,EAAE;AACLP,MAAAA,IAAI,EAAEC;AADD,KA/EgE;;AAmFtE;AACF;AACA;AACA;AACA;AACA;AACEO,IAAAA,cAAc,EAAE;AACfR,MAAAA,IAAI,EAAEC;AADS,KAzFsD;;AA6FtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEQ,IAAAA,mBAAmB,EAAE;AACpBT,MAAAA,IAAI,EAAEL,UADc;AAEpBe,MAAAA,YAAY,EAAEf,UAAU,CAACgB;AAFL,KAtGiD;;AA2GtE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,KAAK,EAAE;AACNZ,MAAAA,IAAI,EAAEC;AADA;AAlH+D,GAFvD;AAwHhBY,EAAAA,YAAY,EAAE,IAxHE;AAyHhBC,EAAAA,KAAK;AAAE;AAA2D;AAEjE;AACF;AACA;AACA;AACA;AACA;AACA;AACE,eAAW;AACVC,MAAAA,YAAY,EAAE,OADJ;AAEVf,MAAAA,IAAI,EAAEgB,WAFI;AAGVC,MAAAA,uBAAuB,EAAE;AAHf;AATsD;AAzHlD,CAAjB;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBxB,UAAvB,CAAkC;AACd,aAARE,QAAQ,GAAG;AACrB,WAAOA,QAAP;AACA;;AAEuB,MAApBuB,oBAAoB,GAAG;AAC1B,WAAO,KAAKd,WAAL,IAAoB,KAAKe,KAAL,CAAWC,MAAX,GAAoB,CAA/C;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,MAAM,GAAG;AACR,SAAKpB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA;;AAfgC;;AAkBlCgB,QAAQ,CAACK,MAAT;AAEA,eAAeL,QAAf","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-tree-item\",\n\tproperties: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the text of the tree item.\n\t\t *\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultValue \"\"\n\t\t */\n\t\ttext: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\texpanded: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\t/**\n\t\t* Defines whether the selection of a tree node is displayed as partially selected.\n\t\t* <br><br>\n\t\t* <b>Note:</b> The indeterminate state can be set only programatically and can’t be achieved by user\n\t\t* interaction, meaning that the resulting visual state depends on the values of the <code>indeterminate</code>\n\t\t* and <code>selected</code> properties:\n\t\t* <ul>\n\t\t* <li> If a tree node has both <code>selected</code> and <code>indeterminate</code> set to <code>true</code>, it is displayed as partially selected.\n\t\t* <li> If a tree node has <code>selected</code> set to <code>true</code> and <code>indeterminate</code> set to <code>false</code>, it is displayed as selected.\n\t\t* <li> If a tree node has <code>selected</code> set to <code>false</code>, it is displayed as not selected regardless of the value of the <code>indeterminate</code> property.\n\t\t* </ul>\n\t\t* <br>\n\t\t* <b>Note:</b> This property takes effect only when the <code>ui5-tree</code> is in <code>MultiSelect</code> mode.\n\t\t* @type {boolean}\n\t\t* @defaultvalue false\n\t\t* @public\n\t\t* @since 1.1.0\n\t\t*/\n\t\tindeterminate: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n\t\t * <br>\n\t\t * <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons.\n\t\t * Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button.\n\t\t * It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\thasChildren: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node is selected by the user. Only has effect if the <code>ui5-tree</code> is in one of the\n\t\t * following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tselected: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * If set, an icon will be displayed before the text, representing the tree item.\n\t\t *\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultValue \"\"\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>additionalText</code>, displayed in the end of the tree item.\n\t\t * @type {string}\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the state of the <code>additionalText</code>.\n\t\t * <br>\n\t\t * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Erorr\"</code>.\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalTextState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tooltip of the component.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the items of this component.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.ITreeItem[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"items\",\n\t\t\ttype: HTMLElement,\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * This is the item to use inside a <code>ui5-tree</code>.\n * You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * <h3>Usage</h3>\n * <code>ui5-tree-item</code> is an abstract element, representing a node in a <code>ui5-tree</code>. The tree itself is rendered as a list,\n * and each <code>ui5-tree-item</code> is represented by a list item(<code>ui5-li-tree</code>) in that list. Therefore, you should only use\n * <code>ui5-tree-item</code> directly in your apps. The <code>ui5-li-tree</code> list item is internal for the list, and not intended for public use.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import \"@ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeItem\n * @extends UI5Element\n * @tagname ui5-tree-item\n * @public\n * @implements sap.ui.webcomponents.main.ITreeItem\n * @since 1.0.0-rc.8\n */\nclass TreeItem extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tget requiresToggleButton() {\n\t\treturn this.hasChildren || this.items.length > 0;\n\t}\n\n\t/**\n\t * Call this method to manually switch the <code>expanded</code> state of a tree item.\n\t * @public\n\t */\n\ttoggle() {\n\t\tthis.expanded = !this.expanded;\n\t}\n}\n\nTreeItem.define();\n\nexport default TreeItem;\n"]},"metadata":{},"sourceType":"module"}