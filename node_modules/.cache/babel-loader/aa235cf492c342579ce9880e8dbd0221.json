{"ast":null,"code":"import AnimationQueue from \"./AnimationQueue.js\";\nimport animationConfig from \"./config.js\";\nexport default (function (_ref) {\n  var _ref$beforeStart = _ref.beforeStart,\n      beforeStart = _ref$beforeStart === void 0 ? animationConfig.identity : _ref$beforeStart,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? animationConfig.defaultDuration : _ref$duration,\n      _ref$element = _ref.element,\n      element = _ref$element === void 0 ? animationConfig.element : _ref$element,\n      _ref$progress = _ref.progress,\n      progressCallback = _ref$progress === void 0 ? animationConfig.identity : _ref$progress;\n  var start = null;\n  var stopped = false;\n  var animationFrame;\n\n  var _stop;\n\n  var _animate;\n\n  var _promise = new Promise(function (resolve, reject) {\n    _animate = function animate(timestamp) {\n      start = start || timestamp;\n      var timeElapsed = timestamp - start;\n      var remaining = duration - timeElapsed;\n\n      if (timeElapsed <= duration) {\n        var progress = 1 - remaining / duration; // easing formula (currently linear)\n\n        progressCallback(progress);\n        animationFrame = !stopped && requestAnimationFrame(_animate);\n      } else {\n        progressCallback(1);\n        resolve();\n      }\n    };\n\n    _stop = function stop() {\n      stopped = true;\n      cancelAnimationFrame(animationFrame);\n      reject(new Error(\"animation stopped\"));\n    };\n  }).catch(function (oReason) {\n    return oReason;\n  });\n\n  AnimationQueue.push(element, function () {\n    beforeStart();\n    requestAnimationFrame(_animate);\n    return new Promise(function (resolve) {\n      _promise.then(function () {\n        return resolve();\n      });\n    });\n  });\n  return {\n    promise: function promise() {\n      return _promise;\n    },\n    stop: function stop() {\n      return _stop;\n    }\n  };\n});","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/animations/animate.js"],"names":["AnimationQueue","animationConfig","beforeStart","identity","duration","defaultDuration","element","progress","progressCallback","start","stopped","animationFrame","stop","animate","promise","Promise","resolve","reject","timestamp","timeElapsed","remaining","requestAnimationFrame","cancelAnimationFrame","Error","catch","oReason","push","then"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,gBAAe,gBAKT;AAAA,8BAJLC,WAIK;AAAA,MAJLA,WAIK,iCAJSD,eAAe,CAACE,QAIzB;AAAA,2BAHLC,QAGK;AAAA,MAHLA,QAGK,8BAHMH,eAAe,CAACI,eAGtB;AAAA,0BAFLC,OAEK;AAAA,MAFLA,OAEK,6BAFKL,eAAe,CAACK,OAErB;AAAA,2BADLC,QACK;AAAA,MADKC,gBACL,8BADwBP,eAAe,CAACE,QACxC;AACL,MAAIM,KAAK,GAAG,IAAZ;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,cAAJ;;AACA,MAAIC,KAAJ;;AACA,MAAIC,QAAJ;;AAEA,MAAMC,QAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChDJ,IAAAA,QAAO,GAAG,iBAAAK,SAAS,EAAI;AACtBT,MAAAA,KAAK,GAAGA,KAAK,IAAIS,SAAjB;AAEA,UAAMC,WAAW,GAAGD,SAAS,GAAGT,KAAhC;AACA,UAAMW,SAAS,GAAGhB,QAAQ,GAAGe,WAA7B;;AAEA,UAAIA,WAAW,IAAIf,QAAnB,EAA6B;AAC5B,YAAMG,QAAQ,GAAG,IAAIa,SAAS,GAAGhB,QAAjC,CAD4B,CACe;;AAC3CI,QAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACAI,QAAAA,cAAc,GAAG,CAACD,OAAD,IAAYW,qBAAqB,CAACR,QAAD,CAAlD;AACA,OAJD,MAIO;AACNL,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACAQ,QAAAA,OAAO;AACP;AACD,KAdD;;AAgBAJ,IAAAA,KAAI,GAAG,gBAAM;AACZF,MAAAA,OAAO,GAAG,IAAV;AACAY,MAAAA,oBAAoB,CAACX,cAAD,CAApB;AACAM,MAAAA,MAAM,CAAC,IAAIM,KAAJ,CAAU,mBAAV,CAAD,CAAN;AACA,KAJD;AAKA,GAtBe,EAsBbC,KAtBa,CAsBP,UAAAC,OAAO;AAAA,WAAIA,OAAJ;AAAA,GAtBA,CAAhB;;AAwBAzB,EAAAA,cAAc,CAAC0B,IAAf,CAAoBpB,OAApB,EAA6B,YAAM;AAClCJ,IAAAA,WAAW;AACXmB,IAAAA,qBAAqB,CAACR,QAAD,CAArB;AAEA,WAAO,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC7BF,MAAAA,QAAO,CAACa,IAAR,CAAa;AAAA,eAAMX,OAAO,EAAb;AAAA,OAAb;AACA,KAFM,CAAP;AAGA,GAPD;AASA,SAAO;AACNF,IAAAA,OAAO,EAAE;AAAA,aAAMA,QAAN;AAAA,KADH;AAENF,IAAAA,IAAI,EAAE;AAAA,aAAMA,KAAN;AAAA;AAFA,GAAP;AAIA,CAjDD","sourcesContent":["import AnimationQueue from \"./AnimationQueue.js\";\nimport animationConfig from \"./config.js\";\n\nexport default ({\n\tbeforeStart = animationConfig.identity,\n\tduration = animationConfig.defaultDuration,\n\telement = animationConfig.element,\n\tprogress: progressCallback = animationConfig.identity,\n}) => {\n\tlet start = null;\n\tlet stopped = false;\n\tlet animationFrame;\n\tlet stop;\n\tlet animate;\n\n\tconst promise = new Promise((resolve, reject) => {\n\t\tanimate = timestamp => {\n\t\t\tstart = start || timestamp;\n\n\t\t\tconst timeElapsed = timestamp - start;\n\t\t\tconst remaining = duration - timeElapsed;\n\n\t\t\tif (timeElapsed <= duration) {\n\t\t\t\tconst progress = 1 - remaining / duration; // easing formula (currently linear)\n\t\t\t\tprogressCallback(progress);\n\t\t\t\tanimationFrame = !stopped && requestAnimationFrame(animate);\n\t\t\t} else {\n\t\t\t\tprogressCallback(1);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t};\n\n\t\tstop = () => {\n\t\t\tstopped = true;\n\t\t\tcancelAnimationFrame(animationFrame);\n\t\t\treject(new Error(\"animation stopped\"));\n\t\t};\n\t}).catch(oReason => oReason);\n\n\tAnimationQueue.push(element, () => {\n\t\tbeforeStart();\n\t\trequestAnimationFrame(animate);\n\n\t\treturn new Promise(resolve => {\n\t\t\tpromise.then(() => resolve());\n\t\t});\n\t});\n\n\treturn {\n\t\tpromise: () => promise,\n\t\tstop: () => stop,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}