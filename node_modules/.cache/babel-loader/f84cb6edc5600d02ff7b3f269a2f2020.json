{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { createUseStyles } from 'react-jss';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React, { forwardRef } from 'react';\nimport { SEPARATOR } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport clsx from 'clsx';\nvar _excluded = [\"style\", \"className\"];\nvar styles = {\n  separator: {\n    width: '0.0625rem',\n    height: CssSizeVariables.sapWcrToolbarSeparatorHeight,\n    background: ThemingParameters.sapToolbar_SeparatorColor\n  }\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'ToolbarSeparator'\n});\nvar ToolbarSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var style = props.style,\n      className = props.className,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var classes = useStyles();\n  var separatorClasses = clsx(classes.separator, className);\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    className: separatorClasses,\n    \"aria-label\": i18nBundle.getText(SEPARATOR)\n  }, rest));\n});\nToolbarSeparator.displayName = 'ToolbarSeparator';\nexport { ToolbarSeparator };","map":{"version":3,"sources":["../src/components/ToolbarSeparator/index.tsx"],"names":["styles","separator","width","height","CssSizeVariables","background","ThemingParameters","sapToolbar_SeparatorColor","useStyles","createUseStyles","name","ToolbarSeparator","forwardRef","style","className","rest","props","classes","separatorClasses","clsx","i18nBundle","useI18nBundle"],"mappings":";;;;;;;;;;AASA,IAAMA,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EADI,WAAA;AAETC,IAAAA,MAAM,EAAEC,gBAAgB,CAFf,4BAAA;AAGTC,IAAAA,UAAU,EAAEC,iBAAiB,CAACC;AAHrB;AADE,CAAf;AAQA,IAAMC,SAAS,GAAGC,eAAe,CAAA,MAAA,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAjC;IAIMC,gBAAgB,GAAA,aAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgE;AAClG,MAAQC,KAAR,GAAsCG,KAAtC,CAAA,KAAA;AAAA,MAAeF,SAAf,GAAsCE,KAAtC,CAAA,SAAA;AAAA,MAA6BD,IAA7B,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAME,OAAO,GAAGT,SAAhB,EAAA;AACA,MAAMU,gBAAgB,GAAGC,IAAI,CAACF,OAAO,CAAR,SAAA,EAA7B,SAA6B,CAA7B;AACA,MAAMG,UAAU,GAAGC,aAAa,CAAhC,0BAAgC,CAAhC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,GAAG,EAAR,GAAA;AAAe,IAAA,KAAK,EAApB,KAAA;AAA6B,IAAA,SAAS,EAAtC,gBAAA;AAA0D,kBAAYD,UAAU,CAAVA,OAAAA,CAAAA,SAAAA;AAAtE,GAAA,EADF,IACE,CAAA,CADF;AANiC,CAAA,C;AAUnCT,gBAAgB,CAAhBA,WAAAA,GAAAA,kBAAAA","sourcesContent":["import { useI18nBundle } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { createUseStyles } from 'react-jss';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/dist/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport React, { forwardRef, Ref } from 'react';\nimport { SEPARATOR } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport clsx from 'clsx';\n\nconst styles = {\n  separator: {\n    width: '0.0625rem',\n    height: CssSizeVariables.sapWcrToolbarSeparatorHeight,\n    background: ThemingParameters.sapToolbar_SeparatorColor\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'ToolbarSeparator' });\n\nexport type ToolbarSeparatorPropTypes = CommonProps;\n\nconst ToolbarSeparator = forwardRef((props: ToolbarSeparatorPropTypes, ref: Ref<HTMLDivElement>) => {\n  const { style, className, ...rest } = props;\n  const classes = useStyles();\n  const separatorClasses = clsx(classes.separator, className);\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  return (\n    <div ref={ref} style={style} className={separatorClasses} aria-label={i18nBundle.getText(SEPARATOR)} {...rest} />\n  );\n});\nToolbarSeparator.displayName = 'ToolbarSeparator';\nexport { ToolbarSeparator };\n"]},"metadata":{},"sourceType":"module"}