{"ast":null,"code":"import isPlainObject from './isPlainObject.js';\nvar oToken = Object.create(null);\n\nvar fnMerge = function fnMerge() {\n  var src,\n      copyIsArray,\n      copy,\n      name,\n      options,\n      clone,\n      target = arguments[2] || {},\n      i = 3,\n      length = arguments.length,\n      deep = arguments[0] || false,\n      skipToken = arguments[1] ? undefined : oToken;\n\n  if (typeof target !== 'object' && typeof target !== 'function') {\n    target = {};\n  }\n\n  for (; i < length; i++) {\n    if ((options = arguments[i]) != null) {\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        if (name === '__proto__' || target === copy) {\n          continue;\n        }\n\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          target[name] = fnMerge(deep, arguments[1], clone, copy);\n        } else if (copy !== skipToken) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  return target;\n};\n\nexport default fnMerge;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents-base/dist/thirdparty/_merge.js"],"names":["isPlainObject","oToken","Object","create","fnMerge","src","copyIsArray","copy","name","options","clone","target","arguments","i","length","deep","skipToken","undefined","Array","isArray"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;;AACA,IAAIC,OAAO,GAAG,SAAVA,OAAU,GAAY;AACtB,MAAIC,GAAJ;AAAA,MAASC,WAAT;AAAA,MAAsBC,IAAtB;AAAA,MAA4BC,IAA5B;AAAA,MAAkCC,OAAlC;AAAA,MAA2CC,KAA3C;AAAA,MAAkDC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAT,IAAgB,EAA3E;AAAA,MAA+EC,CAAC,GAAG,CAAnF;AAAA,MAAsFC,MAAM,GAAGF,SAAS,CAACE,MAAzG;AAAA,MAAiHC,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAT,IAAgB,KAAxI;AAAA,MAA+II,SAAS,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeK,SAAf,GAA2BhB,MAAtL;;AACA,MAAI,OAAOU,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,UAApD,EAAgE;AAC5DA,IAAAA,MAAM,GAAG,EAAT;AACH;;AACD,SAAOE,CAAC,GAAGC,MAAX,EAAmBD,CAAC,EAApB,EAAwB;AACpB,QAAI,CAACJ,OAAO,GAAGG,SAAS,CAACC,CAAD,CAApB,KAA4B,IAAhC,EAAsC;AAClC,WAAKL,IAAL,IAAaC,OAAb,EAAsB;AAClBJ,QAAAA,GAAG,GAAGM,MAAM,CAACH,IAAD,CAAZ;AACAD,QAAAA,IAAI,GAAGE,OAAO,CAACD,IAAD,CAAd;;AACA,YAAIA,IAAI,KAAK,WAAT,IAAwBG,MAAM,KAAKJ,IAAvC,EAA6C;AACzC;AACH;;AACD,YAAIQ,IAAI,IAAIR,IAAR,KAAiBP,aAAa,CAACO,IAAD,CAAb,KAAwBD,WAAW,GAAGY,KAAK,CAACC,OAAN,CAAcZ,IAAd,CAAtC,CAAjB,CAAJ,EAAkF;AAC9E,cAAID,WAAJ,EAAiB;AACbA,YAAAA,WAAW,GAAG,KAAd;AACAI,YAAAA,KAAK,GAAGL,GAAG,IAAIa,KAAK,CAACC,OAAN,CAAcd,GAAd,CAAP,GAA4BA,GAA5B,GAAkC,EAA1C;AACH,WAHD,MAGO;AACHK,YAAAA,KAAK,GAAGL,GAAG,IAAIL,aAAa,CAACK,GAAD,CAApB,GAA4BA,GAA5B,GAAkC,EAA1C;AACH;;AACDM,UAAAA,MAAM,CAACH,IAAD,CAAN,GAAeJ,OAAO,CAACW,IAAD,EAAOH,SAAS,CAAC,CAAD,CAAhB,EAAqBF,KAArB,EAA4BH,IAA5B,CAAtB;AACH,SARD,MAQO,IAAIA,IAAI,KAAKS,SAAb,EAAwB;AAC3BL,UAAAA,MAAM,CAACH,IAAD,CAAN,GAAeD,IAAf;AACH;AACJ;AACJ;AACJ;;AACD,SAAOI,MAAP;AACH,CA5BD;;AA6BA,eAAeP,OAAf","sourcesContent":["import isPlainObject from './isPlainObject.js';\nvar oToken = Object.create(null);\nvar fnMerge = function () {\n    var src, copyIsArray, copy, name, options, clone, target = arguments[2] || {}, i = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? undefined : oToken;\n    if (typeof target !== 'object' && typeof target !== 'function') {\n        target = {};\n    }\n    for (; i < length; i++) {\n        if ((options = arguments[i]) != null) {\n            for (name in options) {\n                src = target[name];\n                copy = options[name];\n                if (name === '__proto__' || target === copy) {\n                    continue;\n                }\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        clone = src && Array.isArray(src) ? src : [];\n                    } else {\n                        clone = src && isPlainObject(src) ? src : {};\n                    }\n                    target[name] = fnMerge(deep, arguments[1], clone, copy);\n                } else if (copy !== skipToken) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n    return target;\n};\nexport default fnMerge;"]},"metadata":{},"sourceType":"module"}