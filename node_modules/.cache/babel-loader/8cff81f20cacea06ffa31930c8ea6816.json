{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport isLegacyBrowser from \"@ui5/webcomponents-base/dist/isLegacyBrowser.js\";\nimport { isPhone, isTablet, isCombi } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport ButtonTemplate from \"./generated/templates/ButtonTemplate.lit.js\";\nimport Icon from \"./Icon.js\";\nimport { BUTTON_ARIA_TYPE_ACCEPT, BUTTON_ARIA_TYPE_REJECT, BUTTON_ARIA_TYPE_EMPHASIZED } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport buttonCss from \"./generated/themes/Button.css.js\";\nimport buttonIECss from \"./generated/themes/Button.ie11.css.js\";\nlet isGlobalHandlerAttached = false;\nlet activeButton = null;\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-button\",\n  languageAware: true,\n  properties:\n  /** @lends sap.ui.webcomponents.main.Button.prototype */\n  {\n    /**\n     * Defines the component design.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>Default</code></li>\n     * <li><code>Emphasized</code></li>\n     * <li><code>Positive</code></li>\n     * <li><code>Negative</code></li>\n     * <li><code>Transparent</code></li>\n     * <li><code>Attention</code></li>\n     * </ul>\n     *\n     * @type {ButtonDesign}\n     * @defaultvalue \"Default\"\n     * @public\n     */\n    design: {\n      type: ButtonDesign,\n      defaultValue: ButtonDesign.Default\n    },\n\n    /**\n     * Defines whether the component is disabled.\n     * A disabled component can't be pressed or\n     * focused, and it is not in the tab chain.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the icon to be displayed as graphical element within the component.\n     * The SAP-icons font provides numerous options.\n     * <br><br>\n     * Example:\n     *\n     * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    icon: {\n      type: String\n    },\n\n    /**\n     * Defines whether the icon should be displayed after the component text.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    iconEnd: {\n      type: Boolean\n    },\n\n    /**\n     * When set to <code>true</code>, the component will\n     * automatically submit the nearest form element upon <code>press</code>.\n     * <br><br>\n     * <b>Note:</b> For the <code>submits</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    submits: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the tooltip of the button.\n     * <br>\n     * <b>Note:</b> Tooltips should only be set to icon-only buttons.\n     * @type {string}\n     * @defaultvalue: \"\"\n     * @private\n     * @since 1.0.0-rc.11\n     */\n    title: {\n      type: String\n    },\n\n    /**\n     * Used to switch the active state (pressed or not) of the component.\n     * @private\n     */\n    active: {\n      type: Boolean\n    },\n\n    /**\n     * Defines if a content has been added to the default slot\n     * @private\n     */\n    iconOnly: {\n      type: Boolean\n    },\n\n    /**\n     * Indicates if the elements is on focus\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n\n    /**\n     * Indicates if the elements has a slotted icon\n     * @private\n     */\n    hasIcon: {\n      type: Boolean\n    },\n\n    /**\n     * Sets the accessible aria name of the component.\n     *\n     * @type {String}\n     * @defaultvalue: \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String,\n      defaultValue: undefined\n    },\n\n    /**\n     * @type {String}\n     * @defaultvalue \"\"\n     * @private\n     * @since 1.0.0-rc.8\n     */\n    ariaExpanded: {\n      type: String\n    },\n\n    /**\n     * Indicates if the element if focusable\n     * @private\n     */\n    nonInteractive: {\n      type: Boolean\n    },\n    _iconSettings: {\n      type: Object\n    },\n    _buttonAccInfo: {\n      type: Object\n    },\n\n    /**\n     * Defines the tabIndex of the component.\n     * @private\n     */\n    _tabIndex: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n\n    /**\n     * @since 1.0.0-rc.13\n     * @private\n     */\n    _isTouch: {\n      type: Boolean\n    }\n  },\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.Button.prototype */\n  {\n    /**\n     * Defines the text of the component.\n     * <br><br>\n     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.Button.prototype */\n  {\n    /**\n     * Fired when the component is activated either with a\n     * mouse/tap or by using the Enter or Space key.\n     * <br><br>\n     * <b>Note:</b> The event will not be fired if the <code>disabled</code>\n     * property is set to <code>true</code>.\n     *\n     * @event\n     * @public\n     * @native\n     */\n    click: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-button</code> component represents a simple push button.\n * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing\n * certain keyboard keys, such as Enter.\n *\n *\n * <h3>Usage</h3>\n *\n * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify\n * whether the text or the icon is displayed first.\n * <br><br>\n * You can choose from a set of predefined types that offer different\n * styling to correspond to the triggered action.\n * <br><br>\n * You can set the <code>ui5-button</code> as enabled or disabled. An enabled\n * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes\n * its style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-button</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>button - Used to style the native button element</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Button\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Button\n * @extends UI5Element\n * @tagname ui5-button\n * @implements sap.ui.webcomponents.main.IButton\n * @public\n */\n\nclass Button extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return [buttonCss, isLegacyBrowser() && buttonIECss];\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return ButtonTemplate;\n  }\n\n  static get dependencies() {\n    return [Icon];\n  }\n\n  constructor() {\n    super();\n\n    this._deactivate = () => {\n      if (activeButton) {\n        activeButton.active = false;\n      }\n    };\n\n    if (!isGlobalHandlerAttached) {\n      document.addEventListener(\"mouseup\", this._deactivate);\n      isGlobalHandlerAttached = true;\n    }\n  }\n\n  onEnterDOM() {\n    this._isTouch = (isPhone() || isTablet()) && !isCombi();\n  }\n\n  onBeforeRendering() {\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (this.submits && !FormSupport) {\n      console.warn(`In order for the \"submits\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n\n    this.iconOnly = this.isIconOnly;\n    this.hasIcon = !!this.icon;\n  }\n\n  _onclick(event) {\n    if (this.nonInteractive) {\n      return;\n    }\n\n    event.isMarked = \"button\";\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.triggerFormSubmit(this);\n    }\n  }\n\n  _onmousedown(event) {\n    if (this.nonInteractive || this._isTouch) {\n      return;\n    }\n\n    event.isMarked = \"button\";\n    this.active = true;\n    activeButton = this; // eslint-disable-line\n  }\n\n  _ontouchstart(event) {\n    event.isMarked = \"button\";\n\n    if (this.nonInteractive) {\n      return;\n    }\n\n    this.active = true;\n  }\n\n  _ontouchend(event) {\n    this.active = false;\n\n    if (activeButton) {\n      activeButton.active = false;\n    }\n  }\n\n  _onmouseup(event) {\n    event.isMarked = \"button\";\n  }\n\n  _onkeydown(event) {\n    event.isMarked = \"button\";\n\n    if (isSpace(event) || isEnter(event)) {\n      this.active = true;\n    }\n  }\n\n  _onkeyup(event) {\n    if (isSpace(event) || isEnter(event)) {\n      this.active = false;\n    }\n  }\n\n  _onfocusout(_event) {\n    if (this.nonInteractive) {\n      return;\n    }\n\n    this.active = false;\n    this.focused = false;\n  }\n\n  _onfocusin(event) {\n    if (this.nonInteractive) {\n      return;\n    }\n\n    event.isMarked = \"button\";\n    this.focused = true;\n  }\n\n  get hasButtonType() {\n    return this.design !== ButtonDesign.Default && this.design !== ButtonDesign.Transparent;\n  }\n\n  get isIconOnly() {\n    return !Array.from(this.childNodes).filter(node => {\n      return node.nodeType !== Node.COMMENT_NODE && (node.nodeType !== Node.TEXT_NODE || node.nodeValue.trim().length !== 0);\n    }).length;\n  }\n\n  get accInfo() {\n    return {\n      \"ariaExpanded\": this.ariaExpanded || this._buttonAccInfo && this._buttonAccInfo.ariaExpanded,\n      \"ariaControls\": this._buttonAccInfo && this._buttonAccInfo.ariaControls,\n      \"ariaHaspopup\": this._buttonAccInfo && this._buttonAccInfo.ariaHaspopup,\n      \"title\": this.title || this._buttonAccInfo && this._buttonAccInfo.title\n    };\n  }\n\n  static typeTextMappings() {\n    return {\n      \"Positive\": BUTTON_ARIA_TYPE_ACCEPT,\n      \"Negative\": BUTTON_ARIA_TYPE_REJECT,\n      \"Emphasized\": BUTTON_ARIA_TYPE_EMPHASIZED\n    };\n  }\n\n  get buttonTypeText() {\n    return Button.i18nBundle.getText(Button.typeTextMappings()[this.design]);\n  }\n\n  get tabIndexValue() {\n    const tabindex = this.getAttribute(\"tabindex\");\n\n    if (tabindex) {\n      return tabindex;\n    }\n\n    return this.nonInteractive ? \"-1\" : this._tabIndex;\n  }\n\n  get showIconTooltip() {\n    return this.iconOnly && !this.title;\n  }\n\n  static async onDefine() {\n    Button.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n}\n\nButton.define();\nexport default Button;","map":{"version":3,"sources":["/Users/flo/Desktop/mdao.fioriapp/node_modules/@ui5/webcomponents/dist/Button.js"],"names":["UI5Element","litRender","isSpace","isEnter","getFeature","getI18nBundle","isLegacyBrowser","isPhone","isTablet","isCombi","ButtonDesign","ButtonTemplate","Icon","BUTTON_ARIA_TYPE_ACCEPT","BUTTON_ARIA_TYPE_REJECT","BUTTON_ARIA_TYPE_EMPHASIZED","buttonCss","buttonIECss","isGlobalHandlerAttached","activeButton","metadata","tag","languageAware","properties","design","type","defaultValue","Default","disabled","Boolean","icon","String","iconEnd","submits","title","active","iconOnly","focused","hasIcon","accessibleName","undefined","ariaExpanded","nonInteractive","_iconSettings","Object","_buttonAccInfo","_tabIndex","noAttribute","_isTouch","managedSlots","slots","Node","events","click","Button","styles","render","template","dependencies","constructor","_deactivate","document","addEventListener","onEnterDOM","onBeforeRendering","FormSupport","console","warn","isIconOnly","_onclick","event","isMarked","triggerFormSubmit","_onmousedown","_ontouchstart","_ontouchend","_onmouseup","_onkeydown","_onkeyup","_onfocusout","_event","_onfocusin","hasButtonType","Transparent","Array","from","childNodes","filter","node","nodeType","COMMENT_NODE","TEXT_NODE","nodeValue","trim","length","accInfo","ariaControls","ariaHaspopup","typeTextMappings","buttonTypeText","i18nBundle","getText","tabIndexValue","tabindex","getAttribute","showIconTooltip","onDefine","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport isLegacyBrowser from \"@ui5/webcomponents-base/dist/isLegacyBrowser.js\";\nimport { isPhone, isTablet, isCombi } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport ButtonTemplate from \"./generated/templates/ButtonTemplate.lit.js\";\nimport Icon from \"./Icon.js\";\n\nimport { BUTTON_ARIA_TYPE_ACCEPT, BUTTON_ARIA_TYPE_REJECT, BUTTON_ARIA_TYPE_EMPHASIZED } from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport buttonCss from \"./generated/themes/Button.css.js\";\nimport buttonIECss from \"./generated/themes/Button.ie11.css.js\";\n\nlet isGlobalHandlerAttached = false;\nlet activeButton = null;\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-button\",\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\n\t\t/**\n\t\t * Defines the component design.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Default</code></li>\n\t\t * <li><code>Emphasized</code></li>\n\t\t * <li><code>Positive</code></li>\n\t\t * <li><code>Negative</code></li>\n\t\t * <li><code>Transparent</code></li>\n\t\t * <li><code>Attention</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ButtonDesign}\n\t\t * @defaultvalue \"Default\"\n\t\t * @public\n\t\t */\n\t\tdesign: {\n\t\t\ttype: ButtonDesign,\n\t\t\tdefaultValue: ButtonDesign.Default,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is disabled.\n\t\t * A disabled component can't be pressed or\n\t\t * focused, and it is not in the tab chain.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the icon to be displayed as graphical element within the component.\n\t\t * The SAP-icons font provides numerous options.\n\t\t * <br><br>\n\t\t * Example:\n\t\t *\n\t\t * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the icon should be displayed after the component text.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\ticonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * When set to <code>true</code>, the component will\n\t\t * automatically submit the nearest form element upon <code>press</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> For the <code>submits</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tsubmits: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tooltip of the button.\n\t\t * <br>\n\t\t * <b>Note:</b> Tooltips should only be set to icon-only buttons.\n\t\t * @type {string}\n\t\t * @defaultvalue: \"\"\n\t\t * @private\n\t\t * @since 1.0.0-rc.11\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Used to switch the active state (pressed or not) of the component.\n\t\t * @private\n\t\t */\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines if a content has been added to the default slot\n\t\t * @private\n\t\t */\n\t\ticonOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the elements is on focus\n\t\t * @private\n\t\t */\n\t\tfocused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the elements has a slotted icon\n\t\t * @private\n\t\t */\n\t\thasIcon: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Sets the accessible aria name of the component.\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue: \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * @type {String}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\tariaExpanded: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the element if focusable\n\t\t * @private\n\t\t */\n\t\tnonInteractive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t_iconSettings: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_buttonAccInfo: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tabIndex of the component.\n\t\t * @private\n\t\t */\n\t\t_tabIndex: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * @since 1.0.0-rc.13\n\t\t * @private\n\t\t */\n\t\t_isTouch: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\n\t\t/**\n\t\t * Fired when the component is activated either with a\n\t\t * mouse/tap or by using the Enter or Space key.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The event will not be fired if the <code>disabled</code>\n\t\t * property is set to <code>true</code>.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t * @native\n\t\t */\n\t\tclick: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-button</code> component represents a simple push button.\n * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing\n * certain keyboard keys, such as Enter.\n *\n *\n * <h3>Usage</h3>\n *\n * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify\n * whether the text or the icon is displayed first.\n * <br><br>\n * You can choose from a set of predefined types that offer different\n * styling to correspond to the triggered action.\n * <br><br>\n * You can set the <code>ui5-button</code> as enabled or disabled. An enabled\n * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes\n * its style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-button</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>button - Used to style the native button element</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Button\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Button\n * @extends UI5Element\n * @tagname ui5-button\n * @implements sap.ui.webcomponents.main.IButton\n * @public\n */\nclass Button extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn [buttonCss, isLegacyBrowser() && buttonIECss];\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn ButtonTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [Icon];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._deactivate = () => {\n\t\t\tif (activeButton) {\n\t\t\t\tactiveButton.active = false;\n\t\t\t}\n\t\t};\n\n\t\tif (!isGlobalHandlerAttached) {\n\t\t\tdocument.addEventListener(\"mouseup\", this._deactivate);\n\n\t\t\tisGlobalHandlerAttached = true;\n\t\t}\n\t}\n\n\tonEnterDOM() {\n\t\tthis._isTouch = (isPhone() || isTablet()) && !isCombi();\n\t}\n\n\tonBeforeRendering() {\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (this.submits && !FormSupport) {\n\t\t\tconsole.warn(`In order for the \"submits\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\n\t\tthis.iconOnly = this.isIconOnly;\n\t\tthis.hasIcon = !!this.icon;\n\t}\n\n\t_onclick(event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\t\tevent.isMarked = \"button\";\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.triggerFormSubmit(this);\n\t\t}\n\t}\n\n\t_onmousedown(event) {\n\t\tif (this.nonInteractive || this._isTouch) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.isMarked = \"button\";\n\t\tthis.active = true;\n\t\tactiveButton = this; // eslint-disable-line\n\t}\n\n\t_ontouchstart(event) {\n\t\tevent.isMarked = \"button\";\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.active = true;\n\t}\n\n\t_ontouchend(event) {\n\t\tthis.active = false;\n\n\t\tif (activeButton) {\n\t\t\tactiveButton.active = false;\n\t\t}\n\t}\n\n\t_onmouseup(event) {\n\t\tevent.isMarked = \"button\";\n\t}\n\n\t_onkeydown(event) {\n\t\tevent.isMarked = \"button\";\n\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.active = false;\n\t\t}\n\t}\n\n\t_onfocusout(_event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\t\tthis.active = false;\n\t\tthis.focused = false;\n\t}\n\n\t_onfocusin(event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.isMarked = \"button\";\n\t\tthis.focused = true;\n\t}\n\n\tget hasButtonType() {\n\t\treturn this.design !== ButtonDesign.Default && this.design !== ButtonDesign.Transparent;\n\t}\n\n\tget isIconOnly() {\n\t\treturn !Array.from(this.childNodes).filter(node => {\n\t\t\treturn node.nodeType !== Node.COMMENT_NODE\n\t\t\t&& (node.nodeType !== Node.TEXT_NODE || node.nodeValue.trim().length !== 0);\n\t\t}).length;\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"ariaExpanded\": this.ariaExpanded || (this._buttonAccInfo && this._buttonAccInfo.ariaExpanded),\n\t\t\t\"ariaControls\": this._buttonAccInfo && this._buttonAccInfo.ariaControls,\n\t\t\t\"ariaHaspopup\": this._buttonAccInfo && this._buttonAccInfo.ariaHaspopup,\n\t\t\t\"title\": this.title || (this._buttonAccInfo && this._buttonAccInfo.title),\n\t\t};\n\t}\n\n\tstatic typeTextMappings() {\n\t\treturn {\n\t\t\t\"Positive\": BUTTON_ARIA_TYPE_ACCEPT,\n\t\t\t\"Negative\": BUTTON_ARIA_TYPE_REJECT,\n\t\t\t\"Emphasized\": BUTTON_ARIA_TYPE_EMPHASIZED,\n\t\t};\n\t}\n\n\tget buttonTypeText() {\n\t\treturn Button.i18nBundle.getText(Button.typeTextMappings()[this.design]);\n\t}\n\n\tget tabIndexValue() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\n\t\tif (tabindex) {\n\t\t\treturn tabindex;\n\t\t}\n\n\t\treturn this.nonInteractive ? \"-1\" : this._tabIndex;\n\t}\n\n\tget showIconTooltip() {\n\t\treturn this.iconOnly && !this.title;\n\t}\n\n\tstatic async onDefine() {\n\t\tButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nButton.define();\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}