{"ast":null,"code":"import { MessageStripDesign } from '@ui5/webcomponents-react/dist/MessageStripDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport '@ui5/webcomponents/dist/MessageStrip';\n/**\n * The `MessageStrip` component enables the embedding of app-related messages. It displays 4 designs of messages, each with corresponding semantic color and icon: Information, Positive, Warning and Negative. Each message can have a Close button, so that it can be removed from the UI, if needed.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/MessageStrip\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\n\nvar MessageStrip = withWebComponent('ui5-messagestrip', ['design'], ['hideCloseButton', 'hideIcon'], ['icon'], ['close']);\nMessageStrip.displayName = 'MessageStrip';\nMessageStrip.defaultProps = {\n  design: MessageStripDesign.Information,\n  hideCloseButton: false,\n  hideIcon: false\n};\nexport { MessageStrip };","map":{"version":3,"sources":["../src/webComponents/MessageStrip/index.tsx"],"names":["MessageStrip","withWebComponent","design","MessageStripDesign","hideCloseButton","hideIcon"],"mappings":";;;AA8CA;AACA;AACA;AACA;AACA;;IACMA,YAAY,GAAGC,gBAAgB,CAAA,kBAAA,EAEnC,CAFmC,QAEnC,CAFmC,EAGnC,CAAA,iBAAA,EAHmC,UAGnC,CAHmC,EAInC,CAJmC,MAInC,CAJmC,EAKnC,CALmC,OAKnC,CALmC,C;AAQrCD,YAAY,CAAZA,WAAAA,GAAAA,cAAAA;AAEAA,YAAY,CAAZA,YAAAA,GAA4B;AAC1BE,EAAAA,MAAM,EAAEC,kBAAkB,CADA,WAAA;AAE1BC,EAAAA,eAAe,EAFW,KAAA;AAG1BC,EAAAA,QAAQ,EAAE;AAHgB,CAA5BL","sourcesContent":["import { MessageStripDesign } from '@ui5/webcomponents-react/dist/MessageStripDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/MessageStrip';\n\nexport interface MessageStripPropTypes extends CommonProps {\n  /**\n   * Defines the component type.\n   *\n   * **Note:** Available options are `\"Information\"`, `\"Positive\"`, `\"Negative\"`, and `\"Warning\"`.\n   */\n  design?: MessageStripDesign;\n  /**\n   * Defines whether the MessageStrip renders close icon.\n   */\n  hideCloseButton?: boolean;\n  /**\n   * Defines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the `icon` slot. Otherwise, the default icon for the type will be used.\n   */\n  hideIcon?: boolean;\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the content to be displayed as graphical element within the component.\n   *\n   * **Note:** If no icon is given, the default icon for the component type will be used. The SAP-icons font provides numerous options.\n   *\n   * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  icon?: ReactNode;\n  /**\n   * Fired when the close button is pressed either with a click/tap or by using the Enter or Space key.\n   */\n  onClose?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * The `MessageStrip` component enables the embedding of app-related messages. It displays 4 designs of messages, each with corresponding semantic color and icon: Information, Positive, Warning and Negative. Each message can have a Close button, so that it can be removed from the UI, if needed.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/MessageStrip\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst MessageStrip = withWebComponent<MessageStripPropTypes>(\n  'ui5-messagestrip',\n  ['design'],\n  ['hideCloseButton', 'hideIcon'],\n  ['icon'],\n  ['close']\n);\n\nMessageStrip.displayName = 'MessageStrip';\n\nMessageStrip.defaultProps = {\n  design: MessageStripDesign.Information,\n  hideCloseButton: false,\n  hideIcon: false\n};\n\nexport { MessageStrip };\n"]},"metadata":{},"sourceType":"module"}