{"version":3,"file":"static/js/7253.f5aca910.chunk.js","mappings":"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","sources":["components/Layout/CenteredContent.js","hooks/services/useTodos.js","auth/ComponentWithAuthorizationRestriction.js","../node_modules/@ui5/webcomponents-react/src/webComponents/StandardListItem/index.tsx","components/Pagination/Pagination.js","pages/Todo/List/TodoListPaginatedItems.js","pages/Todo/List/TodoList.js","../node_modules/@ui5/webcomponents-react/src/webComponents/Button/index.tsx","../node_modules/@ui5/webcomponents-react/src/enums/ButtonDesign.ts"],"sourcesContent":["import React from \"react\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\n\nconst style = {\n  centered: {\n    minWidth: isPhone() ? \"80%\" : \"50%\",\n    padding: \"1rem\",\n    margin: \"0 auto\",\n  },\n};\n\nconst CenteredContent = (props) => {\n  return (\n    <div data-testid=\"centered-content\" style={style.centered} {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CenteredContent;\n","import { useQuery } from \"react-query\";\n\nimport Request from \"../../api/Request\";\n\nexport const useTodos = (page) => {\n  return useQuery(\n    [\"all-todos\", page],\n    async () => {\n      const { data } = await Request.get(\"/v1/todo/all\", {\n        params: {\n          page,\n        },\n      });\n      return data;\n    },\n    {\n      keepPreviousData: true,\n    }\n  );\n};\n\nexport const useTodo = (id) => {\n  return useQuery([\"todos\", id], async () => {\n    const { data } = await Request.get(`/v1/todo/${id}`);\n    return data;\n  });\n};\n","import { useHasAccess } from \"../hooks/useAuthority\";\n\nconst ComponentWithAuthorizationRestriction = ({\n  allowedAuthorities,\n  authorityKey,\n  children,\n}) => {\n  const hasAccess = useHasAccess(allowedAuthorities, authorityKey);\n  if (!hasAccess) {\n    return null;\n  }\n\n  return children;\n};\n\nexport default ComponentWithAuthorizationRestriction;\n","import { ListItemType } from '@ui5/webcomponents-react/dist/ListItemType';\nimport { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/StandardListItem.js';\n\ninterface StandardListItemAttributes {\n  /**\n   * Defines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the `additionalText`, displayed in the end of the list item.\n   */\n  additionalText?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Erorr\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines the description displayed right under the item text, if such is present.\n   */\n  description?: string;\n  /**\n   * Defines the `icon` source URI.\n   *\n   * **Note:** SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the `icon` should be displayed in the beginning of the list item or in the end.\n   *\n   * **Note:** If `image` is set, the `icon` would be displayed after the `image`.\n   */\n  iconEnd?: boolean;\n  /**\n   * Defines the `image` source URI.\n   *\n   * **Note:** The `image` would be displayed in the beginning of the list item.\n   */\n  image?: string;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive` and `Detail`.\n   *\n   * **Note:** When set to `Active`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface StandardListItemDomRef extends StandardListItemAttributes, Ui5DomRef {}\n\nexport interface StandardListItemPropTypes extends StandardListItemAttributes, CommonProps {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<HTMLLIElement>) => void;\n}\n\n/**\n * The `StandardListItem` represents the simplest type of item for a `StandardListItemst`. This is a list item, providing the most common use cases such as `text`, `image` and `icon`.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/StandardListItem\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst StandardListItem = withWebComponent<StandardListItemPropTypes, StandardListItemDomRef>(\n  'ui5-li',\n  ['accessibleName', 'additionalText', 'additionalTextState', 'description', 'icon', 'image', 'type'],\n  ['iconEnd', 'selected'],\n  [],\n  ['detail-click']\n);\n\nStandardListItem.displayName = 'StandardListItem';\n\nStandardListItem.defaultProps = {\n  additionalTextState: ValueState.None,\n  type: ListItemType.Active\n};\n\nexport { StandardListItem };\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  ButtonDesign,\n  FlexBox,\n  FlexBoxAlignItems,\n  FlexBoxJustifyContent,\n} from \"@ui5/webcomponents-react\";\nimport { spacing } from \"@ui5/webcomponents-react-base\";\n\nexport const Pagination = ({\n  shouldDisableAll,\n  numberOfElements,\n  totalPages,\n  selectedPage,\n  setPage,\n  style = spacing.sapUiMediumMargin,\n}) => {\n  if (!numberOfElements) return null;\n\n  let disablePrevious = false;\n  if (selectedPage === 0) {\n    disablePrevious = true;\n  }\n  let disableNext = false;\n  if (selectedPage === totalPages - 1) {\n    disableNext = true;\n  }\n  const previousPage = selectedPage - 1;\n  const morePreviousPage = previousPage - 1;\n  const nextPage = selectedPage + 1;\n  const moreNextPage = nextPage + 1;\n  const hasPreviousPage = selectedPage > 0;\n  const hasMorePreviousPages = selectedPage > 1;\n  const hasNextPage = selectedPage < totalPages - 1;\n  const hasMoreNextPages = selectedPage < totalPages - 2;\n\n  const setPreviousPage = () => {\n    if (!disablePrevious) setPage(selectedPage - 1);\n  };\n\n  const setNextPage = () => {\n    if (!disableNext) setPage(selectedPage + 1);\n  };\n\n  return (\n    <FlexBox\n      data-testid=\"pagination-wrapper\"\n      alignItems={FlexBoxAlignItems.Start}\n      style={style}\n      justifyContent={FlexBoxJustifyContent.Center}\n    >\n      <Button\n        data-testid=\"leftarrow-pagination-wrapper\"\n        disabled={disablePrevious || shouldDisableAll}\n        design={ButtonDesign.Transparent}\n        onClick={setPreviousPage}\n      >\n        {\"<\"}\n      </Button>\n\n      {hasMorePreviousPages && (\n        <Button\n          data-testid=\"morePreviousPage-pagination-wrapper\"\n          disabled={shouldDisableAll}\n          design={ButtonDesign.Transparent}\n          style={spacing.sapUiTinyMarginEnd}\n          onClick={() => setPage(morePreviousPage)}\n        >\n          {morePreviousPage + 1}\n        </Button>\n      )}\n\n      {hasPreviousPage && (\n        <Button\n          data-testid=\"previousPage-pagination-wrapper\"\n          disabled={shouldDisableAll}\n          design={ButtonDesign.Transparent}\n          style={spacing.sapUiTinyMarginEnd}\n          onClick={() => setPage(previousPage)}\n        >\n          {previousPage + 1}\n        </Button>\n      )}\n\n      <Button\n        data-testid=\"selectedPage-pagination-wrapper\"\n        disabled={shouldDisableAll}\n        style={spacing.sapUiTinyMarginEnd}\n        design={ButtonDesign.Emphasized}\n      >\n        {selectedPage + 1}\n      </Button>\n\n      {hasNextPage && (\n        <Button\n          data-testid=\"nextPage-pagination-wrapper\"\n          disabled={shouldDisableAll}\n          design={ButtonDesign.Transparent}\n          style={spacing.sapUiTinyMarginEnd}\n          onClick={() => setPage(nextPage)}\n        >\n          {nextPage + 1}\n        </Button>\n      )}\n\n      {hasMoreNextPages && (\n        <Button\n          data-testid=\"moreNextPage-pagination-wrapper\"\n          disabled={shouldDisableAll}\n          design={ButtonDesign.Transparent}\n          style={spacing.sapUiTinyMarginEnd}\n          onClick={() => setPage(moreNextPage)}\n        >\n          {moreNextPage + 1}\n        </Button>\n      )}\n\n      <Button\n        data-testid=\"afterarrow-pagination-wrapper\"\n        disabled={disableNext || shouldDisableAll}\n        design={ButtonDesign.Transparent}\n        onClick={setNextPage}\n      >\n        {\">\"}\n      </Button>\n    </FlexBox>\n  );\n};\n\nPagination.propTypes = {\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  selectedPage: PropTypes.number,\n  setPage: PropTypes.func,\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTodos } from \"../../../hooks/services/useTodos\";\n\nimport {\n  BusyIndicator,\n  List,\n  StandardListItem,\n  Title,\n  TitleLevel,\n} from \"@ui5/webcomponents-react\";\nimport { Pagination } from \"../../../components/Pagination/Pagination\";\nimport { getRoute, ROUTES } from \"../../../routes/Routes\";\n\nconst TodoListPaginatedItems = () => {\n  const history = useHistory();\n  const [page, setPage] = useState(0);\n  const { data, isLoading } = useTodos(page);\n\n  const navToTodoEditPage = (e) => {\n    history.push(getRoute(ROUTES.TODO_EDIT, { id: e.detail.item.dataset.id }));\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        <BusyIndicator active />\n      ) : (\n        <>\n          <Title\n            level={TitleLevel.H5}\n          >{`Records (${data.numberOfElements} / ${data.totalElements})`}</Title>\n          <br />\n          <List onItemClick={navToTodoEditPage}>\n            {data.content.map((todo) => (\n              <StandardListItem\n                data-id={todo.id}\n                key={todo.id}\n                additionalText={todo.description}\n                additionalTextState=\"None\"\n              >\n                {todo.name}\n              </StandardListItem>\n            ))}\n          </List>\n          <Pagination\n            numberOfElements={data.numberOfElements}\n            totalPages={data.totalPages}\n            selectedPage={data.number}\n            setPage={(params) => setPage(params)}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TodoListPaginatedItems;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  isDesktop,\n  isTablet,\n  isPhone,\n} from \"@ui5/webcomponents-base/dist/Device.js\";\n\nimport { Link, Text, Title, TitleLevel } from \"@ui5/webcomponents-react\";\nimport ComponentWithAuthorizationRestriction from \"../../../auth/ComponentWithAuthorizationRestriction\";\nimport CenteredContent from \"../../../components/Layout/CenteredContent\";\nimport TodoListPaginatedItems from \"./TodoListPaginatedItems\";\nimport { ROUTES } from \"../../../routes/Routes\";\n\nconst TodoList = () => {\n  const history = useHistory();\n\n  return (\n    <CenteredContent>\n      <Helmet title=\"List - tDAO Website\" />\n      <Title level={TitleLevel.H1}>Todo List</Title>\n      <br />\n\n      <Title level={TitleLevel.H3}>Routing</Title>\n      <br />\n      <Link onClick={() => history.push(\"/dontexist\")}>Test NotFound Page</Link>\n      <br />\n      <Link onClick={() => history.push(ROUTES.BUGGY)}>Test Error Page</Link>\n      <br />\n      <br />\n      <ComponentWithAuthorizationRestriction\n        allowedAuthorities={[\"canAccessDropApplication\"]}\n        authorityKey=\"permissions\"\n      >\n        <Title level={TitleLevel.H3}>Component Validator</Title>\n        <p>\n          <Text>\n            Drop Application (this is a restricted text and you should not see\n            unless you have access)\n          </Text>\n        </p>\n      </ComponentWithAuthorizationRestriction>\n\n      <Title level={TitleLevel.H3}>Device Detect</Title>\n      <p>\n        <Text>\n          {isPhone()\n            ? \"This text appears when is PHONE\"\n            : \"This text appears when is not PHONE\"}\n        </Text>\n      </p>\n      <p>\n        <Text>\n          {isTablet()\n            ? \"This text appears when is TABLET\"\n            : \"This text appears when is not TABLET\"}\n        </Text>\n      </p>\n      <p>\n        <Text>\n          {isDesktop()\n            ? \"This text appears when is DESKTOP\"\n            : \"This text appears when is not DESKTOP\"}\n        </Text>\n      </p>\n\n      <Title level={TitleLevel.H3}>\n        Lazy Loading + Pagination + Edition (Formik and Yup)\n      </Title>\n      <br />\n      <TodoListPaginatedItems />\n    </CenteredContent>\n  );\n};\n\nexport default TodoList;\n","import { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode, MouseEventHandler } from 'react';\n\nimport '@ui5/webcomponents/dist/Button.js';\n\ninterface ButtonAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the component text.\n   */\n  iconEnd?: boolean;\n  /**\n   * When set to `true`, the component will automatically submit the nearest form element upon `press`.\n   *\n   * **Note:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n}\n\nexport interface ButtonDomRef extends ButtonAttributes, Ui5DomRef {}\n\nexport interface ButtonPropTypes extends ButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<HTMLElement>;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Button\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Button = withWebComponent<ButtonPropTypes, ButtonDomRef>(\n  'ui5-button',\n  ['accessibleName', 'accessibleNameRef', 'design', 'icon'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default\n};\n\nexport { Button };\n","// Generated file - do not change manually!\n\n/**\n * Different types of Button.\n */\nexport enum ButtonDesign {\n  /**\n   * attention type\n   */\n  Attention = 'Attention',\n\n  /**\n   * default type (no special styling)\n   */\n  Default = 'Default',\n\n  /**\n   * emphasized type\n   */\n  Emphasized = 'Emphasized',\n\n  /**\n   * reject style (red button)\n   */\n  Negative = 'Negative',\n\n  /**\n   * accept type (green button)\n   */\n  Positive = 'Positive',\n\n  /**\n   * transparent type\n   */\n  Transparent = 'Transparent'\n}\n"],"names":["style","centered","minWidth","isPhone","padding","margin","props","children","useTodos","page","useQuery","Request","params","data","keepPreviousData","useTodo","id","allowedAuthorities","authorityKey","useHasAccess","StandardListItem","withWebComponent","displayName","defaultProps","additionalTextState","ValueState","type","ListItemType","Pagination","shouldDisableAll","numberOfElements","totalPages","selectedPage","setPage","spacing","disablePrevious","disableNext","previousPage","morePreviousPage","nextPage","moreNextPage","hasPreviousPage","hasMorePreviousPages","hasNextPage","hasMoreNextPages","FlexBox","alignItems","FlexBoxAlignItems","justifyContent","FlexBoxJustifyContent","Button","disabled","design","ButtonDesign","onClick","history","useHistory","useState","isLoading","BusyIndicator","active","Title","level","TitleLevel","totalElements","List","onItemClick","e","push","getRoute","ROUTES","detail","item","dataset","content","map","todo","additionalText","description","name","number","CenteredContent","Helmet","title","Link","Text","isTablet","isDesktop"],"sourceRoot":""}