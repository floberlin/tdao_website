{"version":3,"file":"static/js/9091.bc392602.chunk.js","mappings":"iKAGMA,EAAQ,CACZC,SAAU,CACRC,UAAUC,EAAAA,EAAAA,MAAY,MAAQ,MAC9BC,QAAS,OACTC,OAAQ,WAYZ,IARwB,SAACC,GACvB,OACE,gCAAK,cAAY,mBAAmBN,MAAOA,EAAMC,UAAcK,GAA/D,aACGA,EAAMC,c,gJCmBb,IAzBgB,SAAC,GAKV,IAAD,IAJJC,KAAAA,OAII,MAJGC,EAAAA,EAAAA,EAAO,2BAIV,MAHJC,KAAAA,OAGI,MAHG,WAGH,MAFJC,OAAAA,OAEI,MAFKC,EAAAA,EAAAA,YAEL,MADJC,SAAAA,OACI,SACEC,GAAUC,EAAAA,EAAAA,MAEhB,OACE,SAAC,IAAD,CAASf,MAAOgB,EAAAA,GAAhB,UACE,SAAC,IAAD,CACE,cAAY,kBACZL,OAAQA,EACRE,SAAUA,EACVH,KAAMA,EACNO,SAAS,EACTC,QAAS,kBAAMJ,EAAQK,UACvBC,SAAS,EAPX,SASGZ,OAQF,IAAMa,EAAc,CACzBC,KAAM,K,sIChCKC,EAAW,SAACC,GACvB,OAAOC,EAAAA,EAAAA,UACL,CAAC,YAAaD,IADD,iBAEb,sGACyBE,EAAAA,EAAAA,IAAY,eAAgB,CACjDC,OAAQ,CACNH,KAAAA,KAHN,uBACUI,EADV,EACUA,KADV,kBAMSA,GANT,2CAQA,CACEC,kBAAkB,KAKXC,EAAU,SAACC,GACtB,OAAON,EAAAA,EAAAA,UAAS,CAAC,QAASM,IAAX,iBAAgB,sGACNL,EAAAA,EAAAA,IAAA,mBAAwBK,IADlB,uBACrBH,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,8C,8GCd3BI,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,4DAE1BC,EAAmB,SAACC,EAAQC,GAChCA,EAAQC,eAAc,GACtBC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCC,EAAQK,WAAU,GAClBL,EAAQC,eAAc,IA4BxB,UAzBiB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MAClB,GAAuCZ,EAAAA,EAAAA,GAAQY,EAAMf,OAAOI,IAApDH,EAAR,EAAQA,KAAMe,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAEzB,OACE,iCACE,SAAC,IAAD,CAAQC,MAAM,yBAEd,SAAC,IAAD,KACA,UAAC,IAAD,YACE,kBACCF,IAAa,SAAC,IAAD,CAAeG,QAAM,IAElCF,IACC,SAAC,EAAAG,SAAD,CAAUC,UAAU,SAAC,IAAD,CAAeF,QAAM,IAAzC,UACE,SAACd,EAAD,CACEJ,KAAMA,EAAKA,KAAKqB,MAChBC,gBAAiBhB,c,gFCyCzBiB,G,UAASC,EAAAA,EAAAA,GACb,aACA,CAAC,iBAAkB,oBAAqB,SAAU,QAClD,CAAC,WAAY,UAAW,WACxB,GACA,CAAC,WAGHD,EAAOE,YAAc,SAErBF,EAAOG,aAAe,CACpB3C,OAAQC,EAAAA,EAAAA,U,0BChFEA,E,yCAAAA,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,WAAAA,aAAAA,EAAAA,SAAAA,WAAAA,EAAAA,SAAAA,WAAAA,EAAAA,YAAAA,c,CAAAA,IAAAA,EAAAA","sources":["components/Layout/CenteredContent.js","components/NavBack/NavBack.js","hooks/services/useTodos.js","pages/Todo/Edit/TodoEdit.js","../node_modules/@ui5/webcomponents-react/src/webComponents/Button/index.tsx","../node_modules/@ui5/webcomponents-react/src/enums/ButtonDesign.ts"],"sourcesContent":["import React from \"react\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\n\nconst style = {\n  centered: {\n    minWidth: isPhone() ? \"80%\" : \"50%\",\n    padding: \"1rem\",\n    margin: \"0 auto\",\n  },\n};\n\nconst CenteredContent = (props) => {\n  return (\n    <div data-testid=\"centered-content\" style={style.centered} {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CenteredContent;\n","import React from \"react\";\n\nimport { Button, ButtonDesign, FlexBox } from \"@ui5/webcomponents-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { spacing } from \"@ui5/webcomponents-react-base\";\n\nimport i18n from \"../../util/i18n\";\n\nconst NavBack = ({\n  text = i18n.t(\"components.navback.text\"),\n  icon = \"nav-back\",\n  design = ButtonDesign.Transparent,\n  disabled = false,\n}) => {\n  const history = useHistory();\n\n  return (\n    <FlexBox style={spacing.sapUiTinyMargin}>\n      <Button\n        data-testid=\"navback-wrapper\"\n        design={design}\n        disabled={disabled}\n        icon={icon}\n        iconEnd={false}\n        onClick={() => history.goBack()}\n        submits={false}\n      >\n        {text}\n      </Button>\n    </FlexBox>\n  );\n};\n\nexport default NavBack;\n\nexport const NavBackIcon = {\n  NONE: \"\",\n};\n","import { useQuery } from \"react-query\";\n\nimport Request from \"../../api/Request\";\n\nexport const useTodos = (page) => {\n  return useQuery(\n    [\"all-todos\", page],\n    async () => {\n      const { data } = await Request.get(\"/v1/todo/all\", {\n        params: {\n          page,\n        },\n      });\n      return data;\n    },\n    {\n      keepPreviousData: true,\n    }\n  );\n};\n\nexport const useTodo = (id) => {\n  return useQuery([\"todos\", id], async () => {\n    const { data } = await Request.get(`/v1/todo/${id}`);\n    return data;\n  });\n};\n","import React, { Suspense, lazy } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useTodo } from \"../../../hooks/services/useTodos\";\n\nimport { BusyIndicator } from \"@ui5/webcomponents-react\";\nimport NavBack from \"../../../components/NavBack/NavBack\";\nimport CenteredContent from \"../../../components/Layout/CenteredContent\";\n\nconst TodoEditForm = lazy(() => import(\"./TodoEditForm\"));\n\nconst onSubmitEditForm = (values, actions) => {\n  actions.setSubmitting(true);\n  alert(JSON.stringify(values, null, 2));\n  actions.resetForm(true);\n  actions.setSubmitting(false);\n};\n\nconst TodoEdit = ({ match }) => {\n  const { data, isLoading, isSuccess } = useTodo(match.params.id);\n\n  return (\n    <>\n      <Helmet title=\"Edit - tDAO Website\" />\n\n      <NavBack />\n      <CenteredContent>\n        <br />\n        {isLoading && <BusyIndicator active />}\n\n        {isSuccess && (\n          <Suspense fallback={<BusyIndicator active />}>\n            <TodoEditForm\n              data={data.data.todos}\n              onSubmitHandler={onSubmitEditForm}\n            />\n          </Suspense>\n        )}\n      </CenteredContent>\n    </>\n  );\n};\n\nexport default TodoEdit;\n","import { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode, MouseEventHandler } from 'react';\n\nimport '@ui5/webcomponents/dist/Button.js';\n\ninterface ButtonAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the component text.\n   */\n  iconEnd?: boolean;\n  /**\n   * When set to `true`, the component will automatically submit the nearest form element upon `press`.\n   *\n   * **Note:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n}\n\nexport interface ButtonDomRef extends ButtonAttributes, Ui5DomRef {}\n\nexport interface ButtonPropTypes extends ButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<HTMLElement>;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Button\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Button = withWebComponent<ButtonPropTypes, ButtonDomRef>(\n  'ui5-button',\n  ['accessibleName', 'accessibleNameRef', 'design', 'icon'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default\n};\n\nexport { Button };\n","// Generated file - do not change manually!\n\n/**\n * Different types of Button.\n */\nexport enum ButtonDesign {\n  /**\n   * attention type\n   */\n  Attention = 'Attention',\n\n  /**\n   * default type (no special styling)\n   */\n  Default = 'Default',\n\n  /**\n   * emphasized type\n   */\n  Emphasized = 'Emphasized',\n\n  /**\n   * reject style (red button)\n   */\n  Negative = 'Negative',\n\n  /**\n   * accept type (green button)\n   */\n  Positive = 'Positive',\n\n  /**\n   * transparent type\n   */\n  Transparent = 'Transparent'\n}\n"],"names":["style","centered","minWidth","isPhone","padding","margin","props","children","text","i18n","icon","design","ButtonDesign","disabled","history","useHistory","spacing","iconEnd","onClick","goBack","submits","NavBackIcon","NONE","useTodos","page","useQuery","Request","params","data","keepPreviousData","useTodo","id","TodoEditForm","lazy","onSubmitEditForm","values","actions","setSubmitting","alert","JSON","stringify","resetForm","match","isLoading","isSuccess","title","active","Suspense","fallback","todos","onSubmitHandler","Button","withWebComponent","displayName","defaultProps"],"sourceRoot":""}