{"version":3,"file":"static/js/5304.f225e051.chunk.js","mappings":"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","sources":["components/Form/Label/Label.js","components/Form/FieldBase/FieldBase.js","components/Form/Input/Input.js","components/Form/Switch/Switch.js","components/Form/TextArea/TextArea.js","components/Form/Select/Select.js","pages/Todo/Edit/TodoEditFormValidationSchema.js","pages/Todo/Edit/TodoEditForm.js"],"sourcesContent":["import React from \"react\";\n\nimport { spacing } from \"@ui5/webcomponents-react-base\";\nimport { Label as UI5Label, WrappingType } from \"@ui5/webcomponents-react\";\n\nconst Label = ({ style, ...props }) => {\n  const innerStyle = {\n    ...style,\n    ...spacing.sapUiTinyMarginBottom,\n    lineHeight: \"20px\",\n  };\n\n  return (\n    <UI5Label\n      data-testid=\"label-wrapper\"\n      wrappingType={WrappingType.Normal}\n      style={innerStyle}\n      {...props}\n    >\n      {props.children}\n    </UI5Label>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\n\nimport { FlexBox, FlexBoxDirection } from \"@ui5/webcomponents-react\";\nimport Label from \"../Label/Label\";\n\nconst FieldBase = ({ labelText, ...props }) => {\n  return (\n    <FlexBox\n      data-testid=\"fieldbase-wrapper\"\n      direction={props.direction ? props.direction : FlexBoxDirection.Column}\n      {...props}\n    >\n      {labelText && (\n        <Label\n          required={props.required}\n          for={props.for}\n          showColon={props.showColon}\n        >\n          {labelText}\n        </Label>\n      )}\n      {props.children}\n    </FlexBox>\n  );\n};\n\nexport default FieldBase;\n","import React from \"react\";\n\nimport { spacing } from \"@ui5/webcomponents-react-base\";\n\nimport { Input as UI5Input, ValueState } from \"@ui5/webcomponents-react\";\nimport FieldBase from \"../FieldBase/FieldBase\";\n\nconst Input = ({\n  field,\n  form: { touched, errors },\n  labelText,\n  style,\n  ...props\n}) => {\n  const errorMsg = touched[field.name] && errors[field.name];\n  const errorState = errorMsg ? ValueState.Error : ValueState.None;\n\n  const innerStyle = {\n    ...style,\n    ...spacing.sapUiTinyMarginBottom,\n    width: \"100%\",\n  };\n\n  return (\n    <FieldBase\n      labelText={labelText}\n      required={props.required}\n      for={props.for}\n      showColon={props.showColon}\n    >\n      <UI5Input\n        data-testid=\"input-wrapper\"\n        valueState={errorState}\n        valueStateMessage={<span>{errorMsg}</span>}\n        style={innerStyle}\n        {...props}\n        {...field}\n      />\n    </FieldBase>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport { Switch as UI5Switch } from \"@ui5/webcomponents-react\";\nimport FieldBase from \"../FieldBase/FieldBase\";\n\nconst style = {\n  switch: {\n    width: \"min-content\",\n  },\n};\n\nconst Switch = ({\n  field,\n  form: { values, setFieldValue },\n  labelText,\n  ...props\n}) => {\n  const value = values[field.name];\n\n  return (\n    <FieldBase\n      labelText={labelText}\n      required={props.required}\n      for={props.for}\n      showColon={props.showColon}\n    >\n      <UI5Switch\n        checked={value}\n        onChange={() => setFieldValue(field.name, !value)}\n        style={style.switch}\n        {...props}\n      />\n    </FieldBase>\n  );\n};\n\nexport default Switch;\n","import React from \"react\";\n\nimport { spacing } from \"@ui5/webcomponents-react-base\";\nimport { TextArea as UI5TextArea, ValueState } from \"@ui5/webcomponents-react\";\n\nimport FieldBase from \"../FieldBase/FieldBase\";\n\nconst TextArea = ({\n  field,\n  form: { touched, errors },\n  labelText,\n  rows,\n  style,\n  ...props\n}) => {\n  const errorMsg = touched[field.name] && errors[field.name];\n  const errorState = errorMsg ? ValueState.Error : ValueState.None;\n\n  return (\n    <FieldBase\n      labelText={labelText}\n      required={props.required}\n      for={props.for}\n      showColon={props.showColon}\n    >\n      <UI5TextArea\n        data-testid=\"textArea-wrapper\"\n        valueState={errorState}\n        valueStateMessage={<span>{errorMsg}</span>}\n        rows={rows}\n        style={style ? style : spacing.sapUiSmallMarginBottom}\n        {...props}\n        {...field}\n      />\n    </FieldBase>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\n\nimport { spacing } from \"@ui5/webcomponents-react-base\";\nimport {\n  Select as UI5Select,\n  Option,\n  ValueState,\n} from \"@ui5/webcomponents-react\";\nimport FieldBase from \"../FieldBase/FieldBase\";\n\nconst Select = ({\n  field,\n  options,\n  labelText,\n  form: { touched, errors, setFieldValue },\n  style,\n  ...props\n}) => {\n  const errorMsg = touched[field.name] && errors[field.name];\n  const errorState = errorMsg ? ValueState.Error : ValueState.None;\n\n  const innerStyle = {\n    ...style,\n    ...spacing.sapUiTinyMarginBottom,\n    width: \"100%\",\n  };\n\n  return (\n    <FieldBase\n      labelText={labelText}\n      required={props.required}\n      for={props.for}\n      showColon={props.showColon}\n    >\n      <UI5Select\n        data-testid=\"select-wrapper\"\n        valueState={errorState}\n        style={innerStyle}\n        onChange={(e) =>\n          setFieldValue(field.name, e.detail.selectedOption.dataset.id)\n        }\n        {...props}\n      >\n        {options.map((option) => (\n          <Option\n            data-testid=\"select-option-wrapper\"\n            key={option.id}\n            data-id={option.id}\n            selected={option.id === field.value}\n            value={option.id}\n          >\n            {option.text}\n          </Option>\n        ))}\n      </UI5Select>\n    </FieldBase>\n  );\n};\n\nexport default Select;\n","import * as yup from \"yup\";\n\nconst TodoEditFormValidationSchema = yup.object({\n  name: yup\n    .string()\n    .required()\n    .max(25, \"This field must have maximum 25 characters\"),\n  description: yup\n    .string()\n    .required()\n    .max(255, \"This field must have maximum 255 characters\"),\n  completed: yup.boolean(),\n});\n\nexport default TodoEditFormValidationSchema;\n","import React from \"react\";\n\nimport { Field, Form, Formik } from \"formik\";\nimport {\n  Button,\n  ButtonDesign,\n  FlexBox,\n  FlexBoxAlignItems,\n  FlexBoxDirection,\n  InputType,\n  Title,\n  TitleLevel,\n  SwitchDesign,\n} from \"@ui5/webcomponents-react\";\nimport \"@ui5/webcomponents-icons/dist/paper-plane.js\";\n\nimport Input from \"../../../components/Form/Input/Input\";\nimport Switch from \"../../../components/Form/Switch/Switch\";\nimport TextArea from \"../../../components/Form/TextArea/TextArea\";\nimport Select from \"../../../components/Form/Select/Select\";\nimport TodoEditFormValidationSchema from \"./TodoEditFormValidationSchema\";\nimport NavBack, { NavBackIcon } from \"../../../components/NavBack/NavBack\";\n\nconst style = {\n  putWrapperUp: {\n    marginTop: \"-50px\",\n  },\n};\n\nconst typeOptions = [\n  { id: \"WORK\", text: \"Work\" },\n  { id: \"PERSONAL\", text: \"Personal\" },\n  { id: \"SCHOOL\", text: \"School\" },\n];\n\nconst priorityOptions = [\n  { id: \"LOW\", text: \"Low\" },\n  { id: \"MEDIUM\", text: \"Medium\" },\n  { id: \"HIGH\", text: \"High\" },\n];\n\nconst TodoEditForm = ({ data, onSubmitHandler }) => {\n  return (\n    <div style={style.putWrapperUp}>\n      <Title level={TitleLevel.H1}>Todo Edit</Title>\n      <br />\n      <Formik\n        enableReinitialize\n        initialValues={data}\n        validationSchema={TodoEditFormValidationSchema}\n        onSubmit={onSubmitHandler}\n      >\n        {({ isSubmitting, handleSubmit }) => (\n          <Form>\n            <>\n              <Title level={TitleLevel.H3}>Basic Info</Title>\n              <Field\n                labelText=\"Name\"\n                name=\"name\"\n                required\n                placeholder=\"Name goes here\"\n                type={InputType.Text}\n                component={Input}\n              />\n              <Field\n                labelText=\"Description\"\n                name=\"description\"\n                required\n                placeholder=\"Add your description here\"\n                rows={5}\n                component={TextArea}\n              />\n              <Field\n                labelText=\"Completed\"\n                name=\"completed\"\n                required\n                component={Switch}\n                design={SwitchDesign.Graphical}\n              />\n            </>\n            <>\n              <Title level={TitleLevel.H3}>Custom Info</Title>\n              <Field\n                labelText=\"Priority\"\n                name=\"priority\"\n                required\n                component={Select}\n                options={priorityOptions}\n              />\n              <Field\n                labelText=\"Type\"\n                name=\"type\"\n                required\n                component={Select}\n                options={typeOptions}\n              />\n            </>\n            <>\n              <FlexBox\n                direction={FlexBoxDirection.RowReverse}\n                alignItems={FlexBoxAlignItems.Center}\n              >\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  onClick={handleSubmit}\n                  design={ButtonDesign.Emphasized}\n                  icon=\"paper-plane\"\n                >\n                  Submit\n                </Button>\n                <NavBack text=\"Cancel\" icon={NavBackIcon.NONE} />\n              </FlexBox>\n            </>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default TodoEditForm;\n"],"names":["style","props","innerStyle","spacing","lineHeight","wrappingType","WrappingType","children","labelText","FlexBox","direction","FlexBoxDirection","required","for","showColon","field","form","touched","errors","errorMsg","name","errorState","ValueState","width","valueState","valueStateMessage","switch","values","setFieldValue","value","checked","onChange","rows","options","e","detail","selectedOption","dataset","id","map","option","Option","selected","text","yup","max","description","completed","putWrapperUp","marginTop","typeOptions","priorityOptions","data","onSubmitHandler","Title","level","TitleLevel","enableReinitialize","initialValues","validationSchema","TodoEditFormValidationSchema","onSubmit","isSubmitting","handleSubmit","placeholder","type","InputType","component","Input","TextArea","Switch","design","SwitchDesign","Select","alignItems","FlexBoxAlignItems","Button","disabled","onClick","ButtonDesign","icon","NavBack","NavBackIcon"],"sourceRoot":""}